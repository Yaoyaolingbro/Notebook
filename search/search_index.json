{"config":{"lang":["zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Yaoyaoling's notebook","text":""},{"location":"#_1","title":"\u524d\u8a00","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u8bb0\u5f55\u81ea\u5df1\u8ba1\u7b97\u673a\u5b66\u4e60\u751f\u6daf\u7684\u4e00\u4e2a\u7b14\u8bb0\u672c\u3002\u4f1a\u4e0d\u5b9a\u671f\u7684\u66f4\u65b0\u91cc\u9762\u7684\u5185\u5bb9\u3002\u6bcf\u4e2a\u677f\u5757\u5177\u4f53\u7684\u5185\u5bb9\u53ef\u4ee5\u5206\u522b\u70b9\u51fb\u8fdb\u53bb\u4f1a\u6709\u603b\u4f53\u7684\u4ecb\u7ecd\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u6765\u627e\u5230\u4f60\u60f3\u8981\u7684\u8d44\u6e90\u3002\u5e0c\u671b\u8be5\u7b14\u8bb0\u5bf9\u5927\u5bb6\u80fd\u591f\u6709\u6240\u5e2e\u52a9\u3002</p> <p>\u5982\u679c\u91cc\u9762\u7684\u5185\u5bb9\u5927\u5bb6\u6709\u8865\u5145\u8bf4\u660e\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u548c\u7b14\u8005\u6c9f\u901a\uff1aDuzz816@163.com \u6216\u8005\u63d0\u4ea4Issue\u3002</p> <p>\u611f\u8c22\u6bcf\u4e00\u4f4d\u6211\u6240\u9047\u89c1\u7684\u6d59\u5927\u5b66\u957f\u540c\u5b66\u7684\u5e2e\u52a9\uff0c\u4ee5\u53cacsdiy\u5bf9\u6211\u7684\u6307\u5bfc\u3002\u6211\u4e5f\u4f1a\u6839\u636e\u6211\u7684\u5b66\u4e60\u8fc7\u7a0b\u628a\u4e00\u4e9b\u597d\u7684\u91cd\u8981\u7684\u7f51\u7ad9\u653e\u5728\u6211\u7684\u7b14\u8bb0\u91cc\u3002</p> <p>Latex\u6e32\u67d3\u95ee\u9898</p> <p>\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff08\u81ea\u5df1\u8fd8\u6ca1\u641e\u660e\u767d\uff09\uff0c\u5728github\u4e0a\u7684latex\u6e32\u67d3\u6709\u65f6\u5019\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u5927\u5bb6\u53ef\u4ee5\u91cd\u65b0\u5237\u65b0\u7f51\u9875\u5373\u53ef\u83b7\u5f97\u6e32\u67d3\u3002</p> <p>List</p> <p>\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\uff0c\u771f\u7684\u610f\u8bc6\u5230\u60f3\u505a\u7684\u4e8b\u60c5\u597d\u591a\uff0c\u4f46\u2026\u2026\u5fc3\u529b\u6194\u60b4</p> <ul> <li> CUDA \u548c CuTe</li> <li> \u8bba\u6587\u9605\u8bfb\u4ee5\u53ca\u90e8\u5206\u79d1\u7814\u4f53\u9a8c</li> <li> ZJUCST(\u6d59\u6c5f\u5927\u5b66\u8d85\u7b97\u961f) ASC</li> <li> \u5927\u4e8c\u4e0b\u5b66\u671f\u7684\u8bfe\u7a0b\u5b66\u4e60</li> <li> cs106l</li> <li> python\u8fdb\u9636\uff1f\u4f8b\u5982pytorch\u5e93\u7684\u5b66\u4e60\u7b49</li> </ul> <p>\u9644\uff1a\u5018\u82e5\u6587\u6863\u4e2d\u7684latex\u6e32\u67d3\u672a\u6210\u529f\u52a0\u8f7d\uff0c\u91cd\u65b0\u5237\u65b0\u7f51\u9875\u5373\u53ef\u3002</p>"},{"location":"AI/","title":"AI\u5165\u95e8","text":"<ol> <li>\u7b2c\u4e00\u6691\u5047\u4ee5\u53ca\u5927\u4e8c\u4e0a\u5b66\u671f\u901a\u8fc7CS50\u7684\u5b66\u4e60\u5165\u95e8AI\u3002\u8be6\u60c5\u8bf7\u8df3\u8f6cCS50</li> <li>Pytorch\u4e2d\u6587\u624b\u518c</li> <li>\u57fa\u672c\u64cd\u4f5c\u30013b1b\u6216\u8005tensorflow playground\u53ef\u4ee5\u8ba9\u4f60\u6709\u4e9b\u76f4\u89c2\u7406\u89e3</li> </ol>"},{"location":"AI/#_1","title":"\u7b80\u5355\u7684\u4e00\u4e9b\u6982\u5ff5","text":"<p>\u5efa\u8bae\u5165\u95e8\u53ef\u4ee5\u770b\u4e9b3b1b\u7684\u76f4\u89c2\u89c6\u9891\uff0c\u518d\u53bb\u5b66\u4e60cs50\u7b49\u8bfe\u7a0b\u5185\u5bb9</p> <ol> <li>\u4ee5\u6700\u7b80\u5355\u7684\u624b\u5199\u6570\u5b57\u4e3a\u4f8b\uff0c\u5bf9\u4e8e\u7b80\u5355\u795e\u7ecf\u7f51\u7edc\u7684\u6570\u5b66\u800c\u8a00\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u6570\u5b57\u5177\u6709\u6fc0\u6d3b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8f93\u5165\uff08\u4f8b\u5982\u628a\u4e8c\u7ef4\u7070\u5ea6\u503c\u8f6c\u6362\u6210\u4e00\u7ef4\uff09\u770b\u6210\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u6743\u91cd\u503c\u770b\u4e3a\u77e9\u9635\uff0cbias\u4e3a\u9644\u52a0\u5217\u5411\u91cf\uff0c\u4ee5\u53ca\u6700\u540e\u9644\u52a0\u5230\u6574\u4f53\u7684\u6fc0\u6d3b\u51fd\u6570\u3002\u6700\u540e\u901a\u8fc7\u4ee3\u4ef7\u51fd\u6570loss\u6765\u8ba1\u7b97\u7ed3\u679c\u4e0a\u7684\u504f\u5dee\uff0c\u8fd9\u4fbf\u662f\u4e00\u6b21\u7f51\u7edc\u8bad\u7ec3\u7684\u8fc7\u7a0b\u3002</li> </ol> <p>\u68af\u5ea6\u4e0b\u964d\u548c\u53cd\u5411\u4f20\u64ad:\u6839\u636e\u4e00\u6b21\u8bad\u7ec3\u6211\u4eec\u5373\u53ef\u6307\u5bfc\u521d\u59cb\u8bbe\u5b9a\u7684weight\u548cbias\u7684\u597d\u574f\uff0c\u4f46\u5982\u4f55\u8be5\u6539\u8fdb\u662f\u4e2a\u95ee\u9898\uff1f</p> <ol> <li>\u68af\u5ea6\u4e0b\u964d\uff1a\u627e\u5230\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u5b66\u4e60\u7387\u5373\u4e3a\u6b65\u957f\u3002\u5982\u4f55\u627e\u5230\u4e0b\u964d\u7684\u65b9\u5411\u4fbf\u662f\u53cd\u5411\u4f20\u64ad\u7684\u3002\u53cd\u5411\u4f20\u64ad\u4f1a\u5728\u5f88\u591a\u5730\u65b9\u6c42\u5e73\u5747\u6765\u8fdb\u884c\u5fae\u8c03\u3002\u662f\u6765\u6c42\u5355\u4e2a\u8bad\u7ec3\u6837\u672c\u60f3\u600e\u6837\u4fee\u6539\u6743\u91cd\u548c\u504f\u7f6e\u3002</li> </ol>"},{"location":"AI/Model/","title":"\u7ecf\u5178\u6a21\u578b","text":"<p>AI\u4e00\u8bcd\u5c5e\u5b9e\u592a\u8fc7\u5bbd\u6cdb\uff0c\u5176\u4e0b\u5206\u652f\u4e5f\u592a\u591a\u592a\u591a\u4e86\u3002 \u4f46\u968f\u4e4bNN\u548cDL\u7684\u53d1\u5c55\uff0c\u6709\u8bb8\u591a\u7ecf\u5178\u7684\u6a21\u578b\u6216\u8005\u8bf4\u662f\u8bba\u6587\u662f\u9700\u8981\u5927\u5bb6\u638c\u63e1\u7684\u3002\u6211\u4e5f\u5c06\u6211\u7684\u6a21\u5757\u548c\u5b66\u4e60\u8fc7\u7a0b\u66f4\u65b0\u5728\u8fd9\u4e2a\u677f\u5757\u4e0b\u3002 \u66f4\u8fdb\u9636\u7684\u5185\u5bb9\u53ef\u4ee5\u770b\u6211\u7684Research\u677f\u5757\u3002</p> <p>\u5b66\u4e60\u8d44\u6e90</p> <p>PaperswithCode\u8fd9\u4e2a\u7f51\u7ad9\u63a8\u8350\u7ed9\u5927\u5bb6\u3002\u4e0d\u80fd\u5149\u5b66\u7406\u8bba\u4e0d\u770b\u4ee3\u7801\uff08bushi AI \u56fe\u8c31</p> <p>\u6b63\u5728\u5b66\u4e60</p> <ul> <li> RNN (basic LSTM) </li> <li> LeNet</li> <li> ResNet</li> <li> Transformer</li> </ul> \u76ee\u5f55 <p>\u251c\u2500\u2500 cnn.md \u251c\u2500\u2500 rnn.md (LSTM\u7b49) \u2514\u2500\u2500 transformer.md</p>"},{"location":"AI/Model/cnn/","title":"CNN","text":""},{"location":"AI/Model/rnn/","title":"RNN","text":"<p>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7684\u5927\u540d\u76f8\u4fe1\u5927\u5bb6\u80af\u5b9a\u65e9\u5c31\u5df2\u7ecf\u542c\u8fc7\u4e86\u3002\u6211\u4eec\u4e0d\u59a8\u6765\u770b\u7bc7\u535a\u5ba2\u600e\u4e48\u8bf4\u3002</p>"},{"location":"AI/Model/rnn/#lstm","title":"LSTM","text":"<p>An LSTM is a type of recurrent neural network that addresses the vanishing gradient problem in vanilla RNNs through additional cells, input and output gates. Intuitively, vanishing gradients are solved through additional additive components, and forget gate activations, that allow the gradients to flow through the network without vanishing as quickly.</p> \u8d44\u6e90\u6c47\u603b <ol> <li>Guide Blog</li> <li>cs224d slide</li> <li>cs224d LSTM &amp; GLU</li> </ol>"},{"location":"AI/Model/transformer/","title":"Transformer","text":"<p>\u6458\u8981</p> <p>\u8bba\u6587\uff1aAttention Is All You Need</p> <p>\u53c2\u8003\u8d44\u6599\uff1ahttp://jalammar.github.io/illustrated-transformer/</p> <p>\u6e90\u7801\u53c2\u8003\uff1ahttps://github.com/jadore801120/attention-is-all-you-need-pytorch </p>"},{"location":"AI/Model/transformer/#_1","title":"\u8bba\u6587\u5185\u5bb9\u6279\u6ce8","text":"<ol> <li>BELU\u4e00\u79cd\u81ea\u52a8\u8bc4\u4f30\u673a\u5668\u7ffb\u8bd1\u6587\u672c\u7684\u6307\u6807\u3002BLEU \u5f97\u5206\u662f\u4e00\u4e2a 0 \u5230 1 \u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u7528\u4e8e\u8861\u91cf\u673a\u5668\u7ffb\u8bd1\u6587\u672c\u4e0e\u4e00\u7ec4\u9ad8\u8d28\u91cf\u53c2\u8003\u7ffb\u8bd1\u7684\u76f8\u4f3c\u5ea6\u30020 \u8868\u793a\u673a\u5668\u7ffb\u8bd1\u7684\u8f93\u51fa\u4e0e\u53c2\u8003\u7ffb\u8bd1\u6ca1\u6709\u91cd\u53e0\uff08\u4f4e\u8d28\u91cf\uff09\uff0c\u800c 1 \u8868\u793a\u5176\u4e0e\u53c2\u8003\u7ffb\u8bd1\u5b8c\u5168\u91cd\u53e0\uff08\u9ad8\u8d28\u91cf\uff09\u3002</li> </ol> <p>\u4e8b\u5b9e\u8868\u660e\uff0cBLEU \u5f97\u5206\u4e0e\u4eba\u7c7b\u5bf9\u7ffb\u8bd1\u8d28\u91cf\u7684\u5224\u65ad\u6709\u5f88\u597d\u7684\u76f8\u5173\u6027\u3002\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u662f\u4eba\u5de5\u7ffb\u8bd1\u4e5f\u65e0\u6cd5\u8fbe\u5230 1.0 \u7684\u6ee1\u5206\u3002\u4e00\u822c\u6765\u8bf4\uff0c&gt;40%\u5c31\u7b97\u662f\u5f88\u9ad8\u8d28\u91cf\u7684\u7ffb\u8bd1\uff0c&gt;60%\u5219\u5f80\u5f80\u8d85\u8fc7\u4eba\u5de5\u7ffb\u8bd1\u3002</p> <ol> <li>LSTM</li> </ol>"},{"location":"AI/Model/transformer/#_2","title":"\u4ee3\u7801\u89e3\u91ca","text":""},{"location":"AI/Pytorch/","title":"Pytorch \u57fa\u7840","text":"<ol> <li>Newton gradient descent ?</li> <li>\u57fa\u672c\u6d41\u7a0b\u53ef\u4ee5\u5728b\u7ad9\u770b\u201c\u5947\u4e50\u7f16\u7a0b\u5b66\u9662\u201d</li> <li>tensor </li> <li>dataset</li> </ol> <p>\u5b98\u7f51\u6559\u7a0b</p>"},{"location":"AI/Pytorch/note/","title":"Pytorch Note","text":""},{"location":"AI/deep%20learning/","title":"\u6df1\u5ea6\u5b66\u4e60","text":"<p>\u8fd9\u91cc\u662f\u6211\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u77e5\u8bc6\u7684\u5b66\u4e60\u8bb0\u5f55\uff0c\u6211\u4e5f\u4f1a\u4e4b\u540e\u4e0d\u65ad\u66f4\u65b0\u5b66\u4e60\u8def\u7ebf\u3002</p>"},{"location":"AI/deep%20learning/dl2/","title":"\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60","text":"<p>Github repo Book-pages \u8bfe\u7a0b\u89c6\u9891</p>"},{"location":"AI/deep%20learning/flow/","title":"Flow","text":""},{"location":"AI/deep%20learning/flow/#_1","title":"\u82b1\u4e66\u300a\u6df1\u5ea6\u5b66\u4e60\u300b","text":"<p>\u673a\u5668\u5b66\u4e60\u7684\u672c\u8d28\u4e0a\u5c5e\u4e8e\u5e94\u7528\u7edf\u8ba1\u5b66\uff0c\u66f4\u591a\u5730\u4f1a\u5173\u6ce8\u4e8e\u5982\u4f55\u7528\u8ba1\u7b97\u673a\u4f30\u8ba1\u7684\u7edf\u8ba1\u590d\u6742\u51fd\u6570\u3002\u56e0\u6b64\u6211\u4eec\u4f1a\u63a2\u8ba8\u4e24\u79cd\u7edf\u8ba1\u5b66\u7684\u4e3b\u8981\u65b9\u6cd5\uff1a\u9891\u7387\u6d3e\u4f30\u8ba1\u548c\u8d1d\u53f6\u65af\u63a8\u65ad\u3002\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u4ee5\u5927\u4f53\u5206\u4e3a\u76d1\u7763/\u65e0\u76d1\u7763/\u5f3a\u5316\u5b66\u4e60\u3002\u5927\u90e8\u5206\u6df1\u5ea6\u5b66\u4e60\u90fd\u662f\u57fa\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u7b97\u6cd5\u6c42\u89e3\u7684\u3002</p>"},{"location":"AI/deep%20learning/flow/#_2","title":"\u5b66\u4e60\u7b97\u6cd5","text":""},{"location":"AI/deep%20learning/flow/#t","title":"\u4efb\u52a1T","text":"<ol> <li>\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e0d\u80fd\u7b97\u4efb\u52a1\uff0c\u5b66\u4e60\u662f\u6307\u6211\u4eec\u6240\u8c13\u7684\u83b7\u53d6\u5b8c\u6210\u4efb\u52a1\u7684\u80fd\u529b\u3002\u6211\u4eec\u4e00\u822c\u5c06\u4efb\u52a1\u5b9a\u4e49\u4e3a\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u5e94\u8be5\u5982\u4f55\u5904\u7406\u6837\u672c\u3002\u6837\u672c\u662f\u6307\u6211\u4eec\u4ece\u67d0\u4e9b\u5bf9\u8c61\u6216\u8005\u4e8b\u4ef6\u5f53\u4e2d\u6536\u96c6\u5230\u7684\u5df2\u7ecf\u91cf\u5316\u7684\u7279\u5f81\u7684\u96c6\u5408\u3002</li> <li>\u673a\u5668\u5b66\u4e60\u7684\u4efb\u52a1\u4e3b\u8981\u6709\uff1a\u5206\u7c7b\u3001\u8f93\u5165\u7f3a\u5931\u5206\u7c7b\uff08\u63cf\u8ff0\u8054\u5408\u6982\u7387\u5206\u5e03\u7684\u51fd\u6570\uff09\u3001\u56de\u5f52\uff08\u4e0e\u5206\u7c7b\u76f8\u6bd4\u66f4\u504f\u5411\u4e8e\u4e00\u79cd\u9884\u6d4b\uff09\u3001\u8f6c\u5f55\uff08\u5982\u8bed\u97f3\u8bc6\u522b\u7b49\uff09\u3001\u673a\u5668\u7ffb\u8bd1\uff08\u4f8b\u5982\u82f1\u8bed\u8f6c\u6362\u6210\u6cd5\u8bed\u7b49\uff09\u3001\u7ed3\u6784\u5316\u8f93\u51fa\uff08\u7c7b\u4f3c\u4e8e\u8bed\u6cd5\u5206\u6790|\u56fe\u50cf\u5206\u5272\u7b49\uff09\u3001\u5f02\u5e38\u68c0\u6d4b\u3001\u5408\u6210\u4e0e\u91c7\u6837\u3001\u7f3a\u5931\u503c\u586b\u8865\u3001\u53bb\u566a\u3001\u5bc6\u5ea6\u4f30\u8ba1\u6216\u6982\u7387\u8d28\u91cf\u4f30\u8ba1</li> </ol>"},{"location":"AI/deep%20learning/flow/#p","title":"\u6027\u80fd\u5ea6\u91cfP","text":"<p>\u6211\u4eec\u901a\u8fc7\u5ea6\u91cf\u6a21\u578b\u7684\u51c6\u786e\u7387\uff0c\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u8bc4\u4f30\u7cfb\u7edf\u6027\u80fd</p>"},{"location":"AI/deep%20learning/flow/#e","title":"\u7ecf\u9a8cE","text":"<ol> <li>\u5927\u90e8\u5206\u7b97\u6cd5\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u83b7\u53d6\u7ecf\u9a8c\u3002</li> <li>\u7531\u4e8e\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u8054\u5408\u5206\u5e03\u53ef\u4ee5\u62c6\u89e3\u6210n\u4e2a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\u3002</li> </ol>"},{"location":"AI/deep%20learning/flow/#_3","title":"\u793a\u4f8b\uff1a\u7ebf\u6027\u56de\u5f52","text":"<p>\u8fd9\u91cc\u6709\u6570\u5b66\u63a8\u5bfc\uff0c\u5efa\u8bae\u53ef\u4ee5\u770b\u770b\u4e66\u3002</p>"},{"location":"AI/machine%20learning/","title":"\u673a\u5668\u5b66\u4e60","text":"<p>\u8fd9\u91cc\u662f\u6211\u673a\u5668\u5b66\u4e60\u7684\u76f8\u5173\u8bb0\u5f55\u3002</p>"},{"location":"AI/machine%20learning/introduction/","title":"\u673a\u5668\u5b66\u4e60\u57fa\u7840","text":""},{"location":"AI/machine%20learning/introduction/#_2","title":"\u57fa\u672c\u6982\u5ff5\u300a\u673a\u5668\u5b66\u4e60\u300b","text":"<ol> <li>\u6a21\u578b\u6307\u5168\u5c40\u6027\u7ed3\u679c\uff0c\u6a21\u5f0f\u6307\u5c40\u90e8\u7ed3\u679c\u3002</li> <li>\u8bb0\u5f55\u7684\u96c6\u5408\u79f0\u4e3a\u4e00\u4e2a\"\u6570\u636e\u96c6\" (data set) \uff0c\u5176\u4e2d\u6bcf\u6761\u8bb0\u5f55\u662f\u5173\u4e8e\u4e00\u4e2a\u4e8b\u4ef6\u6216\u5bf9\u8c61(\u8fd9\u91cc\u662f\u4e00\u4e2a\u897f\u74dc)\u7684\u63cf\u8ff0\uff0c\u79f0\u4e3a\u4e00\u4e2a\"\u793a\u4f8b\" (instance) \u6216\"\u6837\u672c\" (sample). \u53cd\u6620\u4e8b\u4ef6\u6216\u5bf9\u8c61\u5728\u67d0\u65b9\u9762\u7684\u8868\u73b0\u6216\u6027\u8d28\u7684\u4e8b\u9879\uff0c\u4f8b\u5982\"\u8272\u6cfd\"\"\u6839\u8482\" \"\u6572\u58f0\"\uff0c\u79f0\u4e3a\"\u5c5e\u6027\" (attribute) \u6216\"\u7279\u5f81\" (feature); \u5c5e\u6027\u4e0a\u7684\u53d6\u503c\uff0c\u4f8b\u5982\"\u9752\u7eff\" \"\u4e4c\u9ed1\"\uff0c\u79f0\u4e3a\"\u5c5e\u6027\u503c\" (attribute value). \u5c5e\u6027\u5f20\u6210\u7684\u7a7a\u95f4\u79f0\u4e3a\"\u5c5e\u6027\u7a7a\u95f4\" (attribute space) \"\u6837\u672c\u7a7a\u95f4\" (sample space) \u6216\"\u8f93\u5165\u7a7a\u95f4\"\u4f8b\u5982\u6211\u4eec\u628a\"\u8272\u6cfd\" \"\u6839\u8482\" \"\u6572\u58f0\"\u4f5c\u4e3a\u4e09\u4e2a\u5750\u6807\u8f74\uff0c\u5219\u5b83\u4eec\u5f20\u6210\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u897f\u74dc\u7684\u4e09\u7ef4\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u897f\u74dc\u90fd\u53ef\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\u627e\u5230\u81ea\u5df1\u7684\u5750\u6807\u4f4d\u7f6e.\u7531\u4e8e\u7a7a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5750\u6807\u5411\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u628a\u4e00\u4e2a\u793a\u4f8b\u79f0\u4e3a\u4e00\u4e2a\"\u7279\u5f81\u5411\u91cf\" (feature vector). <code>\u4ee5\u897f\u74dc\u4e3a\u4f8b</code></li> <li>\u4ece\u6570\u636e\u4e2d\u5b66\u5f97\u6a21\u578b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u201d\u5b66\u4e60\u201c\u6216\u8005\u201d\u8bad\u7ec3\u201c\u3002\u8981\u5efa\u7acb\u201d\u9884\u6d4b\u201c\uff08prediction\uff09\u6a21\u578b\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u201d\u6807\u8bb0\u201c\uff08label\uff09\uff0c\u62e5\u6709\u6807\u8bb0\u4fe1\u606f\u7684\u793a\u4f8b\u53eb\u505a\u201d\u6837\u4f8b\u201c\u3002\u6211\u4eec\u82e5\u9884\u6d4b\u7684\u662f\u79bb\u6563\u503c\uff0c\u5219\u662f\u201d\u5206\u7c7b\u201c\uff08classification\uff09\uff1b\u82e5\u662f\u8fde\u7eed\u503c\uff0c\u5219\u662f\u201c\u56de\u5f52\u201d\u3002\u5176\u4e2d\u5173\u4e8e\u201c\u4e8c\u5206\u7c7b\u4efb\u52a1\uff1a\u901a\u5e38\u79f0\u5176\u4e2d\u4e00\u7c7b\u4e3a\u201d\u6b63\u7c7b\u201c\uff08positive class\uff09\uff0c\u53e6\u5916\u4e00\u7c7b\u4e3a\u201d\u53cd\u7c7b\u201c\u6216\u201d\u8d1f\u7c7b\u201c\uff08negative class\uff09\u3002\u5bf9\u4e8e\u5206\u7c7b\u548c\u56de\u5f52\u800c\u8a00\u662f\u76d1\u7763\u5b66\u4e60.\uff08supervised learning\uff09</li> <li>\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u5bf9\u8c61\u505a\u201d\u805a\u7c7b\u201c\uff08clustering\uff09\uff0c\u5373\u5bf9\u5bf9\u8c61\u8fdb\u884c\u5206\u7ec4\uff0c\u6bcf\u7ec4\u79f0\u4e3a\u201d\u7c07\u201c\uff08cluster\uff09\u5982\uff1a\u6d45\u8272\u74dc\u3001\u6df1\u8272\u74dc\u3001\u5927\u74dc\u5c0f\u74dc\u7b49\u7b49\u3002 \u901a\u5e38\u6765\u8bf4\u505a\u805a\u7c7b\u7684\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u65e0\u6807\u8bb0\u4fe1\u606f\uff0c\u6211\u4eec\u79f0\u4e3a\u65e0\u76d1\u7763\u5b66\u4e60\uff08unsupervised learning\uff09</li> <li>\u673a\u5668\u5b66\u4e60\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u66f4\u597d\u9002\u7528\u4e8e\u201d\u65b0\u6837\u672c\u201c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u5df2\u6709\u6837\u672c\u4e0a\u5f97\u5230\u597d\u7684\u7ed3\u679c\u3002\u8fd9\u79cd\u80fd\u529b\u6211\u4eec\u79f0\u4e3a\u201d\u6cdb\u5316\u201c\uff08generalization\uff09\u80fd\u529b\uff0c\u5177\u6709\u5f3a\u6cdb\u5316\u80fd\u529b\u7684\u6a21\u578b\u901a\u5e38\u5728\u6574\u4e2a\u6837\u672c\u7a7a\u95f4\u4e0a\u90fd\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\u6211\u4eec\u4e00\u822c\u5047\u8bbe\u6837\u672c\u7a7a\u95f4\u5168\u4f53\u6837\u672c\u670d\u4ece\u4e00\u4e2a\u672a\u77e5\u201d\u5206\u5e03\u201c\uff08distribution\uff09\u3002\u6211\u4eec\u83b7\u5f97\u7684\u6bcf\u4e2a\u6837\u672c\u90fd\u662f\u72ec\u7acb\u5730\u4ece\u8fd9\u4e2a\u5206\u5e03\u4e0a\u91c7\u6837\u83b7\u5f97\u7684\uff0c\u5373\u72ec\u7acb\u540c\u5206\u5e03\uff08independent and identically distributed\uff0c\u7b80\u79f0\\(i,i,d\\).)\u4e00\u822c\u800c\u8a00\u8bad\u7ec3\u6837\u672c\u8d8a\u591a\uff0c\u6211\u4eec\u901a\u8fc7\u5b66\u4e60\u5f97\u5230\u7684\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u8d8a\u5f3a\u3002</li> <li>\u5f52\u7eb3\u504f\u597d\uff1a\u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u6761\u7a7f\u8fc7\u6240\u6709\u8bad\u7ec3\u6837\u672c\u70b9\u7684\u533a\u7ebf\u3002\u6211\u4eec\u66f4\u504f\u597d\u5149\u6ed1\u7684\u533a\u7ebf\u3002\u4f46\u6211\u4eec\u6839\u636e\u5df2\u6709\u7684\u6570\u636e\u5f97\u5230\u7684\u66f2\u7ebf\u5e76\u4e0d\u4e00\u5b9a\u5bf9\u6240\u6709\u7a7a\u95f4\u5185\u6240\u6709\u6837\u672c\u9002\u7528\uff0c\u6bd4\u5982\uff1a</li> </ol> <p>\u7b80\u79f0\uff1aNFL\uff08no free lunch theorem\uff09\u5b9a\u5f8b\u3002\u6240\u4ee5\u4e5f\u8bf4\u660e\u6211\u4eec\u8981\u9488\u5bf9\u5b66\u4e60\u7684\u95ee\u9898\u6765\u8c08\u8bba\u7b97\u6cd5\u7684\u4f18\u52a3</p>"},{"location":"AI/machine%20learning/introduction/#markov","title":"Markov","text":"<p>\u5bfc\u8bed</p> <p>\u9a6c\u5c14\u53ef\u592b\u94fe\u53ef\u8c13\u662f\u5728\u592a\u591a\u5730\u65b9\u51fa\u73b0\u4e86\uff0c\u7531\u4e8e\u5728b\u7ad9\u4e0a\u5237\u5230\u4e86\u4e00\u4e2a\u7b80\u660e\u6709\u8da3\u7684\u89c6\u9891\uff08\u4e0d\u51fa\u610f\u5916\u662fYouTube\u4e0a\u642c\u8fd0\u7684\uff0c\u89c6\u9891\u539f\u5730\u5740\uff09\u6545\u800c\u8bb0\u5f55\u4e0b\u6765\u3002</p>"},{"location":"AI/machine%20learning/method/","title":"Basic Method","text":"<p>\u6458\u8981</p> \u76ee\u5f55\u8d44\u6e90 <ul> <li>Basic Method<ul> <li>1. \u51b3\u7b56\u6811\u548c\u968f\u8bb0\u68ee\u6797<ul> <li>1.1.1 decision tree classification</li> <li>1.1.2 decision tree regression</li> <li>1.2.1 random forest classification</li> </ul> </li> <li>2. Markov<ul> <li>2.1.1 Markov Chain</li> <li>2.1.2 Hidden Markov Model</li> <li>2.1.3 HMM\uff1aForward Algorithm</li> <li>2.2.1 Markov Decision Process</li> <li>2.2.2 Q-Learning</li> <li>2.2.3 Deep Q-Learning</li> </ul> </li> <li>3. SVM</li> </ul> </li> </ul> <ul> <li>YouTube \u535a\u4e3b</li> <li>code</li> </ul>"},{"location":"AI/machine%20learning/method/#1","title":"1. \u51b3\u7b56\u6811\u548c\u968f\u8bb0\u68ee\u6797","text":""},{"location":"AI/machine%20learning/method/#111_decision_tree_classification","title":"1.1.1 decision tree classification","text":"<p>\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u51b3\u7b56\u6811\u5c31\u597d\u4f3c\u641c\u7d22\u6811\u4e00\u6837\uff08\u8bf7\u4e0efds\u4e2d\u5b66\u5230\u7684\u51b3\u7b56\u6811\u533a\u5206\uff09\uff0c\u80fd\u591f\u5bf9\u975e\u7ebf\u6027\u5206\u5272\u7684\u76ee\u6807\u8fdb\u884c\u9010\u6b65\u62c6\u5206\u3002\u5982\u56fe\uff1a</p> <p>\u800c\u5f53\u6211\u4eec\u63a2\u8ba8\uff0c\\(\\text{which split is better?}\\) \u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019, \u6211\u4eec\u9700\u8981<code>information gain</code>\u548c <code>entropy</code>\u4e24\u4e2a\u6982\u5ff5</p> \\[ Entropy = \\sum{-p_i log(p_i)} \\\\ IG = E(parent) - \\sum w_i E(child) \\] <p>\u7531\u6b64\u6211\u4eec\u4fbf\u53ef\u4ee5\u8ba1\u7b97\u51fa\u54ea\u79cd\u5206\u7c7b\u65b9\u5f0f\u66f4\u597d\u3002\u6700\u540e\uff0c\u6211\u4eec\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u90fd\u53ea\u8981\u5355\u4e00\u7c7b\u578b\u7684\u5143\u7d20\u3002</p> <p>\u4ee3\u7801\u5efa\u8bae\u9605\u8bfb\u6e90\u7801\u770b\u770b\uff01</p>"},{"location":"AI/machine%20learning/method/#112_decision_tree_regression","title":"1.1.2 decision tree regression","text":"<p>\u51b3\u7b56\u6811\u56de\u5f52\u7684\u539f\u7406\u4e0e\u5206\u7c7b\u7c7b\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u7528\u5230<code>MSE</code>\u6765\u8ba1\u7b97<code>IG</code>\uff0c\u5e76\u4e14\u6700\u540e\u7684\u53f6\u8282\u70b9\u4e0d\u518d\u662f\u5355\u4e00\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u800c\u662f\u4e00\u4e2a\u5e73\u5747\u503c\u3002\uff08\u5c0f\u7ed3\uff1aregression\u66f4\u504f\u5411\u89e3\u51b3\u8fde\u7eed\u8fde\u7eed\u578b\u7684\u95ee\u9898\uff0c\u800cclassification\u66f4\u504f\u5411\u89e3\u51b3\u79bb\u6563\u578b\u7684\u95ee\u9898\uff09 $$ Var = \\frac{1}{n} \\sum (y_i - \\hat{y_i})^2 $$ \u4e3a\u4e86\u4f7f\u53f6\u8282\u70b9\u66f4\u7eaf\u51c0\uff0c\u6211\u4eec\u8981\u8ba9\u65b9\u5dee\u5c3d\u53ef\u80fd\u5c0f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u4f18\u7684\u5207\u5206\u70b9\uff0c\u4f7f\u5f97\u5207\u5206\u540e\u7684\u4e24\u4e2a\u5b50\u96c6\u7684\u65b9\u5dee\u4e4b\u548c\u6700\u5c0f\u3002\u4e0e\u4e0a\u9762IG\u7684\u8ba1\u7b97\u76f8\u4f3c\uff1a $$ Var_{target} = Var_{parent} - \\sum w_i Var_{child} $$</p> <p>\u8fd9\u4e2a\u95ee\u9898\u8fd8\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u6240\u6709\u7684\u7279\u5f81\u548c\u7279\u5f81\u503c\u6765\u89e3\u51b3\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u9009\u53d6\u7279\u5f81\u548c\u7279\u5f81\u503c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u968f\u673a\u68ee\u6797\u7684\u539f\u7406\u3002</p>"},{"location":"AI/machine%20learning/method/#121_random_forest_classification","title":"1.2.1 random forest classification","text":"<p>\u968f\u673a\u68ee\u6797\u662f\u4e00\u79cd\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u96c6\u6210\u591a\u4e2a\u51b3\u7b56\u6811\u6765\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\u3002\u5b83\u7684\u539f\u7406\u662f\u901a\u8fc7\u968f\u673a\u9009\u53d6\u7279\u5f81\u548c\u7279\u5f81\u503c\uff08Bootstrapping &amp; Feature Selection\uff09\u6765\u6784\u5efa\u591a\u4e2a\u51b3\u7b56\u6811\uff0c\u7136\u540e\u901a\u8fc7\u6295\u7968\u7684\u65b9\u5f0f\u6765\u51b3\u5b9a\u6700\u7ec8\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u65e2\u80fd\u591f\u51cf\u5c11\u8fc7\u62df\u5408\uff0c\u53c8\u80fd\u591f\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002</p> <p>\u4e24\u4e2a\u968f\u8bb0\u8fc7\u7a0b\uff1a 1. Bootstrapping\uff1a\u4fdd\u8bc1\u6bcf\u4e2a\u6811\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\uff0c\u8ba9\u6a21\u578b\u5bf9\u539f\u59cb\u6570\u636e\u7684\u5206\u5e03\u4e0d\u654f\u611f\u3002 2. Feature Selection\uff1a\u4fdd\u8bc1\u6bcf\u4e2a\u6811\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u8ba9\u6a21\u578b\u5bf9\u7279\u5f81\u7684\u9009\u62e9\u4e0d\u654f\u611f\uff0c\u51cf\u5c11\u4e86\u4e0d\u540c\u6811\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002</p> <p>\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>def fit(self, X, y):\n    for i in range(self.n_estimators):\n        X_subset, y_subset = self._get_random_subsets(X, y)\n        tree = DecisionTree()\n        tree.fit(X_subset, y_subset)\n        self.trees.append(tree)\n</code></pre></p> <p>\u5c0f\u7ed3</p> <ul> <li>\u7814\u7a76\u53d1\u73b0\uff0c\u7279\u5f81\u5b50\u96c6\u7684\u4e2a\u6570\u63a5\u8fd1\\(\\sqrt{m}\\)\u6216\u8005\\(log^{m}\\)\u65f6\uff0c\u6a21\u578b\u7684\u6027\u80fd\u6700\u597d(\u5176\u4e2d\uff0c\\(m\\)\u662f\u7279\u5f81\u7684\u4e2a\u6570)\u3002</li> <li>\u7528\u4e8eregression\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e73\u5747\u503c\u6765\u4ee3\u66ff\u6295\u7968\u7684\u65b9\u5f0f\u3002</li> </ul>"},{"location":"AI/machine%20learning/method/#2_markov","title":"2. Markov","text":""},{"location":"AI/machine%20learning/method/#211_markov_chain","title":"2.1.1 Markov Chain","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6982\u7387\u63a8\u65ad\u6a21\u578b\uff0c\u5176\u4e2d\u89c2\u770bNormal Nerd\u7684\u89c6\u9891\u4f60\u5c06\u4f1a\u6709\u4e2a\u6e05\u6670\u7684\u8ba4\u77e5\u3002\u8fd9\u91cc\u6211\u53ea\u662f\u7b80\u5355\u7684\u8bb0\u5f55\u4e00\u4e0b\u3002</p> <p>\u9ad8\u9636\u8f6c\u79fb\u77e9\u9635\u548c\u7279\u5f81\u503c\u6c42\u7a33\u5b9a\u6982\u7387\u5206\u5e03\u7684\u65b9\u6cd5\u3002</p>"},{"location":"AI/machine%20learning/method/#212_hidden_markov_model","title":"2.1.2 Hidden Markov Model","text":""},{"location":"AI/machine%20learning/method/#213_hmmforward_algorithm","title":"2.1.3 HMM\uff1aForward Algorithm","text":""},{"location":"AI/machine%20learning/method/#221_markov_decision_process","title":"2.2.1 Markov Decision Process","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u5f3a\u5316\u5b66\u4e60\u6a21\u578b\u3002</p>"},{"location":"AI/machine%20learning/method/#222_q-learning","title":"2.2.2 Q-Learning","text":""},{"location":"AI/machine%20learning/method/#223_deep_q-learning","title":"2.2.3 Deep Q-Learning","text":""},{"location":"AI/machine%20learning/method/#3_svm","title":"3. SVM","text":"<p>SVM\u662f\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u5b83\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\uff0c\u5c06\u4e0d\u540c\u7c7b\u522b\u7684\u6570\u636e\u5206\u5f00\u3002</p>"},{"location":"Language/Advanced%20C%20Language/","title":"Advanced C Language","text":""},{"location":"Language/Advanced%20C%20Language/#c_gccgdbmakefile","title":"C \u4e2d\u7684\u4e00\u4e9b\u5de5\u5177\uff08gcc\u3001gdb\u3001makefile\uff09","text":"<p>\u6211\u653e\u5728\u4e86\u8fd9\u91cc</p>"},{"location":"Language/Advanced%20C%20Language/#_1","title":"\u8ddf\u6c47\u7f16\u76f8\u5173","text":"<ol> <li>\u5185\u8054\u6c47\u7f16\uff08\u5982\u4f55\u6269\u5145\u51fd\u6570\u7684\u6808\u7684\u5927\u5c0f\uff09</li> </ol>"},{"location":"Language/Advanced%20C%20Language/#_2","title":"\u5de6\u53f3\u503c","text":""},{"location":"Language/Advanced%20C%20Language/#sort","title":"\u4e2d\u7684sort\u51fd\u6570 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u6bd4\u8f83\u51fd\u6570\nint compare(const void *a, const void *b) {\n    return (*(int*)a - *(int*)b);\n}\n\nint main() {\n    int arr[] = {3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5};\n    int n = sizeof(arr) / sizeof(arr[0]);\n\n    qsort(arr, n, sizeof(int), compare);\n\n    for (int i = 0; i &lt; n; i++) {\n        printf(\"%d \", arr[i]);\n    }\n\n    return 0;\n}\n</code></pre>","text":""},{"location":"Language/Advanced%20C%20Language/#_3","title":"++\u7684\u524d\u7f00\u548c\u540e\u7f00 <pre><code>C:\ncounter++;\n\nassembly:\n mov [addr], &amp;eax\n add $0x1, &amp;eax\n mov &amp;eax, [addr]\n</code></pre>","text":""},{"location":"Language/C%2B%2B/","title":"C++","text":""},{"location":"Language/C%2B%2B/#_1","title":"\u7b80\u4ecb","text":""},{"location":"Language/C%2B%2B/#_2","title":"\u5b66\u4e60\u8d44\u6e90","text":"<p>Hacking Cpp</p> <p>Cpp Guideline</p> <p>STL</p> <p>perf:\u6027\u80fd\u5206\u6790\u5de5\u5177</p>"},{"location":"Language/C%2B%2B/stl/","title":"STL","text":""},{"location":"Language/C%2B%2B/stl/#string","title":"String","text":"<ol> <li>npos\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5b83\u7684\u503c\u662f-1\uff0c\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u4f4d\u7f6e\u3002 <pre><code>std::string s = \"Hello, world!\";\nstd::cout &lt;&lt; s.find(\"world\") &lt;&lt; std::endl; // 7\nchar c = 'c';\n\nbool find = s.find(c) != std::string::npos;\n</code></pre></li> </ol>"},{"location":"Language/C%2B%2B/stl/#vector","title":"vector","text":"<ol> <li>\u83b7\u53d6\u5f53\u524d\u7d22\u5f15\u4e24\u79cd\u65b9\u5f0f\uff1a <pre><code>for (auto it = vec.begin(); it != vec.end(); ++it) {\n    std::cout &lt;&lt; \"Index: \" &lt;&lt; std::distance(vec.begin(), it) &lt;&lt; \", Value: \" &lt;&lt; *it &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>size_t index = 0;\nfor (const auto&amp; element : vec) {\n    std::cout &lt;&lt; \"Index: \" &lt;&lt; index &lt;&lt; \", Value: \" &lt;&lt; element &lt;&lt; std::endl;\n    index++;\n}\n</code></pre></li> </ol>"},{"location":"Language/CUDA/","title":"Index","text":""},{"location":"Language/CUDA/#cuda","title":"CUDA","text":"<p>CUDA\u7f16\u7a0b\u7684\u7ecf\u9a8c\u4e3b\u8981\u6765\u81ea\u4e8e\u8d85\u7b97\u7684\u6bd4\u8d5b\u4ee5\u53ca\u81ea\u5df1\u7684\u5b66\u4e60\u3002  </p> <p>\u4f17\u6240\u5468\u77e5\uff0c\u8001\u9ec4\u7684N\u5361\u4ee5\u53ca\u57fa\u672c\u5784\u65ad\u4e86\u5f53\u4e0bAI\u5b66\u4e60\u6d6a\u6f6e\u3002\u4e2a\u4eba\u8ba4\u4e3a\u5982\u679c\u8bfb\u8005\u6709\u5fd7\u5411\u4e0d\u4ec5\u4ec5\u505apytorch\u7b49framework\u7684\u6389\u5305\u4fa0\uff0c\u5176\u5b9e\u5b66\u4e60CUDA\u662f\u4ef6\u633a\u4e0d\u9519\u7684\u4e8b\u60c5\u3002</p> <p>\u6458\u8981</p> \u4f20\u9001\u95e8 <ul> <li>Basic tutor</li> <li>Cutlass</li> <li>GEMM</li> </ul> \u8d44\u6e90 <ul> <li>Nvidia\u5b98\u7f51</li> <li>\u4e00\u4e2a\u975e\u5e38\u4e0d\u9519\u7684\u77e5\u4e4e\u7b14\u8bb0</li> </ul>"},{"location":"Language/CUDA/GEMM/","title":"GEMM","text":""},{"location":"Language/CUDA/cutlass/","title":"Cutlass \u7814\u7a76","text":""},{"location":"Language/CUDA/cutlass/#cute","title":"CuTe","text":"<p>\u8fd9\u662f\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u4e1c\u897f~</p>"},{"location":"Language/CUDA/note/","title":"CUDA\u5165\u95e8\u57fa\u7840","text":"<p>\u5bfc\u8bfb</p> <p>\u672c\u7ad9\u5c06\u8bb0\u5f55CUDA\u8bed\u6cd5\u7684\u57fa\u7840\u7528\u6cd5\uff0c\u4ee5\u53ca\u4e00\u5b9a\u7684\u4e3e\u4f8b\u3002\u5177\u4f53\u95ee\u9898\u7684\u7814\u7a76\u53ef\u4ee5\u89c1\u5176\u4ed6\u677f\u5757\u3002 [TOC]</p>"},{"location":"Language/CUDA/note/#1","title":"1. \u73af\u5883\u642d\u5efa","text":"<p>\u5f85\u642d\u5efa</p> linux <pre><code>sudo apt install nvidia-driver-515 # \u7248\u672c\u9700\u8981\u67e5\u8be2\nsudo apt install nvidia-cuda-toolkit\nsudo reboot\n</code></pre> windows <p>\u5176\u4e2d\u7f16\u8bd1\u65f6\u6211\u4eec\u91c7\u7528<code>nvcc</code>\u7f16\u8bd1\uff0c\u7528\u6cd5\u7c7b\u4f3cgcc/g++\u3002 <pre><code>nvcc main.cu -o outpot_filename\n</code></pre></p> <p>\u5982\u679c\u53ea\u662f\u7f16\u8bd1\u591a\u4e2a\u6e90\u6587\u4ef6\uff0c\u5373CUDA\u4ee3\u7801\u5199\u5230\u5176\u4ed6\u6e90\u6587\u4ef6\u91cc\u7136\u540einclude\u5230main\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u9009\u9879 <pre><code>nvcc main.cu -o output_filname -x cu\n</code></pre></p> <p>Attention: \u6709\u65f6\u5019\u53ef\u80fd\u56e0\u4e3anvcc\u9ed8\u8ba4\u4f7f\u7528g++/gcc\u7f16\u8bd1\u5668\u4e0d\u517c\u5bb9\uff0c\u53ef\u4ee5\u5229\u7528<code>--compiler-bindir</code>\u8bbe\u5b9a</p>"},{"location":"Language/CUDA/note/#2_cuda","title":"2. CUDA \u57fa\u7840\u77e5\u8bc6","text":""},{"location":"Language/CUDA/note/#21","title":"2.1 \u7b80\u5355\u7684\u4ee3\u7801\u7ed3\u6784\u4ee5\u53ca\u793a\u4f8b","text":"<p>\u4f5c\u4e3a\u5f00\u59cb\uff0c\u8fd9\u91cc\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u7ec4\u76f8\u52a0\u4e3a\u4f8b\u5b50\uff0c\u6765\u4ecb\u7ecdCUDA\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u7136\u540e\u518d\u9010\u4e2a\u672f\u8bed\u53ca\u8bed\u6cd5\u505a\u89e3\u91ca\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u5148\u9884\u89c8CPU\u7248\u7684\u6570\u7ec4\u76f8\u52a0\u4ee3\u7801\uff1a <pre><code>/*\nCPU\u7248\u4ee3\u7801\n*/\nvoid arrayAdd(float* dst, float* src1, float* src2, int n_data)\n{\n    for (int i = 0; i &lt; n_data; i++) \n    { \n        dst[i] = src1[i] + src2[i]; \n    }\n}\n</code></pre></p> <p>CUDA\u7684\u6574\u4f53\u4ee3\u7801\u6bd4CPU\u4ee3\u7801\u5197\u957f\u8bb8\u591a\uff0c\u4f46\u662f\u771f\u6b63\u53c2\u4e0e\u8ba1\u7b97\u7684\u53ea\u6709addKernel\u51fd\u6570\u53ca\u5176\u8c03\u7528\u3002\u4e00\u4e2a\u7b80\u5355\u4e14\u5b8c\u6574\u7684CUDA\u4ee3\u7801\u5206\u4e3a\uff1a</p> <p>\u8bbe\u7f6e\u53c2\u4e0e\u8fd0\u7b97\u7684GPU cudaSetDevice \u7533\u8bf7\u663e\u5b58 cudaMalloc \u590d\u5236\u6570\u636e cudaMemcpy\uff08\u53c2\u6570cudaMemcpyHostToDevice\uff09 \u8c03\u7528kernel\u51fd\u6570\u505a\u8fd0\u7b97 xxxKernel \u7b49\u5f85\u8fd0\u7b97\u7ed3\u675f\u540e\u540c\u6b65 cudaDeviceSynchronize\uff08kernel\u51fd\u6570\u7684\u8c03\u7528\u662f\u5f02\u6b65\u7684\uff09 \u590d\u5236\u8fd0\u7b97\u7ed3\u679c\u5230\u5230\u5185\u5b58 cudaMemcpy \uff08\u53c2\u6570cudaMemcpyDeviceToHost\uff09 \u91ca\u653e\u663e\u5b58 cudaFree <pre><code>/*\nCUDA\u7248\u4ee3\u7801\n*/\n#include &lt;iostream&gt;\n#include &lt;cuda.h&gt;\n\n__global__ void addKernel(float *dst, float *src1, float *src2, int n_data)\n{// kernel\u51fd\u6570\uff0c\u5177\u4f53\u8ba1\u7b97\u5b9e\u73b0\n    int i = threadIdx.x;\n    if (i &lt; n_data) { dst[i] = src1[i] + src2[i]; }\n}\n\nbool arrayAddCuda(float* dst, float* src1, float* src2, int n_data)\n{\n    cudaError_t cudaStatus = cudaSuccess;\n\n    // \u8bbe\u7f6e\u8fd0\u7b97GPU\n    cudaStatus = cudaSetDevice(0);\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Unable to set CUDA device \" &lt;&lt; cuda_dev_id &lt;&lt; \", \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt;\".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n\n    // \u7533\u8bf7\u663e\u5b58\n    float *_d_src1 = nullptr;\n    float *_d_src2 = nullptr;\n    float *_d_dst = nullptr;\n    cudaStatus = cudaMalloc((void**)&amp;_d_dst, n_data * sizeof(float));\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Failed to allocate CUDA memory, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n    cudaStatus = cudaMalloc((void**)&amp;_d_src1, n_data * sizeof(float));\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Failed to allocate CUDA memory, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n    cudaStatus = cudaMalloc((void**)&amp;_d_src2, n_data * sizeof(float));\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Failed to allocate CUDA memory, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n\n    // \u628a\u6570\u636e\u4ece\u5185\u5b58\u590d\u5236\u5230\u663e\u5b58\n    cudaStatus = cudaMemcpy(_d_src1, src1, n_data * sizeof(float), cudaMemcpyHostToDevice);\n    if (cudaStatus != cudaSuccess)\n    {\n        std::cout &lt;&lt; \"Failed to copy memory from host to device, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n    cudaStatus = cudaMemcpy(_d_src2, src2, n_data * sizeof(float), cudaMemcpyHostToDevice);\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Failed to copy memory from host to device, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n\n    // \u8c03\u7528kernel\u51fd\u6570\u505a\u8fd0\u7b97\n    int block_dim = n_data;\n    int grid_dim = 1;\n    addKernel &lt;&lt; &lt;grid_dim, block_dim &gt;&gt; &gt;(_d_dst, _d_src1, _d_src2, n_data);\n\n    // \u7b49\u5f85GPU\u8fd0\u7b97\u7ed3\u675f\u540e\u540c\u6b65\n    cudaStatus = cudaDeviceSynchronize();\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Failed to synchronized, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n\n    // \u628a\u8fd0\u7b97\u7ed3\u679c\u4ece\u663e\u5b58\u590d\u5236\u5230\u5185\u5b58\n    cudaStatus = cudaMemcpy(dst, _d_dst, n_data * sizeof(float), cudaMemcpyDeviceToHost);\n    if (cudaStatus != cudaSuccess) \n    {\n        std::cout &lt;&lt; \"Failed to copy memory from host to device, \" &lt;&lt; cudaGetErrorString(cudaStatus) &lt;&lt; \".\" &lt;&lt; std::endl;\n        cudaDeviceReset();\n        return false;\n    }\n\n    //\u91ca\u653e\u663e\u5b58\n    cudaFree(_d_src1);\n    cudaFree(_d_src2);\n    cudaFree(_d_dst);\n    cudaDeviceReset();\n    return true;\n}\n</code></pre></p> <p>\u4ece\u4e0a\u8ff0\u4f8b\u5b50\u53ef\u4ee5\u53d1\u73b0\uff0cCUDA\u4ee3\u7801\u6709\u4e24\u4e2a\u90e8\u5206\u3002\u5176\u4e2darrayAddCuda\u79f0\u4e3a<code>host code</code>\uff0c\u65e2\u7531CPU\u6765\u6267\u884c\u3002\u800caddKernel\u4e3a<code>device code</code>\uff0c\u4e00\u822c\u90fd\u4f1a\u4ee5xxxkernel\u7684\u65b9\u5f0f\u547d\u540d\uff0c\u7531GPU\u8d1f\u8d23\u6267\u884c\u3002\u9664\u4e86\u62ec\u53f7\u91cc\u7684\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\uff0ckernel\u51fd\u6570\u7684\u8c03\u7528\u8fd8\u5e26\u4e86\u4e09\u91cd\u5c16\u62ec\u53f7<code>&lt;&lt;&lt;grid_dim, block_dim&gt;&gt;&gt;</code>\u3002\u5c16\u62ec\u53f7\u91cc\u8fb9\u7684\u4e24\u4e2a\u53c2\u6570\u58f0\u660e\u4e86GPU\u91cc\u53c2\u4e0e\u8ba1\u7b97\u7684\u7ebf\u7a0b\u6570\u3002\u800ckernel\u51fd\u6570\u91cc\u8fb9\u5c31\u8d1f\u8d23\u5b9a\u4e49\u6bcf\u4e2a\u7ebf\u7a0b\u5982\u4f55\u5b8c\u6210\u8fd0\u7b97\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u901a\u8fc7\u7ebf\u7a0bID threadIdx.x \u6765\u51b3\u5b9a\u6bcf\u4e2a\u5176\u6240\u8d1f\u8d23\u7684\u6570\u7ec4\u7684\u4e0b\u6807\u3002</p>"},{"location":"Language/CUDA/note/#22_cuda","title":"2.2 CUDA\u672f\u8bed\u53ca\u8bed\u6cd5","text":""},{"location":"Language/CUDA/note/#221_cudathreadblockgrid","title":"2.2.1 CUDA\u7ebf\u7a0b\u5206\u914d\uff08Thread\uff0cBlock\uff0cGrid\uff09","text":"<p>\u5229\u7528GPU\u505a\u5e76\u884c\u8fd0\u7b97\u7684\u6838\u5fc3\u662f\u628a\u4efb\u52a1\u6d3e\u53d1\u5230\u6bcf\u4e2a\u7ebf\u7a0b\u3002\u6211\u4eec\u9700\u8981\u6839\u636e\u4efb\u52a1\u6765\u786e\u5b9a\u5e76\u884c\u7684\u7ebf\u7a0b\u6570\u53ca\u4efb\u52a1\u5206\u914d\u7ec6\u8282\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7406\u89e3CUDA\u91cc\u7684Thread\uff0cBlock\u548cGrid\u8fd9\u4e09\u4e2a\u6982\u5ff5\u3002\u8fd9\u4e09\u4e2a\u6982\u5ff5\u90fd\u662f\u7f16\u7a0b\u5c42\u9762\u4e0a\u7684\u62bd\u8c61\uff0c\u548c\u786c\u4ef6\u4e0a\u7684\u8054\u7cfb\u4f1a\u5728\u4f18\u5316\u90e8\u5206\u8865\u5145\u3002</p> <p></p> <ul> <li> <p>Thread\u2014\u2014\u6700\u5c0f\u7684\u8fd0\u7b97\u5355\u5143\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aCPU\u5e76\u884c\u8fd0\u7b97\u7684\u7ebf\u7a0b\u3002\u8d1f\u8d23\u8fd0\u884ckernel\u51fd\u6570\u91cc\u8fb9\u6240\u5b9a\u4e49\u7684\u8fd0\u7b97\u3002</p> </li> <li> <p>Block\u2014\u2014\u7531\u591a\u4e2aThread\u6240\u7ec4\u6210\u7684\u8fd0\u7b97\u5355\u5143\u3002\u6bcf\u4e2ablock\u53ea\u80fd\u7531GPU\u7684\u5355\u4e2a\u7531\u6d41\u5904\u7406\u5668\uff08Streaming Multiprocessor, SM\uff09\u6267\u884c\u3002\u5355\u4e2aBlock\u6700\u5927\u652f\u63011024\u4e2aThread\u3002\u540c\u4e00\u4e2aBlock\u7684Thread\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u5185\u5b58\uff08shared memory\uff09\u6c9f\u901a\u53ca\u4ea4\u6362\u6570\u636e\u3002</p> </li> <li> <p>Grid\u2014\u2014\u7531\u591a\u4e2aBlock\u6240\u7ec4\u6210\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2aGPU\u3002\u4e00\u4e2aGrid\u53ef\u4ee5\u6709\u6700\u591a655366553665536\u4e2aBlock\u3002</p> </li> </ul> <p>\u4e0a\u9762\u4e09\u4e2a\u6982\u5ff5\u53ef\u4ee5\u7b80\u5355\u6982\u62ec\u4e3a\uff1a\u6574\u4e2aGrid\uff08GPU\uff09\u7531\u8bb8\u591a\u7684Block\u7ec4\u6210\uff0c\u800cBlock\u91cc\u8fb9\u53c8\u6709\u8bb8\u591a\u7684Thread\uff0c\u6bcf\u4e2aThread\u90fd\u4f1a\u6267\u884c\u6211\u4eec\u6240\u5b9a\u4e49\u7684kernel\u51fd\u6570\u3002kernel\u51fd\u6570\u7684\u8c03\u7528\u662f\u901a\u8fc7\u5c16\u62ec\u53f7\u91cc\u7684\u4e24\u4e2a\u53c2\u6570&lt;&lt;&gt;&gt;\u6765\u8bbe\u7f6e\u53c2\u4e0e\u8fd0\u7b97\u7684\u7ebf\u7a0b\u6570\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3aBlock\u7684\u6570\u91cf\uff08\u4e00\u822c\u547d\u540d\u7528num_block, grid_size\u6216grid_dim\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3aThread\u7684\u6570\u91cf\uff08\u4e00\u822c\u547d\u540d\u7528num_thread, block_size\u6216block_dim\uff09\u3002\u7406\u8bba\u4e0a\uff0c\u6bcf\u4e2aGrid\u662f\u4e09\u7ef4\u7684Block\u6240\u7ec4\u6210\uff0c\u6bcf\u4e2aBlock\u4e5f\u662f\u4e09\u7ef4\u7684Thread\u6240\u7ec4\u6210\uff08\u56fe8\uff09\uff0c\u56e0\u6b64\u6700\u5927\u53ef\u4ee5\u5728\u516d\u4e2a\u62bd\u8c61\u7ef4\u5ea6\u4e0a\u505a\u5e76\u884c\u3002 <p></p> <p>\u56fe\u6e90 http://harmanani.github.io/classes/csc447/Notes/Lecture15.pdf</p> <p>\u4f46\u662f\u5b9e\u9645\u5e94\u7528\u4e2d\u4e0d\u4e00\u5b9a\u9700\u8981\u7528\u5230\u516d\u7ef4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba9\u5176\u4ed6\u7ef4\u5ea6\u7684\u5927\u5c0f\u53d6\u4e3a1\uff0c\u6bd4\u5982\u4e00\u7ef4\u6570\u7ec4\u76f8\u52a0\u7684\u4f8b\u5b50\u3002\u53c2\u6570grid_dim\u548cblock_dim\u53ef\u4ee5\u662fCUDA\u5b9a\u4e49\u7684dim3\u7ed3\u6784\uff0c\u4e5f\u53ef\u4ee5\u662f\u6574\u6570\u578bint\u3002 <pre><code>dim3 block_dim(5,4,3); // x=5, y=4, z=3\ndim3 block_dim(5,4);   // x=5, y=4, z=1\ndim3 block_dim(5);     // x=5, y=1, z=1\nint block_dim = 5;     // x=5, y=1, z=1\n</code></pre></p> <p>\u786e\u5b9a\u4e86\u9700\u8981\u8c03\u7528\u7684\u7ebf\u7a0b\u6570\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u4efb\u52a1\u5206\u914d\u7684\u7ec6\u8282\u3002\u5728kernel\u51fd\u6570\u91cc\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u5bf9\u5e94\u7684threadIdx.x\u3001threadIdx.y\u3001threadIdx.z\u3001blockIdx.x\u3001blockIdx.y\u3001blockIdx.z\u516d\u4e2a\u53d8\u91cf\u6765\u552f\u4e00\u786e\u5b9a\u3002\u540c\u65f6Grid\u548cBlock\u7684\u5927\u5c0f\u4e5f\u53ef\u4ee5\u901a\u8fc7blockDim.x\u3001blockDim.y\u3001blockDim.z\u3001gridDim.x\u3001gridDim.y\u3001gridDim.z\u6765\u83b7\u53d6\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5f88\u5c11\u7528\u52306\u7ef4\u5ea6\u3002\u4ee5\u4e0a\u8ff0\u6570\u7ec4\u76f8\u52a0\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ea\u7528\u4e86\u4e00\u7ef4\u7684Block\uff0c\u5373\u53ea\u6709threadIdx.x\u662f\u6709\u610f\u4e49\u7684\uff0c\u5e76\u4e14\u7528\u4e8e\u5bf9\u5e94\u6570\u7ec4\u4e2d\u4e2a\u522b\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u6b64\u5916\uff0c\u8fd9\u6bb5\u4ee3\u7801\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u5355\u4e2aBlock\u6700\u591a\u53ea\u80fd\u67091024\u4e2athread\uff0c\u5f53\u6570\u7ec4\u5927\u4e8e1024\u65f6\u4f1a\u7cfb\u7edf\u4f1a\u62a5\u9519\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u7ef4\u7684grid\u6765\u5904\u7406\u5927\u4e8e1024\u7684\u6570\u7ec4\u3002\u4e3a\u4e86\u4f7f\u6bcf\u4e2aThread\u5355\u72ec\u5bf9\u5e94\u5230\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u9700\u8981threadIdx.x\u3001blockIdx.x\u53cablockDim.x\u3002 </p> <p>\u4e00\u7ef4\u6570\u7ec4\u5143\u7d20\u4e0b\u6807\u6240\u5bf9\u5e94\u7684threadIdx.x\u548cblockIdx.x\u3002 <pre><code>__global__ void addKernel(float *dst, float *src1, float *src2, int n_data)\n{// kernel\u51fd\u6570\uff0c\u5177\u4f53\u8ba1\u7b97\u5b9e\u73b0\n    int i = threadIdx.x + blockDim.x*blockIdx.x;\n    if (i &lt; n_data) { dst[i] = src1[i] + src2[i]; }\n}\n\nbool arrayAddCuda(float* dst, float* src1, float* src2, int n_data)\n{\n    ...\n\n    // \u8c03\u7528kernel\u51fd\u6570\u505a\u8fd0\u7b97\n    int max_block_dim = 1024; \n    int block_dim = max_block_dim ;\n    int grid_dim = n_data/1024 + (int)((n_data%max_block_dim )&gt;0);\n    addKernel &lt;&lt; &lt;grid_dim, block_dim &gt;&gt; &gt;(_d_dst, _d_src1, _d_src2, n_data);\n\n    ...\n}\n</code></pre></p> <p>\u5982\u679c\u662f\u5904\u7406\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\uff0c\u5e76\u4e14\u9700\u8981\u6620\u5c04\u5230\u4e00\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u53c2\u8003\uff1aCUDA Indexing Cheatsheet</p>"},{"location":"Language/CUDA/note/#222_cuda","title":"2.2.2 CUDA\u51fd\u6570\u53ca\u53d8\u91cf\u4fee\u9970\u8bed\u6cd5","text":"<p>CUDA\u51fd\u6570\u7684\u4fee\u9970\uff1a</p> <ul> <li><code>__global__</code> \u58f0\u660ekernel\u51fd\u6570\uff0c\u7531host\uff08CPU\uff09\u8c03\u7528\uff0cdevice\uff08GPU\uff09\u6267\u884c\u3002</li> <li><code>__device__</code> \u58f0\u660edevice\u51fd\u6570\uff0c\u7531device\u8c03\u7528\uff0cdevice\u6267\u884c\u3002</li> <li><code>__host__</code> \u58f0\u660ehost\u51fd\u6570\uff0c\u7531host\u8c03\u7528\uff0chost\u6267\u884c\u3002</li> <li><code>__device____host__</code> \u7531device\u8c03\u7528\uff0cdevice\u6267\u884c\uff1b\u6216\u8005\u7531host\u8c03\u7528\uff0chost\u6267\u884c\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u548cdebug\u3002</li> </ul> <p>CUDA\u53d8\u91cf\u7684\u4fee\u9970\uff1a</p> <ul> <li><code>__device__</code> \u58f0\u660e\u53d8\u91cf\uff0c\u5b58\u5728global memory\u3002</li> <li><code>__shared__</code> \u58f0\u660e\u5171\u4eab\u53d8\u91cf\uff0c\u5b58\u5728shared memory\uff0c\u540c\u4e00\u4e2abblock\u91cc\u7684thread\u90fd\u53ef\u662f\u6709\u610f\u4e49\u7684\uff0c\u5e76\u4e14\u7528\u4e8e\u5bf9\u5e94\u6570\u7ec4\u4e2d\u4e2a\u522b\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u6b64\u5916\uff0c\u8fd9\u6bb5\u4ee3\u7801\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u5355\u4e2ablock\u6700\u591a\u53ea\u80fd\u67091024\u4e2aThread\uff0c\u5f53\u6570\u7ec4\u5927\u4e8e1024\u65f6\u4f1a\u7cfb\u7edf\u4f1a\u62a5\u9519\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u7ef4\u7684Grid\u6765\u5904\u7406\u5927\u4e8e1024\u7684\u6570\u7ec4\u3002\u4e3a\u4e86\u4f7f\u6bcf\u4e2aThread\u5355\u72ec\u5bf9\u5e94\u5230\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u9700\u8981</li> <li><code>__constant__</code> \u58f0\u660e\u5e38\u91cf\uff0c \u5b58\u5728global memory\u3002</li> </ul>"},{"location":"Language/CUDA/note/#23_cuda","title":"2.3 CUDA\u7ebf\u7a0b\u7684\u5e76\u884c\u53ca\u540c\u6b65","text":"<p>\u5f53\u6267\u884c\u4e00\u4e2aCUDA\u7a0b\u5e8f\u65f6\uff0c\u5e76\u975e\u6240\u6709\u7684thread\u90fd\u662f\u540c\u65f6\u5e76\u884c\u7684\u3002\u7406\u8bba\u4e0a\uff0c\u540c\u4e00\u4e2ablock\u91cc\u7684\u6240\u6709thread\u662f\u5e76\u884c\u7684\u3002\u800c\u4e0d\u540cblock\u4e4b\u95f4\u7684\u5e76\u884c\u53d6\u51b3\u4e8e\u786c\u4ef6\u7684\u53c2\u6570\uff0c\u5373\u6d41\u5904\u7406\u5668\uff08SM\uff09\u7684\u6570\u91cf\u51b3\u5b9a\u3002\u56fe10\u663e\u793a\u4e00\u6bb5\u9700\u89818\u4e2ablock\u7684CUDA\u4ee3\u7801\uff0c\u662f\u5982\u4f55\u7531\u4e24\u4e2a\u4e0d\u540cGPU\uff082vs4\u6d41\u5904\u7406\u5668\uff09\u6240\u6267\u884c\u7684\u3002\u5de6\u8fb9\u7684GPU\u53ea\u67092\u4e2a\u6d41\u5904\u7406\u5668\uff0c\u6700\u591a\u53ea\u80fd\u67092\u4e2ablock\u540c\u65f6\u8fd0\u884c\uff1b\u800c\u53f3\u8fb9GPU\u67094\u4e2a\u6d41\u5904\u7406\u5668\uff0c\u6700\u591a\u80fd\u67094\u4e2ablock\u540c\u65f6\u8fd0\u884c\u3002 </p> <p>\u56fe\u6e90 http://harmanani.github.io/classes/csc447/Notes/Lecture15.pdf</p> <p>\u53ea\u6709\u540c\u4e00\u4e2ablock\u91cc\u7684thread\u624d\u80fd\u540c\u6b65\u3002\u5982\u679c\u4efb\u52a1\u9700\u8981\u4e0d\u540cthread\u4e4b\u95f4\u7684\u534f\u540c\uff0c\u9700\u8981\u5728kernel\u51fd\u6570\u91cc\u5bf9\u5e94\u4f4d\u7f6e\u52a0__syncthreads()\u3002\u8fd9\u91cc\u4ee5\u4e00\u4e2a\u56fe\u50cf\u7684\u5de6\u53f3\u98a0\u5012\u4e3a\u4f8b\u5b50\u3002\u6bcf\u4e2ablock\u8d1f\u8d23\u4e00\u884c\uff0c\u6bcf\u4e2athread\u8d1f\u8d23\u4e00\u4e2a\u50cf\u7d20\u70b9\u3002\u8be5thread\u8d1f\u8d23\u8bfb\u53d6\u5bf9\u9762\u50cf\u7d20\u70b9\u7684\u503ca\uff0c\u7136\u540e\u628a\u81ea\u5df1\u50cf\u7d20\u70b9\u7684\u503c\u6539\u6210a\u3002\u5982\u679c\u6ca1\u6709__syncthreads()\uff0c\u67d0\u4e2athread\u53ef\u80fd\u8fd8\u6765\u4e0d\u53ca\u8bfb\u53d6\u5bf9\u9762\u7684\u503c\u5c31\u88ab\u4fee\u6539\u4e86\uff0c\u5176\u7ed3\u679c\u5982\u56fe\u6240\u793a\u3002</p> <p><pre><code>__global__ void flipHorizontalKernel(float* src_dst, int nx, int ny)\n{\n    int i = blockIdx.x;\n    int j = threadIdx.x;\n    int loc1 = i*nx + j;\n    int loc2 = i*nx + (nx - 1 - j);\n    float tmp = src_dst[loc2];\n    __syncthreads();\n    src_dst[loc1] = tmp;\n}\n\nbool flipHorizontalCuda(float* src_dst, int nx, int ny)\n{\n    ...\n\n    int block_dim = nx;\n    int grid_dim = ny;\n    // \u8c03\u7528kernel\u51fd\u6570\u505a\u8fd0\u7b97\n    flipHorizontalKernel &lt;&lt; &lt;grid_dim, block_dim &gt;&gt; &gt;(_d_src_dst, nx, ny)\n\n    ...\n}\n</code></pre> </p>"},{"location":"Language/CUDA/note/#3","title":"3. \u4f18\u5316","text":""},{"location":"Language/CUDA/note/#31","title":"3.1 \u67b6\u6784\u4f18\u5316","text":""},{"location":"Language/CUDA/note/#32","title":"3.2 \u5e76\u884c\u4f18\u5316","text":""},{"location":"Language/CUDA/note/#33","title":"3.3 \u8bbf\u5b58\u4f18\u5316","text":""},{"location":"Language/CUDA/note/#34_cuda_stream","title":"3.4 CUDA stream","text":""},{"location":"Language/Python/","title":"Python","text":"<p>python\u53ef\u8c13\u662f\u73b0\u5728\u9700\u8981\u5927\u5bb6\u4eba\u624b\u638c\u63e1\u7684\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\u4e86\uff0c\u51c6\u786e\u6765\u8bb2\u6211\u4eec\u628a\u5b83\u66f4\u504f\u5411\u5b9a\u4e49\u4e3a\u89e3\u91ca\u578b\u8bed\u8a00\u3002\uff08\u4ea4\u4e92\u6027\u66f4\u5f3a\u4f46\u540c\u65f6\u8fd0\u884c\u901f\u5ea6\u8f83\u6162\uff09</p> <p>\u5f53\u7136python\u6700\u5927\u7684\u597d\u5904\u5728\u4e8e\u5176\u8bed\u6cd5\u7684\u6613\u61c2\u6027\u4ee5\u53ca\u4e30\u5bcc\u7684\u201c\u5305\u201d\uff01\uff01\uff01</p> <p>\u6211\u4f1a\u5c06\u6211\u4f7f\u7528\u7684\u4e00\u4e9b\u7ecf\u9a8c\u8bb0\u5f55\u5728\u4e0b\u65b9\u3002</p> <p>\u8d44\u6e90</p> \u5b66\u4e60\u8d44\u6e90 <ol> <li>\u4e00\u4e2a\u7b80\u660e\u7684\u4ecec\u5b66\u4e60python\u8bed\u6cd5\u7684\u89c6\u9891</li> </ol> \u5b89\u88c5 <p>\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u4ece\u4e00\u5f00\u59cb\u4fbf\u4f7f\u7528conda\uff08\u6700\u597d\u662fminiconda\uff09\u6765\u7ba1\u7406\u73af\u5883 \uff08ZJUers\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u4ecemirror\u4e0a\u6362\u6e90\u54df\uff09 \uff08windows\u4e0b\u7684\u7528\u6237\u4e5f\u4e0d\u5fc5\u90a3\u4e48\u9ebb\u70e6\uff0c\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7winget\u6765\u5feb\u901f\u4e0b\u8f7d\u5566\uff09</p>"},{"location":"Language/Python/enviroment/","title":"python\u73af\u5883\u7ba1\u7406","text":""},{"location":"Language/Python/enviroment/#pip","title":"pip","text":"<ol> <li>\u5982\u679c\u9700\u8981\u66f4\u65b0\u6240\u6709pip\u7684\u5305\u53ef\u4ee5\u4f7f\u7528<code>pip3 list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U</code></li> <li>\u60f3\u8981\u5bfc\u51fa\u6240\u6709pip\u8d44\u6e90\u5230requirement.txt\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>pip freeze &gt; requirements.txt</code></li> </ol>"},{"location":"Language/Python/enviroment/#conda","title":"conda","text":""},{"location":"Language/Python/enviroment/#venv","title":"venv","text":""},{"location":"Language/Python/fastpython/","title":"Fastpython","text":""},{"location":"Language/Python/fastpython/#python","title":"Python \u5feb\u901f\u4e0a\u624b","text":"<p>\u672c\u7ae0\u8282\u5c06\u8bb0\u5f55python\u7684\u57fa\u672c\u8bed\u6cd5\uff0c\u901a\u8fc7\u9605\u8bfb\uff0c\u4f60\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u8bfb\u61c2\u7b80\u5355\u4ee3\u7801\u3002\uff08\u5f53\u7136gpt\u4e5f\u662f\u5927\u5bb6\u7684\u597d\u5e2e\u624b\uff09</p> <p>\u4f46\u975e\u5e38\u5efa\u8bae\u5927\u5bb6\u5728\u6709\u7cbe\u529b\u65f6\u53ef\u4ee5\u4f53\u7cfb\u5316\u7684\u5b66\u4e60\u5b66\u4e60\u8fd9\u95e8\u8bed\u8a00</p>"},{"location":"Language/Python/fastpython/#_1","title":"\u5224\u65ad\u8bed\u53e5","text":"<p>and \u6216\u8005 or\uff0c\u540e\u9762\u7528\u5192\u53f7\uff0ctab\u5206\u5c42\uff0c<code>elif</code></p> <pre><code>if course_num == 50:\n    # code block1\nelif not course_num == 51:\n    # code block2\n</code></pre> <p>we dont have to use the exclamation point symbol\uff01, the vertical bar|, ampersand&amp;</p>"},{"location":"Language/Python/fastpython/#bool","title":"bool\u53d8\u91cf\uff08\u4e8c\u5143\u5224\u65ad\u7b26\uff09","text":"<pre><code>letter = True if input().isalpha() else False\n</code></pre>"},{"location":"Language/Python/fastpython/#loop","title":"Loop\u5faa\u73af","text":"<pre><code>counter = 0\nwhile counter &lt; 100:\n    print(counter)\n    counter += 1\n\nfor x in range(100):\n    print(x)\nfor x in range(0, 100, 2)\n    print(x)\n# not include 100\n</code></pre>"},{"location":"Language/Python/fastpython/#loopredux","title":"Loop(redux)","text":"<pre><code>pizza = {\n    \"cheese\": 9,\n    \"pepperoni\": 10,\n    \"vegetable\": 11,\n    \"chicken\": 12\n}\n\nfor pie in pizza:\n    print(pie)\n\nfor pie,price in pizza.items():\n    print(price)\n    print(\"A whole {} pizza costs ${}\".format(pie,price))\n    print(\"A whole\"+ pie + \"pizza costs $\" + str(price))\n    print(\"A whole %s pizza costs $%2d\" % (pie,price)) # deprecated in python3\n</code></pre>"},{"location":"Language/Python/fastpython/#list","title":"List\u5217\u8868","text":"<pre><code>nums = [x for x in range (10)]\nnums.append(11)\nnums.insert(10,11)\nnums[len(nums):] = [11]\n</code></pre>"},{"location":"Language/Python/fastpython/#tuple","title":"Tuple\u5143\u7ec4","text":"<pre><code>for prez,year in presidents:\n    print(\"In {1}, {0} took office\".format(prez,year))\n</code></pre>"},{"location":"Language/Python/fastpython/#dictionary","title":"Dictionary","text":""},{"location":"Language/Python/fastpython/#function","title":"Function","text":"<pre><code>def square(x):\n    return x * x || return x**2\n</code></pre>"},{"location":"Language/Python/fastpython/#object","title":"Object","text":"<p>It's similar to c++.</p> <pre><code>class Student():\n\n    def __init__(self, name, id):\n        self.name = name\n        self.id = id\n\n    def change_ID(self, id):\n        self.id = id\n\n    def print(self):\n        print(\"{} - {}\".format(self.name, self.id))\n\njane = Student(\"Jane\", 10)\njane.print()\njane.change_ID(11)\njane.print()\n</code></pre>"},{"location":"Language/Python/fastpython/#data_structure","title":"Data structure","text":"<p>runoob</p> <p>\u904d\u5386\u6280\u5de7\u7684\u51fd\u6570\uff1aitems\u3001enumerate\u3001zip\u3001reverse\u3001sorted</p>"},{"location":"Language/Python/skill/","title":"python\u4f7f\u7528\u6280\u5de7","text":"<p>\u6bcf\u4e2a\u8bed\u8a00\u90fd\u6709\u7740\u5176\u81ea\u5df1\u7684\u7279\u6027\uff0c\u5f53\u7136python\u4e5f\u4e0d\u4f8b\u5916\u3002\u6211\u5c06\u5206\u6210\u4e0b\u9762\u51e0\u4e2a\u5927\u7c7b\u8fdb\u884c\u8bb0\u5f55\u3002</p> <p>catalogue</p> <ul> <li> \u57fa\u672c\u6280\u5de7</li> <li> OS\u4f7f\u7528</li> <li> matplotlib\u76f8\u5173</li> <li> \u6742\u9879</li> </ul>"},{"location":"Language/Python/skill/#_1","title":"\u57fa\u672c\u6280\u5de7","text":""},{"location":"Language/Python/skill/#os","title":"OS\u4f7f\u7528","text":"<ol> <li> <p><code>python    for filename in os.listdir(directory):            if not filename.endswith(\".html\"):                continue            with open(os.path.join(directory, filename)) as f:                contents = f.read()                links = re.findall(r\"&lt;a\\s+(?:[^&gt;]*?)href=\\\"([^\\\"]*)\\\"\", contents)                pages[filename] = set(links) - {filename}</code></p> </li> <li></li> </ol>"},{"location":"Language/Python/skill/#_2","title":"\u6742\u9879","text":"<ol> <li>python \u4e2d\u7684\u4e09\u5143\u8fd0\u7b97\u7b26\uff1a<code>return X if X_count == O_count else O</code></li> <li>\u8fd4\u56de\u6700\u5927\u503c\u7684\u7d22\u5f15\uff1a<code>max_score_index = max(enumerate(scores), key=lambda x: x[1])[0]</code></li> <li><code>with open(os.path.join(directory, filename)) as f:</code>\u4f7f\u7528with\u5904\u7406\u5f02\u5e38\u60c5\u51b5</li> </ol>"},{"location":"Language/Verilog/","title":"Index","text":""},{"location":"Language/Verilog/#verilog","title":"Verilog\u57fa\u7840\u8bed\u6cd5","text":"<p>\u5f15\u8a00</p> <p>\u672c\u7b14\u8bb0\u53c2\u8003Runoob\u7684\u6559\u7a0b\u4ee5\u53ca\u5176\u4ed6\u8d44\u6599\u53c2\u8003\u5b66\u4e60\u8bb0\u5f55\uff0c\u4e3a\u786c\u4ef6\u8bfe\u7a0b\u5b66\u4e60\u7684\u57fa\u7840\u8bed\u8a00\u3002</p>"},{"location":"Language/Verilog/#verilog_1","title":"Verilog\u4e2d\u7684\u4e00\u4e9b\u7279\u6027","text":"<ol> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u4f4d\u5bbd\u4e0d\u5339\u914d\u65f6\uff0c\u5411\u5de6\u88650\u6269\u5c55.</li> </ol>"},{"location":"Language/Verilog/#_1","title":"\u521d\u7aa5","text":"<p>Verilog\u662f\u4e00\u79cd\u786c\u4ef6\u7f16\u7a0b\u8bed\u8a00\uff0c\u53ef\u4ee5\u62d3\u5199\u5230FPGA\u4e0a\u53bb\u8fd0\u884c\u3002</p> <p>\u57fa\u672c\u7279\u6027\uff1aVerilog\u533a\u5206\u5927\u5c0f\u5199\uff0c\u8bed\u53e5\u4ee5\u5206\u53f7\u4e3a\u7ed3\u675f\uff0c\u7a7a\u767d\u7b26\u65e0\u610f\u4e49\uff0c\u6ce8\u91ca\u65b9\u6cd5\u540cC\u3002</p>"},{"location":"Language/Verilog/#_2","title":"\u8bbe\u8ba1\u6d41\u7a0b","text":"<p>\u4e00\u822c\u7684\u8bbe\u8ba1\u601d\u8def\u5982\u4e0b\u56fe\uff1a</p> <p></p>"},{"location":"Language/Verilog/#_3","title":"\u6807\u8bc6\u7b26","text":"<p>\u6807\u8bc6\u7b26\uff08identifier\uff09\u53ef\u4ee5\u662f\u4efb\u610f\u4e00\u7ec4\u5b57\u6bcd\u3001\u6570\u5b57\u3001$ \u7b26\u53f7\u548c _(\u4e0b\u5212\u7ebf)\u7b26\u53f7\u7684\u5408\uff0c\u4f46\u6807\u8bc6\u7b26\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u8005\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u6216\u8005\u7f8e\u5143\u7b26\u5f00\u59cb\u3002\u4e00\u822c\u66f4\u504f\u5411\u4e8e\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u3002</p>"},{"location":"Language/Verilog/#_4","title":"\u6570\u503c","text":""},{"location":"Language/Verilog/#_5","title":"\u6570\u503c\u79cd\u7c7b","text":"<p>Verilog HDL \u6709\u4e0b\u5217\u56db\u79cd\u57fa\u672c\u7684\u503c\u6765\u8868\u793a\u786c\u4ef6\u7535\u8def\u4e2d\u7684\u7535\u5e73\u903b\u8f91\uff1a</p> <ul> <li>0\uff1a\u903b\u8f91 0 \u6216 \"\u5047\"</li> <li>1\uff1a\u903b\u8f91 1 \u6216 \"\u771f\"</li> <li>x \u6216 X\uff1a\u672a\u77e5</li> <li>z \u6216 Z\uff1a\u9ad8\u963b</li> </ul> <p>x \u610f\u5473\u7740\u4fe1\u53f7\u6570\u503c\u7684\u4e0d\u786e\u5b9a\uff0c\u5373\u5728\u5b9e\u9645\u7535\u8def\u91cc\uff0c\u4fe1\u53f7\u53ef\u80fd\u4e3a 1\uff0c\u4e5f\u53ef\u80fd\u4e3a 0\u3002</p> <p>z \u610f\u5473\u7740\u4fe1\u53f7\u5904\u4e8e\u9ad8\u963b\u72b6\u6001\uff0c\u5e38\u89c1\u4e8e\u4fe1\u53f7\uff08input, reg\uff09\u6ca1\u6709\u9a71\u52a8\u65f6\u7684\u903b\u8f91\u7ed3\u679c\u3002\u4f8b\u5982\u4e00\u4e2a pad \u7684 input \u5448\u73b0\u9ad8\u963b\u72b6\u6001\u65f6\uff0c\u5176\u903b\u8f91\u503c\u548c\u4e0a\u4e0b\u62c9\u7684\u72b6\u6001\u6709\u5173\u7cfb\u3002\u4e0a\u62c9\u5219\u903b\u8f91\u503c\u4e3a 1\uff0c\u4e0b\u62c9\u5219\u4e3a 0 \u3002</p>"},{"location":"Language/Verilog/#_6","title":"\u6570\u503c\u8868\u793a","text":"<p>\u6307\u660e\u4f4d\u5bbd\uff1a</p> <pre><code>4'b1011 \u00a0 \u00a0 \u00a0 \u00a0 // 4bit \u6570\u503c\n32'h3022_c0de \u00a0 // 32bit \u7684\u6570\u503c\n-6'd15      //negative number\n4'd-2 //\u975e\u6cd5\u8bf4\u660e invalid\n</code></pre> <p>\u4e0d\u6307\u660e\u4f4d\u5bbd:</p> <p>\u4e00\u822c\u76f4\u63a5\u5199\u6570\u5b57\u65f6\uff0c\u9ed8\u8ba4\u4e3a\u5341\u8fdb\u5236\u8868\u793a\uff0c\u4f8b\u5982\u4e0b\u9762\u7684 3 \u79cd\u5199\u6cd5\u662f\u7b49\u6548\u7684\uff1a</p> <pre><code>counter = 'd100 ; //\u4e00\u822c\u4f1a\u6839\u636e\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u9891\u4f4d\u5bbd\uff0c\u5e38\u89c1\u7684\u4e3a32bit*\ncounter = 100 ;\ncounter = 32'h64 ;\n</code></pre>"},{"location":"Language/Verilog/#_7","title":"\u6570\u636e\u7c7b\u578b","text":"<p>Verilog \u6700\u5e38\u7528\u7684 2 \u79cd\u6570\u636e\u7c7b\u578b\u5c31\u662f\u7ebf\u7f51\uff08wire\uff09\u4e0e\u5bc4\u5b58\u5668\uff08reg\uff09\uff0c\u5176\u4f59\u7c7b\u578b\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u7684\u6269\u5c55\u6216\u8f85\u52a9\u3002</p>"},{"location":"Language/Verilog/#wire","title":"\u7ebf\u7f51\uff08wire\uff09","text":"<p>wire \u7c7b\u578b\u8868\u793a\u786c\u4ef6\u5355\u5143\u4e4b\u95f4\u7684\u7269\u7406\u8fde\u7ebf\uff0c\u7531\u5176\u8fde\u63a5\u7684\u5668\u4ef6\u8f93\u51fa\u7aef\u8fde\u7eed\u9a71\u52a8\u3002\u5982\u679c\u6ca1\u6709\u9a71\u52a8\u5143\u4ef6\u8fde\u63a5\u5230 wire \u578b\u53d8\u91cf\uff0c\u7f3a\u7701\u503c\u4e00\u822c\u4e3a \"Z\"\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>wire  interrupt ;\nwire  flag1, flag2 ;\nwire  gnd = 1'b0 ; \n</code></pre> <p>\u7ebf\u7f51\u578b\u8fd8\u6709\u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec wand\uff0cwor\uff0cwri\uff0ctriand\uff0ctrior\uff0ctrireg \u7b49\u3002\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u7528\u7684\u9891\u7387\u4e0d\u662f\u5f88\u9ad8\uff0c\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\u3002</p>"},{"location":"Language/Verilog/#reg","title":"\u5bc4\u5b58\u5668\uff08reg\uff09","text":"<p>\u5bc4\u5b58\u5668\uff08reg\uff09\u7528\u6765\u8868\u793a\u5b58\u50a8\u5355\u5143\uff0c\u5b83\u4f1a\u4fdd\u6301\u6570\u636e\u539f\u6709\u7684\u503c\uff0c\u76f4\u5230\u88ab\u6539\u5199\u3002\u58f0\u660e\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>reg   clk_temp;\nreg  flag1, flag2 ;\n</code></pre> <p>\u4f8b\u5982\u5728 always \u5757\u4e2d\uff0c\u5bc4\u5b58\u5668\u53ef\u80fd\u88ab\u7efc\u5408\u6210\u8fb9\u6cbf\u89e6\u53d1\u5668\uff0c\u5728\u7ec4\u5408\u903b\u8f91\u4e2d\u53ef\u80fd\u88ab\u7efc\u5408\u6210 wire \u578b\u53d8\u91cf\u3002\u5bc4\u5b58\u5668\u4e0d\u9700\u8981\u9a71\u52a8\u6e90\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u9700\u8981\u65f6\u949f\u4fe1\u53f7\u3002\u5728\u4eff\u771f\u65f6\uff0c\u5bc4\u5b58\u5668\u7684\u503c\u53ef\u5728\u4efb\u610f\u65f6\u523b\u901a\u8fc7\u8d4b\u503c\u64cd\u4f5c\u8fdb\u884c\u6539\u5199\u3002\u4f8b\u5982\uff1a</p> <pre><code>reg rstn ;\ninitial begin\n\u00a0 \u00a0 rstn = 1'b0 ;\n\u00a0 \u00a0 #100 ; //\u5ef6\u65f6\u64cd\u4f5c\n\u00a0 \u00a0 rstn = 1'b1 ;\nend\n</code></pre> <p>\u5411\u91cf\u5316\u591a\u4f4d\u5bbd\uff1a</p> <p>[a:b]\uff1aa\u662f\u6307\u6700\u9ad8\u4f4d\u7d22\u5f15\uff0cb\u662f\u6307\u6700\u4f4e\u4f4d\u7d22\u5f15\u3002</p> <pre><code>reg [3:0] \u00a0 \u00a0 \u00a0counter ;\u00a0\u00a0\u00a0 //\u58f0\u660e4bit\u4f4d\u5bbd\u7684\u5bc4\u5b58\u5668counter\nwire [32-1:0] \u00a0gpio_data;\u00a0\u00a0 //\u58f0\u660e32bit\u4f4d\u5bbd\u7684\u7ebf\u578b\u53d8\u91cfgpio_data\nwire [8:2]\u00a0\u00a0\u00a0\u00a0\u00a0addr ;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u58f0\u660e7bit\u4f4d\u5bbd\u7684\u7ebf\u578b\u53d8\u91cfaddr\uff0c\u4f4d\u5bbd\u8303\u56f4\u4e3a8:2\nreg [0:31]\u00a0\u00a0\u00a0\u00a0\u00a0data ;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u58f0\u660e32bit\u4f4d\u5bbd\u7684\u5bc4\u5b58\u5668\u53d8\u91cfdata, \u6700\u9ad8\u6709\u6548\u4f4d\u4e3a0\n</code></pre> <p>\u4ee5\u53ca\u4e8c\u7ef4\u5411\u91cf\u5bc4\u5b58\u5668\uff1a</p> <pre><code>reg [7:0][3:0] reg_matrix;   // 8x4\u7684\u4e8c\u7ef4\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e3a8\u4f4d\nreg [7:0]      byte1 [3:0];  //\u6548\u679c\u540c\u4e0a\n</code></pre> <p>Verilog\u652f\u6301bit\u4f4d\u540e\u56fa\u5b9a\u4f4d\u5bbd\u7684\u5411\u91cf\u57df\u9009\u62e9\u8bbf\u95ee\uff1a</p> <pre><code>//\u4e0b\u9762 2 \u79cd\u8d4b\u503c\u662f\u7b49\u6548\u7684\nA = data1[31-: 8] ;\nA = data1[31:24] ;\n\n//\u4e0b\u9762 2 \u79cd\u8d4b\u503c\u662f\u7b49\u6548\u7684\nB = data1[0+ : 8] ;\nB = data1[0:7] ;\n</code></pre>"},{"location":"Language/Verilog/#_8","title":"\u6574\u6570\u3001\u5b9e\u6570\u3001\u65f6\u95f4\u5bc4\u5b58\u5668","text":"<p>interger\u8868\u793a\u6574\u6570\u7533\u660e\uff1breal\u7533\u660e\u5b9e\u6570\uff1btime\u7533\u660e\u65f6\u95f4\uff0c\u53ef\u901a\u8fc7<code>time current_time;#100; current_time=$time</code>\u83b7\u5f97\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\uff0c\u6b64\u4ee3\u7801\u4e2d\u4e3a100\u4e2a\u65f6\u95f4\u5355\u4f4d\u3002</p>"},{"location":"Language/Verilog/#_9","title":"\u5b57\u7b26\u4e32","text":"<p>\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u5305\u542b\u56de\u8f66\u7b26,\u540c\u6837\u5982c\u8bed\u8a00\u4e2d\u7684\u2018\\n\u2019\u3002\u5982\u679c\u5bc4\u5b58\u5668\u53d8\u91cf\u7684\u5bbd\u5ea6\u5927\u4e8e\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u5219\u4f7f\u7528 0 \u6765\u586b\u5145\u5de6\u8fb9\u7684\u7a7a\u4f59\u4f4d\uff1b\u5982\u679c\u5bc4\u5b58\u5668\u53d8\u91cf\u7684\u5bbd\u5ea6\u5c0f\u4e8e\u5b57\u7b26\u4e32\u5927\u5c0f\uff0c\u5219\u4f1a\u622a\u53bb\u5b57\u7b26\u4e32\u5de6\u8fb9\u591a\u4f59\u7684\u6570\u636e\u901a\u5e38\u5b57\u7b26\u4e32\u4e00\u4e2a\u5b57\u7b26\u4e3a8bits\u3002</p> <p><code>reg [0:14*8-1] str; str=\"run.runoob.com\"</code></p> <p>Verilog\u540c\u6837\u4f7f\u7528\\\u6765\u8f6c\u4e49\u5b57\u7b26\u8868\u793a\u8f93\u51fa\u3002</p>"},{"location":"Language/Verilog/#_10","title":"\u8868\u8fbe\u5f0f","text":"<p>\u8868\u8fbe\u5f0f\u7531\u64cd\u4f5c\u7b26\u548c\u64cd\u4f5c\u6570\u7ec4\u6210\u3002</p>"},{"location":"Language/Verilog/#_11","title":"\u64cd\u4f5c\u6570","text":"<p>\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u6709\u67d0\u4e9b\u7279\u5b9a\u8bed\u6cd5\u7ed3\u6784\u4f7f\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u64cd\u4f5c\u6570\u3002</p> <pre><code>module test;\n\n//\u5b9e\u6570\nreal a, b, c;\nc = a + b ;\n\n//\u5bc4\u5b58\u5668\nreg \u00a0[3:0] \u00a0 \u00a0 \u00a0 cprmu_1, cprmu_2 ;\nbegin\n\u00a0 \u00a0 \u00a0 \u00a0 cprmu_2 = cprmu_1 ^ cprmu_2 ;\nend\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\n//\u51fd\u6570\nreg \u00a0flag1 ;\nflag = calculate_result(A, B);\n\u00a0\n//\u975e\u6cd5\u64cd\u4f5c\u6570\nreg [3:0] \u00a0 \u00a0 \u00a0 \u00a0 res;\nwire [3:0] \u00a0 \u00a0 \u00a0 \u00a0temp;\nalways@ \uff08*\uff09begin\n\u00a0 \u00a0 res \u00a0 \u00a0= cprmu_2 \u2013 cprmu_1 ;\n\u00a0 \u00a0 //temp = cprmu_2 \u2013 cprmu_1 ; //\u4e0d\u5408\u6cd5\uff0calways\u5757\u91cc\u8d4b\u503c\u5bf9\u8c61\u4e0d\u80fd\u662fwire\u578b\nend\n\nendmodule\n</code></pre>"},{"location":"Language/Verilog/#_12","title":"\u64cd\u4f5c\u7b26","text":"<p>Verilog \u4e2d\u63d0\u4f9b\u4e86\u5927\u7ea6 9 \u79cd\u64cd\u4f5c\u7b26\uff0c\u5206\u522b\u662f\u7b97\u672f\u3001\u5173\u7cfb\u3001\u7b49\u4ef7\u3001\u903b\u8f91\u3001\u6309\u4f4d\u3001\u5f52\u7ea6\u3001\u79fb\u4f4d\u3001\u62fc\u63a5\u3001\u6761\u4ef6\u64cd\u4f5c\u7b26\u3002</p> <p>\u5927\u90e8\u5206\u64cd\u4f5c\u7b26\u4e0e C \u8bed\u8a00\u4e2d\u7c7b\u4f3c\u3002\u540c\u7c7b\u578b\u64cd\u4f5c\u7b26\u4e4b\u95f4\uff0c\u9664\u6761\u4ef6\u64cd\u4f5c\u7b26\u4ece\u53f3\u5f80\u5de6\u5173\u8054\uff0c\u5176\u4f59\u64cd\u4f5c\u7b26\u90fd\u662f\u81ea\u5de6\u5411\u53f3\u5173\u8054\u3002\u5706\u62ec\u53f7\u5185\u8868\u8fbe\u5f0f\u4f18\u5148\u6267\u884c\u3002\u4f8b\u5982\u4e0b\u9762\u6bcf\u7ec4\u7684 2 \u79cd\u5199\u6cd5\u90fd\u662f\u7b49\u4ef7\u7684:</p> <pre><code>//\u81ea\u53f3\u5411\u5de6\u5173\u8054\uff0c\u4e24\u79cd\u5199\u6cd5\u7b49\u4ef7\nA+B-C ;\n(A+B\uff09-C ;\n\n//\u81ea\u53f3\u5411\u5de6\u5173\u8054\uff0c\u4e24\u79cd\u5199\u6cd5\u7b49\u4ef7\uff0c\u7ed3\u679c\u4e3a B\u3001D \u6216 F\nA ? B : C ? D : F ;\nA ? B : (C ? D : F) ;\n\n//\u81ea\u53f3\u5411\u5de6\u5173\u8054\uff0c\u4e24\u79cd\u5199\u6cd5\u4e0d\u7b49\u4ef7\n(A ? B : C) ? D : F ;  //\u7ed3\u679c D \u6216 F\nA ? B : C ? D : F ; //\u7ed3\u679c\u4e3a B\u3001D \u6216 F\n</code></pre> \u64cd\u4f5c\u7b26 \u64cd\u4f5c\u7b26\u53f7 \u4f18\u5148\u7ea7 \u5355\u76ee\u8fd0\u7b97 + - ! ~ \u6700\u9ad8 \u4e58\u3001\u9664\u3001\u53d6\u6a21 * / % \u52a0\u51cf + - \u79fb\u4f4d &lt;&lt;  &gt;&gt; \u5173\u7cfb &lt; &lt;= &gt; &gt;= \u7b49\u4ef7 == != \\(===\\) \\(!===\\)\u5168\u7b49\u64cd\u4f5c\uff1f \u5f52\u7ea6 &amp; ~&amp; ^ ~^ | ~| \u903b\u8f91 &amp;&amp; || \u6761\u4ef6 ?: \u6700\u4f4e"},{"location":"Language/Verilog/#_13","title":"\u5173\u7cfb\u64cd\u4f5c\u7b26","text":"<p>\u5173\u7cfb\u64cd\u4f5c\u7b26\u6709\u5927\u4e8e\uff08&gt;\uff09\uff0c\u5c0f\u4e8e\uff08&lt;\uff09\uff0c\u5927\u4e8e\u7b49\u4e8e\uff08&gt;=\uff09\uff0c\u5c0f\u4e8e\u7b49\u4e8e\uff08&lt;=\uff09\u3002</p> <p>\u5173\u7cfb\u64cd\u4f5c\u7b26\u7684\u6b63\u5e38\u7ed3\u679c\u6709 2 \u79cd\uff0c\u771f\uff081\uff09\u6216\u5047\uff080\uff09\u3002</p>"},{"location":"Language/Verilog/#_14","title":"\u7b97\u672f\u64cd\u4f5c\u7b26","text":"<p>\u7b97\u672f\u64cd\u4f5c\u7b26\u5305\u62ec\u5355\u76ee\u64cd\u4f5c\u7b26\u548c\u53cc\u76ee\u64cd\u4f5c\u7b26\u3002</p> <p>\u53cc\u76ee\u64cd\u4f5c\u7b26\u5bf9 2 \u4e2a\u64cd\u4f5c\u6570\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\uff0c\u5305\u62ec\u4e58\uff08\uff09\u3001\u9664\uff08/\uff09\u3001\u52a0\uff08+\uff09\u3001\u51cf\uff08-\uff09\u3001\u6c42\u5e42\uff08*\uff09\u3001\u53d6\u6a21\uff08%\uff09</p> <pre><code>reg [3:0] \u00a0a, b;\nreg [4:0] \u00a0c ;\na = 4'b0010 ;\nb = 4'b1001 ;\nc = a+b; \u00a0 \u00a0 \u00a0 \u00a0//\u7ed3\u679c\u4e3ac=b'b1011\nc = a/b; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0//\u7ed3\u679c\u4e3ac=4\uff0c\u53d6\u6574\nb = 4'b100x ;\nc = a+b ; \u00a0 \u00a0 \u00a0 //\u7ed3\u679c\u4e3ac=4'bxxxx\n</code></pre> <p>\u6570\u636e\u5982\u679c\u6ea2\u51fa\u4f1a\u88ab\u9ad8\u4f4d\u622a\u65ad\u3002</p>"},{"location":"Language/Verilog/#_15","title":"\u7b49\u4ef7\u64cd\u4f5c\u7b26","text":"<p>\u7b49\u4ef7\u64cd\u4f5c\u7b26\u5305\u62ec\u903b\u8f91\u76f8\u7b49<code>==</code>\uff0c\u903b\u8f91\u4e0d\u7b49<code>!=</code>\uff0c\u5168\u7b49<code>===</code>\uff0c\u975e\u5168\u7b49<code>!==</code>\u3002</p> <p>\u7b49\u4ef7\u64cd\u4f5c\u7b26\u7684\u6b63\u5e38\u7ed3\u679c\u6709 2 \u79cd\uff1a\u4e3a\u771f\uff081\uff09\u6216\u5047\uff080\uff09\u3002</p> <p>\u903b\u8f91\u76f8\u7b49/\u4e0d\u7b49\u64cd\u4f5c\u7b26\u4e0d\u80fd\u6bd4\u8f83 x \u6216 z\uff0c\u5f53\u64cd\u4f5c\u6570\u5305\u542b\u4e00\u4e2a x \u6216 z\uff0c\u5219\u7ed3\u679c\u4e3a\u4e0d\u786e\u5b9a\u503c\u3002</p>"},{"location":"Language/Verilog/#_16","title":"\u903b\u8f91\u64cd\u4f5c\u7b26","text":"<p>\u903b\u8f91\u64cd\u4f5c\u7b26\u4e3b\u8981\u6709 3 \u4e2a\uff1a&amp;&amp;\uff08\u903b\u8f91\u4e0e\uff09, ||\uff08\u903b\u8f91\u6216\uff09\uff0c!\uff08\u903b\u8f91\u975e\uff09\u3002</p> <p>\u903b\u8f91\u64cd\u4f5c\u7b26\u7684\u8ba1\u7b97\u7ed3\u679c\u662f\u4e00\u4e2a 1bit \u7684\u503c\uff0c0 \u8868\u793a\u5047\uff0c1 \u8868\u793a\u771f\uff0cx \u8868\u793a\u4e0d\u786e\u5b9a\u3002</p>"},{"location":"Language/Verilog/#_17","title":"\u6309\u4f4d\u64cd\u4f5c\u7b26","text":"<p>\u6309\u4f4d\u64cd\u4f5c\u7b26\u5305\u62ec\uff1a\u53d6\u53cd\uff08 ~ \uff09\uff0c\u4e0e\uff08 &amp; \uff09\uff0c\u6216\uff08 | \uff09\uff0c\u5f02\u6216\uff08^\uff09\uff0c\u540c\u6216\uff08~^\uff09\u3002</p> <p>\u6309\u4f4d\u64cd\u4f5c\u7b26\u5bf9 2 \u4e2a\u64cd\u4f5c\u6570\u7684\u6bcf 1bit \u6570\u636e\u8fdb\u884c\u6309\u4f4d\u64cd\u4f5c\u3002</p> <p>\u5982\u679c 2 \u4e2a\u64cd\u4f5c\u6570\u4f4d\u5bbd\u4e0d\u76f8\u7b49\uff0c\u5219\u7528 0 \u5411\u5de6\u6269\u5c55\u8865\u5145\u8f83\u77ed\u7684\u64cd\u4f5c\u6570\u3002</p> <p>\u53d6\u53cd\u64cd\u4f5c\u7b26\u53ea\u6709\u4e00\u4e2a\u64cd\u4f5c\u6570\uff0c\u5b83\u5bf9\u64cd\u4f5c\u6570\u7684\u6bcf 1bit \u6570\u636e\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u3002</p> <p>\u4e0b\u56fe\u7ed9\u51fa\u4e86\u6309\u4f4d\u64cd\u4f5c\u7b26\u7684\u903b\u8f91\u89c4\u5219\u3002</p> &amp;(\u4e0e\uff09 0 1 x |(\u6216) 0 1 x 0 0 0 0 0 0 1 x 1 0 1 x 1 1 1 1 x 0 x x x x 1 x ^(\u5f02\u6216) 0 1 x ~^(\u540c\u6216) 0 1 x 0 0 1 x 0 1 0 x 1 1 0 x 1 0 1 x x x x x x x x x"},{"location":"Language/Verilog/#_18","title":"\u5f52\u7ea6\u64cd\u4f5c\u7b26","text":"<p>\u5f52\u7ea6\u64cd\u4f5c\u7b26\u5305\u62ec\uff1a\u5f52\u7ea6\u4e0e\uff08&amp;\uff09\uff0c\u5f52\u7ea6\u4e0e\u975e\uff08<sub>&amp;\uff09\uff0c\u5f52\u7ea6\u6216\uff08|\uff09\uff0c\u5f52\u7ea6\u6216\u975e\uff08</sub>|\uff09\uff0c\u5f52\u7ea6\u5f02\u6216\uff08^\uff09\uff0c\u5f52\u7ea6\u540c\u6216\uff08~^\uff09\u3002</p> <p>\u5f52\u7ea6\u64cd\u4f5c\u7b26\u53ea\u6709\u4e00\u4e2a\u64cd\u4f5c\u6570\uff0c\u5b83\u5bf9\u8fd9\u4e2a\u5411\u91cf\u64cd\u4f5c\u6570\u9010\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u7ec8\u4ea7\u751f\u4e00\u4e2a 1bit \u7ed3\u679c\u3002</p> <p>\u903b\u8f91\u64cd\u4f5c\u7b26\u3001\u6309\u4f4d\u64cd\u4f5c\u7b26\u548c\u5f52\u7ea6\u64cd\u4f5c\u7b26\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u7b26\u53f7\u8868\u793a\uff0c\u56e0\u6b64\u6709\u65f6\u5019\u5bb9\u6613\u6df7\u6dc6\u3002\u533a\u5206\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u7684\u5173\u952e\u662f\u5206\u6e05\u64cd\u4f5c\u6570\u7684\u6570\u76ee\uff0c\u548c\u8ba1\u7b97\u7ed3\u679c\u7684\u89c4\u5219\u3002</p> <pre><code>A = 4'b1010 ;\n&amp;A ;      //\u7ed3\u679c\u4e3a 1 &amp; 0 &amp; 1 &amp; 0 = 1'b0\uff0c\u53ef\u7528\u6765\u5224\u65ad\u53d8\u91cfA\u662f\u5426\u51681\n~|A ;     //\u7ed3\u679c\u4e3a ~(1 | 0 | 1 | 0) = 1'b0, \u53ef\u7528\u6765\u5224\u65ad\u53d8\u91cfA\u662f\u5426\u4e3a\u51680\n^A ;      //\u7ed3\u679c\u4e3a 1 ^ 0 ^ 1 ^ 0 = 1'b0\n</code></pre>"},{"location":"Language/Verilog/#_19","title":"\u79fb\u4f4d\u64cd\u4f5c\u7b26","text":"<p>\u79fb\u4f4d\u64cd\u4f5c\u7b26\u5305\u62ec\u5de6\u79fb\uff08&lt;&lt;\uff09\uff0c\u53f3\u79fb\uff08&gt;&gt;\uff09\uff0c\u7b97\u672f\u5de6\u79fb\uff08&lt;&lt;&lt;\uff09\uff0c\u7b97\u672f\u53f3\u79fb\uff08&gt;&gt;&gt;\uff09\u3002</p> <p>\u79fb\u4f4d\u64cd\u4f5c\u7b26\u662f\u53cc\u76ee\u64cd\u4f5c\u7b26\uff0c\u4e24\u4e2a\u64cd\u4f5c\u6570\u5206\u522b\u8868\u793a\u8981\u8fdb\u884c\u79fb\u4f4d\u7684\u5411\u91cf\u4fe1\u53f7\uff08\u64cd\u4f5c\u7b26\u5de6\u4fa7\uff09\u4e0e\u79fb\u52a8\u7684\u4f4d\u6570\uff08\u64cd\u4f5c\u7b26\u53f3\u4fa7\uff09\u3002</p> <p>\u7b97\u672f\u5de6\u79fb\u548c\u903b\u8f91\u5de6\u79fb\u65f6\uff0c\u53f3\u8fb9\u4f4e\u4f4d\u4f1a\u8865 0\u3002</p> <p>\u903b\u8f91\u53f3\u79fb\u65f6\uff0c\u5de6\u8fb9\u9ad8\u4f4d\u4f1a\u8865 0\uff1b\u800c\u7b97\u672f\u53f3\u79fb\u65f6\uff0c\u5de6\u8fb9\u9ad8\u4f4d\u4f1a\u8865\u5145\u7b26\u53f7\u4f4d\uff0c\u4ee5\u4fdd\u8bc1\u6570\u636e\u7f29\u5c0f\u540e\u503c\u7684\u6b63\u786e\u6027\u3002</p> <pre><code>A = 4'b1100 ;\nB = 4'b0010 ;\nA = A &gt;&gt; 2 ;     *//\u7ed3\u679c\u4e3a 4'b0011*\nA = A &lt;&lt; 1;     *//\u7ed3\u679c\u4e3a 4'b1000*\nA = A &lt;&lt;&lt; 1 ;    *//\u7ed3\u679c\u4e3a 4'b1000*\nC = B + (A&gt;&gt;&gt;2);   *//\u7ed3\u679c\u4e3a 2 + (-4/4) = 1, 4'b0001*\n</code></pre>"},{"location":"Language/Verilog/#_20","title":"\u62fc\u63a5\u64cd\u4f5c\u7b26","text":"<p>\u62fc\u63a5\u64cd\u4f5c\u7b26\u7528\u5927\u62ec\u53f7 {\uff0c} \u6765\u8868\u793a\uff0c\u7528\u4e8e\u5c06\u591a\u4e2a\u64cd\u4f5c\u6570\uff08\u5411\u91cf\uff09\u62fc\u63a5\u6210\u65b0\u7684\u64cd\u4f5c\u6570\uff08\u5411\u91cf\uff09\uff0c\u4fe1\u53f7\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002</p> <p>\u62fc\u63a5\u7b26\u64cd\u4f5c\u6570\u5fc5\u987b\u6307\u5b9a\u4f4d\u5bbd\uff0c\u5e38\u6570\u7684\u8bdd\u4e5f\u9700\u8981\u6307\u5b9a\u4f4d\u5bbd\u3002\u4f8b\u5982\uff1a</p> <pre><code>A = 4'b1010 ;\nB = 1'b1 ;\nY1 = {B, A[3:2], A[0], 4'h3 }; *//\u7ed3\u679c\u4e3aY1='b1100_0011*\nY2 = {4{B}, 3'd4}; *//\u7ed3\u679c\u4e3a Y2=7'b111_1100*\nY3 = {32{1'b0}}; *//\u7ed3\u679c\u4e3a Y3=32h0\uff0c\u5e38\u7528\u4f5c\u5bc4\u5b58\u5668\u521d\u59cb\u5316\u65f6\u5339\u914d\u4f4d\u5bbd\u7684\u8d4b\u521d\u503c\n</code></pre>"},{"location":"Language/Verilog/#_21","title":"\u6761\u4ef6\u64cd\u4f5c\u7b26","text":"<p>\u6761\u4ef6\u8868\u8fbe\u5f0f\u6709 3 \u4e2a\u64cd\u4f5c\u7b26\uff0c\u7ed3\u6784\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <pre><code>condition_expression ? true_expression : false_expression\n</code></pre> <p>\u8ba1\u7b97\u65f6\uff0c\u5982\u679c condition_expression \u4e3a\u771f\uff08\u903b\u8f91\u503c\u4e3a 1\uff09\uff0c\u5219\u8fd0\u7b97\u7ed3\u679c\u4e3a true_expression\uff1b\u5982\u679c condition_expression \u4e3a\u5047\uff08\u903b\u8f91\u503c\u4e3a 0\uff09\uff0c\u5219\u8ba1\u7b97\u7ed3\u679c\u4e3a false_expression\u3002</p> <pre><code>assign hsel    = (addr[9:8] == 2'b0) ? hsel_p1 : hsel_p2 ;\n//\u5f53\u4fe1\u53f7 addr \u9ad8 2bit \u4e3a 0 \u65f6\uff0chsel \u8d4b\u503c\u4e3a hsel_p1; \u5426\u5219\uff0c\u5c06 hsel_p2 \u8d4b\u503c\u7ed9 hsel\u3002\n</code></pre> <p>\u5176\u5b9e\uff0c\u6761\u4ef6\u8868\u8fbe\u5f0f\u7c7b\u4f3c\u4e8e 2 \u8def\uff08\u6216\u591a\u8def\uff09\u9009\u62e9\u5668\uff0c\u5176\u63cf\u8ff0\u65b9\u5f0f\u5b8c\u5168\u53ef\u4ee5\u7528 if-else \u8bed\u53e5\u4ee3\u66ff\u3002</p> <p>\u5f53\u7136\u6761\u4ef6\u64cd\u4f5c\u7b26\u4e5f\u80fd\u8fdb\u884c\u5d4c\u5957\uff0c\u5b8c\u6210\u4e00\u4e2a\u591a\u6b21\u9009\u62e9\u7684\u903b\u8f91\u3002\u4f8b\u5982\uff1a</p> <pre><code>assign  hsel = (addr[9:8] == 2'b00) ? hsel_p1 :\n        (addr[9:8] == 2'b01) ? hsel_p2 :\n        (addr[9:8] == 2'b10) ? hsel_p3 :\n        (addr[9:8] == 2'b11) ? hsel_p4 ;\n</code></pre>"},{"location":"Language/Verilog/#_22","title":"\u7f16\u8bd1\u547d\u4ee4","text":"<p>C\u8bed\u8a00\u4e2d\u7684#\u90fd\u88ab`\u6240\u66ff\u6362\uff08define typdef</p> <p><code>`timescale</code>\uff1a\u5728 Verilog \u6a21\u578b\u4e2d\uff0c\u65f6\u5ef6\u6709\u5177\u4f53\u7684\u5355\u4f4d\u65f6\u95f4\u8868\u8ff0\uff0c\u5e76\u7528 <code>``timescale</code>\u7f16\u8bd1\u6307\u4ee4\u5c06\u65f6\u95f4\u5355\u4f4d\u4e0e\u5b9e\u9645\u65f6\u95f4\u76f8\u5173\u8054\u3002\u8be5\u6307\u4ee4\u7528\u4e8e\u5b9a\u4e49\u65f6\u5ef6\u3001\u4eff\u771f\u7684\u5355\u4f4d\u548c\u7cbe\u5ea6\uff0c\u683c\u5f0f\u4e3a\uff1a</p> <p><code>timescale      time_unit / time_precision</code></p> <p>\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c<code>timescale** \u6307\u4ee4\u4f1a\u5f71\u54cd\u540e\u9762\u6240\u6709\u6a21\u5757\u4e2d\u7684\u65f6\u5ef6\u503c\uff0c\u76f4\u81f3\u9047\u5230\u53e6\u4e00\u4e2a **</code>timescale \u6307\u4ee4\u6216 `resetall \u6307\u4ee4\u3002</p> <p>\u7531\u4e8e\u5728 Verilog \u4e2d\u6ca1\u6709\u9ed8\u8ba4\u7684 <code>timescale**\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a **</code>timescale\uff0cVerilog \u6a21\u5757\u5c31\u6709\u4f1a\u7ee7\u627f\u524d\u9762\u7f16\u8bd1\u6a21\u5757\u7684 `timescale \u53c2\u6570\u3002\u6709\u53ef\u80fd\u5bfc\u81f4\u8bbe\u8ba1\u51fa\u9519\u3002</p>"},{"location":"Missing%20semester/","title":"Index","text":""},{"location":"Missing%20semester/#_1","title":"\u672c\u7ae0\u7b80\u4ecb","text":"<p>\u8fd9\u91cc\u662f\u7c7b\u4f3c\u4e8eMIT\u7684<code>missing semester</code>\uff0c\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u8ba1\u7b97\u673a\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4f1a\u7528\u5230\u7684\u4e00\u4e9b\u5de5\u5177\u3002</p>"},{"location":"Missing%20semester/copilot/","title":"Github Copilot","text":"<p>\u6458\u8981</p> <p>\u4e2a\u4eba\u8ba4\u4e3aAI\u7b97\u662f21\u4e16\u7eaa\u7684\u4e00\u4e2a\u798f\u7949\u4e86\uff0c\u5ba2\u89c2\u6765\u8bf4\u6211\u4eec\u6709\u5f88\u591a\u6ca1\u6709\u610f\u4e49\u7684\u6587\u7ae0\u6216\u8005\u6587\u5b57\u9700\u8981\u7f16\u5199\u3002\u4e8e\u6b64\u540c\u65f6\uff0cAI\u4e5f\u80fd\u6210\u4e3a\u4e00\u4e2a\u975e\u5e38\u8010\u5fc3\u7684\u8001\u5e08\u6307\u5bfc\u4f60\u7f16\u7a0b\u3002\u5f53\u7136\u5b66\u751f\u8ba4\u8bc1\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528AI\u7f16\u7a0b\u5de5\u5177Github Copilot\u3002\u8fd9\u91cc\u5c31\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u6ce8\u518c\u3002</p> <p>Attention\uff1a AI\u4e0d\u662f\u4e07\u80fd\u7684\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u5b83\u7684\u8f93\u51fa\u9700\u8981\u4f60\u81ea\u5df1\u53bb\u5224\u65ad\u662f\u5426\u6b63\u786e\u3002\u4f60\u7684\u91cd\u8981\u4ee3\u7801\u4e5f\u8bf7\u4e0d\u8981\u901a\u8fc7copilot\u7f16\u5199\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u6cc4\u9732\u4f60\u7684\u4ee3\u7801\uff01</p> <ul> <li>Github Copilot</li> <li>Github Copilot\u6ce8\u518c\u77e5\u4e4e\u6559\u7a0b</li> </ul>"},{"location":"Missing%20semester/copilot/#1","title":"1. \u6ce8\u518c","text":"<ol> <li>\u4e2a\u4eba\u8ba4\u4e3a\u65e0\u8bba\u9605\u8bfb\u4efb\u4f55\u4e00\u4e2a\u535a\u4e3b\u7684\u6559\u7a0b,\u4f60\u90fd\u9700\u8981\u7ed3\u5408\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u6765\u505a\u7684</li> <li>\u6211\u662f\u7ed3\u5408\u4e0a\u65b9\u77e5\u4e4e\u7684\u6559\u7a0b\u8ba4\u8bc1\u7684,\u6545\u5e95\u4e0b\u53ea\u662f\u4e00\u4e2a\u7b80\u77ed\u7684\u6307\u5f15.</li> </ol> <ol> <li>\u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2aGitHub\u8d26\u53f7\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u7684\u8bdd\u53ef\u4ee5\u53bb\u6ce8\u518c\u4e00\u4e2a\u3002(\u521a\u6ce8\u518c\u5b8c\u7684\u7528\u6237\u597d\u50cf\u5f97\u7b49\u51e0\u5929\u624d\u80fd\u7533\u8bf7)</li> <li>\u7136\u540e\u4f60\u9700\u8981\u4e00\u4e2a\u5b66\u751f\u8ba4\u8bc1\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b66\u6821\u90ae\u7bb1\u8ba4\u8bc1\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b66\u751f\u8bc1\u8ba4\u8bc1\u3002\u5982\u679c\u4f60\u662f\u56fd\u5185\u7684\u8bdd\uff0c\u5efa\u8bae\u4f60\u4f7f\u7528\u5b66\u751f\u8bc1\u8ba4\u8bc1\uff0c\u56e0\u4e3a\u56fd\u5185\u7684\u5b66\u6821\u90ae\u7bb1\u5f88\u591a\u90fd\u662f\u4e0d\u652f\u6301\u7684\u3002</li> <li>\u6211\u524d\u4e24\u6b21\u90fd\u6ca1\u6709\u901a\u8fc7, \u6700\u540e\u5c06\u5b66\u4fe1\u7f51\u4e0a\u7684\u62a5\u544a\u7ffb\u8bd1\u6210\u82f1\u6587(\u6ce8\u610f\u53ef\u4ee5\u6dfb\u52a0remote study),\u5373\u53ef\u901a\u8fc7</li> <li>\u5927\u6982\u7b49\u4e2a\u4e09\u56db\u5929\u7684\u65f6\u95f4\u4f60\u4f1a\u6536\u5230\u8ba4\u8bc1\u6210\u529f\u7684\u90ae\u7bb1\u6d88\u606f,\u7136\u540e\u6253\u5f00github plans and usage\u53bbenable \u4f60\u7684copilot\u5c31\u597d\u5566!</li> </ol>"},{"location":"Missing%20semester/copilot/#2","title":"2. \u4f7f\u7528\u6280\u5de7","text":"<ol> <li>\u4f60\u53ef\u4ee5\u81ea\u884c\u7f16\u5199\u6ce8\u91ca\uff0c\u5b83\u4f1a\u6839\u636e\u4f60\u7684\u6ce8\u91ca\u751f\u6210\u4ee3\u7801\u3002</li> <li>\u4f60\u53ef\u4ee5\u7f16\u5199markdown\u6587\u4ef6\u65f6\u8c03\u7528copilot\uff0c\u4ed6\u771f\u7684\u76f8\u5f53\u667a\u80fd\uff08\u6bd4\u5982\u6211\u7f16\u5199\u79bb\u6563\u8d44\u6599\u7684\u65f6\u5019\u5b83\u4f1a50%\u4ee5\u4e0a\u7684\u5185\u5bb9\u90fd\u53ef\u4ee5\u63a8\u65ad\u6b63\u786e\uff0c\u5927\u5e45\u5ea6\u52a0\u5feb\u4f60\u7684\u6548\u7387\uff09\u3002\u5f53\u7136\u4e00\u4e9b\u65e0\u610f\u4e49\u7684\u5b9e\u9a8c\u62a5\u544a\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7f16\u5199\u3002</li> <li>\u6b64\u5916\u4f60\u53ef\u4ee5\u4e0b\u8f7dGitHub copilot chat\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5f53\u4f5c\u4e00\u4e2agpt\u6765\u4f7f\u7528\u3002\u540c\u65f6\u4e00\u4e2a\u5c0f\u6280\u5de7\u5c31\u662f\u4f60\u53ef\u4ee5\u6dfb\u52a0 <code>@workspace</code>, \u5b83\u4f1a\u5bfc\u5165\u4f60\u6574\u4e2a\u9879\u76ee\u4f5c\u4e3a\u53c2\u8003\u8d44\u6599</li> <li>\u4e8e\u6b64\u540c\u65f6\uff0c\u5982\u679c\u4f60\u4f7f\u7528vscode\uff0c\u76f8\u4fe1\u4f60\u4e00\u5b9a\u662f\u4f1a\u4f7f\u7528terminal\u7684\u3002\u5f53\u4f60\u7684terminal\u51fa\u73b0\u62a5\u9519\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u5de6\u8fb9\u7684\u661f\u661f\uff0c\u4ed6\u4f1a\u5e2e\u4f60\u5206\u6790\u95ee\u9898\u3002</li> <li>\u52fe\u9009\u4ee3\u7801\u5e76\u6309\u4e0b<code>ctrl+I</code>\uff0c\u8f93\u5165<code>/doc</code>\u5b83\u4f1a\u5e2e\u4f60\u81ea\u52a8\u6dfb\u52a0\u6ce8\u91ca\u3002</li> </ol>"},{"location":"Missing%20semester/toolbox/","title":"\u5de5\u5177\u7bb1\uff08\u4e00\u4e9b\u597d\u7528\u7684\u7f51\u7ad9or\u5206\u4eab\uff09","text":""},{"location":"Missing%20semester/toolbox/#_1","title":"\u5b66\u4e60\u7f51\u7ad9","text":"<ol> <li>CS\u81ea\u5b66\u6307\u5357</li> <li>\u4e00\u4e2a\u67e5\u627e\u624b\u518c</li> <li>\u4e00\u4e2a\u597d\u7528\u7684ChatGPT\u7f51\u7ad9</li> <li>\u540d\u6821\u516c\u5f00\u8bfe\u7a0b\u8bc4\u4ef7\u7f51\u7ad9 </li> <li>LaTex\u6587\u6863\u5206\u4eab</li> <li>\u7535\u5b50\u4e66\u7f51\u7ad9</li> <li>\u5173\u4e8eckc\u4ee5\u53cazju\u7684\u4e00\u4e9b\u8bfe\u7a0b\u8bc4\u4ef7\uff08\u6765\u81eawkx\u5b66\u957f\uff09</li> <li>\u4e00\u4e2a\u5fc5\u987b\u63a8\u8350\u7684\u535a\u4e3b3b1b\uff01\uff01\uff01\uff08\u771f\u7684\u53ef\u89c6\u5316\u6559\u5b66\u975e\u5e38\u975e\u5e38\u597d</li> <li>Git\u56fe\u5f62\u5316\u5b66\u4e60</li> <li>The Algorithm</li> <li>Algorithm &amp; datastructure</li> </ol>"},{"location":"Missing%20semester/toolbox/#_2","title":"\u79d1\u7814","text":"<ol> <li>\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60</li> <li>\u6982\u7387\u8bba\u53ef\u89c6\u5316</li> <li>Pytorch chinese version</li> <li>Paper with code</li> <li>paper weekly</li> <li>CCF-deadline</li> <li>Introduction to MLsys</li> <li>\u8bba\u6587AI</li> <li>latex\u8bc6\u522b</li> </ol>"},{"location":"Missing%20semester/toolbox/#_3","title":"\u7f16\u7a0b","text":"<ol> <li>snippet</li> </ol>"},{"location":"Missing%20semester/Docker/","title":"Docker \u7684\u4f7f\u7528","text":""},{"location":"Missing%20semester/Ladder/","title":"\u5899","text":"<p>\u5982\u679c\u4f60\u80fd\u770b\u5230\u8fd9\u91cc\uff0c\u8bf4\u660e\u4f60\u4e5f\u6df1\u77e5\u5229\u5bb3\u4ee5\u53ca\u91cd\u8981\u6027\u4e86\u3002\u4e3e\u4e00\u4e2a\u6211\u81ea\u8eab\u7684\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u5f53\u6211\u5927\u4e00\u5bd2\u5047\u60f3\u8981\u5728WSL\u4e0a\u914d\u5236TexLive\u7684\u73af\u5883\u7684\u65f6\u5019\uff0c\u6211\u914d\u7f6e\u4e86\u6574\u6574\u4e09\u5929\uff0c\u53ef\u7531\u4e8e\u5404\u79cd\u539f\u56e0\u5e76\u6ca1\u6709\u914d\u7f6e\u6210\u529f\u3002\u53ef\u5f53\u6211\u5047\u671f\u56de\u53bb\u62e5\u6709ladder\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u5916\u9762\u7684\u4e16\u754c\u662f\u5168\u65b0\u7684\u3002Goggle\u7684\u597d\u5904\u8c01\u7528\u8c01\u77e5\u9053\uff08\u6ce8\u610f\u6700\u597d\u82f1\u6587\u641c\u7d22\uff09</p>"},{"location":"Missing%20semester/Ladder/#_2","title":"\u8f6f\u4ef6\u9009\u62e9","text":"<p>\u7531\u4e8e\u6211\u81ea\u5df1\u4e5f\u6ca1\u6709\u8fc7\u591a\u7684\u6bd4\u8f83\u8fc7\uff0c\u6211\u53ea\u8bb0\u5f55\u4e00\u4e9b\u6211\u89c1\u5230\u6216\u8005\u4f7f\u7528\u7684\u3002</p> <p>\u6709\u4e00\u4e2a\u6bd4\u8f83\u957f\u7684\u522b\u7684\u535a\u4e3b\u5199\u7684\u94fe\u63a5\uff0c\u53ef\u4ee5\u53c2\u8003\u3002</p>"},{"location":"Missing%20semester/Ladder/#_3","title":"\u8ff7\u96fe\u901a","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u6211\u820d\u53cb\u63a8\u8350\u77e5\u9053\u7684\u3002\u597d\u5904\u5c31\u662f\u514d\u8d39\uff0c\u574f\u5904\u5c31\u662f\u7f51\u901f\u5f88\u6162\u65e0\u6cd5\u770b\u89c6\u9891\uff08\u4f46\u8c01\u8ba9\u4ed6\u514d\u8d39\u5462\uff1f\uff09\u5982\u679c\u4f60\u6ca1\u6709\u522b\u7684\u592a\u591a\u9700\u6c42\u53ea\u662f\u7b80\u5355\u7684\u641c\u7d22\u4ee5\u53cachatgpt\u7684\u8bdd\uff0c\u8bf7\u4f7f\u7528\u5b83\uff01\u94fe\u63a5</p>"},{"location":"Missing%20semester/Ladder/#clash_glados","title":"Clash + Glados","text":"<p>Clash\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u673a\u573a\u8f6f\u4ef6\u4e86\u3002\u800cGlados\u662f\u522b\u4eba\u7ed9\u6211\u63a8\u8350\u7684\uff0c\u597d\u5904\u5c31\u662f\u5927\u578b\u7a33\u5b9a\u4e14\u4ef7\u683c\u5b9e\u60e0\uff08\u5982\u679c\u4f60\u6709edu\u90ae\u7bb1\u751a\u81f3\u53ef\u4ee5\u514d\u8d39\u7528\u4e00\u5e74\uff0c\u6559\u80b2\u4f18\u60e0\uff09\u3002\u81f3\u4e8e\u673a\u573a\u4e0eVPN\u7684\u533a\u522b\u6709\u5f85\u63a2\u7d22\u3002</p> <p>\u4f46\u8fd9\u4e2a\u7684\u95ee\u9898\u5728\u4e8eGlados\u7684\u5b98\u7f51\u662f\u9700\u8981\u5916\u7f51\u624d\u80fd\u767b\u5f55\u7684\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u5148\u4e0b\u4e2a\u8ff7\u96fe\u901a\u518d\u4f7f\u7528\u672c\u65b9\u6848\u3002</p> <p>Glados\u7684\u65b9\u6848\u662f\u4e00\u59290.5\u5143\uff0c\u4e00\u4e2a\u6708200G\uff08\u53ef\u4ee5\u770b\u4e00\u4e9b\u7f51\u8bfe\u89c6\u9891\uff0c\u6216\u8005\u662fYoutube\u7b49\u7b49\uff09\uff0c\u7f51\u901f\u7b97\u662f\u6bd4\u8f83\u7a33\u5b9a\u7684\u3002\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u3002\u4f60\u5145\u503c\u6216\u8005\u6559\u80b2\u4f18\u60e0\u6fc0\u6d3b\u540e\u4f1a\u83b7\u5f97\u4e00\u4e2aURL\uff0c\u4f60\u5c06URL\u590d\u5236\u5230Clash\u7684Profile\u5f53\u4e2d\u5373\u53ef\u3002</p> <p>\u94fe\u63a5\uff1aClash\u4e0b\u8f7d\u5b98\u7f51</p>"},{"location":"Missing%20semester/Ladder/#_4","title":"\u6ce1\u8299\u4e91","text":"<p>\u94fe\u63a5 \u8fd9\u4e2a\u4e5f\u662f\u6211\u53e6\u4e00\u4e2a\u540c\u5b66\u5728\u7528\u7684\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u3002</p>"},{"location":"Missing%20semester/Ladder/#_5","title":"\u624b\u673a\u7aef","text":"<p>\u56e0\u4e3a\u6211\u4e00\u76f4\u662fios\u7528\u6237\uff0c\u5982\u679c\u4f60\u4e5f\u662f\u7684\u8bdd\u53ef\u4ee5\u8003\u8651\u641e\u4e00\u4e2a\u56fd\u5916\u7684\u82f9\u679cid\u8d26\u53f7\u4e0b\u8f7d<code>shadowrockect</code>\u3002\uff08\u8f6f\u4ef6\u5927\u6982\u9700\u898120\u5143\u5de6\u53f3\uff09\uff0c\u7136\u540e\u4f60\u4fbf\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002</p>"},{"location":"Missing%20semester/Latex/","title":"Latex","text":"<p>\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u6392\u7248\u7684\u8bed\u8a00\uff0c\u4e13\u4e1a\u8bba\u6587\u5927\u591a\u662f\u7531\u5b83\u7f16\u5199\u5b8c\u6210\u7684\uff0c\u5176\u4e2d\u4e00\u4e9b\u6570\u5b66\u8bed\u6cd5\u4e5f\u53ef\u4ee5\u5d4c\u5957\u5728markdown\u4e2d\u4f7f\u7528\u3002</p> <p>\u7b14\u8bb0</p> note <p>\u4e00\u4e2a\u535a\u4e3b\u7684\u7b80\u660e\u7b14\u8bb0  \u4ee5\u53ca\u672c\u5730\u6709\u4e2a\u6587\u6863</p> Tips <ol> <li>latex\u5199\u4f5c\u6280\u5de7</li> <li>latex\u8bba\u6587\u5199\u4f5c\u6307\u5357</li> </ol> tool <ol> <li>overleaf</li> <li>latex\u8bc6\u522b</li> </ol>"},{"location":"Missing%20semester/Linux/","title":"\u4e00\u4e9b\u7b80\u5355\u7684Linux\u4f7f\u7528","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5728github\u4e0a\u8d85100k star\u7684\u6559\u7a0b</p> <p>\u6709\u65f6\u95f4\u5efa\u8bae\u53cd\u590d\u9605\u8bfb</p>"},{"location":"Missing%20semester/Linux/#_1","title":"\u73af\u5883","text":"<ol> <li>\u4f60\u53ef\u4ee5\u9009\u62e9\u865a\u62df\u673a\u6765\u4f7f\u7528(\u5efa\u8bae\u4f7f\u7528VMware Station\uff1b\u53ef\u4ee5\u4f7f\u7528Ubuntu\uff1b \u8bb0\u5f97\u6700\u597d\u66f4\u6362\u4e0b\u4e0b\u8f7d\u6e90\uff0c\u53ef\u4ee5\u662fzuj_mirrorsor\u6e05\u534e\u6e90)</li> <li>\u6216\u8005\u4f7f\u7528WSL\u6765\u64cd\u4f5c</li> </ol>"},{"location":"Missing%20semester/Linux/#_2","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5173\u4e8eLinux\u7684\u5b66\u4e60\uff0c\u9996\u5148\u5173\u4e8e\u4e66\u7c4d\uff0c\u6211\u63a8\u8350\u4e00\u672cLinux\u7a0b\u5e8f\u8bbe\u8ba1\uff08\u6682\u672a\u627e\u5230\u7535\u5b50\u4e66\uff09\u3002\u8fd9\u672c\u6bd4\u8f83\u6982\u62ec\u6027\u7684\u8bb2\u5230\u4e86\u4f60\u6240\u9700\u8981\u5b66\u4e60\u7684\u5927\u591a\u6570linux\u7684\u77e5\u8bc6\u3002\u6709\u793a\u4f8b\uff0c\u6bd4\u8f83\u5165\u95e8\uff0c\u5927\u6982\u4e24\u4e09\u5929\u5c31\u53ef\u4ee5\u6709\u4e2a\u521d\u6b65\u7684\u5b66\u4e60\uff0c\u4f46\u662f\u5341\u5206\u6d45\u5c1d\u8f84\u6b62\u3002</p> <p>\u8fdb\u9636\u4e00\u70b9\u7684\u4e66\u7c4d\u7684\u8bdd\u63a8\u8350linux\u5c31\u8be5\u8fd9\u6837\u5b66\u548c\u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc</p>"},{"location":"Missing%20semester/Linux/#_3","title":"\u4e00\u4e9b\u4e9b\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li><code>man + \u5e26\u67e5\u8be2\u5185\u5bb9</code>\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u67e5\u8be2\u624b\u518c\u3002\uff08\u4e0d\u5149\u662f\u4e00\u4e9b\u547d\u4ee4\uff0c\u8fd8\u6709\u4e00\u4e9bc\u8bed\u8a00\u7684\u4e1c\u897f\uff09</li> <li><code>info</code>\u5728\u7ebf\u6587\u6863\u7cfb\u7edf\u3002\uff08\u57fa\u7840\u64cd\u4f5c\uff1a \u7528shift+h\u5524\u9192\u5e2e\u52a9\u3002space \u548c ctrl+h\u53ef\u4ee5\u4e0a\u4e0b\u7ffb\u9875\u7b49\u7b49\uff09</li> <li>\u6587\u4ef6\u7cfb\u7edf\u662f\u5728<code>/</code>\u76ee\u5f55\u4e0b\u7684\uff0c\u8fdb\u5165\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u8fdb\u5165<code>/home/user</code>\u3002</li> <li><code>apt \u6216 brew</code>\u662fUbuntu\u548cMacOS\u4e0b\u7684\u5305\u7ba1\u7406\u5668\uff0c\u7528\u6765\u4e0b\u8f7d\u548c\u5b89\u88c5</li> <li>\u6709\u4e00\u4e9b\u7528\u6237\u4e0a\u7684\u64cd\u4f5c\u6211\u4eec\u4e4b\u540e\u8865\u5145\u3002</li> <li><code>alias</code>\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6587\u4ef6\u64cd\u4f5c\u7684\u522b\u79f0\u3002</li> <li>\u4e0b\u8f7d\u8f6f\u4ef6\uff08tar\u538b\u7f29\u5305\u7248\uff09\uff08snap\u6216\u8005\u5e94\u7528\u5546\u5e97\uff09(<code>cur</code>l \u6216\u8005 <code>wget</code>)</li> <li>su\u7528\u6237\u4f1a\u662f'#';\u666e\u901a\u7528\u6237\u662f'$'</li> </ul>"},{"location":"Missing%20semester/Linux/#_4","title":"\u6587\u4ef6\u64cd\u4f5c","text":"<ul> <li>\u6d89\u53ca\u5230\u76ee\u5f55\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u4f1a\u7528<code>ls</code>\u6765\u663e\u793a\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u3002\uff08-a\u663e\u793a\u6240\u6709\uff1b-l \u4e3a\u957f\u683c\u5f0f\u663e\u793a\uff0c\u53ef\u53e0\u52a0\u4f7f\u7528\uff0c\u5982\uff1a<code>ls -hla</code>\uff09</li> <li>\u7528<code>mkdir</code>\u521b\u5efa\u6587\u4ef6\u5939\uff08\u7528 -m \u8bbe\u7f6e\u53c2\u6570\uff0c\u4f8b\u5982\uff1a<code>mkdir -m 777 tsk</code>,777\u8868\u793a\u6240\u6709\u7684\u7528\u6237\u6597\u9c7crwx\u7684\u6743\u9650\uff09</li> <li><code>chmod</code>\u53ef\u4ee5\u7528\u6765\u66f4\u6539\u6743\u9650\u3002\uff08r\u4ee3\u8868read\uff0cw\u4ee3\u8868write\uff0cx\u4ee3\u8868\u53ef\u6267\u884c\uff09<code>chgrp</code>\u7528\u6765\u66f4\u6539\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u5c5e\u7ec4\u3002</li> <li><code>rmdir</code>\u662f\u5220\u9664\u6587\u4ef6\u5939\u3002\u6216\u8005<code>rm</code>\uff08\u7528-r\u53ef\u4ee5\u5220\u9664\u975e\u7a7a\u6587\u4ef6\u5939\uff09</li> <li><code>cd</code>\u5207\u6362\u76ee\u5f55\uff08<code>..</code>\u662f\u4e0a\u4e00\u7ea7\u76ee\u5f55\uff0c\u6216\u8005\u76f4\u63a5\u4ece<code>/</code>\u76ee\u5f55\u5f00\u59cb\u7684\u7edd\u5bf9\u8def\u5f84\u53bb\u64cd\u4f5c\uff09</li> <li><code>gedit</code>\u6216\u8005<code>vim</code>\u662f\u4e24\u79cd\u6587\u672c\u7f16\u8f91\u5668\u3002\u7b2c\u4e00\u79cd\u53ef\u4ee5\u53ef\u89c6\u5316\uff0c\u7b2c\u4e8c\u4e2a\u4f1a\u6709\u8bb8\u591a\u5feb\u6377\u952e\u64cd\u4f5c\u3002vim\u7684\u64cd\u4f5c\u4f1a\u5728\u53e6\u4e00\u4e2a\u6587\u4ef6\u8bb0\u5f55\u3002</li> <li><code>mv</code> \u4ee3\u8868\u4e3a\u6587\u4ef6\u6478\u7740\u76ee\u5f55\u6539\u540d\u3002\u6216\u8005\u5c06\u6587\u4ef6\u79fb\u52a8\u4f4d\u7f6e\u3002\uff08\u7c7b\u4f3cctrl+x\uff09\uff08<code>*</code>\u53ef\u4ee5\u4ee3\u8868\u7740\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u4e1c\u897f\uff0c\u6216\u8005<code>*.c</code>\u610f\u5473\u7740\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6240\u6709.c\u6587\u4ef6</li> <li><code>cp</code>\u662f\u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u590d\u5236\u5230\u5176\u4ed6\u76ee\u5f55\u4e0b\u9762  </li> <li><code>grep anon *.conf</code>\u4ee3\u8868\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\uff0c\u6240\u6709.conf\u6587\u4ef6\u4e2d\u641c\u7d22anon\u5b57\u7b26\u4e32\u7684\u4e1c\u897f\u3002</li> <li><code>find / -name hello.c</code>\u5728\u6240\u6709\u76ee\u5f55\u4e0b\u5bfb\u627e\u540d\u5b57\u662fhello.c\u7684\u6587\u4ef6\u3002</li> <li><code>head  tail</code>\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u6587\u4ef6\u7684\u5934\u548c\u5c3e\u90e8\u7684\u5185\u5bb9</li> <li><code>wc</code>\u7528\u6765\u7edf\u8ba1\u6587\u4ef6\u884c\u6570\u5355\u8bcd\u6570\u7b49\uff08\u5982-m\u5b57\u7b26\u6570\uff0c-l\u6587\u4ef6\u884c\u6570\uff09</li> <li><code>gzip</code>\u538b\u7f29\uff08-d\u662f\u89e3\u538b\u7f29\uff09\uff08\u6ce8\u610f\uff01\uff1agzip\u538b\u7f29\u6587\u4ef6\u540e\u6e90\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09</li> <li><code>tar</code>\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u7528\u7684\u547d\u4ee4\uff0c\u7528\u6765\u6253\u5305\u6587\u4ef6\uff0c\u51e0\u4e4e\u53ef\u4ee5\u5de5\u4f5c\u4e8e\u4efb\u4f55\u73af\u5883\u3002</li> </ul> <p>\uff08\u7b80\u5355\u7684\u547d\u4ee4<code>tar -cvf home.tar ./home</code>\u628a\u6839\u76ee\u5f55\u4e0b\u7684home\u6587\u4ef6\u5939\u6253\u5305\u6210home.tar\uff1b<code>-xvf</code>\u5c31\u662f\u89e3\u538b\uff09</p> <ul> <li><code>mount \u548cumount</code>\u4e00\u822c\u6765\u8bf4\u662f\u914d\u5408u\u76d8\u4f7f\u7528\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728<code>wsl</code>\u4e0b\u770b\u5230\u6211\u4eecwindows\u672c\u673a\u7684\u4e1c\u897f\u90fd\u6302\u8f7d\u5230/mnt\u6587\u4ef6\u5939\u4e0b\uff09</li> </ul>"},{"location":"Missing%20semester/Linux/#_5","title":"\u7ed3\u8bed","text":"<p>Linux\u53ef\u4ee5\u8bf4\u662f\u65e0\u8bba\u4f60\u8eab\u5904\u4f55\u5730\uff0c\u5f88\u591a\u4eba\u90fd\u4f1a\u9ed8\u8ba4\u4f60\u4f1a\u4f46\u662f\u5b66\u6821\u53c8\u4e0d\u4f1a\u600e\u4e48\u6559\u4f60\u53bb\u4f7f\u7528\u5b83\u3002 \u76f8\u4fe1\u4f60\u6709\u4ee5\u4e0a\u8fd9\u4e9b\u77e5\u8bc6\u4f60\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u4f7f\u7528\u4e86\uff0c\u5feb\u53bb\u5f00\u542f\u4f60\u7684Linux\u63a2\u7d22\u4e4b\u65c5\u5427\uff01 \u6211\u59cb\u7ec8\u575a\u4fe1\u5b9e\u8df5\u624d\u662f\u6700\u5feb\u7684\u5b66\u4e60\u65b9\u6cd5\uff0c\u5728\u6211\u5b66\u4e60\u7684\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u5f88\u591a\u547d\u4ee4\u90fd\u662f\u8fb9\u67e5\u5e76\u4e14\u4e0d\u65ad\u4f7f\u7528\u4f60\u5c31\u81ea\u7136\u800c\u7136\u5c31\u5b66\u4f1a\u4e86\u3002 \u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\u8bf7\u770b\u672c\u7ae0\u5176\u4ed6\u5185\u5bb9\u3002</p>"},{"location":"Missing%20semester/Linux/C/","title":"Linux\u4e2d\u5e38\u89c1\u7684C\u8bed\u8a00\u7f16\u7a0b\u6280\u5de7","text":"<ul> <li>Linux\u4e2d\u5e38\u89c1\u7684C\u8bed\u8a00\u7f16\u7a0b\u6280\u5de7<ul> <li>The C program under linux</li> <li>Makefile</li> <li>GDB</li> </ul> </li> </ul>"},{"location":"Missing%20semester/Linux/C/#the_c_program_under_linux","title":"The C program under linux","text":"<ol> <li>\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u7684C\u8bed\u8a00\u7f16\u8bd1\u5668\u662f<code>gcc</code>\uff0c\u5e38\u89c1\u7684\u683c\u5f0f\u662f<code>gcc -o hello hello.c</code>\uff08<code>-o</code>\u7684\u610f\u601d\u662f\u6307\u5b9a\u751f\u6210\u6587\u4ef6\u7684\u547d\u540d\uff1b\u672a\u6307\u5b9a\u7684\u8bdd\u662f\u4ea7\u751f\u7684\u6587\u4ef6\u540d\u662f<code>a.out</code>\uff09\u3002Linux\u73af\u5883\u4e0b\u6211\u4eec\u662f\u7528<code>./hello</code>\u7528\u6765\u6267\u884c\u6587\u4ef6.</li> </ol> <p>\u9759\u6001\u94fe\u63a5\u5e93\uff08.a)\u3001\u6c47\u7f16\u8bed\u8a00\u6e90\u6587\u4ef6\uff08.s)\u3001\u9884\u5904\u7406\u8f93\u51fa\u6587\u4ef6\uff08.i\uff09\u3001 \u76ee\u6807\u4ee3\u7801(.o)\u3001 \u5171\u4eab\u51fd\u6570\u5e93\uff08.so)</p> <p>\u5e76\u4e14gcc\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u9ed8\u8ba4\u4f7f\u7528\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u7f16\u8bd1\u94fe\u63a5\u65f6\u5e76\u4e0d\u628a\u5e93\u6587\u4ef6\u7684\u4ee3\u7801\u52a0\u5165\u5230\u5176\u4e2d\uff0c\u800c\u662f\u5728\u7a0b\u5e8f\u6267\u884c\u7684\u65f6\u5019\u5e26\u592a\u52a0\u8f7d\u94fe\u63a5\u5e93\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7ea6\u7cfb\u7edf\u5f00\u9500\u3002</p> \u9009\u9879 \u4f5c\u7528 -g \u521b\u5efa\u7528\u4e8egdb\u7684\u7b26\u53f7\u8868\u548c\u8c03\u8bd5\u4fe1\u606f -I/-lm \u8fde\u63a5\u5e93\u6587\u4ef6/\u4f1a\u81ea\u52a8\u9009\u62e9\u5171\u4eab\u5e93 -m \u6839\u636e\u6307\u5b9a\u7684cpu\u4f18\u5316\u4ee3\u7801 -w \u5ffd\u7565\u8b66\u544a -O \u5927\u5199\u7684O\uff0c\u662f\u6307\u7f16\u8bd1\u5668\u81ea\u5df1\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff08\u4f46\u8fd9\u4e2a\u4f18\u5316\u6709\u4e9b\u65f6\u5019\u53ef\u80fd\u4f1a\u6539\u53d8\u539f\u6709\u4ee3\u7801\u7684\u5b9e\u9645\u76ee\u7684\uff09 -Wall \u5141\u8bb8\u53d1\u51fagcc\u63d0\u4f9b\u7684\u6240\u6709\u6709\u7528\u7684\u8b66\u544a\u4fe1\u606f -E \u53ea\u8fdb\u884c\u9884\u7f16\u8bd1 -S \u8df3\u8fc7\u6c47\u7f16\u548c\u94fe\u63a5\u7684\u9636\u6bb5\uff0c\u5e76\u4fdd\u7559\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\uff08.s file) -v \u4ea7\u751f\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f\uff08\u5e38\u7528\uff09 -c \u8df3\u8fc7\u94fe\u63a5\u6b65\u9aa4\uff0c\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\uff08.o) (\u53ef\u4ee5\u7528\u4e8e\u591a\u6587\u4ef6\u7f16\u8bd1) -I \u5728\u5934\u6587\u4ef6\u4e2d\u6dfb\u52a0dir\u76ee\u5f55 -L \u5728\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u5217\u8868\u4e2d\u6dfb\u52a0dir\u76ee\u5f55 -static \u94fe\u63a5\u9759\u6001\u5e93 - library \u8fde\u63a5\u540d\u4e3alibrary\u7684\u5e93\u6587\u4ef6 <p>gcc \u53ef\u4ee5\u5f00 -march=native \u6765\u907f\u514d\u901a\u7528\u6027\uff0c\u9002\u7528\u4e8e\u672c\u5730\u3002 2. \u5177\u4f53\u7684\u5199\u5e93\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u300aLinux\u7a0b\u5e8f\u8bbe\u8ba1\u300bp118.</p>"},{"location":"Missing%20semester/Linux/C/#makefile","title":"Makefile","text":"<p>\u6211\u4eec\u5e38\u8bf4\u7684Makefile\u5c31\u662fGNU make.\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b8c\u6210\u7f16\u8bd1\uff08\u4f7f\u5df2\u7ecf\u7f16\u8bd1\u8fc7\u4e14\u672a\u6539\u52a8\u7684\u6587\u4ef6\u4e0d\u518d\u7f16\u8bd1\uff09\u3002\u591a\u6570\u540c\u5b66\u5728c\u7a0b\u5e8f\u8bbe\u8ba1\u4e13\u9898\u4e2d\u5df2\u7ecf\u6709\u6240\u4e86\u89e3\u4e86\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u6df1\u5165\u6d45\u51fa\u7684\u624b\u518c\u653e\u5728\u8fd9\u91cc\u3002\u6211\u4f1a\u628a\u4e00\u4e9b\u91cd\u8981\u7684\u5185\u5bb9\u8bb0\u5f55\u5728\u4e0b\u9762\u3002</p> <ol> <li>\u547d\u4ee4\u683c\u5f0f\uff1a</li> </ol> <p><code>make [\u9009\u9879] [make\u5de5\u7a0b\u6587\u4ef6]</code></p> \u9009\u9879 \u4f5c\u7528 -d \u663e\u793a\u8c03\u8bd5\u4fe1\u606f -f \u4f7f\u7528\u6307\u5b9a\u6587\u4ef6\u4f5c\u4e3a\u4f9d\u8d56\u5173\u7cfb\u6587\u4ef6 -n \u4e0d\u6267\u884cmakefile\u7684\u547d\u4ee4\uff0c\u53ea\u662f\u663e\u793a\u8f93\u51fa\u8fd9\u4e9b\u547d\u4ee4 <ol> <li>\u7f16\u5199makefile</li> </ol> <p>\u200b   makefile\u6587\u4ef6\u4e2d\u901a\u5e38\u5305\u542b\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a</p> <p>\u200b   \uff081\uff09 \u9700\u8981\u7531make\u5de5\u5177\u521b\u5efa\u7684\u76ee\u6807\u4f53\uff08target\uff09\uff0c\u901a\u5e38\u662f\u76ee\u6807\u6587\u4ef6\u6216\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>\u200b   \uff082\uff09\u8981\u521b\u5efa\u76ee\u6807\u6240\u4f9d\u8d56\u7684\u6587\u4ef6\u3002</p> <p>\u200b   \uff083\uff09\u521b\u5efa\u6bcf\u4e2a\u76ee\u6807\u4f53\u65f6\u9700\u8981\u7684\u547d\u4ee4\u3002</p> <p>\u200b   makefile\u7684\u4e66\u5199\u89c4\u5219\uff1a</p> <p>\u76ee\u6807\u6587\u4ef6\uff1a\u4f9d\u8d56\u6587\u4ef6</p> <p>\uff08Tab\uff09\u4ea7\u751f\u76ee\u6807\u6587\u4ef6\u7684\u547d\u4ee4</p> <ol> <li> <p><code>\u5e38\u7528\u6e05\u9664\u4e2d\u95f4\u7684\u6587\u4ef6\uff1a    clean:     rm -f *.o</code></p> </li> <li> <p>Makefile\u4e2d\u4e3a\u4e86\u4f7f\u53ef\u7ef4\u62a4\u6027\u8f83\u9ad8\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u4e00\u822c\u662f\u7528\u5927\u5199\u3002</p> </li> <li> <p>makefile\u4e2d\u5e38\u89c1\u9884\u5b9a\u4e49\u53d8\u91cf\uff08\u56e0\u4e3a\u8fd8\u6ca1\u7528\u5230\uff0c\u6240\u4ee5\u5148\u4e0d\u5199\u4e86\uff0c\u4e4b\u540e\u518d\u8865\u5145\uff09</p> </li> <li> <p>makefile\u4e2d\u5e38\u89c1\u7684\u81ea\u52a8\u53d8\u91cf</p> </li> </ol> \u547d\u4ee4\u683c\u5f0f \u542b\u4e49 $* \u4e0d\u5305\u542b\u6269\u5c55\u540d\u7684\u76ee\u6807\u6587\u4ef6\u540d\u79f0 $+ \u6240\u6709\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u4ee5\u7a7a\u683c\u5206\u5f00\uff0c\u4ee5\u51fa\u73b0\u7684\u5148\u540e\u4e3a\u5e8f\uff0c\u53ef\u80fd\u91cd\u590d $&lt; \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\u7684\u540d\u79f0 $? \u6240\u6709\u65f6\u95f4\u6233\u6bd4\u76ee\u6807\u6587\u4ef6\u665a\u7684\u4f9d\u8d56\u6587\u4ef6 $@ \u76ee\u6807\u6587\u4ef6\u7684\u5b8c\u6574\u540d\u79f0 $^ \u6240\u6709\u4e0d\u91cd\u590d\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u4ee5\u7a7a\u683c\u9694\u5f00 $% \u5982\u679c\u76ee\u6807\u662f\u5f52\u6863\u6210\u5458\uff0c\u5219\u8be5\u53d8\u91cf\u8868\u793a\u76ee\u6807\u7684\u5f52\u6863\u6210\u5458\u540d\u79f0 <pre><code>SRC = ..\\..\\src\\acllib.c\nINCLUDE_DIR = ..\\..\\src\nLIB = gdi32 ole32 oleaut32 uuid winmm msimg32\n\nall : keyboard mouse_move \n\nkeyboard :\n    gcc $(SRC) $@.c -I$(INCLUDE_DIR) $(LIB:%=-l%) -DWINVER=0x0501 -o $@\n\nmouse_move :\n    gcc $(SRC) $@.c -I$(INCLUDE_DIR) $(LIB:%=-l%) -DWINVER=0x0501 -o $@\n</code></pre> <pre><code>main: main.o a.o b.o\n    gcc -o main.o a.o b.o\nmain.o: main.c a.h b.h\n    gcc -c main.c\na.o: a.c a.h\n    gcc -c a.c\nb.o: b.c b.h\n    gcc -c b.c\n\n# simple version\nmain: main.o a.o b.o\n    gcc  -o $@ $^\n..c.o: \n    gcc -c $&lt;\n</code></pre> <ol> <li>\u5c0f\u7ed3\uff1amakefile\u6587\u4ef6\u4e3b\u8981\u5305\u542b\u4e94\u90e8\u5206\u5185\u5bb9\uff1a\u663e\u793a\u89c4\u5219\u3001\u996e\u98df\u89c4\u5219\u3001\u53d8\u91cf\u5b9a\u4e49\u3001\u6587\u4ef6\u53ea\u662f\u548c\u6ce8\u91ca\u3002</li> </ol>"},{"location":"Missing%20semester/Linux/C/#gdb","title":"GDB","text":"<p>GDB\u7684\u5168\u79f0\u662f\uff08GNU Debugger\uff09\uff0c\u7528\u4e8e\u8c03\u8bd5c\u3001c++\u7b49\u6587\u4ef6\u3002\u5f53\u7136\u547d\u4ee4\u884c\u4e0a\u7684\u4e1c\u897f\u5bf9\u4e8e\u521d\u5b66\u8005\u4e00\u5b9a\u662f\u4e0d\u600e\u4e48\u597d\u7528\u7684\uff0c\u6211\u4e5f\u8ba4\u4e3a\u5bf9\u4e8e\u521a\u5165\u95e8\u7684\u540c\u5b66\u6765\u8bf4\u4e0d\u5fc5\u6025\u7740\u53bb\u5b66\u4e60\u8fd9\u4e9b\u5de5\u5177\uff08vscode\u4e2d\u7684\u8c03\u8bd5\u6709\u5185\u5d4cgdb\uff09\u3002\u5f53\u4f60\u771f\u6b63\u6709\u8fd9\u4e9b\u9700\u6c42\u7684\u65f6\u5019\u4f60\u81ea\u7136\u800c\u7136\u4f1a\u81ea\u5df1\u53bb\u5b66\u4e60\u3002</p>"},{"location":"Missing%20semester/Linux/WSL/","title":"WSL\u5b89\u88c5\u8bb0\u5f55","text":"<p>\u8be6\u60c5\u53ef\u4ee5\u89c1\u5b98\u7f51\uff0c\u57fa\u672c\u4e0a\u7167\u7740\u505a\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u6211\u4f1a\u5c06\u8fc7\u7a0b\u4ee5\u53ca\u5176\u4e2d\u78b0\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u8bb0\u5f55\u5728\u4e0b\u9762\u3002</p> <p>\u6211\u5efa\u8bae\u5b89\u88c5<code>WSL2</code>\uff0c\u5176\u4e2d\u4e00\u4e9b\u529f\u80fd\u9700\u8981windows10\u4ee5\u4e0a\u7684\u4e13\u4e1a\u7248\u3002</p>"},{"location":"Missing%20semester/Linux/WSL/#gui","title":"GUI","text":"<p>\u5982\u679c\u4f60\u662fwin10\u4ee5\u4e0a\u7684\u8bdd\uff0c<code>WSL2</code>\u73b0\u5728\u914d\u7f6e\u4e86GUI\u3002(\u4f60\u53ef\u4ee5\u4e00\u4e9bmatplotlib\u753b\u56fe\u4e4b\u7c7b\u7684)</p> <p></p>"},{"location":"Missing%20semester/Linux/WSL/#wslverilog","title":"WSL\u6269\u5bb9\u548c\u66f4\u6539\u5730\u5740\uff08\u542bVerilog\u5b89\u88c5\uff09","text":"<p>https://www.eet-china.com/mp/a109854.html</p>"},{"location":"Missing%20semester/Linux/advanced%20Linux/","title":"\u4e00\u4e9blinux\u8fdb\u9636\u64cd\u4f5cor\u6280\u5de7","text":"<ol> <li><code>./configure --prefix=</code>\u4f1a\u6709\u5f88\u591a\u597d\u5904\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\u3002</li> </ol>"},{"location":"Missing%20semester/Linux/shell/","title":"Linux\u4e0b\u7684shell\u7f16\u7a0b","text":"<p>link</p>"},{"location":"Missing%20semester/Linux/tmux/","title":"tmux\u4f7f\u7528\u4ee5\u53ca\u914d\u7f6e","text":""},{"location":"Missing%20semester/Linux/tmux/#tmux_-_plugin","title":"tmux - plugin","text":"<p>\u5b98\u65b9\u7f51\u5740: tmux-plugins</p>"},{"location":"Missing%20semester/Linux/tmux/#_1","title":"\u5b89\u88c5","text":"<pre><code>git clone git@github.com:tmux-plugins/tpm.git ~/.tmux/plugins/tpm\nvim ~/.tmux.conf\n</code></pre> <p>\u5e76\u5c06\u4e0b\u9762\u7684\u5185\u5bb9\u6dfb\u52a0\u5230<code>~/.tmux.conf</code>\u4e2d <pre><code># List of plugins\nset -g @plugin 'tmux-plugins/tpm'\nset -g @plugin 'tmux-plugins/tmux-sensible'\n\n# Other examples:\n# set -g @plugin 'github_username/plugin_name'\n# set -g @plugin 'github_username/plugin_name#branch'\n# set -g @plugin 'git@github.com:user/plugin'\n# set -g @plugin 'git@bitbucket.com:user/plugin'\nset -g @plugin 'catppuccin/tmux'\nset -g @catppuccin_flavour 'mocha'\n\n\n# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)\nrun '~/.tmux/plugins/tpm/tpm'\n\nset -g default-terminal 'tmux-256color'\n</code></pre></p> <p>\u6700\u540e\u4f7f\u7528\u5feb\u6377\u952e<code>ctrlb(prefix) + shift I</code>\u5b89\u88c5\u63d2\u4ef6</p>"},{"location":"Missing%20semester/Linux/vim/","title":"Vim \u7b80\u4ecb","text":""},{"location":"Missing%20semester/Linux/vim/#_1","title":"\u7b80\u4ecb","text":""},{"location":"Missing%20semester/Linux/vim/#_2","title":"\u4e00\u4e9b\u57fa\u672c\u7684\u4f7f\u7528","text":""},{"location":"Missing%20semester/Markdown/","title":"Index","text":""},{"location":"Missing%20semester/Markdown/#markdown","title":"Markdown\u76f8\u5173\u8bb0\u5f55","text":""},{"location":"Missing%20semester/Markdown/#_1","title":"\u5f15\u8a00","text":"<p>\u5173\u4e8emarkdown\u7684\u4ecb\u7ecd\u5462\uff0c\u611f\u89c9\u786e\u5b9e\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\u5c31\u662f\u4e00\u79cd\u6bd4\u8f83\u901a\u7528\u7684\u8bed\u8a00\uff08\u4e00\u4e9b\u7f51\u9875\u4e0a\u4e5f\u901a\u7528\uff09\uff0c\u7136\u540e\u80fd\u591f\u4fbf\u4e8e\u6211\u4eec\u8fdb\u884c\u4e00\u4e2a\u5feb\u901f\u7684\u6392\u7248\u3002\u81f3\u4e8e\u7f8e\u89c2\u4e0e\u5426\uff0c\u611f\u89c9\u8fd8\u662f\u56e0\u4eba\u800c\u5f02\u7684\u3002\u597d\u5904\u5c31\u662f\u8f7b\u91cf\u7ea7\u7684\u8bed\u6cd5\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u57281h\u5185\u901f\u901a\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\u4fbf\u662f\u4ed6\u7684\u786e\u6ca1\u6709<code>latex</code>\u90a3\u4e48\u597d\u770b\uff0c\uff08\u4f46latex\u7684\u5b66\u4e60\u6210\u672c\u5bf9\u4e8e\u4e00\u4e2afreshman\u6765\u8bf4\u662f\u6709\u70b9\u70b9\u9ad8\u7684\uff09\u3002\u6240\u4ee5\u4efb\u4f55\u4e8b\u60c5\u90fd\u662f\u5229\u5f0a\u517c\u5177\u7684\uff0c\u4f46\u6211\u8fd8\u662f\u63a8\u8350\u5927\u5bb6\u4e0d\u59a8\u7b80\u5355\u5b66\u4e60\u4e00\u4e0b\u3002</p> <p>\u81f3\u4e8e\u5b66\u4e60\u8def\u7ebf\u7684\u8bdd\u6309\u7167\u76ee\u524d\u7684\u4e2a\u4eba\u7ecf\u9a8c\u6765\u8bf4\uff0c\u5e94\u8be5\u662f\uff1a<code>\u57fa\u7840\u8bed\u6cd5 --&gt; \u8fdb\u9636\uff08html\u548ccss\u8bed\u6cd5\u79ef\u7d2f\u548cmermaid\u753b\u7b80\u5355\u6d41\u7a0b\u56fe\uff09</code>\uff0c\u5982\u679c\u6709\u6570\u5b66\u8981\u6c42\uff0c\u53ef\u4ee5\u9009\u5b66latex\u7684\u6570\u5b66\u516c\u5f0f\u3002\u8fd9\u6837\u5927\u62b5\u662f\u591f\u7528\u7684\u3002\u6211\u4e5f\u4f1a\u6839\u636e\u8fd9\u4e2a\u7ed3\u6784\u5728\u8fd9\u7bc7\u6587\u6863\u91cc\u8bb0\u5f55\u76f8\u5173\u4fe1\u606f\u3002</p> <p>\u8fd9\u91cc\u662f\u5b98\u7f51 \u5b66\u4e60\u7684\u65f6\u5019\u76f4\u63a5\u7167\u4e2a\u5b98\u7f51\u6bcf\u4e2a\u81ea\u5df1\u6572\u4e00\u904d\u5c31\u5b66\u4f1a\u4e86\u3002</p>"},{"location":"Missing%20semester/Markdown/#_2","title":"\u57fa\u7840\u8bed\u6cd5","text":"<p>\u4e0d\u7ba1\u751a\u4e48\u8bed\u8a00\uff0c\u9996\u5148\u8bf4\u7684\u662f\uff1a\u8bf7\u4e0d\u8981\u4fdd\u517b\u4f60\u7684space\u548center\u952e\uff01\uff01\uff01</p>"},{"location":"Missing%20semester/Markdown/#_3","title":"\u6807\u9898","text":"<p>\u6807\u9898\u603b\u800c\u8a00\u4e4b\u5c31\u662f\u6839\u636e\u4f60\u7684<code>#</code>\u4e2a\u6570\u51b3\u5b9a\u5c42\u7ea7\u7684\u3002\u4f60\u53ef\u4ee5\u8bfb\u8fd9\u7bc7\u6587\u6863\u7684\u6e90\u4ee3\u7801\u5c31\u662f\u770b\u5230\u6807\u9898\u7684\u5199\u6cd5\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u79cd\u5199\u6807\u9898\u7684\u65b9\u5f0f\u662f\uff1a 1. \u5927\u6807\u9898\u5728\u4f60\u6587\u5b57\u7684\u4e0b\u4e00\u884c\u52a0\"------\"(\u4e0d\u77e5\u9053\u591a\u5c11\u4e2a) 2. \u5c0f\u6807\u9898\u5728\u6587\u5b57\u4e0b\u4e00\u884c\u52a0\"===\"\uff08\u663e\u7136\u6bd4\u4e0a\u9762\u591a\uff09</p>"},{"location":"Missing%20semester/Markdown/#_4","title":"\u5206\u5272\u7ebf","text":"<p>\u4e09\u4e2a'-'\u6216\u8005'='\uff0c\u4e0a\u4e0b\u4e0d\u8981\u6709\u591a\u4f59\u7684\u6587\u5b57\u5373\u53ef\u3002</p>"},{"location":"Missing%20semester/Markdown/#_5","title":"\u4e0d\u540c\u5b57\u578b","text":"<pre><code>*\u659c\u4f53*  \n_\u659c\u4f53\u6587\u672c_  \n**\u7c97\u4f53\u6587\u672c**  \n__\u7c97\u4f53\u6587\u672c__  \n&lt;strong&gt;\u7c97\u4f53&lt;/strong&gt;\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u6709\u65f6\u5019\u6211\u7684\u7c97\u4f53\u4e0d\u80fd\u7528\uff09\n***\u7c97\u659c\u4f53\u6587\u672c***  \n___\u7c97\u659c\u4f53\u6587\u672c___  \n~~\u5bf9\u6574\u4e2a\u6587\u5b57\u753b\u6a2a\u7ebf~~ \n&lt;u&gt;\u5e26\u4e0b\u5212\u7ebf\u6587\u672c&lt;/u&gt; \n</code></pre>"},{"location":"Missing%20semester/Markdown/#_6","title":"\u5217\u8868","text":"<p>\u65e0\u5e8f\u5217\u8868\u4f7f\u7528\u661f\u53f7(*)\u3001\u52a0\u53f7(+)\u6216\u662f\u51cf\u53f7(-)\u4f5c\u4e3a\u5217\u8868\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u540e\u9762\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u518d\u586b\u5199\u5185\u5bb9\uff1a</p> <pre><code>* \u7b2c\u4e00\u9879\n* \u7b2c\u4e8c\u9879\n* \u7b2c\u4e09\u9879\n\n+ \u7b2c\u4e00\u9879\n+ \u7b2c\u4e8c\u9879\n+ \u7b2c\u4e09\u9879\n\n\n- \u7b2c\u4e00\u9879\n- \u7b2c\u4e8c\u9879\n- \u7b2c\u4e09\u9879\n</code></pre> <p>\u6709\u5e8f\u5217\u8868\u4f7f\u7528\u6570\u5b57\u5e76\u52a0\u4e0a . \u53f7\u6765\u8868\u793a\uff0c\u5982\uff1a</p> <pre><code>1. \u7b2c\u4e00\u9879\n2. \u7b2c\u4e8c\u9879\n3. \u7b2c\u4e09\u9879\n</code></pre> <p>\u5217\u8868\u5d4c\u5957\u53ea\u9700\u5728\u5b50\u5217\u8868\u4e2d\u7684\u9009\u9879\u524d\u9762\u6dfb\u52a0\u4e24\u4e2a\u6216\u56db\u4e2a\u7a7a\u683c\u5373\u53ef\uff1a</p> <ol> <li>\u7b2c\u4e00\u9879\uff1a   - \u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20<ul> <li>\u7b2c\u4e00\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20</li> </ul> </li> <li>\u7b2c\u4e8c\u9879\uff1a   - \u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20<ul> <li>\u7b2c\u4e8c\u9879\u5d4c\u5957\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20</li> </ul> </li> </ol>"},{"location":"Missing%20semester/Markdown/#_7","title":"\u811a\u6ce8","text":"<p>\u521b\u5efa\u811a\u6ce8\u683c\u5f0f\u7c7b\u4f3c\u8fd9\u6837 </p> <pre><code>[^RUNNOB]\u3002  \n[^RUNOOB]: \u83dc\u9e1f\u6559\u7a0b -- \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\uff0c\u66f4\u662f\u68a6\u60f3\uff01\uff01\uff01\uff08\u8fd9\u4e2a\u7f51\u7ad9\u6709\u5229\u6709\u5f0a\uff0c\u65b0\u624b\u5165\u95e8\u76f8\u5bf9\u8fd8\u662f\u6bd4\u8f83\u53cb\u597d\u7684\uff09\n</code></pre>"},{"location":"Missing%20semester/Markdown/#_8","title":"\u4ee3\u7801","text":"<pre><code>    #include &lt;stdio.h&gt;\n    int main (void)\n    {\n        return 0;\n    }\n</code></pre>"},{"location":"Missing%20semester/Markdown/#_9","title":"\u533a\u5757","text":"<p>Markdown \u533a\u5757\u5f15\u7528\u662f\u5728\u6bb5\u843d\u5f00\u5934\u4f7f\u7528 &gt; \u7b26\u53f7 \uff0c\u7136\u540e\u540e\u9762\u7d27\u8ddf\u4e00\u4e2a\u7a7a\u683c\u7b26\u53f7\uff1a</p> <p>\u533a\u5757\u5f15\u7528 \u83dc\u9e1f\u6559\u7a0b \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\u66f4\u662f\u68a6\u60f3</p> <p>\u6216\u8005\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c * \u7b2c\u4e00\u9879     &gt; \u83dc\u9e1f\u6559\u7a0b     &gt; \u5b66\u7684\u4e0d\u4ec5\u662f\u6280\u672f\u66f4\u662f\u68a6\u60f3 * \u7b2c\u4e8c\u9879</p>"},{"location":"Missing%20semester/Markdown/#_10","title":"\u94fe\u63a5","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u94fe\u63a5 \u83dc\u9e1f\u6559\u7a0b \u6216\u8005http://www.runoob.com\u7684\u5f62\u5f0f\u8868\u793a\u94fe\u63a5\u3002</p> <p>\u8fd9\u4e2a\u94fe\u63a5\u7528 1 \u4f5c\u4e3a\u7f51\u5740\u53d8\u91cf Google \u8fd9\u4e2a\u94fe\u63a5\u7528 runoob \u4f5c\u4e3a\u7f51\u5740\u53d8\u91cf Runoob \u7136\u540e\u5728\u6587\u6863\u7684\u7ed3\u5c3e\u4e3a\u53d8\u91cf\u8d4b\u503c\uff08\u7f51\u5740\uff09  </p> <p>\u6587\u6863\u5185\u8df3\u8f6c\u7684\u793a\u4f8b\uff1a\u793a\u4f8b</p>"},{"location":"Missing%20semester/Markdown/#_11","title":"\u56fe\u7247","text":"<p>\u56fe\u7247\u662f\u7c7b\u4f3c\u7f51\u5740\u7684\uff1a <pre><code>![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740)  \n![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740 \"\u53ef\u9009\u6807\u9898\")  \n</code></pre></p> <p>\u4f8b\u5982\uff1a </p>"},{"location":"Missing%20semester/Markdown/#_12","title":"\u8868\u683c","text":"\u5de6\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c"},{"location":"Missing%20semester/Markdown/#_13","title":"\u6570\u5b66\u516c\u5f0f","text":"<p>\u4e00\u4e2a\u4e0d\u9519\u7684\u535a\u4e3b\u7684\u6c47\u603b $$ \\begin{Bmatrix}    a &amp; b \\    c &amp; d \\end{Bmatrix} $$</p> \\[ \\begin{CD}    A @&gt;a&gt;&gt; B \\\\ @VbVV @AAcA \\\\    C @= D \\end{CD} \\] <p>\\(f(x) = sin(x)+12\\)</p> \\[ f(x) = \\begin{cases} x,  &amp; x\\ge0 \\\\ -x, &amp; x&lt;0 \\end{cases} \\] \\[  \\sum_{n=1}^{100}x! \\]"},{"location":"Missing%20semester/Markdown/#_14","title":"\u8fdb\u9636\u5185\u5bb9","text":""},{"location":"Missing%20semester/Markdown/#mermaid","title":"Mermaid","text":"<p>\u5b98\u65b9\u6587\u6863</p> <p>mermaid \u56fe\u5f62\uff1a</p>    sequenceDiagram        Alice-&gt;&gt;Bob: Hello Bob, how are you?        Bob--&gt;&gt;Alice: I'm good, thanks!     gantt        title \u9879\u76ee\u8ba1\u5212        section \u9879\u76eeA        \u4efb\u52a11 :a1, 2023-10-21, 3d        \u4efb\u52a12 :after a1, 2d        section \u9879\u76eeB        \u4efb\u52a13 :2023-10-25, 2d        \u4efb\u52a14 : 2d      classDiagram        class Animal {            +name: string            +eat(): void        }        class Dog {            +bark(): void        }        Animal &lt;|-- Dog"},{"location":"Missing%20semester/Markdown/#html","title":"HTML","text":"<p>\u9664\u4e86\u4e4b\u524d\u63d0\u5230\u7684\u5e38\u7528HTML\u8bed\u6cd5\uff0cMarkdown\u8fd8\u652f\u6301\u5176\u4ed6\u4e00\u4e9b\u6269\u5c55\u7684HTML\u8bed\u6cd5\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u7075\u6d3b\u5730\u5b9a\u5236\u548c\u7f8e\u5316\u4f60\u7684\u6587\u6863\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6269\u5c55HTML\u8bed\u6cd5\u5728Markdown\u4e2d\u7684\u4f7f\u7528\u793a\u4f8b\uff1a</p> <ol> <li> <p><code>&lt;div&gt;</code>\u548c<code>&lt;span&gt;</code>\u6807\u7b7e\uff1a\u53ef\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u6837\u5f0f\u548c\u5e03\u5c40\u3002    <pre><code>&lt;div style=\"background-color: #f1f1f1; padding: 10px;\"&gt;\n    \u8fd9\u662f\u4e00\u4e2a\u5e26\u80cc\u666f\u989c\u8272\u7684\u533a\u5757\n&lt;/div&gt;\n\n&lt;span style=\"color: red;\"&gt;\u8fd9\u662f\u7ea2\u8272\u6587\u672c&lt;/span&gt;\n</code></pre></p> </li> <li> <p><code>&lt;iframe&gt;</code>\u6807\u7b7e\uff1a\u53ef\u4ee5\u5d4c\u5165\u5176\u4ed6\u7f51\u9875\u6216\u591a\u5a92\u4f53\u5185\u5bb9\u3002    <pre><code>&lt;iframe src=\"https://www.example.com\" width=\"500\" height=\"300\"&gt;&lt;/iframe&gt;\n</code></pre></p> </li> <li> <p><code>&lt;audio&gt;</code>\u548c<code>&lt;video&gt;</code>\u6807\u7b7e\uff1a\u53ef\u4ee5\u63d2\u5165\u97f3\u9891\u548c\u89c6\u9891\u6587\u4ef6\u3002    <pre><code>&lt;audio controls&gt;\n    &lt;source src=\"audio.mp3\" type=\"audio/mpeg\"&gt;\n&lt;/audio&gt;\n\n&lt;video controls width=\"500\" height=\"300\"&gt;\n    &lt;source src=\"video.mp4\" type=\"video/mp4\"&gt;\n&lt;/video&gt;\n</code></pre></p> </li> <li> <p><code>&lt;mark&gt;</code>\u6807\u7b7e\uff1a\u7528\u4e8e\u7a81\u51fa\u663e\u793a\u6587\u672c\u3002</p> </li> </ol> <pre><code>&lt;mark&gt;\u8fd9\u6bb5\u6587\u5b57\u5c06\u88ab\u7a81\u51fa\u663e\u793a&lt;/mark&gt;\n</code></pre> <ol> <li><code>&lt;blockquote&gt;</code>\u6807\u7b7e\uff1a\u7528\u4e8e\u5f15\u7528\u6587\u672c\u5757\u3002</li> </ol> <pre><code>H&lt;sub&gt;2&lt;/sub&gt;O \u662f\u6c34\u7684\u5316\u5b66\u5f0f\u3002\nE = mc&lt;sup&gt;2&lt;/sup&gt; \u662f\u76f8\u5bf9\u8bba\u4e2d\u7684\u8457\u540d\u516c\u5f0f\u3002\n</code></pre> <ol> <li><code>&lt;del&gt;</code>\u548c<code>&lt;ins&gt;</code>\u6807\u7b7e\uff1a\u7528\u4e8e\u8868\u793a\u5220\u9664\u548c\u63d2\u5165\u7684\u6587\u672c\u3002</li> </ol> <pre><code>&lt;del&gt;\u8fd9\u6bb5\u6587\u5b57\u88ab\u5220\u9664\u4e86&lt;/del&gt;\n&lt;ins&gt;\u8fd9\u6bb5\u6587\u5b57\u88ab\u63d2\u5165\u4e86&lt;/ins&gt;\n</code></pre> <ol> <li><code>&lt;pre&gt;</code>\u6807\u7b7e\uff1a\u7528\u4e8e\u663e\u793a\u9884\u683c\u5f0f\u5316\u7684\u6587\u672c\uff0c\u4fdd\u7559\u7a7a\u683c\u548c\u6362\u884c\u7b26\u3002</li> </ol> <pre><code>&lt;pre&gt;\n\u8fd9\u662f\u9884\u683c\u5f0f\u5316\u7684\u6587\u672c\u3002\n    \u4fdd\u7559\u7a7a\u683c\u548c\u6362\u884c\u7b26\u3002\n&lt;/pre&gt;\n</code></pre> <ol> <li><code>&lt;details&gt;</code>\u548c<code>&lt;summary&gt;</code>\u6807\u7b7e\uff1a\u7528\u4e8e\u521b\u5efa\u53ef\u6298\u53e0\u7684\u5185\u5bb9\u3002</li> </ol> <pre><code>&lt;details&gt;\n    &lt;summary&gt;\u70b9\u51fb\u5c55\u5f00&lt;/summary&gt;\n    \u8fd9\u662f\u53ef\u6298\u53e0\u7684\u5185\u5bb9\u3002\n&lt;/details&gt;\n</code></pre> <p>\u8fd9\u4e9b\u662f\u66f4\u591a\u7684HTML\u8bed\u6cd5\u793a\u4f8b\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528\u5b83\u4eec\u6765\u6269\u5c55\u4f60\u7684Markdown\u6587\u6863\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5728\u4f7f\u7528\u8fd9\u4e9b\u6269\u5c55\u8bed\u6cd5\u65f6\uff0c\u8981\u786e\u4fdd\u5b83\u4eec\u5728Markdown\u89e3\u6790\u5668\u4e2d\u5f97\u5230\u6b63\u786e\u652f\u6301\uff01\uff01\uff01</p>"},{"location":"Missing%20semester/Mkdocs%20material/","title":"Mkdocs material\u4f7f\u7528\u6559\u7a0b","text":"<p>\u6ce8\uff1amkdocs material\u662fmarkdown\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u53ef\u4ee5\u57fa\u4e8egithub-pages\u5e03\u7f6e\uff0c\u672c\u6559\u7a0b\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u6700\u7b80\u5355\u7684\u57fa\u4e8egit\u672c\u5730\u90e8\u7f72\u914d\u5236</p>"},{"location":"Missing%20semester/Mkdocs%20material/#windows","title":"\u73af\u5883\u914d\u5236(windows \u7248)","text":"<ol> <li>\u4f60\u9700\u8981\u5b89\u88c5python\uff0c\u8fde\u63a5\u70b9\u8fdb\u53bb\u4e0b\u8f7d\u5373\u53ef\uff0c\u5b89\u88c53.10\u5373\u4ee5\u4e0b\uff08\u6700\u65b0\u7248\u53ef\u80fd\u4f1a\u6709bug\uff09</li> <li>\u5176\u6b21\u4f60\u9700\u8981\u5b89\u88c5pip\uff0c\u8be6\u60c5\u8bf7\u770b\u6559\u7a0b</li> <li>\u6b64\u5916\u4f60\u9700\u8981\u5b89\u88c5git(\u9009\u62e964-bits\u7684standalone\u7248\u672c\uff0c\u76f4\u63a5\u4e00\u8defnext\u5373\u53ef)</li> </ol> <ol> <li>\u4f60\u9700\u8981\u4e00\u4e2aGithub\u8d26\u53f7</li> <li>\u6700\u597d\u4e0b\u8f7d\u4e00\u4e2aVscode\u6559\u7a0b</li> <li>\u5b89\u88c5mkdocs\uff0c\u5728\u7535\u8111\u7ec8\u7aef\u4f7f\u7528<code>pip install mkdocs</code>&amp;<code>pip install mkdocs-material</code></li> <li>markdown\u5efa\u8bae\u4f7f\u7528Typora\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u4eceb\u7ad9\u4e0a\u641c\u7d22\u5b89\u88c5\u6559\u7a0b\uff08\u9009\u505a\uff09</li> </ol>"},{"location":"Missing%20semester/Mkdocs%20material/#_1","title":"\u4f7f\u7528","text":"<ol> <li>\u9996\u5148\u4f60\u9700\u8981\u5efa\u7acb\u4e00\u4e2aGithub\u4e0a\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53ef\u4ee5\u5177\u4f53\u770b\u6211\u53e6\u5916\u4e00\u4e2a\u5feb\u901f\u4e0a\u624b\u8fdc\u7a0b\u4ed3\u5e93\u6559\u7a0b</li> <li> <p>\u6b64\u5916\uff0c\u4f60\u9700\u8981\u5b66\u4e60markdown\u7684\u8bed\u6cd5\uff0c\u8be6\u60c5\u8bf7\u770b\u6211\u7684\u8bb0\u5f55\uff08\u5982\u679c\u60f3\u8981\u63d2\u5165\u56fe\u7247,\u8bf7\u5728\u6587\u4ef6\u5939\u4e0b\u5efa\u7acb\u4e00\u4e2agraph\u6587\u4ef6\u5939\uff0c\u5e76\u5728markdown\u6587\u4ef6\u4e2d\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff09</p> </li> <li> <p>\u8bf7\u5728\u547d\u4ee4\u884c\u4e0a\u4f7f\u7528<code>mkdocs new</code>, \u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2adocs\u6587\u4ef6\u5939\uff0csite\u6587\u4ef6\u5939\u4ee5\u53ca\u4e00\u4e2amkdocs.yml</p> </li> <li> <p>\u91cd\u8981\u7684\u914d\u5236\u4e1c\u897f\u90fd\u5728mkdocs.yml\u4e2d\uff0c\u5927\u5bb6\u53bb\u6211\u4ed3\u5e93\u770b\u5427\uff0c\u6700\u597d\u662f\u80fd\u7406\u89e3\u4f60\u5199\u7684\u6bcf\u884c\u4ee3\u7801\u7684\u542b\u4e49\u3002</p> </li> <li> <p>\u5982\u679c\u60f3\u8981\u50cf\u6211\u4e00\u6837\u5077\u61d2\u7684\u8bdd\uff0c\u53ef\u4ee5\u624b\u5199\u4e2aupdate.sh\u5373\u53ef\uff0c\u6bcf\u6b21\u5728git bash\u4e2d\u64cd\u4f5c\u5c31\u597d\u3002</p> </li> </ol> <pre><code>#\u7ed9\u51fa\u4e00\u4e2a\u9ed8\u8ba4\u7684\u9879\u76ee\u8def\u5f84\npath=\"F:\\Note of computer\"\n\n#\u5148\u8fdb\u5165\u9879\u76ee\u5f53\u4e2d\n\ncd $path\n\necho \"####### \u8fdb\u5165\u81ea\u5df1\u7684\u9879\u76ee #######\"\n\nls\n\necho \"\u5f00\u59cb\u6267\u884c\u547d\u4ee4\"\n\ngit add .\n\ngit status\n\n#\u5199\u4e2asleep 1s \u662f\u4e3a\u4e86\u89e3\u51b3\u5e76\u53d1\u5bfc\u81f4\u5361\u58f3\n\nsleep 1s\n\necho \"####### \u6dfb\u52a0\u6587\u4ef6 #######\"\n\nls_date=`date +%Y%m%d`\n\ngit commit -m \"${ls_date}\"\n\necho \"####### commit #######\"\n\nsleep 1s\n\necho \"####### \u5f00\u59cb\u63a8\u9001 #######\"\n\ngit push\n\nmkdocs gh-deploy\n\necho \"####### \u63a8\u9001\u5e76\u9875\u9762\u90e8\u7f72\u6210\u529f #######\"\n</code></pre> <p>\u606d\u559c\u4f60\uff0c\u5982\u679c\u80fd\u6309\u6b65\u9aa4\u5b8c\u6210\u4f60\u57fa\u672c\u4e0a\u5c31\u80fd\u4f7f\u7528\u4e86</p>"},{"location":"Missing%20semester/Mkdocs%20material/#_2","title":"\u4f7f\u7528\u6280\u5de7","text":""},{"location":"Missing%20semester/Mkdocs%20material/#_3","title":"\u63d0\u793a\u5757\u63d2\u4ef6","text":"<pre><code>markdown_extensions:\n    - admonition  # \u63d0\u793a\u5757\n    - pymdownx.details  # \u63d0\u793a\u5757\u53ef\u6298\u53e0\n</code></pre> <p>\u4f60\u53ef\u4ee5\u5199vscode\u7684snippet\u5e2e\u52a9\u4f60\u7f16\u5199\uff0c\u540c\u65f6\u4ed6\u652f\u6301\u7684\u63d0\u793a\u5757\u5982\u4e0b\uff1a - note, seealso - abstract, summary, tldr - info, todo - tip, hint, important - success, check, done - question, help, faq - warning, caution, attention - failure, fail, missing - danger, error - bug - example - quote, cite ps\uff1a\u8fd9\u4e2d\u95f4\u6240\u9700\u8981\u7684\u5c0f\u6280\u5de7\u6709\u70b9\u591a\uff0c\u6211\u4e5f\u5728\u4e0d\u65ad\u6478\u7d22\uff0c\u5982\u679c\u60f3\u8981\u914d\u7f6e\u7684\u540c\u5b66\u53ef\u4ee5\u6309\u7167\u6211\u8fd9\u4e2a\u6559\u7a0b\u6765\u5199\u5c31\u597d\u3002</p>"},{"location":"Missing%20semester/Mkdocs%20material/#_4","title":"\u6570\u5b66\u516c\u5f0f","text":"<p>\u5982\u4f55\u8ba9\u4f60\u7684\u9875\u9762\u652f\u6301latex\u5462? link</p>"},{"location":"Missing%20semester/Zotero/","title":"Zotero","text":"<p>\u8fd9\u53ef\u80fd\u662ffreshman\u4f1a\u9009\u62e9\u7684\u8bba\u6587\u9605\u8bfb\u5de5\u5177\u5566\uff01\u8ba9\u6211\u4eec\u5728\u672c\u7ae0\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5b83\u5427\u3002</p>"},{"location":"Missing%20semester/Zotero/#_1","title":"\u4e0b\u8f7d","text":""},{"location":"Missing%20semester/Zotero/use/","title":"How to use","text":"<p>Guide Video</p>"},{"location":"Missing%20semester/git/","title":"Index","text":""},{"location":"Missing%20semester/git/#_1","title":"\u7b80\u4ecb","text":"<p>Git\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\uff0c\u6700\u521d\u7531\u6797\u7eb3\u65af\u00b7\u6258\u74e6\u5179\u521b\u4f5c\uff0c\u4e8e2005\u5e74\u4ee5GPL\u8bb8\u53ef\u534f\u8bae\u53d1\u5e03\u3002\u6700\u521d\u76ee\u7684\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ba1\u7406Linux\u5185\u6838\u5f00\u53d1\u800c\u8bbe\u8ba1\u3002\u5e94\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e0eGNU Interactive Tools[4]\uff08\u4e00\u4e2a\u7c7b\u4f3cNorton Commander\u754c\u9762\u7684\u6587\u4ef6\u7ba1\u7406\u5668\uff09\u4e0d\u540c\u3002</p>"},{"location":"Missing%20semester/git/#_2","title":"\u5b89\u88c5\u65b9\u5f0f","text":"<p>\u5177\u4f53\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51git <code>windows</code> \u53ef\u76f4\u63a5\u70b9\u51fbhere\uff0c\u4e0b\u8f7d64\u4f4d\u7684<code>standalone</code>\u5373\u53ef. (\u81f3\u4e8estandalone\u548cportable\u7684\u533a\u522b\u53ef\u4ee5\u81ea\u5df1\u641c\u7d22) <code>linux</code> or <code>mac</code> \u4f7f\u7528\u81ea\u5df1\u7cfb\u7edf\u4e0a\u7684\u5305\u7ba1\u7406\u5668\u5c31\u597d\u4e86\uff08\u672c\u4eba\u76ee\u524d\u65e0mac\uff0c\u6709\u4e86\u7684\u8bdd\u4f1a\u518d\u66f4\u65b0\uff09</p>"},{"location":"Missing%20semester/git/#_3","title":"\u4f7f\u7528\u624b\u518c","text":"<p>\u6211\u4eec\u4e0d\u5f97\u4e0d\u63d0\u5982\u679c\u60f3\u5728windows\u4e0b\u4f7f\u7528\u6216\u8005\u7f16\u5199shell\u811a\u672c\uff0cgit bash\u53ef\u4ee5\u5f88\u597d\u7684\u8ba9\u4f60\u4f7f\u7528linux\u4e0b\u7684\u4e00\u4e9b\u811a\u672c\u8bed\u6cd5\u800c\u4e0d\u7528\u8fdb\u884c\u989d\u5916\u7684\u5b66\u4e60\u3002</p> <p>\u5b98\u7f51\u6216\u8005\u770bpro_git\u5f53\u7136\u662f\u975e\u5e38\u597d\u7684\u8d44\u6599\u3002\u4f46\u5c5e\u5b9e\u592a\u591a\u5566</p> <p>\u8865\u5145</p> <ol> <li> <p>\u53d1\u73b0\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684git\u56fe\u5f62\u5316\u5b66\u4e60\u7684\u7f51\u7ad9 </p> </li> <li> <p>\u7528GIF\u89e3\u91caGit\u7684\u57fa\u672c\u64cd\u4f5c</p> </li> <li> <p>\u4e3a\u4e86\u901a\u8fc7<code>log</code>\u66f4\u597d\u7684\u67e5\u770b\u5de5\u4f5c\uff0c\u4f60\u4e5f\u8bb8\u9700\u8981\u5199\u51fa\u66f4\u4f18\u79c0\u7684commit\u4fe1\u606f (angular\u89c4\u8303)</p> </li> <li> <p>\u6b64\u5916\uff0cmissing semester\u548cCS61B\u7684\u8bfe\u7a0b\u6307\u5bfc\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5f88\u597d\u7684\u6458\u8981\u3002</p> </li> </ol>"},{"location":"Missing%20semester/git/fastGit/","title":"fastGit","text":""},{"location":"Missing%20semester/git/fastGit/#_1","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u6211\u59cb\u7ec8\u8ba4\u4e3a\u5b66\u4e60\u5e94\u5f53\u662f\u4e00\u4e2a\u5faa\u5e8f\u6e10\u8fdb\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u4f60\u7b2c\u4e00\u6b21\u5b66\u4e60git\u4e00\u5b9a\u4f1a\u662f\u4e00\u5934\u96fe\u6c34\u7684\uff0c\u4e0d\u59a8\u5728\u914d\u7f6e\u5b8c\u73af\u5883\u540e\u8ddf\u7740\u672c\u6559\u7a0b\u505a\u505a\u770b\u57f9\u517b\u4e00\u79cd\u2026\u2026\u76f4\u89c9\uff1f\uff08bushi</p>"},{"location":"Missing%20semester/git/fastGit/#github","title":"\u4e0b\u8f7d\u522b\u4ebaGithub\u4e0a\u7684\u9879\u76ee","text":"<ul> <li>\u4e00\u5b9a\u4e00\u5b9a\u5148\u53bb\u770b\u522b\u4eba\u4ed3\u5e93\u7684README\u7684\u63d0\u793a\u548c\u64cd\u4f5c\u3002\u53ef\u4ee5\u6709\u52a9\u4e8e\u4f60\u4e86\u89e3\u522b\u4eba\u9879\u76ee\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u4e00\u4e9b\u533a\u522b\u7684\u5730\u65b9\u3002</li> <li>\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u672c\u5730\u8f93\u5165<code>git clone</code>+<code>repository address</code>\uff0c\u5982\uff1a <code>git clone git@github.com:Yaoyaolingbro/notebook.git</code></li> </ul>"},{"location":"Missing%20semester/git/fastGit/#githubrepository","title":"Github\u4e0a\u521b\u5efa\u4e00\u4e2a\u4ed3\u5e93\uff08repository\uff09","text":"<p>ps\uff1a\u4efb\u4f55\u4e1c\u897f\u4e00\u5b9a\u90fd\u662f\u4ee5\u5b98\u65b9\u6587\u6863\u4e3a\u51c6\u3002\u6211\u7684\u8bb0\u5f55\u53ea\u80fd\u7528\u4f5c\u53c2\u8003\u3002\u6b64\u5916\u547d\u4ee4\u884c\u4e0a\u7684\u63d0\u793a\u6216\u8005<code>--help</code>\u4e5f\u662f\u4e2a\u597d\u4e1c\u897f\u54df\uff01\uff01\uff01</p> <ul> <li> <p>\u9996\u5148\u6211\u4eec\u9700\u8981\u5efa\u7acb\u81ea\u5df1\u672c\u5730\u7684<code>SSH</code>\u7684\u5bc6\u94a5\u3002 <code>ssh-keygen -t rsa -C \"youremail@example.com\"</code>   \u540e\u9762\u7684 your_email@youremail.com \u6539\u4e3a\u4f60\u5728 Github \u4e0a\u6ce8\u518c\u7684\u90ae\u7bb1\uff0c\u4e4b\u540e\u4f1a\u8981\u6c42\u786e\u8ba4\u8def\u5f84\u548c\u8f93\u5165\u5bc6\u7801\uff0c\u6211\u4eec\u8fd9\u4f7f\u7528\u9ed8\u8ba4\u7684\u4e00\u8def\u56de\u8f66\u5c31\u884c\u3002   \u6210\u529f\u7684\u8bdd\u4f1a\u5728<code>~/</code>\u6216\u8005<code>C:/user</code>\u4e0b\u751f\u6210 .ssh \u6587\u4ef6\u5939\uff0c\u8fdb\u53bb\uff0c\u6253\u5f00 id_rsa.pub\uff0c\u590d\u5236\u91cc\u9762\u7684 key\u3002</p> </li> <li> <p>\u56de\u5230 github \u4e0a\uff0c\u8fdb\u5165 <code>Account =&gt; Settings</code>\uff08\u8d26\u6237\u914d\u7f6e\uff09\u3002\u7136\u540e\u5de6\u8fb9\u8fb9\u6846\u9009\u62e9 <code>SSH and GPG keys</code>\uff0c\u7136\u540e\u70b9\u51fb <code>New SSH key</code>\u6309\u94ae,<code>title</code> \u8bbe\u7f6e\u6807\u9898\uff0c\u53ef\u4ee5\u968f\u4fbf\u586b\uff0c\u7c98\u8d34\u5728\u4f60\u7535\u8111\u4e0a\u751f\u6210\u7684 key\u3002</p> </li> <li> <p>\u4e3a\u4e86\u9a8c\u8bc1\u662f\u5426\u6210\u529f\uff0c\u6211\u4eec\u5728\u672c\u5730\u8f93\u5165\uff1a <pre><code>$ ssh -T git@github.com\nThe authenticity of host 'github.com (52.74.223.119)' can't be established.\nRSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes                   # \u8f93\u5165 yes\nWarning: Permanently added 'github.com,52.74.223.119' (RSA) to the list of known hosts.\nHi tianqixin! You've successfully authenticated, but GitHub does not provide shell access. # \u6210\u529f\u4fe1\u606f\n</code></pre></p> </li> <li> <p>\u4ee5\u4e0a\u547d\u4ee4\u8bf4\u660e\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u8fde\u63a5github\u4e86\uff01</p> </li> <li> <p>\u63a5\u4e0b\u6765\u5728\u4e3b\u754c\u9762\u4e0a\u8fdb\u5165\u5230<code>Your repositories</code>or<code>New repository</code>\u540e\u521b\u5efa\u65b0\u7684\u4ed3\u5e93\u3002\u5982\u679c\u60f3\u4e0a\u4f20\u672c\u5730\u6587\u6863\u5148\u4e0d\u8981\u52fe\u9009<code>Initialize this repositories</code>\u8fd9\u4e2a\u9009\u9879\u3002</p> </li> <li> <p>\u521b\u5efa\u6210\u529f\u540e\u5b83\u4f1a\u7ed9\u4f60\u7ed9\u51fa\u63d0\u793a\u5982\u4e0b</p> </li> <li> <p>\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u4ecd\u9700\u8981\u8bbe\u7f6e\u672c\u5730\u7684<code>git</code>\u7528\u6237 <pre><code>$ git config --global user.name \"your name\"\n$ git config --global user.email \"your_email@youremail.com\"\n</code></pre>   \u5e73\u65f6\u6211\u4eec\u53ef\u4ee5\u7528<code>git config --list</code>\u6765\u68c0\u67e5\u81ea\u5df1\u7684\u7528\u6237\u8bbe\u7f6e\u3002</p> </li> </ul>"},{"location":"Missing%20semester/git/fastGit/#_2","title":"\u5e38\u89c4\u56db\u90e8\u66f2","text":"<ol> <li> <p>\u521d\u59cb\u5316\uff08initialize\uff09    \u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u4f60\u5148\u9700\u8981\u5efa\u7acb\u5206\u652f\u3002\u5728\u547d\u4ee4\u884c\u8f93\u5165<code>git init --initial-branch=main</code>\u6216\u8005<code>git init</code>\u3002\u6709\u65f6<code>git init</code>\u4e4b\u540e\u4f1a\u62a5\u9519\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4ed6\u7684\u63d0\u793a\u8fdb\u884c\u64cd\u4f5c\u3002    \u6b64\u5916\u4f60\u9700\u8981\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u7684\u201c\u5730\u5740\u201d\uff0c\u8fd9\u91cc\u6211\u4eec\u5efa\u8bae\u6dfb\u52a0\u4f60\u4ed3\u5e93\u7684SSH\u5bc6\u94a5\uff0c\u4f8b\u5982<code>git remote add origin git@github.com:Yaoyaolingbro/secrete.git</code></p> <p>\u5173\u4e8egit remote   \u4e00\u822c\u6765\u8bf4\u6211\u4eec\u53ef\u4ee5\u7528<code>git remote -v</code>\u6765\u68c0\u67e5\u6211\u4eec\u5f53\u524d\u7684\u72b6\u6001 \u6b64\u5916\u5982\u679c\u66f4\u6539remote\u7684URL\u7684\u8bdd\u6211\u4eec\u4e5f\u6709\u4e24\u79cd\u65b9\u5f0f <code>git remote set-url origin git://new.url.here</code> \u6216\u8005<code>git remote remove origin</code>\u540e\u4f7f\u7528<code>git remote add origin yourRemoteUrl</code>\u90fd\u53ef\u4ee5\u3002</p> </li> <li> <p>\u6dfb\u52a0\u9879\u76ee    \u7136\u540e\u6dfb\u52a0\u4f60\u60f3\u8981\u5047\u5982\u4ed3\u5e93\u7684\u9879\u76ee<code>git add ./project_name</code> \u6216\u8005\u7701\u4e8b\u76f4\u63a5\u8f93\u5165<code>git add .</code></p> </li> <li>\u67e5\u770b\u72b6\u6001    \u5728\u547d\u4ee4\u884c\u8f93\u5165<code>git status</code></li> <li>\u63d0\u4ea4\u9879\u76ee    \u5728\u547d\u4ee4\u884c\u8f93\u5165<code>git commit -m \"commit message\"</code></li> <li>\u5c06\u4ed3\u5e93\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff08github\u7b49\uff09    \u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u8f93\u5165<code>git push -u origin main</code>.\u4e4b\u540e\u518d\u63d0\u4ea4\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165<code>git push</code>\u5373\u53ef\u3002</li> </ol> <p>\u606d\u559c\u4f60\uff01\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u4ed3\u5e93\u5566\uff01</p>"},{"location":"Missing%20semester/git/fastGit/#git","title":"Git\u9644\u6ce8","text":"<p>\u4f60\u60f3\u67e5\u770b\u4e00\u4e0b\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u90fd\u505a\u4e86\u4ec0\u4e48\u5b58\u6863\uff0c\u4f7f\u7528 <code>git log</code> \u5373\u53ef\uff0c\u5b83\u4f1a\u63d0\u4f9b\u81f3\u4eca\u4e3a\u6b62\u6240\u6709\u7684 <code>commit</code> \u4fe1\u606f\uff08\u65f6\u95f4\uff0c\u63d0\u4ea4\u8005\uff0c\u63cf\u8ff0\uff0chashcode\uff09\uff0c\u4e3a\u4e86\u901a\u8fc7<code>log</code>\u66f4\u597d\u7684\u67e5\u770b\u5de5\u4f5c\uff0c\u4f60\u4e5f\u8bb8\u9700\u8981\u5199\u51fa\u66f4\u4f18\u79c0\u7684commit\u4fe1\u606f (angular\u89c4\u8303)\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u56de\u5230\u8fc7\u53bb\u7684\u67d0\u4e2a <code>commit</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>git reset --hard &lt;commit&gt;</code>\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86 <code>--hard</code>\uff0c\u5728\u56de\u5230\u4f60\u6307\u5b9a\u7684commit\u540e\uff0c\u4f60\u5c06\u65e0\u6cd5\u524d\u5f80\u8fd9\u4e2acommit\u4e4b\u540e\u7684\u4efb\u4f55\u4e00\u4e2acommit\uff0c\u56e0\u6b64\u5728\u64cd\u4f5c\u524d\u8bf7\u614e\u91cd\u3002</p> <p>\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u8bf7\u770bnote</p>"},{"location":"Missing%20semester/git/note/","title":"\u6df1\u7a76git","text":"<p>\u4e00\u4e2a\u7bc7\u9519\u7684\u601d\u8def\u6c47\u603b\uff0c\u89c6\u9891\u8d44\u6e90\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u6211\u4f1a\u628a\u4e00\u4e9b\u91cd\u8981\u7684\u547d\u4ee4\u6216\u8005\u5de5\u4f5c\u6d41\u7a0b\u8bb0\u5f55\u5728\u8fd9\u91cc</p>"},{"location":"Missing%20semester/git/note/#how_to_do_team_work","title":"How to do team work.","text":"<p>\u5b66\u4f1a\u4f7f\u7528git pull\u662f\u5341\u5206\u91cd\u8981\u7684\uff0c\u4ee5\u53ca\u5206\u652f\u7ba1\u7406\uff0c\u521b\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684feature-name\u5206\u652f\u3002</p> <p>\u6458\u8981</p> <ol> <li>ZJU-git \u4e2d\u7684group\u4e00\u5b9a\u662f\u4f60\u6821\u5185\u5408\u4f5c\u975e\u5e38\u4fbf\u6377\u7684\u4e00\u79cd\u65b9\u5f0f\u4e86\u3002\uff08\u5f53\u7136Github\u4e0a\u4e5f\u6709\u5bf9\u5370\u7684\uff0c\u4f46\u4e2a\u4eba\u89c9\u5f97\u4e0d\u5982\u524d\u8005\u65b9\u4fbf\uff09</li> <li>\u6bcf\u6b21\u5728\u66f4\u6539\u524d\u8bf7\u5148\u4f7f\u7528<code>git pull --all</code>\u6765\u62c9\u53d6\u5b8c\u6574\u4ed3\u5e93\u66f4\u65b0\u3002</li> </ol>"},{"location":"Missing%20semester/git/note/#git_1","title":"Git\u5e38\u7528\u547d\u4ee4\u6307\u5357","text":"<ol> <li>git commit</li> <li>git branch  <li>git checkout  <p>2&amp;3\u53ef\u4ee5\u5408\u5e76\u4e3a\uff1agit checkout -b  <li>git merge(\u5982\u679c\u6211\u4eec\u73b0\u5728\u5728main\u5206\u652f\u60f3\u8981\u5c06checkout\u5206\u652f\u7684\u5408\u5e76\u8fc7\u6765\uff0c\u6211\u4eec\u4f7f\u7528 git merge checkout)</li> <li>git rebase(\u4e0emerge\u76f8\u6bd4\u4e5f\u6709\u5b83\u7684\u597d\u5904),\u4f1a\u4f7f\u63d0\u4ea4\u8bb0\u5f55\u7ebf\u6027\u5316\u66f4\u7b80\u4ecb\uff0c\u6e05\u6670\uff1f</li> <li>git -&gt; main -&gt; c1 or git checkout c1</li> <li>git checkout HEAD^ | bugFix^(\u5411\u4e0a\u79fb\u52a8\u4e00\u6b21)</li> <li>git branch -f main HEAD~3</li>"},{"location":"Online%20CS%20Courses/CS106L/","title":"CS106L - 24 winter","text":"<p>\u8fd9\u91cc\u662fCS106L\u7684\u8bfe\u7a0b\u8d44\u6599\uff0c\u5305\u62ec\u8bfe\u7a0b\u5927\u7eb2\u3001\u8bfe\u7a0b\u4f5c\u4e1a\u3001\u8bfe\u7a0b\u8bb2\u4e49\u7b49\u3002</p>"},{"location":"Online%20CS%20Courses/CS106L/#slide_note","title":"Slide Note","text":""},{"location":"Online%20CS%20Courses/CS106L/#lec3_initialization_referrence","title":"lec3 Initialization &amp; referrence","text":"<ol> <li>\u521d\u59cb\u5316</li> <li>referrence</li> <li>cv-type</li> <li>You can\u2019t declare a non-const reference to a const variable    </li> </ol>"},{"location":"Online%20CS%20Courses/CS106L/#lec4_stream","title":"lec4 Stream","text":"<ol> <li> <p>cerr and clog</p> <p>cerr: used to output errors clog: used for non-critical event logging</p> </li> <li> <p>getline    </p> <p>\u6ce8\u610fgetline\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u6700\u597d\u4e0d\u8981\u548ccin\u6df7\u7528\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u95ee\u9898\u3002</p> </li> </ol>"},{"location":"Online%20CS%20Courses/CS106L/#lec5_class","title":"lec5 Class","text":"<ol> <li>How to write .h and .cpp file</li> <li>To make alias    <pre><code>Private:\n   /// An example of type aliasing\n   using String = std::string;\n   String name;\n   String state;\n   int age;\n</code></pre></li> <li>How to use <code>this</code> pointer    <pre><code>void Person::set_name(const std::string&amp; name) {\n   this-&gt;name = name;\n}\n</code></pre></li> <li> <p>Container adapters\uff1a\u4f8b\u5982queue\u4e2d\u7684deque\u548clist    <pre><code>std::queue&lt;int, std::list&lt;int&gt;&gt; q;\n</code></pre></p> </li> <li> <p>virtual \u5173\u952e\u8bcd \u7528\u4e8e\u58f0\u660e\u865a\u51fd\u6570\u3002\u865a\u51fd\u6570\u662f\u5728\u57fa\u7c7b\u4e2d\u4f7f\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u4e2d\u88ab\u91cd\u5199\uff08\u8986\u76d6\uff09\u3002\uff1a    <pre><code>class Base {\npublic:\n   virtual void show() {\n      std::cout &lt;&lt; \"Base::show() called\" &lt;&lt; std::endl;\n   }\n};\n\nclass Derived : public Base {\npublic:\n   void show() override {\n      std::cout &lt;&lt; \"Derived::show() called\" &lt;&lt; std::endl;\n   }\n};\n</code></pre></p> </li> </ol> <p>\u800c\u5982\u679c\u4f7f\u7528\u7eaf\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u6bcf\u4e2a\u57fa\u7c7b\u4f7f\u7528\u90fd\u4e00\u5b9a\u8981\u91cd\u5199\u8fd9\u4e2a\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002    <pre><code>virtual double area() const = 0;\n</code></pre></p> <p>\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801\uff1a</p> <p>\u8bf7\u6ce8\u610fconstructor\u53d8\u91cf\u540d\u7684\u547d\u540d\u6280\u5de7\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u548c\u6210\u5458\u53d8\u91cf\u91cd\u540d\u3002</p>"},{"location":"Online%20CS%20Courses/CS106L/#lec6_template_class","title":"lec6 Template class","text":"<ol> <li> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u6a21\u677f\u7c7b\uff1f    - \u4ee3\u7801\u590d\u7528    - \u7c7b\u578b\u5b89\u5168    - \u6027\u80fd\u4f18\u5316    </p> </li> <li> <p>\u5728.h\u6587\u4ef6\u4e2d\u5fc5\u987b\u5305\u542b.h\u548c.cpp\u6587\u4ef6    <pre><code>#include \"source.cpp\"\n</code></pre></p> </li> <li> <p>const \u7684\u4f7f\u7528    <pre><code>std::string stringify(const Student&amp; s){\n   return s.getName() + \" is \" + std::to_string(s.getAge()) +\n   \" years old.\" ;\n}\n</code></pre>    \u7531\u4e8e\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053<code>getName()</code>&amp;<code>getAge()</code>\u51fd\u6570\u662f\u5426\u4f1a\u6539\u53d8s\u7684\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u51fd\u6570\u540e\u9762\u52a0\u4e0aconst\u5173\u952e\u8bcd\u3002     </p> </li> <li> <p>throw exception    <pre><code>void Student::setAge(int age) {\n   if (age &lt; 0) {\n      throw std::invalid_argument(\"Age cannot be negative\");\n   }\n   this-&gt;age = age;\n}\n</code></pre> </p> </li> <li> <p>const_cast \u4f7f\u7528\u6280\u5de7    </p> </li> </ol>"},{"location":"Online%20CS%20Courses/CS106L/#lec7_template_function","title":"lec7 template function","text":"<ol> <li>An example    </li> <li>Constraints and concepts    </li> </ol> Complex Reference <p> 3. \u4f7f\u7528template\u53ef\u4ee5\u66f4\u6709\u6548\u7387\uff1a    <pre><code>template&lt;unsigned1&gt;\nstruct Factorial {\n   enum value =n * Factorial&lt;n - 1&gt;::value };\n};\ntemplate&lt;&gt;// template class \"specializationstruct \nFactorial&lt;0&gt;{enum fvalue=1};\nstd::cout &lt;&lt;Factorial&lt;10&gt;::value &lt;&lt; endl;//prints 3628800, but run duringcompile time!\n</code></pre> 4. constexpr: \u7528\u4e8e\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u503c    <pre><code>constexpr int factorial(int n) {\n   return n &lt;= 1 ? 1 : n * factorial(n - 1);\n}\n</code></pre></p>"},{"location":"Online%20CS%20Courses/CS106L/#lec8_function_and_lambda","title":"lec8 function and lambda","text":"<ol> <li>function pointer    </li> <li>lambda expression    <pre><code>int limit = 5;\nauto is_greater_than_limit = [limit](int value) {\n   return value &gt; limit;\n};\n</code></pre> </li> <li>Functor    </li> <li>virtual function: can be overrided by derived class    </li> <li>The STL implements tons of cool algorithms that we can use without rewriting them! </li> </ol>"},{"location":"Online%20CS%20Courses/CS106L/#lec9_operator_overloading","title":"lec9 Operator Overloading","text":"<ol> <li> <p>fraction example\uff1a https://replit.com/@havenw/simplefraction </p> </li> <li> <p>friend\u5173\u952e\u8bcd\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u51fd\u6570\u8bbf\u95ee\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u5b83\u6709\u52a9\u4e8e\u5b9e\u73b0\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4f46\u8bf7\u6ce8\u610f\u4ed6\u4f1a\u7834\u574f\u5c01\u88c5\u6027\u3002    <pre><code>class Fraction {\npublic:\n   friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const Fraction&amp; f);\n};\n</code></pre> </p> </li> </ol> <p></p>"},{"location":"Online%20CS%20Courses/CS106L/#lec10_special_member_function","title":"lec10 Special Member Function","text":"<p>Class has three main part: the constructor and destructor, member variables, and functions.</p> <p>Totaly, there are 6 special member functions: - Default constructor - Copy constructor - Copy assignment operator - Move constructor - Move assignment operator - Destructor</p> <p>The compiler will generate these functions for you if you don't define them yourself. However, if you define any of these functions, the compiler will not generate the others for you.</p> <p>Example:</p> <ol> <li>\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d    <pre><code>#include &lt;iostream&gt;\n\nclass ShallowCopyExample {\nprivate:\n   int* data;\n\npublic:\n   // \u6d45\u62f7\u8d1d\u7684\u6784\u9020\u51fd\u6570\n   ShallowCopyExample(const ShallowCopyExample&amp; other) {\n      data = other.data;  // \u53ea\u662f\u590d\u5236\u6307\u9488\uff0c\u800c\u4e0d\u662f\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u6570\u636e\n   }\n\n   // \u6df1\u62f7\u8d1d\u7684\u6784\u9020\u51fd\u6570\n   DeepCopyExample(const DeepCopyExample&amp; other) {\n      data = new int(*other.data);  // \u5206\u914d\u65b0\u7684\u5185\u5b58\uff0c\u5e76\u590d\u5236\u6570\u636e\n   }\n\n   // \u6790\u6784\u51fd\u6570\n   ~ShallowCopyExample() {\n      delete data;  // \u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\n   }\n};\n\nint main() {\n   ShallowCopyExample original;\n   ShallowCopyExample shallowCopy = original;  // \u6d45\u62f7\u8d1d\n\n   DeepCopyExample deepCopy = original;  // \u6df1\u62f7\u8d1d\n\n   return 0;\n}\n</code></pre></li> </ol> <p>attention</p> <p>If you have to define a destructor, copy constructor, or copy assignment operator, you should define all three!    - Needing one signifies you\u2019re handling certain resources manually.    - We then should handle the creation, assignment, use, and destruction of those resources ourselves!    </p>"},{"location":"Online%20CS%20Courses/CS106L/#lec_raii_smart_pointer","title":"lec RAII &amp; smart pointer","text":"<ol> <li>\u4e00\u6bb5\u4ee3\u7801\u4e2d\u5b58\u5728\u8bb8\u591a\u79cd\u53ef\u80fd\u7684code path\uff0c \u6211\u4eec\u9700\u8981\u7559\u610f\u662f\u5426\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002    \uff5c \uff5c Acquire \uff5c Release\uff5c    \uff5cHeap Memory | new | delete|    | Files | open | close|    | Locks | try_lock | unlock|    | Socket | socket | close |</li> <li> <p>Exception: </p> </li> <li> <p>Unique_pointer: can not be copied.    </p> </li> </ol>"},{"location":"Online%20CS%20Courses/CS106L/note/","title":"Assignment Note","text":"<p>\u8fd9\u91cc\u662f\u5bf9\u6bcf\u6b21\u4f5c\u4e1a\u7684\u4e00\u4e9b\u8981\u70b9\u548c\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u7684\u8bb0\u5f55</p>"},{"location":"Online%20CS%20Courses/CS106L/note/#assignment_1","title":"Assignment 1","text":"<ol> <li> <p>\u91cd\u8f7d\u8fd0\u7b97\u7b26 <pre><code>bool operator==(const Course &amp;other) const {\n    return title == other.title &amp;&amp; number_of_units == other.number_of_units &amp;&amp;\n           quarter == other.quarter;\n  }\n</code></pre></p> </li> <li> <p>auto \u5173\u952e\u5b57\u4f7f\u7528 <pre><code>void delete_elem_from_vector(std::vector&lt;Course&gt; &amp;v, Course &amp;elem) {\n  auto it = std::find(v.begin(), v.end(), elem);\n  v.erase(it);\n}\n</code></pre></p> </li> <li> <p>C\u4e2d\u5d4c\u5957python\u8fdb\u7a0b\u7684\u65b9\u6cd5 <pre><code>FILE *pipe = popen(\"python3 utils/autograder.py\", \"r\");\n  if (!pipe)\n    return -1;\n\n  char buffer[128];\n  while (!feof(pipe)) {\n    if (fgets(buffer, 128, pipe) != NULL)\n      std::cout &lt;&lt; buffer;\n  }\n  pclose(pipe);\n</code></pre></p> </li> <li> <p>vector \u7684\u4e09\u79cd\u904d\u5386\u65b9\u5f0f <pre><code>// \u4e0b\u6807\nstd::vector&lt;int&gt; vec = {1, 2, 3, 4, 5};\nfor (int i = 0; i &lt; vec.size(); ++i) {\n    std::cout &lt;&lt; vec[i] &lt;&lt; \" \"; // \u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\n}\n\n// \u8fed\u4ee3\u5668\nfor (std::vector&lt;int&gt;::iterator it = vec.begin(); it != vec.end(); ++it) {\n    std::cout &lt;&lt; *it &lt;&lt; \" \"; // \u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\n}\n\n// \u8303\u56f4for\u5faa\u73af\nfor (int i : vec) {\n    std::cout &lt;&lt; i &lt;&lt; \" \"; // \u8f93\u51fa\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\n}\n</code></pre></p> </li> </ol>"},{"location":"Online%20CS%20Courses/CS106L/note/#assignment_2_marriage_pact","title":"Assignment 2 Marriage pact","text":""},{"location":"Online%20CS%20Courses/CS106X/","title":"CS106X","text":"<p>\u8fd9\u91cc\u662fCS106X\uff0c\u6211\u771f\u7684\u597d\u6c14\u611f\u89c9\u81ea\u5df1\u60f3\u5b66\u7684\u8bfe\u7a0b\u592a\u591a\u4f46\u6ca1\u6709\u7cbe\u529b\u9762\u9762\u4ff1\u5230\uff0cCS61B\u7ecf\u8fc7\u4e00\u5b9a\u7684\u5c1d\u8bd5\u89c9\u5f97\u548c\u672c\u5b66\u671f\u7684\u8bfe\u7a0b\u5185\u5bb9\u504f\u5dee\u7565\u5927\uff0c\u53ef\u80fd\u66f4\u9002\u5408\u5728\u5047\u671f\u7684\u65f6\u5019\u5b66\u4e60\uff0c\u6545\u5728\u7f51\u4e0a\u770b\u5230\u8fd9\u95e8\u4e0eZJU-FDS\u6bd4\u8f83\u76f8\u4f3c\u7684\u8bfe\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u8bfe\u5916\u8865\u5145\u7684\u5b66\u4e60\u53c2\u8003\u3002</p> <p>\u7f51\u7ad9\u8fde\u63a5\uff1ahttp://web.stanford.edu/class/cs106x/handouts.html</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/","title":"Note","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#cs50_ai","title":"CS50 AI","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#lecture0_search","title":"Lecture0    search","text":"<ul> <li> <p>Knowledge: draw inference from information.</p> </li> <li> <p>Uncertain/Probably</p> </li> <li> <p>Optimization</p> </li> <li> <p>Learning</p> </li> <li>Neural networks: computer analog to that sort of idea.</li> <li>Language.</li> </ul>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#search_problem","title":"Search Problem :","text":"<ol> <li>Result(s,a): state &amp; action</li> <li>State space: the set of all states reachable from initial state.</li> <li>graphic associate all states and we need to know the  goal test.</li> <li>path cost: we hope it could be low.(minimize)</li> </ol>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#general_search","title":"General Search","text":"<p>a data structure that keeps track of</p> <p></p> <p>to avoid the mistakes, we need add the node to explored set.</p> <p>pseudocode:\u4f2a\u4ee3\u7801</p> <p>Depth-First Search \u2194 Breadth-First Search</p> <p>Heuristic function? leads Greedy Best-First Search.</p> <p>However, the Greedy Best-First Search is not always best for finding the shortest way. The A* Search generates.</p> <p></p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#adversarial_search_tic-tac-toe","title":"Adversarial Search \uff08tic-tac-toe \u4e95\u5b57\u68cb\uff09","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#alpha-beta_pruning","title":"Alpha-Beta Pruning","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#depth-limited_minimax","title":"Depth-Limited Minimax","text":"<p>Evaluation function that estimate the expected utility of the game from a given state.</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#lecture1_knowledge","title":"Lecture1 Knowledge","text":"<p>Knowledge-based agents that reason by operating on internal representation of knowledge.</p> <p>assertion\u65ad\u8a00</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#proposition_knowledge","title":"Proposition(\u547d\u9898) Knowledge","text":"<p>five logical connectives:</p> <p> </p> <p>implication: only P is true and Q is false ,the result is false.</p> <p>biconditional: both P &amp; Q are true or false leads true .</p> <ul> <li>entailment: A is true , B is true.</li> </ul> <p>If we wonder whether a logic is right, we can check it in all model.</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#knowledge_engineering","title":"Knowledge Engineering","text":"<p>Game Clue</p> <p></p> <p></p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#lecture2_probability","title":"Lecture2  Probability","text":"<p>Probably ultimately boils down to (\u5f52\u7ed3\u4e3a) the idea(like roll a die)</p> <p>\\(0 \\leq P(\\omega) \\leq 1\\)  &amp;  \\(\\sum_{\\omega\\in\\Omega}^{} P(\\omega) = 1\\)</p> <p>Negative: \\(P(\\neg a) = 1 - P(a)\\)</p> <p>Marginalization:\\(P(a) = P(a,b) + P(a,\\neg b)\\)</p> <p></p> <p></p> <p>calculate solution\uff1a\\(\\(P(a|b) =\\frac{P(a \\land b)}{P(b)}\\)\\)</p> <p>Independence is crucial. When a &amp; b is independent, \\(P(a \\land b)=P(a) \\times P(b)\\)</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#bayers_rule","title":"Bayer's Rule","text":"<p>$ P(b|a) = \\frac{P(b) \\times P(a|b)}{P(a)} $</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#joint_probability","title":"Joint Probability","text":"<p>$ P(C|rain) = \\alpha \\times P(C, rain) $</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#marginalization","title":"Marginalization","text":"<p>$ P(X = x_i) = \\sum_{j}P(X = x_i, Y = y_j) = \\sum_{j}P(X = x_i| Y = y_j)P(Y = y_j) $</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#condition","title":"Condition","text":"<p>$ P(a) = P(a|b)P(b) + P(a|\\neg b)P(\\neg b) $</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#bayesian_network","title":"Bayesian Network","text":"<p>data structure that represents the dependencies among random variable </p> <p></p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#markov","title":"Markov","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#lecture_5","title":"Lecture 5","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#active_function","title":"Active function","text":"<p>\\(h(x_1, x_2)= w_0 + w_1 x_1 + w_2 x_2\\)</p> <p>weight 1 &amp; 2, and bias \\(w_0\\)</p> <p></p> <p></p> <p></p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#gradient_descent","title":"Gradient Descent","text":"<p>Stochastic(\u968f\u673a) Gradient Descent: One data point</p> <p>Mini-Batch: One small batch .</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#perceptron","title":"Perceptron\uff08\u611f\u77e5\u673a\uff09","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#overfitting","title":"Overfitting","text":""},{"location":"Online%20CS%20Courses/CS50%20AI/note/#computer_vision_cnn","title":"Computer Vision &amp; CNN","text":"<p>max pooling always be used.</p> <p></p> <p>more resilient &amp; robust</p>"},{"location":"Online%20CS%20Courses/CS50%20AI/note/#rnn","title":"RNN","text":"<ol> <li>feed-forward NN</li> </ol>"},{"location":"Online%20CS%20Courses/CS61B/","title":"CS61B","text":""},{"location":"Online%20CS%20Courses/CS61B/note/","title":"Note","text":""},{"location":"Online%20CS%20Courses/CS61B/note/#lecture_1_introduction","title":"Lecture 1 Introduction","text":""},{"location":"Online%20CS%20Courses/CS61B/note/#crash_course_to_java","title":"Crash course to Java","text":"<p>\u5173\u4e8eJava\u8bed\u6cd5\u7684\u901f\u6210\u8bfe</p> <ol> <li>I totally think java is truly similar to C, so I just write down some important or easily mistakes .</li> <li>Note that <code>^</code> in Java is the \u201cXOR\u201d operator, not the exponentiation operation. That is, <code>2 ^ 10</code> is valid code, but it will return <code>8</code>, not <code>1024</code>.</li> <li>Java like python in sow the string.</li> <li></li> <li>If a type starts with a capital letter, it is likely a reference type.</li> <li></li> <li></li> <li>\u5173\u4e8eList\u3001Set\u548cDictionary\u7684\u90e8\u5206\u6211\u653e\u5230\u540e\u9762\u5b66\u4e60\uff0c\u56e0\u4e3a\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u7684\u6846\u67b6\u642d\u5efa\u7684\u8fd8\u4e0d\u591f\u5b8c\u5584\uff0cclass\u662f\u4e2a\u503c\u5f97\u597d\u597d\u5b66\u4e60\u7684\u5730\u65b9\u3002</li> <li></li> </ol>"},{"location":"Online%20CS%20Courses/CS61B/note/#something_about_basic_oop","title":"Something about basic OOP","text":"<p>\u7531\u4e8e\u81ea\u5df1\u5728\u8fd9\u65b9\u9762\u7684\u77e5\u8bc6\u6ca1\u6709\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u5b66\u4e60\uff0c\u6545\u901a\u8fc7CS61A\u7684\u90e8\u5206\u6765\u8865\u5145\u5b8c\u6210\u3002</p>"},{"location":"Online%20CS%20Courses/CS61B/note/#class","title":"Class","text":"<p>A class serves as a template for its instance.</p> <p></p> <pre><code># \u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u503c\u5f97\u597d\u597d\u7406\u89e3\nclass Worker:\n    greeting = 'Sir'\n    def __init__(self):\n        self.elf = Worker\n    def work(self):\n        return self.greeting + ', I work'\n    def __repr__(self):\n        return Bourgeoisie.greeting\n\nclass Bourgeoisie(Worker):\n    greeting = 'Peon'\n    def work(self):\n        print(Worker.work(self))\n        return 'I gather wealth'\n\n&gt;&gt;&gt; jack = Worker()\n&gt;&gt;&gt; john = Bourgeoisie()\n&gt;&gt;&gt; jack.greeting = 'Maam'\n&gt;&gt;&gt; Worker().work()\n'Sir, I work'\n&gt;&gt;&gt; jack\nPeon\n&gt;&gt;&gt; jack.work()\n'Maam, I work'\n&gt;&gt;&gt; john.work()\nPeon, I work\n'I gather wealth'\n&gt;&gt;&gt; john.elf.work(john)\n'Peon, I work'\n</code></pre> <p></p>"},{"location":"Online%20CS%20Courses/CS61B/note/#attribute_inherent","title":"Attribute &amp; Inherent","text":"<pre><code>class customer:\n    interests = 0.04\n    def __init__(self, name, account):\n        self.account = account\n        self.name = name\n\n&gt;&gt;&gt; jim_customer = customer('jim', 1000)\n# \u5f53\u6211\u4eec\u5bf9jim\u7684interests\u5355\u72ec\u505a\u66f4\u6539\u65f6\u66f4\u6539\uff0c\u5426\u5219\u5018\u82e5\u6211\u4eec\u66f4\u6539customer.interest\u7684\u503c\uff0cjim.interest\u7684\u503c\u4f1a\u968f\u4e4b\u6539\u53d8\u3002\n</code></pre> <p>\u5173\u4e8e\u591a\u4e2a\u7c7b\u7ee7\u627f\u7684\u95ee\u9898\u5728CS61A\u4e2d\u8bb2\u7684\u662f\u975e\u5e38\u6d45\u7684\uff0c\u6839\u636eGPT\u7684\u56de\u7b54\u5982\u4e0b\uff1a</p> <p>\u5f53\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e86\u4e24\u4e2a\u7236\u7c7b\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u7236\u7c7b\u4e2d\u90fd\u6709\u76f8\u540c\u547d\u540d\u7684\u51fd\u6570\u65f6\uff0cPython\u4f1a\u6309\u7167\u7279\u5b9a\u7684\u987a\u5e8f\u6765\u786e\u5b9a\u7ee7\u627f\u7684\u4f18\u5148\u987a\u5e8f\u3002\u8fd9\u4e2a\u987a\u5e8f\u88ab\u79f0\u4e3a\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f\uff08Method Resolution Order\uff0c\u7b80\u79f0MRO\uff09\u3002</p> <p>\u5728Python\u4e2d\uff0cMRO\u662f\u901a\u8fc7C3\u7ebf\u6027\u5316\u7b97\u6cd5\u6765\u786e\u5b9a\u7684\u3002\u8be5\u7b97\u6cd5\u4f1a\u6839\u636e\u7c7b\u7684\u7ee7\u627f\u987a\u5e8f\u548c\u7ee7\u627f\u5173\u7cfb\u6765\u751f\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f\u5217\u8868\u3002Python\u4f1a\u6309\u7167\u8fd9\u4e2a\u5217\u8868\u7684\u987a\u5e8f\u67e5\u627e\u65b9\u6cd5\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u65b9\u6cd5\u4e3a\u6b62\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPython\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\u7684\u65b9\u5f0f\u6765\u786e\u5b9aMRO\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4f1a\u5148\u641c\u7d22\u7b2c\u4e00\u4e2a\u7236\u7c7b\uff0c\u7136\u540e\u518d\u641c\u7d22\u7b2c\u4e8c\u4e2a\u7236\u7c7b\u3002\u5982\u679c\u4e24\u4e2a\u7236\u7c7b\u90fd\u6709\u76f8\u540c\u547d\u540d\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u7ee7\u627f\u7684\u662f\u7b2c\u4e00\u4e2a\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u7c7b <code>Child</code> \u7ee7\u627f\u4e86\u4e24\u4e2a\u7236\u7c7b <code>Parent1</code> \u548c <code>Parent2</code>\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u7236\u7c7b\u4e2d\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a <code>method</code> \u7684\u65b9\u6cd5\u3002\u90a3\u4e48 <code>Child</code> \u7c7b\u7ee7\u627f\u7684\u662f <code>Parent1</code> \u7c7b\u4e2d\u7684 <code>method</code> \u65b9\u6cd5\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u663e\u5f0f\u5730\u6307\u5b9a\u7ee7\u627f\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>super()</code> \u51fd\u6570\u6765\u8c03\u7528\u7279\u5b9a\u7236\u7c7b\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c<code>super().method()</code> \u5c06\u8c03\u7528\u7b2c\u4e00\u4e2a\u7236\u7c7b\u7684 <code>method</code> \u65b9\u6cd5\uff0c\u800c <code>Parent2.method(self)</code> \u5c06\u8c03\u7528\u7b2c\u4e8c\u4e2a\u7236\u7c7b\u7684 <code>method</code> \u65b9\u6cd5\u3002</p> <p>\u603b\u4e4b\uff0c\u5f53\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e86\u4e24\u4e2a\u7236\u7c7b\u5e76\u4e14\u8fd9\u4e24\u4e2a\u7236\u7c7b\u4e2d\u6709\u76f8\u540c\u547d\u540d\u7684\u65b9\u6cd5\u65f6\uff0cPython\u4f1a\u6839\u636eMRO\u6765\u786e\u5b9a\u7ee7\u627f\u7684\u4f18\u5148\u987a\u5e8f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ee7\u627f\u7684\u662f\u7b2c\u4e00\u4e2a\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f46\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>super()</code> \u51fd\u6570\u6765\u663e\u5f0f\u5730\u6307\u5b9a\u7ee7\u627f\u7684\u987a\u5e8f\u3002</p>"},{"location":"Online%20CS%20Courses/CS61B/note/#linked_list_tree","title":"Linked list &amp; Tree","text":"<pre><code>Link(5, Link(4, Link(3, Link_empty)))\n</code></pre>"},{"location":"Online%20CS%20Courses/CS61B/note/#tree","title":"Tree","text":""},{"location":"Online%20CS%20Courses/CS61B/note/#interface","title":"Interface","text":""},{"location":"Online%20CS%20Courses/CSAPP/","title":"CSAPP","text":""},{"location":"Online%20CS%20Courses/Fundation%20of%20computer%20science/","title":"\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u8bba","text":"<p>\u6ce8\uff1a\u8fd9\u91cc\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u8bba\u8fd9\u672c\u4e66\u4ee5\u53ca\u8ba1\u7b97\u673a\u79d1\u5b66\u901f\u6210\u8bfe\u8bb0\u5f55\u7684\u4e00\u4e9b\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u57fa\u672c\u5185\u5bb9\u3002\u4e8c\u8005\u4e00\u8d77\u98df\u7528\u4f1a\u66f4\u7f8e\u5473\u3002\u76f8\u4fe1\u5927\u5bb6\u5b66\u4e60\u5b8c\u8fd9\u4e2a\u8bfe\u7a0b\u4e4b\u540e\u4f1a\u5bf9\u201c\u8ba1\u79d1\u201d\u6709\u4e00\u4e2a\u6574\u4f53\u7684\u4e86\u89e3\uff01</p>"},{"location":"Online%20CS%20Courses/Fundation%20of%20computer%20science/#_2","title":"\u6570\u5b57\u903b\u8f91","text":""},{"location":"Online%20CS%20Courses/Fundation%20of%20computer%20science/#_3","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<ol> <li>ALU </li> </ol> <ul> <li> <p>\u7b97\u672f\u5355\u5143</p> </li> <li> <p>\u534a\u52a0\u5668</p> </li> <li>\u5168\u52a0\u5668</li> </ul> <ol> <li>\u903b\u8f91\u5355\u5143</li> </ol> <ul> <li>\u5bc4\u5b58\u5668\u548c\u5185\u5b58</li> <li>\u9501\u5b58\u5668\u548c\u5bc4\u5b58\u5668</li> </ul> <ol> <li>RAM + \u5bc4\u5b58\u5668 + ALU \u7ec4\u6210\u4e00\u4e2aCPU</li> </ol> <ul> <li> <p>\u53d6\u6307\u4ee4-\u300b\u89e3\u91ca-\u300b\u6267\u884c\uff08fetch -&gt; decode -&gt; execute) </p> </li> <li> <p>\u65f6\u949f 4. instruction and programs</p> </li> <li> <p>operation code = opcode</p> </li> <li>opcode could instruct the machine to do something on the provided address\u3002</li> <li>HALT instruction(make CPU stop)</li> <li>jump 5. Advanced CPU Designs</li> <li>cache\uff08\u7f13\u5b58\uff09\uff08synced up \u540c\u6b65\uff09</li> <li>more advanced instruction</li> <li>parallelize(\u5e76\u884c\u5904\u7406)\uff08throughput \u541e\u5410\u91cf\uff09</li> </ul>"},{"location":"Scientific%20research/","title":"\u79d1\u7814","text":"<p>\u8fd9\u91cc\u5c06\u8bb0\u5f55\u672c\u4eba\u7684\u4e00\u4e9b\u79d1\u7814\u8bb0\u5f55</p> <p>\u76ee\u5f55</p> <ul> <li> \u5927\u4e8c\u8ddf\u8d75\u6d32\u8001\u5e08\u505a\u4e9b\u5173\u4e8e<code>speech</code>\u5b66\u4e60</li> </ul> <p>\u8d44\u6e90</p> <p>PaperswithCode\u8fd9\u4e2a\u7f51\u7ad9\u63a8\u8350\u7ed9\u5927\u5bb6\u3002\u4e0d\u80fd\u5149\u5b66\u7406\u8bba\u4e0d\u770b\u4ee3\u7801\uff08bushi \u8bba\u6587\u56fe\u8c31 AI \u56fe\u8c31 vizro\uff1a\u4e00\u4e2a\u597d\u7528\u7684\u753b\u56fe\u5de5\u5177 \u8bba\u6587\u5199\u4f5c \u5434\u6069\u8fbe\u8001\u5e08\u8bba\u6587\u9605\u8bfb</p>"},{"location":"Scientific%20research/ode/","title":"Ode","text":""},{"location":"Scientific%20research/ode/#_1","title":"\u5e38\u5fae\u5206\u65b9\u7a0b","text":"<p>\u6458\u8981</p> <p>\u56e0\u4e3a\u611f\u89c9ode\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u7528\u5230\u7684\u5730\u65b9\u5b9e\u5728\u662f\u592a\u591a\uff0c\u4f46\u82e6\u4e8e\u5fae\u79ef\u5206\u548c\u6dd1\u82ac\u90fd\u6ca1\u6709\u76f8\u5173\u7684\u6559\u5b66\u800c\u662f\u5355\u72ec\u6388\u8bfe\uff0c\u6545\u800c\u5728\u6b64\u8fdb\u884c\u4e00\u4e2a\u8865\u5145\u3002</p>"},{"location":"Scientific%20research/Zz/","title":"\u8d75\u6d32\u8001\u5e08 Speech","text":"<p>\u8d75\u6d32\u8001\u5e08\u7ec4\u5185\u7406\u8bba\u4e0a\u5206\u6210\u4e86\u591a\u6a21\u6001\u548cAIGC\u4e24\u4e2a\u65b9\u5411\u3002\u6211\u76ee\u524d\u5728\u8ddfspeech\u7ec4\u5b66\u4e60\u3002</p>"},{"location":"Scientific%20research/Zz/#_1","title":"\u7ec4\u5185\u524d\u8f88\u7ecf\u5178\u8bba\u6587","text":"<p>MegaTTS Diffsinger</p>"},{"location":"Scientific%20research/Zz/#_2","title":"\u7ec4\u5185\u524d\u8f88","text":"<p>\u4efb\u610f \u5218\u9759\u6797 \u53f6\u632f\u8f89 \u9ec4\u8363\u6770</p>"},{"location":"Scientific%20research/Zz/23NIPS/","title":"\u5a92\u4f53\u9662","text":"<p>\u8001\u5e08\u7ec4\u5185\u5b66\u751f\u7684\u9879\u76ee\u548c\u4e2a\u4eba\u79d1\u7814\u5c06\u5206\u5f00\u3002\u8ddf\u7740\u5a92\u4f53\u9662\u505a\u6b4c\u58f0\u6280\u5de7\u8bc6\u522b\u548c\u5408\u6210\u3002</p>"},{"location":"Scientific%20research/Zz/23NIPS/note/","title":"\u7ec4\u4f1a\u8bb0\u5f55","text":""},{"location":"Scientific%20research/Zz/23NIPS/note/#1117","title":"11\u670817\u65e5","text":"<ol> <li>Codec</li> <li>MegaTTS</li> <li>speech\u548c\u6b4c\u58f0\u6709\u4ec0\u4e48\u672c\u8d28\u533a\u522b\u5417\uff1f</li> <li>\u8981\u5b66\u4f1a\u7f16\u6545\u4e8b\uff08\u5439\u6c34</li> <li>CVPR\u770bspeech\u770b\u7684\u5c11\uff1f\uff08\u8bb2\u7684\u5f88\u6709\u9053\u7406</li> </ol>"},{"location":"Scientific%20research/Zz/23NIPS/note/#1126","title":"11\u670826\u65e5","text":"<ol> <li>ACL\u9700\u8981\u6709\u521b\u65b0\u70b9</li> <li>\u5173\u4e8e\u4eba\u58f0\u6807\u6ce8\u548c\u673a\u5668\u6807\u6ce8\u7684\u51c6\u786e\u7387\u3002\uff08\u4e00\u822c\u6765\u8bf4\u5546\u4e1a\u5316\u7684accuracy\u8981\u5927\u4e8e0.5\uff09</li> <li>conformer backbone\u7684midi\u8bc6\u522b\u5668</li> </ol> <p>graph</p> <p></p> <ol> <li>\u5546\u4e1a\u5316\u4e4b\u540e\u4e0d\u540c\u7684\u6570\u636e\u8dd1\u201c\u74e6\u783e\u201d\uff1f</li> <li>\u5927\u8bed\u8a00\u4e0a\u6709\u5f88\u591ainfer\u7684\u6d4b\u7387\u3002</li> <li>\u534e\u4e3a\u4e4b\u540e\u6570\u636e\u7684\u6807\u51c6</li> </ol> <p>!!!  \"\"     </p>"},{"location":"Scientific%20research/Zz/23NIPS/note/#121","title":"12\u67081\u53f7","text":"<ol> <li>ACL\u8bb2\u6545\u4e8b</li> <li>ML\u7684\u521b\u65b0\u70b9\u4e0d\u591a\uff0c\u4e3b\u8981\u662f\u6545\u4e8b\u521b\u65b0\u3002</li> </ol>"},{"location":"Scientific%20research/basic%20tutor/voice%20synthesis/","title":"Voice synthesis","text":"<p>\u8bed\u97f3\u5408\u6210\u5165\u95e8 \u6df1\u5ea6\u5b66\u4e60\uff0820\u5929\uff09 \u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 https://tangshusen.me/Dive-into-DL-PyTorch/#/ \u8ddf\u7740\u6559\u7a0b\u8dd1\u4e00\u904d\u4ee3\u7801 \uff087\u5929\uff09 \u8ddf\u7740\u6559\u7a0b\u8dd1\uff0c\u4ee3\u7801\u81ea\u5df1\u6572\u4e00\u904d\uff0c\u6559\u7a0b\u4e2d\u63d0\u5230\u7684\u8bba\u6587\u90fd\u8981\u770b\uff0c\u53ef\u4ee5\u5728colab\u4e0a\u8dd1\uff087\u5929\uff09 \u6559\u7a0b\uff1ahttps://pytorch.org/tutorials/</p> <p>\u9700\u8981\u770b\u7684\u5185\u5bb9\uff1a</p> <p>Deep Learning with PyTorch: A 60 Minute Blitz Learning PyTorch with Examples What is torch.nn really? Visualizing Models, Data, and Training with TensorBoard Text\u5168\u90e8 Audio\u5168\u90e8 \u770b\u61c2Transformer \uff085\u5929\uff09 \u8bba\u6587\uff1aAttention Is All You Need \u53c2\u8003\u8d44\u6599\uff1ahttp://jalammar.github.io/illustrated-transformer/ \u6e90\u7801\u53c2\u8003\uff1ahttps://github.com/jadore801120/attention-is-all-you-need-pytorch \uff08\u53ef\u4ee5\u4e0d\u7528\u8dd1\uff0c\u4f46\u662f\u9700\u8981\u7ed3\u5408\u8bba\u6587\u7406\u89e3\u6a21\u578b\u5185\u90e8\u7684\u6a21\u5757\uff09 \u8bed\u97f3\u5408\u6210\u7406\u8bba\u77e5\u8bc6\uff083\u5929\uff09 \u8bed\u97f3\u5408\u6210 TTS (Text-To-Speech) \u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f https://www.zhihu.com/question/26815523/answer/220693948 https://zhuanlan.zhihu.com/p/113282101 Tacotron&amp;Tacotron2\u2014\u2014\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u7aef\u5230\u7aef\u8bed\u97f3\u5408\u6210\u6a21\u578b\uff1a\u001fhttps://zhuanlan.zhihu.com/p/101064153 Understanding the Mel Spectrogram\uff1ahttps://medium.com/analytics-vidhya/understanding-the-mel-spectrogram-fca2afa2ce53 https://towardsdatascience.com/getting-to-know-the-mel-spectrogram-31bca3e2d9d0 \u4e0b\u8f7d\u4e00\u4e2aadobe audition\uff0c\u62d6\u8fdb\u53bb\u4e00\u4e2a\u8bed\u97f3\u7684\u97f3\u9891\uff0c\u611f\u53d7\u4e00\u4e0b\u6ce2\u5f62\u548c\u9891\u8c31\uff0c\u6570\u636e\u53ef\u4ee5\u4ece https://keithito.com/LJ-Speech-Dataset \u4e0b\u8f7d\uff0c \u8fd9\u4e5f\u662f\u6211\u4eec\u505a\u5b9e\u9a8c\u6700\u5e38\u7528\u7684\u4e00\u4e2a\u82f1\u6587\u6570\u636e\u96c6 Understanding Tansformer: http://jalammar.github.io/illustrated-transformer/ \u4ec0\u4e48\u662f\u5171\u632f\u5cf0\uff1ahttps://www.zhihu.com/question/24190826 \u8bed\u97f3\u5e38\u7528python\u5e93 \u5927\u6982\u770b\u4e0btutorial\u5373\u53ef\uff0c\u7528\u4e8e\u4e0b\u9762\u8dd1\u6a21\u578b\u65f6\u6570\u636e\u5904\u7406\u90e8\u5206\u7684\u7406\u89e3\u548c\u53c2\u8003</p> <p>librosa https://librosa.github.io/librosa/ \u8bed\u97f3\u5408\u6210\u6a21\u578b \u4efb\u52a1\uff1a\u9605\u8bfb\u8bba\u6587\uff0c\u628a\u6e90\u7801\u8fd0\u884c\u8d77\u6765\uff08\u505a\u5b8c\u524d\u9762\u4efb\u52a1\u4ee5\u540e\uff0c\u6211\u4f1a\u7ed9\u5927\u5bb6\u53d1\u653eGPU\uff09</p> <p>Tacotron1 \uff085\u5929\uff09 Paper: Tacotron: Towards End-to-End Speech Synthesis \u6559\u7a0b\u548c\u4ee3\u7801\uff1a\u624b\u628a\u624b\u6559\u7a0b\uff1ahttps://zhuanlan.zhihu.com/p/114212581 Tacotron2 \uff085\u5929\uff09 Paper: Natural TTS Synthesis by Conditioning Wavenet on MEL Spectrogram Predictions \u4ee3\u7801\uff1ahttps://github.com/NVIDIA/tacotron2 TransformerTTS Paper: Neural Speech Synthesis with Transformer Network \u4ee3\u7801\uff1a (\u79c1\u6709\u4ee3\u7801\uff0c\u5b8c\u6210\u4e0a\u8ff0\u4e24\u4e2a\u4efb\u52a1\u4ee5\u540e\u5f00\u653e) FastSpeech Paper: FastSpeech: Fast, Robust and Controllable Text to Speech \u4ee3\u7801\uff1a(\u79c1\u6709\u4ee3\u7801\uff0c\u5b8c\u6210\u4e0a\u8ff0\u4e24\u4e2a\u4efb\u52a1\u4ee5\u540e\u5f00\u653e) FastSpeech 2 Paper: https://arxiv.org/abs/1905.09263 \u58f0\u7801\u5668\u6a21\u578b \u4efb\u52a1\uff1a\u9605\u8bfb\u8bba\u6587\uff0c\u628a\u6e90\u7801\u8fd0\u884c\u8d77\u6765\uff08\u4e0d\u7528\u8bad\u7ec3\uff0c\u76f4\u63a5\u8dd1inference\u90e8\u5206\uff0c\u5c06\u6885\u5c14\u9891\u8c31\u8f6c\u6362\u6210\u6ce2\u5f62\uff09</p> <p>WaveNet WaveGlow \uff085\u5929\uff09 Paper: A Flow-based Generative Network for Speech Synthesis \u4ee3\u7801\uff1ahttps://github.com/NVIDIA/waveglow ParallelWaveGAN \uff085\u5929\uff09 Paper: Parallel WaveGAN: A fast waveform generation model based on generative adversarial networks with multi-resolution spectrogram \u4ee3\u7801\uff1ahttps://github.com/kan-bayashi/ParallelWaveGAN \u5176\u4ed6\u8d44\u6599 https://erogol.com/text-speech-deep-learning-architectures/</p> <p>https://github.com/erogol/TTS-papers</p> <p>Reference Encoder: Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis</p> <p>*\u6b4c\u58f0\u5408\u6210 Adversarially Trained Multi-Singer Sequence-To-Sequence Singing Synthesizer: https://arxiv.org/abs/2006.10317</p> <p>DeepSinger : Singing Voice Synthesis with Data Mined From the Web: https://arxiv.org/abs/2007.04590</p>"},{"location":"Scientific%20research/mathematic%20model/","title":"Index","text":""},{"location":"Scientific%20research/mathematic%20model/#_1","title":"\u6570\u5b66\u5efa\u6a21","text":"<p>\u4e2a\u4eba\u8ba4\u4e3a\u6570\u5b66\u5efa\u6a21\u8fd9\u4e2a\u7ade\u8d5b\u65e0\u8bba\u662f\u5426\u4ece\u529f\u5229\u7684\u89d2\u5ea6\u51fa\u53d1\u90fd\u662f\u5341\u5206\u503c\u5f97\u53c2\u52a0\u7684\u3002</p> <p>\u4ed6\u4e09\u4e2a\u4eba\u7ec4\u961f\u5206\u522b\u5b8c\u6210\u7684\u4efb\u52a1\u4e5f\u662f\u79d1\u7814\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u4e00\u4e2a\u90e8\u5206\uff0c\u5728\u5927\u4e8c\u53c2\u52a0\u4f60\u53ea\u9700\u6295\u5165\u4e00\u5e74\u7684\u65f6\u95f4\u57fa\u672c\u4e0a\u80fd\u6253\u51fa\u5f88\u597d\u7684\u6210\u7ee9\uff08\u672c\u4eba\u8ba1\u5212\u6295\u51659\u4e2a\u591a\u6708\uff09</p> <p>\u6458\u8981</p> \u77e5\u8bc6\u8bb0\u5f55\u8d44\u6e90 <ul> <li>[] machine learning basic</li> </ul> <ul> <li>\u6570\u636e\u641c\u7d22</li> <li>kaggle</li> </ul>"},{"location":"Scientific%20research/mathematic%20model/mcm/","title":"Mcm","text":""},{"location":"Scientific%20research/mathematic%20model/mcm/#_1","title":"\u7f8e\u56fd\u6570\u5b66\u5efa\u6a21\u7ade\u8d5b","text":"<p>\u5927\u7eb2</p> \u6458\u8981\u8d44\u6e90 \u8d5b\u9898 \u7c7b\u578b A \u8fde\u7eed\u578b B \u79bb\u6563\u578b C \u5927\u6570\u636e D \u8fd0\u7b79\u5b66\u6216\u8005\u7f51\u7edc\u79d1\u5b66 E \u73af\u5883\u79d1\u5b66 F \u653f\u7b56 <p>\u8fd9\u91cc\u5c06\u8bb0\u5f55\u4e0b\u81ea\u5df1\u7684\u4e00\u4e9b\u5907\u8d5b\u7ecf\u9a8c</p> <p>\u7f8e\u8d5b\u6587\u6863</p>"},{"location":"ZJU_CS/","title":"ZJU CS \u8bfe\u7a0b","text":"<p>\u8fd9\u91cc\u662f\u6211\u4e0a\u8fc7\u7684\u4e00\u4e9bZJU CS\u7684\u597d\u7684\u8bfe\u7a0b\u7684\u7b14\u8bb0\u8bb0\u5f55</p>"},{"location":"ZJU_CS/ADS/","title":"ADS","text":"<p>\u672c\u8bfe\u662f23-24 spring-summer\u8bfe\u7a0b\uff0c\u7531\u738b\u707f\u8001\u5e08\u6388\u8bfe\u3002</p> <p>\u6210\u7ee9\u5360\u6bd4\uff1a10%Exercise + 10% Discussion + 30%lab + 10% midexam + 40%\u671f\u672b</p>"},{"location":"ZJU_CS/ADS/#_1","title":"\u8d44\u6e90","text":"<ul> <li>xiulao/ADS</li> <li>\u5386\u5e74\u9898</li> </ul>"},{"location":"ZJU_CS/ADS/homework/","title":"ADS Homework Review","text":"<p>PTA homework of ZJU Advanced Data Structure and Algorithm, 2024 Spring &amp; Summer.</p>"},{"location":"ZJU_CS/ADS/homework/#hw1","title":"Hw1","text":"<p>Q2-1. If the depth of an AVL tree is 6 (the depth of an empty tree is defined to be -1), then the minimum possible number of nodes in this tree is:</p> <p>A. 13</p> <p>B. 17</p> <p>C. 20</p> <p>D. 33</p> Answer <p>D\u3002</p> \\[ n_h=h_{h-1}+h_{n-2}+1 \\] depth -1 0 1 2 3 4 5 6 nodes 0 1 2 4 7 12 20 33 <p>Q2-2. Insert 2, 1, 4, 5, 9, 3, 6, 7 into an initially empty AVL tree. Which one of the following statements is FALSE?</p> <p>A. 4 is the root</p> <p>B. 3 and 7 are siblings</p> <p>C. 2 and 6 are siblings</p> <p>D. 9 is the parent of 7</p> Answer <p>B\u3002\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u56fe\u3002</p> <p> </p> <p>\u5982\u679c\u641e\u4e0d\u6e05\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u5229\u7528\u4e00\u4e0b AVL \u6811\u6a21\u62df\u3002</p> <p>Q2-3. For the result of accessing the keys 3, 9, 1, 5 in order in the splay tree in the following figure, which one of the following statements is FALSE?</p> <p>A. 5 is the root</p> <p>B. 1 and 9 are siblings</p> <p>C. 6 and 10 are siblings</p> <p>D. 3 is the parent of 4</p> Answer <p>D\u3002\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u56fe</p> <p> </p> <p>Q2-4. When doing amortized analysis, which one of the following statements is FALSE?</p> <p>A. Aggregate analysis shows that for all \\(n\\), a sequence of \\(n\\) operations takes worst-case time \\(T(n)\\) in total. Then the amortized cost per operation is therefore \\(T(n)/n\\)</p> <p>B. For potential method, a good potential function should always assume its maximum at the start of the sequence</p> <p>C. For accounting method, when an operation's amortized cost exceeds its actual cost, we save the difference as credit to pay for later operations whose amortized cost is less than their actual cost</p> <p>D. The difference between aggregate analysis and accounting method is that the later one assumes that the amortized costs of the operations may differ from each other</p> Answer <p>B\u3002B\u5e94\u8be5\u662fminimum\u3002</p> <p>Q2-5. Consider the following buffer management problem. Initially the buffer size (the number of blocks) is one. Each block can accommodate exactly one item. As soon as a new item arrives, check if there is an available block. If yes, put the item into the block, induced a cost of one. Otherwise, the buffer size is doubled, and then the item is able to put into. Moreover, the old items have to be moved into the new buffer so it costs \\(k+1\\) to make this insertion, where \\(k\\) is the number of old items. Clearly, if there are \\(N\\) items, the worst-case cost for one insertion can be \\(\\Omega(N)\\). To show that the average cost is \\(O(1)\\), let us turn to the amortized analysis. To simplify the problem, assume that the buffer is full after all the \\(N\\) items are placed. Which of the following potential functions works?</p> <p>A. The number of items currently in the buffer</p> <p>B. The opposite number of items currently in the buffer</p> <p>C. The number of available blocks currently in the buffer</p> <p>D. The opposite number of available blocks in the buffer</p> Answer <p>D\u3002\u5982\u4e0b\u56fe\u3002</p> <p> </p>"},{"location":"ZJU_CS/ADS/homework/#hw2","title":"Hw2","text":"<p>Q1-1. A 2-3 tree with 3 nonleaf nodes must have 18 keys at most. (T/F)</p> Answer <p>T\u3002\u5fc5\u7136\u4e00\u6839\u4e24\u4e2d\u95f4\uff0c233=18\u3002</p> <p>Q2-1 In the red-black tree that results after successively inserting the keys 41; 38; 31; 12; 19; 8 into an initially empty red-black tree, which one of the following statements is FALSE?</p> <p>A. 38 is the root</p> <p>B. 19 and 41 are siblings, and they are both red</p> <p>C. 12 and 31 are siblings, and they are both black</p> <p>D. 8 is red</p> Answer <p>B\u3002\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u56fe\u3002</p> <p> </p> <p>\u5982\u679c\u641e\u4e0d\u6e05\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u5229\u7528\u4e00\u4e0b RB \u6811\u6a21\u62df\u3002</p> <p>Q2-2. After deleting 15 from the red-black tree given in the figure, which one of the following statements must be FALSE?</p> <p>A. 11 is the parent of 17, and 11 is black</p> <p>B. 17 is the parent of 11, and 11 is red</p> <p>C. 11 is the parent of 17, and 11 is red</p> <p>D. 17 is the parent of 11, and 17 is black</p> Answer <p>C\u3002\u53ef\u80fd 11 \u9876\u4e0a\u53bb\uff0c\u5219 11 \u4e3a\u9ed1\u300117 \u4e3a\u7ea2\u3002</p> <p>\u4e5f\u53ef\u80fd 17 \u9876\u4e0a\u53bb\uff0c\u5219 17 \u4e3a\u9ed1\u300111 \u4e3a\u7ea2\u3002</p> <p>Q2-3. Insert 3, 1, 4, 5, 9, 2, 6, 8, 7, 0 into an initially empty 2-3 tree (with splitting). Which one of the following statements is FALSE?</p> <p>A. 7 and 8 are in the same node</p> <p>B. the parent of the node containing 5 has 3 children</p> <p>C. the first key stored in the root is 6</p> <p>D. there are 5 leaf nodes</p> Answer <p>A\u3002\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u56fe</p> <p> </p> <p>\u5982\u679c\u641e\u4e0d\u6e05\u8fc7\u7a0b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u5bf9\u5e94\u7f51\u7ad9\u7684 B+ \u6811\u6a21\u62df\uff0c\u5b83\u90a3\u91cc\u7684 B+ \u6811\u7684\u5b9a\u4e49\u4f3c\u4e4e\u548c ads \u6709\u6240\u4e0d\u540c\uff08\u91c7\u7528\u7684\u53ef\u80fd\u662f\u6570\u636e\u5e93\u7684\u5b9a\u4e49\uff09\u3002</p> <p>Q2-4. After deleting 9 from the 2-3 tree given in the figure, which one of the following statements is FALSE?</p> <p>A. the root is full</p> <p>B. the second key stored in the root is 6</p> <p>C. 6 and 8 are in the same node</p> <p>D. 6 and 5 are in the same node</p> Answer <p>D\u3002\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u56fe\u3002</p> <p> </p> <p>Q2-5. Which of the following statements concerning a B+ tree of order \\(M\\) is TRUE?</p> <p>A. the root always has between 2 and \\(M\\) children</p> <p>B. not all leaves are at the same depth</p> <p>C. leaves and nonleaf nodes have some key values in common</p> <p>D. all nonleaf nodes have between \\(\\lceil M/2\\rceil\\) and \\(M\\) children</p> Answer <p>C\u3002A\uff0c\u8003\u8651\u6839\u4e3a\u53f6\u3002B\uff0c\u6240\u6709\u53f6\u5fc5\u7136\u540c\u6df1\u3002D\uff0c\u8003\u8651\u6839\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw3","title":"Hw3","text":"<p>Q1-1. In distributed indexing, document-partitioned strategy is to store on each node all the documents that contain the terms in a certain range. (T/F)</p> Answer <p>F\u3002\u8fd9\u662f term-partitioned \u7b56\u7565\u3002</p> <p>Q1-2. When evaluating the performance of data retrieval, it is important to measure the relevancy of the answer set. (T/F)</p> Answer <p>F\u3002\u53ec\u56de\u7387\u548c\u6574\u4e2a\u7b54\u6848\u96c6\u7684\u76f8\u5173\u6027\u65e0\u5173\u3002</p> <p>Q1-3. Precision is more important than recall when evaluating the explosive detection in airport security. (T/F)</p> Answer <p>F\u3002\u5b89\u5168\u81f3\u4e0a\uff0c\u5c3d\u91cf\u90fd\u53d1\u73b0\u3002</p> <p>Q1-4. While accessing a term by hashing in an inverted file index, range searches are expensive. (T/F)</p> Answer <p>T\u3002</p> <p>Q2-1. When measuring the relevancy of the answer set, if the precision is high but the recall is low, it means that:</p> <p>A. most of the relevant documents are retrieved, but too many irrelevant documents are returned as well</p> <p>B. most of the retrieved documents are relevant, but still a lot of relevant documents are missed</p> <p>C. most of the relevant documents are retrieved, but the benchmark set is not large enough</p> <p>D. most of the retrieved documents are relevant, but the benchmark set is not large enough</p> Answer <p>B\u3002</p> <p>Q2-2. Which of the following is NOT concerned for measuring a search engine?</p> <p>A. How fast does it index</p> <p>B. How fast does it search</p> <p>C. How friendly is the interface</p> <p>D. How relevant is the answer set</p> Answer <p>C\u3002\u7406\u5de5\u79d1\u94a2\u94c1\u76f4\u7537\u4e0d\u9700\u8981\u8003\u8651\u7528\u6237\u7528\u7740\u8212\u670d\u4e0d\u8212\u670d\uff0c\u5355\u5200\u76f4\u5165\u770b\u6548\u679c\u3002</p> <p>Q2-3 There are 28000 documents in the database. The statistic data for one query are shown in the following table. The recall is: __</p> Relevant Irrelevant Retrieved 4000 12000 Not Retrieved 8000 4000 <p>A. 14%</p> <p>B. 25%</p> <p>C. 33%</p> <p>D. 50%</p> Answer <p>C\u3002</p> \\[     recall = 4000 / (4000+8000) = 33\\% \\]"},{"location":"ZJU_CS/ADS/homework/#hw4","title":"Hw4","text":"<p>Q1-1. The result of inserting keys \\(1\\) to \\(2^k-1\\) for any \\(k&gt;4\\) in order into an initially empty skew heap is always a full binary tree. (T/F)</p> Answer <p>T\u3002</p> <p>Q1-2. The right path of a skew heap can be arbitrarily long. (T/F)</p> Answer <p>T\u3002skew heap \u53ea\u6709\u8f7b\u7ed3\u70b9\u53d7\u7c7b\u4f3c leftist heap \u7684\u9650\u5236\u3002</p> <p>\u76f8\u5bf9\u800c\u8a00\uff0cleftist heap \u5c31\u4e0d\u80fd\u8fd9\u4e48\u4efb\u610f\u4e86\uff0c\u5b83\u53d7 \\(\\log N\\) \u9650\u5236\u3002</p> <p>Q2-1. The right path of a skew heap can be arbitrarily long.</p> <p>A. 2 is the root with 11 being its right child</p> <p>B. the depths of 9 and 12 are the same</p> <p>C. 21 is the deepest node with 11 being its parent</p> <p>D. the null path length of 4 is less than that of 2</p> Answer <p>D\u3002\u90fd\u662f2\uff0c\u5982\u4e0b\u56fe</p> <p> </p> <p>Q2-2. We can perform BuildHeap for leftist heaps by considering each element as a one-node leftist heap, placing all these heaps on a queue, and performing the following step: Until only one heap is on the queue,\uff0c dequeue two heaps, merge them, and enqueue the result. Which one of the following statements is FALSE?</p> <p>A. in the \\(k\\)-th run, \\(\\lceil N/2k\\rceil\\) leftist heaps are formed, each contains \\(2k\\)  nodes</p> <p>B. the worst case is when \\(N=2K\\) for some integer \\(K\\)</p> <p>C. the time complexity \\(T(N)=O( \\frac N 2 \\log 2^0 - \\frac {N} {2^2}\\log 2^1\\frac{N}{2^3}\\log 2^2 + \\cdots + \\frac {N} {2^K}\\log 2^{K-1})\\)  for some integer K so that \\(N=2K\\)</p> <p>D. the worst case time complexity of this algorithm is \\(\\Theta(N\\log N)\\)</p> Answer <p>D\u3002\u6839\u636e C\uff0c\u53ef\u5f97 \\(T=O(N)\\)\u3002</p> <p>Q2-3. Insert keys 1 to 15 in order into an initially empty skew heap. Which one of the following statements is FALSE?</p> <p>A. the resulting tree is a complete binary tree</p> <p>B. there are 6 leaf nodes</p> <p>C. 6 is the left child of 2</p> <p>D. 11 is the right child of 7</p> Answer <p>B\u3002\u6709 8 \u4e2a\u53f6\u7ed3\u70b9\u3002\u5982\u4e0b\u56fe  </p> <p>Q2-4. Merge the two skew heaps in the following figure. Which one of the following statements is FALSE?</p> <p>A. 15 is the right child of 8</p> <p>B. 14 is the right child of 6</p> <p>C. 1 is the root</p> <p>D. 9 is the right child of 3</p> Answer <p>A\u300215 \u662f 8 \u7684\u5de6\u5b50\u7ed3\u70b9\u3002\u5982\u4e0b\u56fe</p> <p> </p>"},{"location":"ZJU_CS/ADS/homework/#hw5","title":"Hw5","text":"<p>Q2-1. Which of the following binomial trees can represent a binomial queue of size 42?</p> <p>A. \\(B_0B_1B_2B_3B_4B_5\\)</p> <p>B. \\(B_1B_3B_5\\)</p> <p>C. \\(B_1B_5\\)</p> <p>D. \\(B_2B_4\\)</p> Answer <p>B\u3002\\(2^1+2^3+2^3=2+8+32=42\\)</p> <p>Q2-2. For a binomial queue, __ takes a constant time on average.</p> <p>A. merging</p> <p>B. find-max</p> <p>C. delete-min</p> <p>D. insertion</p> Answer <p>D\u3002\u5747\u644a\u90fd\u5e38\u6570\u65f6\u95f4\u4e86\uff0c\u5e73\u5747\u80af\u5b9a\u662f\u5e38\u6570\u65f6\u95f4\u3002</p> <p>find-max \u6bd4\u8f83\u96be\u64cd\u4f5c\uff0cfind-min \u4e5f\u662f\u5e38\u6570\u65f6\u95f4\u3002</p> <p>merge \u548c delete-min \u90fd\u662f \\(O(\\log N)\\)\u3002</p> <p>Q2-3. Merge the two binomial queues in the following figure. Which one of the following statements must be FALSE?</p> <p>A. there are two binomial trees after merging, which are \\(B_2\\) and \\(B_4\\)</p> <p>B. 13 and 15 are the children of 4</p> <p>C. if 23 is a child of 2, then 12 must be another child of 2</p> <p>D. if 4 is a child of 2, then 23 must be another child of 2</p> Answer <p>D\u30024 \u5982\u679c\u662f 2 \u7684\u5b50\u7ed3\u70b9\uff0c\u8bf4\u660e 23 \u5bf9\u5e94\u5b50\u6811\u4fdd\u6301\u4e3a \\(B_2\\)\uff0c\u4e0d\u53c2\u4e0e merge\u3002</p> <p>Q2-4. Delete the minimum number from the given binomial queues in the following figure. Which one of the following statements must be FALSE?</p> <p>A. there are two binomial trees after deletion, which are \\(B_1\\) and \\(B_2\\)</p> <p>B. 11 and 15 can be the children of 4</p> <p>C. 29 can never be the root of any resulting binomial tree</p> <p>D. if 29 is a child of 4, then 15 must be the root of \\(B_1\\)</p> Answer <p>C\u300229-55 \u53ef\u4ee5\u81ea\u6210 \\(B_1\\)\uff0c\u4e0d\u53c2\u4e0e merge\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw6","title":"Hw6","text":"<p>Q2-1. In the Tic-tac-toe game, a \"goodness\" function of a position is defined as  \\(f(P)=W_{computer}-W_{human}\\), where \\(W\\) is the number of potential wins at position \\(P\\).</p> <p>In the following figure, \\(O\\) represents the computer and \\(X\\) the human. What is the goodness of the position of the figure?</p> <p>A. -1</p> <p>B. 0</p> <p>C. 4</p> <p>D. 5</p> Answer <p>B\u3002=3-3=0</p> <p>Q2-2. Given the following game tree, which node is the first one to be pruned with \\(\\alpha-\\beta\\) pruning algorithm?</p> <p>A. a</p> <p>B. b</p> <p>C. c</p> <p>D. d</p> Answer <p>C\u3002\u641c\u7d22\u5230 b \u7b49\u4e8e 86 \u65f6\uff0c\u6839\u636e\u7956\u7ed3\u70b9\u662f 68\uff0cmin \u7684\u7b56\u7565\uff0cc \u7ed3\u70b9\u4e0d\u9700\u8981\u7ee7\u7eed\u641c\u7d22\u4e86\uff0c\u5373 \\(\\beta\\) \u526a\u679d\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw7","title":"Hw7","text":"<p>Q2-1. When solving a problem with input size \\(N\\) by divide and conquer, if at each stage the problem is divided into 8 sub-problems of equal size \\(N/3\\), and the conquer step takes \\(O(N^2\\log N)\\) to form the solution from the sub-solutions, then the overall time complexity is __. </p> <p>A. \\(O(N^2\\log N)\\)</p> <p>B. \\(O(N^2\\log^2N)\\)</p> <p>C. \\(O(N^3\\log N)\\)</p> <p>D. \\(O(N^{\\log8/\\log3})\\)</p> Answer <p>A\u3002</p> \\[     T(N)=8T(N/3)+O(N^2\\log N) \\] <p>\u5219 \\(N^{\\log_ba}=N^{\\log_38}&lt;N^2&lt;N^2\\log N\\)(\u91cf\u7ea7\u4e0a)\u3002</p> <p>Q2-2. To solve a problem with input size \\(N\\) by divide and conquer algorithm, among the following methods, __ is the worst. </p> <p>A. divide into 2 sub-problems of equal complexity  \\(N/3\\) and conquer in \\(O(N)\\)</p> <p>B. divide into 2 sub-problems of equal complexity  \\(N/3\\) and conquer in \\(O(NlogN)\\)</p> <p>C. divide into 3 sub-problems of equal complexity  \\(N/2\\) and conquer in \\(O(N)\\)</p> <p>D. divide into 3 sub-problems of equal complexity \\(N/3\\) and conquer in \\(O(NlogN)\\)</p> Answer <p>C\u3002</p> <p>A\uff0c\\(T(N)=2T(N/3)+O(N)\\)\uff0c\u5219 \\(N^{\\log_ba}=N^{\\log_32}&lt;N\\)\uff0c\\(T=O(N)\\)\u3002</p> <p>B\uff0c\\(T(N)=2T(N/3)+O(N\\log N)\\)\uff0c\u5219 \\(N^{\\log_ba}=N^{\\log_32}&lt;N&lt;N\\log N\\)\uff0c\\(T=O(N\\log N)\\)\u3002</p> <p>C\uff0c\\(T(N)=3T(N/2)+O(N)\\)\uff0c\u5219 \\(N^{\\log_ba}=N^{\\log_23}&gt;N\\)\uff0c\\(T=O(N^{\\log_23})\\)\u3002</p> <p>D\uff0c\\(T(N)=3T(N/3)+O(N\\log N)\\)\uff0c\u5219 \\(N^{\\log_ba}=N\\)\uff0c\\(T=O(N\\log^2 N)\\)\u3002</p> <p>Q2-3. 3-way-mergesort : Suppose instead of dividing in two halves at each step of the mergesort, we divide into three one thirds, sort each part, and finally combine all of them using a three-way-merge. What is the overall time complexity of this algorithm ?</p> <p>A. \\(O(n(\\log^2 n))\\)</p> <p>B. \\(O(n^2\\log n)\\)</p> <p>C. \\(O(n\\log n)\\)</p> <p>D. \\(O(n)\\)</p> Answer <p>B\u3002</p> <p>\\(T(N)=3T(N/3)+O(N)\\)\uff0c\u6545 \\(O(N\\log N)\\)</p> <p>Q2-4. Which one of the following is the lowest upper bound of \\(T(n)\\) for the following recursion \\(T(n)=2T(\\sqrt{n})+\\log n\\)?</p> <p>A. \\(O(\\log n\\log\\log n)\\)</p> <p>B. \\(O(log^2 n)\\)</p> <p>C. \\(O(n\\log n)\\)</p> <p>D. \\(O(n^2)\\)</p> Answer <p>A\u3002</p> \\[ T(n)=2T( \\sqrt{n})+\\log n=2^kT(n^{1/2^k})+(k+1)\\log n \\] <p>\u4ee4 \\(n^{1/2^k}=2\\)\uff0c\u53ef\u5f97 \\(k=\\log\\log n\\)\u3002\u5219\u53ef\u5f97</p> \\[ T(n)=O((k+1)\\log n)=O(\\log n\\log\\log n) \\]"},{"location":"ZJU_CS/ADS/homework/#hw8","title":"Hw8","text":"<p>Q2-1. Rod-cutting Problem: Given a rod of total length \\(N\\) inches and a table of selling prices \\(P_L\\) for lengths \\(L=1,2,\u22ef,M\\). You are asked to find the maximum revenue \\(R_N\\) obtainable by cutting up the rod and selling the pieces. For example, based on the following table of prices, if we are to sell an 8-inch rod, the optimal solution is to cut it into two pieces of lengths 2 and 6, which produces revenue  \\(R_8=P_2+P_6=5+17=22\\). And if we are to sell a 3-inch rod, the best way is not to cut it at all.</p> <p>Which one of the following statements is FALSE?</p> <p>A. This problem can be solved by dynamic programming</p> <p>B. The time complexity of this algorithm is \\(O(N^2)\\)</p> <p>C. If \\(N\\leqslant M\\), we have \\(R_N=\\max\\{P_N, \\max\\limits_{1\\leqslant i&lt;N}\\{R_i+R_{N-i}\\}\\}\\)</p> <p>D. If \\(N&gt;M\\), we have \\(R_N=\\max\\limits_{1\\leqslant i&lt;N}\\{R_i+R_{N-M}\\}\\)</p> Answer <p>D\u3002</p> <p>D\uff0c\\(R_N=\\max\\limits_{1\\leqslant i&lt;N}\\{R_i+R_{N-i}\\}\\)\u3002</p> <p>Q2-2. In dynamic programming, we derive a recurrence relation for the solution to one subproblem in terms of solutions to other subproblems. To turn this relation into a bottom up dynamic programming algorithm, we need an order to fill in the solution cells in a table, such that all needed subproblems are solved before solving a subproblem. Among the following relations, which one is impossible to be computed?</p> <p>A. \\(A(i,j)=\\min(A(i\u22121,j),A(i,j\u22121),A(i\u22121,j\u22121))\\)</p> <p>B. \\(A(i,j)=F(A(\\min(i, j)\u22121,\\min(i, j)\u22121),A(\\max(i,j)\u22121,\\max(i,j)\u22121))\\)</p> <p>C. \\(A(i,j)=F(A(i,j\u22121),A(i\u22121,j\u22121),A(i\u22121,j+1))\\)</p> <p>D. \\(A(i,j)=F(A(i\u22122,j\u22122),A(i+2,j+2))\\)</p> Answer <p>D\u3002ABC \u6309\u7167 i \u548c j \u7684\u589e\u5e8f\u7b97\u5373\u53ef\u3002D \u6309\u589e\u5e8f\u4e5f\u4e0d\u5bf9\uff0c\u964d\u5e8f\u4e5f\u4e0d\u5bf9\u3002</p> <p>Q2-3. Given a recurrence equation \\(f_{i,j,k}=f_{i,j+1,k}+\\min\\limits_{0\\leqslant l\\leqslant k} \\{f_{i-1,j,l}+w_{j,l}\\}\\). To solve this equation in an iterative way, we cannot fill up a table as follows:</p> <p>A. for k in 0 to n: for i in 0 to n: for j in n to 0</p> <p>B. for i in 0 to n: for j in 0 to n: for k in 0 to n</p> <p>C. for i in 0 to n: for j in n to 0: for k in n to 0</p> <p>D. for i in 0 to n: for j in n to 0: for k in 0 to n</p> Answer <p>B\u3002</p> <p>\\(j\\) \u4e0d\u80fd\u589e\u5e8f\u7b97\uff0c\u56e0\u4e3a \\(f_{i,j,k}\\) \u4f9d\u8d56\u4e8e \\(f_{i,j+1,k}\\)\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw9","title":"Hw9","text":"<p>Q1-1. Let \\(S\\) be the set of activities in Activity Selection Problem. Then the earliest finish activity \\(a_m\\) must be included in all the maximum-size subset of mutually compatible activities of \\(S\\). (T/F)</p> Answer <p>F\u3002\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u662f\u8d2a\u5a6a\u6700\u4f18\u89e3\u3002</p> <p>Q1-2. Greedy algorithm works only if the local optimum is equal to the global optimum. (T/F)</p> Answer <p>T\u3002\u5373\u6700\u4f18\u5b50\u7ed3\u6784\u524d\u63d0\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw10","title":"Hw10","text":"<p>Q1-1. If \\(L_1\\leq_p L_2\\) and \\(L_2\\in NP\\), then \\(L_1\\in NP\\). (T/F)</p> Answer <p>T\u3002</p> <p>\u8fd9\u91cc\u7684 \\(\\leq_p\\) \u53ef\u4ee5\u8ba4\u4e3a\u662f\u96be\u5ea6\u5bf9\u6bd4\uff0c\u5176\u5b9e\u662f \\(L_1\\) \u53ef\u4ee5\u591a\u9879\u5f0f\u89c4\u7ea6\u81f3 \\(L_2\\)\u3002</p> <p>\\(L_2\\in NP\\)\uff0c\u90a3\u4e48 \\(L_2\\) \u53ef\u4ee5\u5728\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u4e0a\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3\uff0c\\(L_1\\) \u53ef\u4ee5\u5148\u591a\u9879\u5f0f\u65f6\u95f4\u89c4\u7ea6\u4e3a\\(L_2\\)\uff0c\u7136\u540e\u518d\u89e3\u51b3 \\(L_2\\)\u3002</p> <p>\u6240\u4ee5 \\(L_1\\) \u4e5f\u80fd\u591f\u5728\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u4e0a\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3\uff0c\u5373 \\(L_1\\in NP\\)\u3002</p> <p>Q1-2. All NP-complete problems are NP problems. (T/F)</p> Answer <p>T\u3002NPC \u95ee\u9898\u662f NP \u95ee\u9898\u7684\u4e00\u79cd\u3002</p> <p>Q1-3. All the languages can be decided by a non-deterministic machine. (T/F)</p> Answer <p>F\u3002\u5ffd\u7565\u4e86\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\u3002</p> <p>Q1-4. All NP problems can be solved in polynomial time in a non-deterministic machine. (T/F)</p> Answer <p>T\u3002NP \u95ee\u9898\u7684\u5b9a\u4e49\u3002</p> <p>Q1-5. If a problem can be solved by dynamic programming, it must be solved in polynomial time. (T/F)</p> Answer <p>F\u3002\u6bd4\u5982\u80cc\u5305\u95ee\u9898\uff0c\u5176\u5b9e\u4e0d\u7b97 P \u7c7b\u3002</p> <p>Q2-1. Among the following problems, __ is NOT an NP-complete problem.</p> <p>A. Vertex cover problem</p> <p>B. Hamiltonian cycle problem</p> <p>C. Halting problem</p> <p>D. Satisfiability problem</p> Answer <p>C\u3002</p> <p>C \u662f\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\u3002D \u662f\u6700\u65e9\u53d1\u73b0\u7684 NPC \u95ee\u9898\u3002</p> <p>A \u9876\u70b9\u8986\u76d6\u3001B \u54c8\u5bc6\u987f\u56de\u8def\u4e5f\u90fd\u662f NPC \u95ee\u9898\u3002</p> <p>Q2-2. Suppose \\(Q\\) is a problem in \\(NP\\), but not necessarily NP-complete.  Which of the following is FALSE?</p> <p>A. A polynomial-time algorithm for SAT  would sufficiently imply a polynomial-time algorithm for \\(Q\\).</p> <p>B. A polynomial-time algorithm for \\(Q\\) would sufficiently imply a polynomial-time algorithm for SAT.</p> <p>C. If \\(Q\\notin P\\), then \\(P\\neq NP\\).</p> <p>D. If \\(Q\\) is NP-hard, then \\(Q\\) is NP-complete.</p> Answer <p>B\u3002</p> <p>A\uff0c\u67d0\u4e2a NPC=P\uff0c\u5219\u5168\u4f53 NP=P\u3002</p> <p>B\uff0c\u5982\u679c Q \u4e0d\u662f NPC \u95ee\u9898\u5c31\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u6027\u8d28\u3002</p> <p>C\uff0c\u4e00\u4e2a NP \u4e0d\u662f P\uff0c\u5219 NP\u2260P\u3002</p> <p>D\uff0cNP-hard \u4e14 NP \u5c31\u786e\u5b9a\u4e86 NPC\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw11","title":"Hw11","text":"<p>Q1-1. Suppose ALG is an \\(\\alpha\\)-approximation algorithm for an optimization problem \\(\\prod\\) whose approximation ratio is tight. Then for every \\(\\varepsilon&gt;0\\) there is no \\((\\alpha\u2212\\varepsilon)\\)-approximation algorithm for \\(\\prod\\) unless P = NP. (T/F)</p> Answer <p>F\u3002</p> <p>\u5bf9\u4e8e\u4e00\u79cd\u7b97\u6cd5\u800c\u8a00\uff0c\u8fd1\u4f3c\u6bd4\u4e3a \\(\\alpha\\) \uff0c\u90a3\u4e48 \\(\\forall \\beta &gt; \\alpha\\) \uff0c\u90fd\u53ef\u4ee5\u8bf4 \\(\\beta\\) \u662f\u5176\u8fd1\u4f3c\u6bd4\u3002\u5982\u679c \\(\\alpha\\) \u662f tight \u7684\uff0c\u5219 \\(\\alpha\\) \u662f\u4e00\u4e2a\u4e0b\u786e\u754c\u3002</p> <p>\u4f46\u8fd9\u90fd\u53ea\u662f\u5bf9\u8fd9\u4e00\u79cd\u7b97\u6cd5\u7684\u5206\u6790\uff0c\u4e00\u4e2a tight \u7684\u8fd1\u4f3c\u6bd4\u53ea\u80fd\u8bf4\u660e\u4f60\u5bf9\u8fd9\u79cd\u7b97\u6cd5\u7684\u5206\u6790\u5230\u4f4d\u4e86\uff0c\u800c\u4e0d\u80fd\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u66f4\u597d\u7684\u7b97\u6cd5\u3002\u8fd9\u91cc\u5b8c\u5168\u662f\u4e24\u7801\u4e8b\u3002</p> <p>Q1-2. As we know there is a 2-approximation algorithm for the Vertex Cover problem. Then we must be able to obtain a 2-approximation algorithm for the Clique problem, since the Clique problem can be polynomially reduced to the Vertex Cover problem. (T/F)</p> Answer <p>F\u3002</p> <p>\u9996\u5148\uff0c\u786e\u5b9e\u6709 Clique problem \\(\\leq_p\\) Vertex Cover problem\uff0cVertex Cover problem \u4e5f\u786e\u5b9e\u6709 2-approximation \u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a problem \u8861\u91cf Cost \u7684\u6807\u51c6\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u5728 Vertex Cover problem \u4e2d\u7684 2-\u8fd1\u4f3c\u7b97\u6cd5\u5f97\u5230\u7684\u89e3\uff0c\u5728 Clique problem \u7ea6\u5316\u6210\u7684 Vertex Cover problem \u4e2d\u5f97\u5230\u7684\u89e3\u867d\u7136\u7b26\u5408 Vertex Cover problem \u7684 Cost \u6807\u51c6\u4e0b\u7684 2-\u8fd1\u4f3c\uff0c\u5374\u5e76\u4e0d\u4e00\u5b9a\u7b26\u5408 Clique problem \u6807\u51c6\u4e0b\u7684 2-\u8fd1\u4f3c\u3002</p> <p>\u56de\u987e\u56e2\u95ee\u9898 (Clique problem) \u7684\u63cf\u8ff0\uff1a\u5bfb\u627e\u6700\u5927\u5b8c\u5168\u5b50\u56fe\uff0c\u90a3\u4e48\u5bfb\u627e\u5230\u7684\u5b8c\u5168\u5b50\u56fe\u4e2d\u9876\u70b9\u6570 (\\(C_1\\)) \u8d8a\u591a\u8d8a\u597d\u3002</p> <p>\u56de\u987e\u9876\u70b9\u8986\u76d6\u95ee\u9898 (Vertex Cover problem) \u7684\u63cf\u8ff0\uff1a\u5bfb\u627e\u6700\u5c0f\u89c4\u6a21\u7684\u9876\u70b9\u8986\u76d6\uff0c\u90a3\u4e48\u5bfb\u627e\u5230\u7684\u9876\u70b9\u8986\u76d6\u4e2d\u9876\u70b9\u6570 (\\(C_2\\)) \u8d8a\u5c11\u8d8a\u597d\u3002</p> <p>\u56de\u987e\u7ea6\u5316\u65b9\u6cd5\uff1a</p> \\[ |\\text{max clique of }G|=K\\iff |\\text{max vertex cover of }\\overline{G}|=|V|-K \\] <p>\u8bbe Vertex Cover problem \u7684 2-\u8fd1\u4f3c\u7b97\u6cd5\u5f97\u5230\u7684\u9876\u70b9\u8986\u76d6\u89c4\u6a21\u4e3a \\(T\\)\uff0c\u6700\u4f18\u89c4\u6a21\u4e3a \\(T^*\\)\uff0c\u5219</p> \\[ \\rho_2=\\frac{C_2}{C_2^*}=\\frac{T}{T^*}=2,\\quad \\rho_1=\\frac{C_1^*}{C_1}=\\frac{|V|-T^*}{|V|-T}=1+\\frac{1}{\\dfrac{|V|}{T^*}-2} \\] <p>\u53ef\u89c1 \\(\\rho_1\\) \u662f\u4e0d\u53ef\u63a7\u7684\u3002</p> <p>Q2-1. For the bin-packing problem: let \\(S=\\sum_iS_i\\). Which of the following statements is FALSE?</p> <p>A. The number of bins used by the next-fit heuristic is never more than \\(\\lceil 2S\\rceil\\)</p> <p>B. The number of bins used by the first-fit heuristic is never more than \\(\\lceil 2S\\rceil\\)</p> <p>C. The next-fit heuristic leaves at most one bin less than half full</p> <p>D. The first-fit heuristic leaves at most one bin less than half full</p> Answer <p>C\u3002</p> <p>\u8bbe next-fit \u7b97\u6cd5\u6700\u7ec8\u751f\u6210 \\(2M\\) \u6216 \\(2M+1\\) \u4e2a bin\uff0c\u5219</p> \\[ S = \\sum_{i=1}^{2M\\text{ or }2M+1}S(B_i) \\geqslant \\sum_{i=1}^M[S(B_{2i-1})+S(B_{2i})] &gt; \\sum_{i=1}^M1=M \\] <p>\u56e0\u6b64\u6709 \\(2S&gt;2M \\Rightarrow \\lceil 2S\\rceil \\geqslant 2M+1\\)\uff0c\u56e0\u6b64 A \u6b63\u786e\u3002</p> <p>first-fit(1.7-approximation) \u4f18\u4e8e next-fit(2-approximation)\uff0c\u56e0\u6b64 B \u4e5f\u6b63\u786e\u3002</p> <p>\u5bf9\u4e8e D\uff0c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin\uff0c\u90a3\u4e48\u5728\u4ea7\u751f\u7b2c\u4e8c\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \u65f6\uff0c\u4e0d\u53ef\u80fd\u5728\u5bf9\u524d\u9762 bins \u7684\u626b\u63cf\u4e2d\u627e\u4e0d\u5230\u653e\u4e0d\u8fdb\u53bb\u7684 bin\uff08\u7b2c\u4e00\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \u80af\u5b9a\u80fd\u653e\u8fdb\u53bb\uff09\uff0c\u56e0\u6b64\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684bin \uff0cD \u6b63\u786e\u3002</p> <p>\u5bf9\u4e8e C\uff0c\u4e24\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \u53ea\u8981\u4e0d\u662f\u76f8\u90bb\u51fa\u73b0\u5c31\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u6b64 C \u9519\u8bef\u3002</p> <p>Q2-2. To approximate a maximum spanning tree \\(T\\)  of an undirected graph \\(G=(V,E)\\) with distinct edge weights \\(w(u,v)\\) on each edge \\((u,v)\\in E\\), let's denote the set of maximum-weight edges incident on each vertex by \\(S\\). Also let \\(w(E')=\\sum _{(u,v)\\in E}w(u,v)\\) for any edge set \\(E'\\). Which of the following statements is TRUE?</p> <p>A. \\(S=T\\) for any graph \\(G\\)</p> <p>B. \\(S\\neq T\\) for any graph \\(G\\)</p> <p>C. \\(w(T)\\geqslant w(S)/2\\) for any graph \\(G\\)</p> <p>D. None of the above</p> Answer <p> </p>"},{"location":"ZJU_CS/ADS/homework/#hw12","title":"Hw12","text":"<p>Q1-1. For the graph given in the following figure, if we start from deleting the black vertex, then local search can always find the minimum vertex cover. (T/F)</p> Answer <p>T\u3002</p> <p>Q1-2. We are given a set of sites \\(S=\\{s_{1}, s_{2}, \\cdots, s_{n}\\}\\) in the plane, and we want to choose a set of \\(k\\) centers \\(C=\\{c_{1}, c_{2}, \\cdots, c_{k}\\}\\) so that the maximum distance from a site to the nearest center is minimized. Here \\(c_{i}\\) can be an arbitrary point in the plane.</p> <p>A local search algorithm arbitrarily choose \\(k\\) points in the plane to be the centers, then</p> <ul> <li> <p>(1) divide \\(S\\) into \\(k\\) sets, where \\(S_{i}\\) is the set of all sites for which \\(c_{i}\\) is the nearest center; and</p> </li> <li> <p>(2) for each \\(S_{i}\\), compute the central position as a new center for all the sites in \\(S_{i}\\).</p> </li> </ul> <p>If steps (1) and (2) cause the covering radius to strictly decrease, we perform another iteration, otherwise the algorithm stops.</p> <p>When the above local search algorithm terminates, the covering radius of its solution is at most 2 times the optimal covering radius. (T/F)</p> Answer <p>F\u3002</p> <p>\u7ed9\u51fa\u53cd\u4f8b\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5176\u4e2d\u6709</p> \\[ \\begin{gathered}     A(-1, \\frac{\\sqrt{3}}{2}),\\quad     B(1, \\frac{\\sqrt{3}}{2}),\\quad     C(-1, -\\frac{\\sqrt{3}}{2}),\\quad     D(1, -\\frac{\\sqrt{3}}{2})     \\\\     E(-3, 2\\sqrt{3}),\\quad     F(3, 2\\sqrt{3}),\\quad     G(0, 2\\sqrt{3}+\\sqrt{7}),\\quad     H(0,0.000001),\\quad     I(0,-0.000001) \\end{gathered} \\] <p>\u90fd\u662f\u9700\u8981\u88ab\u8986\u76d6\u7684\u70b9\u3002</p> \\[ c_1(-1, 0),\\quad c_2(0, 0),\\quad c_3(1, 0),\\quad c_4(0, 2\\sqrt{3}+\\sqrt{7}),\\quad \\] <p>\\(c_1\\), \\(c_3\\) \u534a\u5f84\u4e3a \\(\\frac{\\sqrt{3}}{2}\\), \\(c_2\\) \u534a\u5f84\u4e3a \\(0.0001\\), \\(c_4\\) \u534a\u5f84\u4e3a \\(4\\)\u3002\u8fd9\u6837\u5f97\u5230\u7684\u89e3\u5c31\u662f Local Search \u7684\u4e00\u4e2a\u53ef\u80fd\u89e3\uff0c\u8986\u76d6\u534a\u5f84\u4e3a \\(4\\)\u3002</p> <p>\u7136\u800c\uff0c\u5982\u679c\u53d6</p> \\[ c_1'(-2, \\frac{5\\sqrt{3}}{4}),\\quad c_2'(0, 0),\\quad c_3'(2, \\frac{5\\sqrt{3}}{4}),\\quad c_4'(0, 2\\sqrt{3}+\\sqrt{7}+4),\\quad \\] <p>\\(c_1\\), \\(c_3\\) \u534a\u5f84\u4e3a \\(\\frac{\\sqrt{41}}{4}\\), \\(c_2\\) \u534a\u5f84\u4e3a \\(\\frac{\\sqrt{7}}{2}\\), \\(c_4\\) \u534a\u5f84\u4e3a \\(0.0001\\)\u3002\u8fd9\u6837\u5f97\u5230\u7684\u89e3\u8986\u76d6\u534a\u5f84\u4e3a \\(\\frac{\\sqrt{41}}{4}&lt;2\\)\u3002</p> <p>\u56e0\u6b64\u867d\u7136\u4e0d\u786e\u5b9a\u6700\u4f18\u89e3\u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u6700\u4f18\u89e3\u4e00\u5b9a\u6bd4\u4e0a\u9762\u7684 Local Search \u7684\u89e3\u7684\u4e8c\u5206\u4e4b\u4e00\u66f4\u5c0f.</p> <p>\u4e0b\u56fe\u4e2d\uff0c\u7eff\u8272\u5706\u5708\u8868\u793a Local Search\uff0c\u84dd\u8272\u5706\u5708\u8868\u793a\u7ed9\u51fa\u7684\u4e00\u4e2a\u6bd4 Local Search \u7684 \\(1/2\\) \u66f4\u5c0f\u7684\u89e3\u3002  </p> <p>Q2-1. Spanning Tree Problem: Given an undirected graph \\(G=(V, E)\\), where \\(|V|=n\\) and \\(|E|=m\\). Let \\(F\\) be the set of all spanning trees of \\(G\\). Define \\(d(u)\\) to be the degree of a vertex \\(u \\in V\\). Define \\(w(e)\\) to be the weight of an edge \\(e \\in E\\).</p> <p>We have the following three variants of spanning tree problems:</p> <ul> <li> <p>(1) Max Leaf Spanning Tree: find a spanning tree \\(T \\in F\\) with a maximum number of leaves.</p> </li> <li> <p>(2) Minimum Spanning Tree: find a spanning tree \\(T \\in F\\) with a minimum total weight of all the edges in \\(T\\).</p> </li> <li> <p>(3) Minimum Degree Spanning Tree: find a spanning tree \\(T \\in F\\) such that its maximum degree of all the vertices is the smallest.</p> </li> </ul> <p>For a pair of edges \\(\\left(e, e^{\\prime}\\right)\\) where \\(e \\in T\\) and \\(e^{\\prime} \\in(G-T)\\) such that \\(e\\) belongs to the unique cycle of \\(T \\cup e^{\\prime}\\), we define edge-swap \\(\\left(e, e^{\\prime}\\right)\\) to be \\((T-e) \\cup e^{\\prime}\\).</p> <p>Here is a local search algorithm:</p> <pre><code>T = any spanning tree in F_i\nwhile (there is an edge-swap (e, e') which reduces Cost(T)) {\n    T = T - e + e';\n}\nreturn T;\n</code></pre> <p>Here \\(\\operatorname{cost}(T)\\) is the number of leaves in \\(T\\) in Max Leaf Spanning Tree; or is the total weight of \\(T\\) in Minimum Spanning Tree; or else is the minimum degree of \\(T\\) in Minimum Degree Spanning Tree.</p> <p>Which of the following statements is TRUE?</p> <p>A. The local search always return an optimal solution for Max Leaf Spanning Tree</p> <p>B. The local search always return an optimal solution for Minimum Spanning Tree</p> <p>C. The local search always return an optimal solution for Minimum Degree Spanning Tree</p> <p>D. For neither of the problems that this local search always return an optimal solution</p> Answer <p>B\u3002</p> <p>\u6700\u5c0f\u751f\u6210\u6811\u7684 Prim \u7b97\u6cd5\u662f\u5c40\u90e8\u6027\u7684, \u4f46\u662f\u5374\u662f\u6b63\u786e\u7684, \u731c\u60f3\u6700\u5c0f\u751f\u6210\u6811\u7684\u5c40\u90e8\u6700\u4f18\u5c31\u662f\u5168\u5c40\u6700\u4f18\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u7ed3\u8bba\u786e\u5b9e\u662f\u6b63\u786e\u7684\uff0c\u8fd9\u4e2a\u8bc1\u660e\u6bd4\u8f83\u96be\uff0c\u8bfb\u8005\u53ef\u4ee5\u8003\u8651\u52bf\u80fd\u51fd\u6570\u7b49\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u5176\u4ed6\u4e24\u79cd\uff0c\u5bfb\u627e\u5176\u53cd\u4f8b\u3002</p> <p>\u5bf9\u4e8eMax Leaf Spanning Tree\uff0c\u5bfb\u627e\u53cd\u4f8b\u5982\u4e0b:  </p> <p>\u5bf9\u4e8eMinimum Degree Spanning Tree\uff0c\u540c\u6837\u7684\u539f\u56fe(Original)\uff0c\u5bfb\u627e\u53cd\u4f8b\u5982\u4e0b:  </p> <p>\u7a76\u5176\u672c\u8d28\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5982\u679c\u6709\u66f4\u597d\u7684\u9009\u62e9\u4e00\u5b9a\u80fd\u4ea4\u6362\uff0c\u56e0\u4e3a\u8fdb\u884c\u7684\u6b63\u662f\u8fb9\u4ea4\u6362\uff0c\u76f4\u63a5\u5f71\u54cd\u7684\u5c31\u662f\u6811\u7684\u6574\u4f53\u6743\u503c\u3002\u53e6\u5916\u4e24\u79cd\u6811\u7684\u6027\u8d28\u5219\u4e0e\u9876\u70b9\u76f8\u5173\uff0c\u4e0d\u80fd\u76f4\u63a5\u5f71\u54cd\uff0c\u6240\u4ee5\u5c31\u5bc4\u4e86\u3002</p> <p>Q2-2. There are \\(n\\) jobs, and each job \\(j\\) has a processing time \\(t_{j}\\). We will use a local search algorithm to partition the jobs into two groups A and B, where set A is assigned to machine \\(M_{1}\\) and set \\(\\mathrm{B}\\) to \\(M_{2}\\). The time needed to process all of the jobs on the two machines is \\(T_{1}=\\sum_{j \\in A} t_{j}, T_{2}=\\sum_{j \\in B} t_{j}\\). The problem is to minimize \\(\\left|T_{1}-T_{2}\\right|\\).</p> <p>Local search: Start by assigning jobs \\(1, \\ldots, n / 2\\) to \\(M_{1}\\), and the rest to \\(M_{2}\\).</p> <p>The local moves are to move a single job from one machine to the other, and we only move a job if the move decreases the absolute difference in the processing times. Which of the following statement is true?</p> <p>A. The problem is NP-hard and the local search algorithm will not terminate.</p> <p>B. When there are many candidate jobs that can be moved to reduce the absolute difference, if we always move the job \\(j\\) with maximum \\(t_j\\) , then the local search terminates in at most \\(n\\) moves.</p> <p>C. The local search algorithm always returns an optimal solution.</p> <p>D. The local search algorithm always returns a local solution with \\(\\frac{1}{2}T_1\\leqslant T\\leqslant 2T_1\\).</p> Answer <p>B\u3002</p> <p>A\uff0c\u6bcf\u6b21\u90fd\u51cf\u5c0f\uff0c\u80af\u5b9a\u4f1a\u51cf\u65e0\u53ef\u51cf\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u7ec8\u6b62\u3002NP-hard\u731c\u60f3\u5e94\u8be5\u662f\u7684\uff0c\u4e00\u5171\u6709\\(2^n\\)\u79cd\u72b6\u6001\u3002</p> <p>B\uff0c\u4e00\u9879\u88ab\u79fb\u5230\u53e6\u4e00\u4fa7\u4e4b\u540e\u80af\u5b9a\u4e0d\u4f1a\u518d\u88ab\u79fb\u56de\u6765\uff0c\u56e0\u6b64\u6700\u591a\u79fb\\(n\\)\u6b21\u3002</p> <p>C\uff0c\u8003\u8651\\(\\{10,11,12,12,13,14\\}=\\{10,11,13\\}+\\{12,12,14\\}\\)\uff0c\u53ef\u77e5\u65e0\u6cd5\u79fb\u52a8\u4e86\uff0c\u4f46\u662f\u663e\u7136\u6700\u4f18\u89e3\u662f\\(\\{11,12,13\\}+\\{10,12,14\\}\\)\u3002</p> <p>D\uff0c\u8003\u8651\\(\\{1,2,100\\}=\\{1,2\\}+\\{100\\}\\)\u3002</p> <p>Q2-3. Max-cut problem: Given an undirected graph \\(G=(V, E)\\) with positive integer edge weights \\(w_{e}\\), find a node partition \\((A, B)\\) such that \\(w(A, B)\\), the total weight of edges crossing the cut, is maximized. Let us define \\(S^{\\prime}\\) be the neighbor of \\(S\\) such that \\(S^{\\prime}\\) can be obtained from \\(S\\) by moving one node from \\(A\\) to \\(B\\), or one from \\(B\\) to \\(A\\). only choose a node which, when flipped, increases the cut value by at least \\(w(A, B) /|V|\\). Then which of the following is true?</p> <p>A. Upon the termination of the algorithm, the algorithm returns a cut \\((A,B)\\) so that \\(2.5w(A,B)\\geqslant w(A^\u2217, b^*)\\),  where \\((A^\u2217 ,B^\u2217)\\) is an optimal partition.</p> <p>B. The algorithm terminates after at most \\(O(\\log|V|\\log W)\\) flips, where \\(W\\) is the total weight of edges.</p> <p>C. Upon the termination of the algorithm, the algorithm returns a cut \\((A,B)\\) so that \\(2w(A,B)\\geqslant w(A^\u2217, b^*)\\).</p> <p>D. The algorithm terminates after at most \\(O(|V|^2)\\) flips.</p> Answer <p> </p>"},{"location":"ZJU_CS/ADS/homework/#hw13","title":"Hw13","text":"<p>Q1-1. Let \\(a=\\left(a_{1}, a_{2}, \\ldots, a_{i}, \\ldots, a_{j}, \\ldots, a_{n}\\right)\\) denote the list of elements we want to sort. In the quicksort algorithm, if the pivot is selected uniformly at random. Then any two elements get compared at most once and the probability of \\(a_{i}\\) and \\(a_{j}\\) being compared is \\(2 /(j-i+1)\\) for \\(j&gt;i\\), given that \\(a_{i}\\) or \\(a_{j}\\) is selected as the pivot. (T/F)</p> Answer <p>F\u3002</p> <p>\u4e3e\u53cd\u4f8b\u5982\u4e0b\uff1a{3, 4, 1, 2, }\u3002\u5982\u679c\u7b2c\u4e00\u6b21\u9009pivot\u9009\u4e2d3\u6216\u80052\uff0c\u90a3\u4e481\u548c4\u4f1a\u88ab\u5206\u5f00\uff0c\u4e0d\u4f1a\u88ab\u6bd4\u8f83\u3002</p> <p>\u5982\u679c\u7b2c\u4e00\u6b21\u5c31\u9009\u4e2d1\u62164\uff0c\u5b83\u4eec\u624d\u4f1a\u88ab\u6bd4\u8f83\u3002\u56e0\u6b64\u5b83\u4eec\u88ab\u6bd4\u8f83\u7684\u6982\u7387\u662f\u00bd\u3002\u6309\u7167 \\(\\dfrac{2}{j-i+1}\\) \u8ba1\u7b97\uff0c\u5e94\u8be5\u662f1\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u88ab\u6392\u5e8f\u597d\u7684\uff0c\u8fd9\u5c31\u662f\u5bf9\u7684\u3002</p> <p>Q2-1. Given a linked list containg \\(N\\) nodes.  Our task is to remove all the nodes.  At each step, we randomly choose one node in the current list,  then delete the selected node together with all the nodes after it. Here we assume that each time we choose one node uniformly among all the remaining nodes.  What is the expected number of steps to remove all the nodes?</p> <p>A.\\(\\Theta (\\log N)\\)</p> <p>B.\\(N/e\\)</p> <p>C.\\(N/2\\)</p> <p>D.\\(\\sqrt{N}\\)</p> Answer <p>A\u3002</p> <p>\u5173\u952e\u662f\u5f97\u5230\u9012\u63a8\u5f0f</p> \\[ a_n = \\frac{1}{N}\\sum_{i=1}^{N-1}a_i+1 \\] <p>\u76f4\u63a5\u4ee3\u5165 B,C\uff0c\u663e\u7136\u4e0d\u5bf9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u9012\u63a8\u5f0f\u53ea\u53ef\u80fd\u51fa\u6709\u7406\u6570\uff0cD \u5f88\u53ef\u80fd\u51fa\u65e0\u7406\u6570\uff0c\u4e5f\u4e0d\u5bf9\u3002</p> <p>\u7136\u800c\uff0c\u5f88\u8f7b\u677e\u5c31\u53ef\u4ee5\u901a\u8fc7\u5f3a\u5f52\u7eb3\u6cd5\u5224\u65ad \\(a_n=O(\\log N)\\)\u3002(\\(\\Omega\\)\u6ca1\u6709\u8bd5\u8fc7\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u3002)</p> \\[ a_n = \\frac{1}{N}\\sum_{i=1}^{N-1}a_i+1 \\leqslant \\frac{C}{N}\\log\\left(2N\\prod_{i=1}^{N-1}i\\right) \\leqslant C\\log N \\] <p>\u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u53f7\u5e76\u4e0d\u90a3\u4e48\u4e25\u683c\uff0c\u4e0d\u8fc7 \\(N\\) \u8db3\u591f\u5927\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u4e25\u683c\u7684\u3002</p> <p>Q2-2. Use The Online Hiring Algorithm ( hire only once ). Assume that the quality input \\(C[ ]\\) is uniformly random.</p> <p>When \\(N = 271\\) and \\(k = 90\\), the probability of hiring the Nth candidate is __.</p> Answer <p>\u2153\u3002\u8981\u6c42\u524d 270 \u4eba\u4e2d\u6700\u597d\u7684\u843d\u5728\u524d 90 \u4eba\u4e2d\u3002</p> <p>\u4e5f\u53ef\u4ee5\u5206\u524d 271 \u4eba\u4e2d\u6700\u597d\u7684\u5728\u54ea\u91cc\u8fdb\u884c\u8ba8\u8bba\uff0c\u5373</p> \\[ \\frac{1}{N}\\cdot \\frac{k}{N-1} + \\frac{k}{N} = \\frac{1}{3} \\]"},{"location":"ZJU_CS/ADS/homework/#hw14","title":"Hw14","text":"<p>Q1-1. While comparing a serial algorithm with its parallel counterpart, we just concentrate on reducing the work load. (T/F)</p> Answer <p>F\u3002</p> <p>\u9664\u4e86 work load \\(W(n)\\) \u4e4b\u5916\uff0c\u51cf\u5c11 worst-case running time\\(T(n)\\) \u4e5f\u662f\u6240\u5173\u6ce8\u7684\u3002\uff08\u751a\u81f3\u8fd9\u624d\u662f\u4e3b\u8981\u76ee\u6807\uff09</p> <p>Q1-2. To evaluate the Prefix-Sums of a sequence of 16 numbers by the parallel algorithm with Balanced Binary Trees, C(4,1) is found before C(2,2). (T/F)</p> Answer <p>T\u3002</p> <p>\u672c\u5e94\u8be5\u662f T\uff0c\u56e0\u4e3a\u5148\u8ba1\u7b97 B()\uff0cB() \u662f\u81ea\u5e95\u5411\u4e0a\u8ba1\u7b97\u7684\uff1b\u540e\u8ba1\u7b97 C()\uff0cC() \u662f\u81ea\u9876\u5411\u4e0b\u8ba1\u7b97\u7684\u3002</p> <p>\u56e0\u6b64 C(4, 1) \u663e\u7136\u5e94\u8be5\u5728 C(2, 2) \u4e4b\u524d\u8ba1\u7b97\u3002\u7136\u800c PTA \u7684\u7b54\u6848\u5e93\u91cc\u8ba4\u4e3a\u5b83\u662f F\uff0c\u672a\u6765\u53ef\u80fd\u88ab\u4fee\u6539\u3002</p> <p>Q1-3. To evaluate the sum of a sequence of 16 numbers by the parallel algorithm with Balanced Binary Trees, B(1,6) is found before B(2,1). (T/F)</p> Answer <p>T\u3002B() \u81ea\u5e95\u5411\u4e0a\u8ba1\u7b97\u3002</p> <p>Q1-4. In order to solve the maximum finding problem by a parallel algorithm with \\(T(n)=O(1)\\) , we need work load \\(W(n)=\\Omega(n^2)\\) in return. (T/F)</p> Answer <p>F\u3002</p> <p>\\(W(n)=\\Omega(n^2)\\) \u7684\u65ad\u8a00\u8bf4\u6700\u5c0f\u4e5f\u662f \\(O(n^2)\\)\uff0c\u7136\u800c\u8fd9\u53ea\u662f\u6700\u57fa\u7840\u7684\u5f97\u5230\u7684\u7ed3\u679c\u3002</p> <p>\u91c7\u7528 Random Sampling\uff0c\u5c31\u53ef\u4ee5\u5728 \\(W(n)=O(n)\\) \u4e0b\u5f97\u5230\u7ed3\u679c\u3002</p> <p>Q1-5. To solve the Maximum Finding problem with parallel Random Sampling method, O(n) processors are required to get T(n)=O(1) and W(n)=O(n) with very high probability. (T/F)</p> Answer <p>T\u3002</p>"},{"location":"ZJU_CS/ADS/homework/#hw15","title":"Hw15","text":"<p>Q1-1. To merge 55 runs using 3 tapes for a 2-way merge, the original distribution (34, 21) is better than (27, 28). (T/F)</p> Answer <p>T\u3002\u6309 Fibonacci \u6570\u5206\u5272\u6700\u597d\u3002</p> <p>Q1-2. If only one tape drive is available to perform the external sorting, then the tape access time for any algorithm will be \\(\\Omega(N^2)\\) (T/F)</p> Answer <p>T\u3002\u8003\u8651\u5bfb\u9053\u65f6\u95f4\u4ece \\(\\Omega(1)\\) \u4e0a\u5347\u5230 \\(\\Omega(n)\\)\u3002</p> <p>Q1-3. In external sorting, a \\(k\\)-way merging is usually used in order to reduce the number of passes and we will take the \\(k\\) as large as possible as long as we have enough amount of tapes. (T/F)</p> Answer <p>F\u3002</p> <p>\u9002\u5f53\u589e\u5927 \\(k\\)\uff0c\u7531\u4e8e pass \u6570\u51cf\u5c11\uff0c\u53ef\u4ee5\u51cf\u5c11 I/O\u3002\u4f46 \\(k\\) \u8fc7\u5927\u65f6\uff0c\u786c\u4ef6\u9519\u8bef\u7387\u4e0a\u5347\uff0c\u53cd\u800c\u662f\u4e0d\u5212\u7b97\u7684\u3002\uff08\u6211\u4e2a\u4eba\u8ba4\u4e3a\u60c5\u51b5\u8fd8\u66f4\u590d\u6742\uff0c\u53ef\u80fd\u8fd8\u6709 cost\uff0c\u4f20\u8f93\u5ef6\u8fdf\u8fd9\u4e9b\u95ee\u9898\uff09</p> <p>\u53e6\u5916\uff0c\\(k\\) \u8fc7\u5927\u65f6\uff0cinput buffer \u7684\u9700\u6c42\u4e5f\u4f1a\u5f88\u5927\uff0cmemory \u5bb9\u91cf\u4e00\u5b9a\u65f6\uff0cbuffer size \u5c31\u4f1a\u51cf\u5c0f\uff0c\u9002\u914d\u7684 disk \u4e0a\u7684 block size \u5212\u5206\u4e5f\u4f1a\u51cf\u5c0f\uff0c\u5bfc\u81f4 seek time \u4e0a\u5347\uff0c\u4e5f\u662f\u4e0d\u5212\u7b97\u7684\u3002</p> <p>Q1-4. In general, for a 3-way merge we need 6 input buffers and 2 output buffers for parallel operations. (T/F)</p> Answer <p>T\u3002</p> <p>In general, for a \\(k\\)-way merge we need \\(2k\\) input buffers and 2 output buffers for parallel operations in external sorting.</p> <p>Q2-1. Given 100,000,000 records of 256 bytes each, and the size of the internal memory is 128MB. If simple 2-way merges are used, how many passes do we have to do?</p> <p>A. 10</p> <p>B. 9</p> <p>C. 8</p> <p>D. 7</p> Answer <p>B\u3002</p> <p>block size \\(=128\\times 2^{20}/256=2^{19}\\)\uff0c</p> <p>\u5219 number of passes \\(= 1+\\lceil \\log_2(10^8/2^{19}) \\rceil=9\\)</p> <p>Q2-2. In external sorting, suppose we have 5 runs of lengths 2, 8, 9, 5, and 3, respectively. Which of the following merging orders can obtain the minimum merge time?</p> <p>A. merge runs of lengths 2 and 3 to obtain Run#1; merge Run#1 with the one of length 5 to obtain Run#2; merge Run#2 with the one of length 8 to obtain Run#3; merge Run#3 with the one of length 9</p> <p>B. merge runs of lengths 2 and 3 to obtain Run#1; merge Run#1 with the one of length 5 to obtain Run#2; merge runs of lengths 8 and 9 to obtain Run#3; merge Run#2 and Run#3</p> <p>C. merge runs of lengths 2 and 3 to obtain Run#1; merge runs of lengths 5 and 8 to obtain Run#2; merge Run#1 and Run#2 to obtain Run#3; merge Run#3 with the one of length 9</p> <p>D. merge runs of lengths 2 and 3 to obtain Run#1; merge runs of lengths 5 and 8 to obtain Run#2; merge Run#2 with the one of length 9 to obtain Run#3; merge Run#1 and Run#3</p> Answer <p>B\u3002\u5373\u6784\u5efa Huffman \u6811\uff0c\u6784\u5efa\u7684\u7ed3\u679c\u5c31\u662f B\u3002</p> <p>Q2-3. In external sorting, in order to reduce the number of passes, minimizing the initial number of runs (i.e. generating longer runs ) is a good idea. Suppose the input record keys are (25, 74, 56, 34, 21, 11, 29, 80, 38, 53) and the internal memery can hold only 3 records, the minimum number of initial runs obtained by replacement selection is__ \u3002</p> <p>A. 1</p> <p>B. 2</p> <p>C. 3</p> <p>D. 4</p> Answer <p>B\u3002\u901a\u8fc7 replacement selection \u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\begin{matrix}     25 &amp; 34 &amp; 56 &amp; 74\\\\     11 &amp; 21 &amp; 29 &amp; 38 &amp; 53 &amp; 80 \\end{matrix} \\] <p>Q2-4. Suppose we have the internal memory that ca### n handle 12 numbers at a time, and the following two runs on the tapes:</p> <p>Run 1: 1, 3, 5, 7, 8, 9, 10, 12</p> <p>Run 2: 2, 4, 6, 15, 20, 25, 30, 32</p> <p>Use 2-way merge with 4 input buffers and 2 output buffers for parallel operations. Which of the following three operations are NOT done in parallel?</p> <p>A. 1 and 2 are written onto the third tape; 3 and 4 are merged into an output buffer; 6 and 15 are read into an input buffer</p> <p>B. 3 and 4 are written onto the third tape; 5 and 6 are merged into an output buffer; 8 and 9 are read into an input buffer</p> <p>C. 5 and 6 are written onto the third tape; 7 and 8 are merged into an output buffer; 20 and 25 are read into an input buffer</p> <p>D. 7 and 8 are written onto the third tape; 9 and 15 are merged into an output buffer; 10 and 12 are read into an input buffer</p> Answer <p>D\u3002\u5982\u4e0b\u56fe\uff1a</p> <p> </p> <p>D \u9009\u9879\u5f3a\u884c\u60f3\u8981 parallel \uff0c\u56e0\u6b64\u6ca1\u6709\u7ba1\u6b63\u5728\u8bfb\u5165\u7684 10, 12\uff0c\u76f4\u63a5\u57fa\u4e8e\u73b0\u6709 3 \u4e2a buffer \u5757 merge \uff0c\u56e0\u6b64\u8fdb\u884c\u4e86\u9519\u8bef\u7684 merge(9, 15)\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u4e00\u6b65\u65e0\u6cd5 parallel \uff0c\u5fc5\u987b\u7b49\u5f85 10, 12 \u8bfb\u5b8c\u4e4b\u540e\u624d\u80fd\u8fdb\u884c\u6b63\u786e\u7684 merge(9, 10)\u3002</p> <p>Q2-5. Suppose that the replacement selection is applied to generate longer runs with a priority queue of size 4. Given the sequence of numbers { 9, 75, 17, 12, 88, 91, 25, 22, 35, 41, 58, 96, 15 }. Which of the following gives the second output run?</p> <p>A. 22 35 88 91</p> <p>B. 22 35 41 58 88 91 96</p> <p>C. 22 35 41 58 96</p> <p>D. 22 35 41 58</p> Answer <p>C\u3002\u901a\u8fc7 replacement selection \u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>9  12 17 25 75 88 91\n22 35 41 58 96\n15\n</code></pre></p>"},{"location":"ZJU_CS/ADS/note/","title":"Note","text":""},{"location":"ZJU_CS/ADS/note/#avl_tree","title":"AVL tree","text":"<p>Tutor \u5728\u4e8c\u53c9\u6811\u4e2d\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u6811\u7684\u9ad8\u5ea6\u4e3ah\uff0c\u90a3\u4e48\u6700\u591a\u67092^h-1\u4e2a\u8282\u70b9\uff0c\u4f46\u5728\u591a\u6b21\u63d2\u5165\u6216\u5220\u9664\u540e\u53ef\u80fd\u9000\u5316\u4e3a\u94fe\u8868\u4ece\u800c\u964d\u4f4e\u6548\u7387</p> <p>\u800cAVL\u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc71\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1AVL\u6811\u7684\u9ad8\u5ea6\u4e3aO(logn)\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1AVL\u6811\u7684\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logn)\u3002</p>"},{"location":"ZJU_CS/ADS/note/#_1","title":"\u5e73\u8861\u56e0\u5b50","text":"<p>\u5e73\u8861\u56e0\u5b50\u662f\u6307\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6\u51cf\u53bb\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\uff0c\u5373balance = height(left) - height(right)\u3002\u5728AVL\u6811\u4e2d\uff0c\u5e73\u8861\u56e0\u5b50\u7684\u53d6\u503c\u8303\u56f4\u4e3a-1, 0, 1\u3002</p>"},{"location":"ZJU_CS/ADS/note/#_2","title":"\u65cb\u8f6c","text":"<p>\u4e2a\u4eba\u8ba4\u4e3a\u5de6\u65cb\u548c\u53f3\u65cb\u7684\u601d\u60f3\u6ca1\u4ec0\u4e48\u672c\u8d28\u533a\u522b\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\u56fe\u6240\u793a </p> <p>\u65cb\u8f6c\u7684\u9009\u62e9</p> <p>|\u5931\u8861\u8282\u70b9\u7684\u5e73\u8861\u56e0\u5b50 \uff5c \u5b50\u8282\u70b9\u7684\u5e73\u8861\u56e0\u5b50 | \u5e94\u91c7\u7528\u7684\u65cb\u8f6c\u65b9\u6cd5| |---|---|---| | \\(&gt;1\\) | \\(\\geq 0\\) | \u53f3\u65cb | | \\(&gt;1\\) | \\(&lt; 0\\) | \u5148\u5de6\u65cb\u518d\u53f3\u65cb | | \\(&lt;-1\\) | \\(\\leq 0\\) | \u5de6\u65cb | | \\(&lt;-1\\) | \\(&gt; 0\\) | \u5148\u53f3\u65cb\u518d\u5de6\u65cb |</p>"},{"location":"ZJU_CS/ADS/note/#_3","title":"\u63d2\u5165\u548c\u5220\u9664","text":""},{"location":"ZJU_CS/ADS/note/#splay_tree","title":"Splay tree","text":""},{"location":"ZJU_CS/ADS/note/#amortized_analysis","title":"Amortized Analysis","text":"<p>link</p> <p>Wikipedia: https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%91%8A%E5%88%86%E6%9E%90</p> <p>\u4e0d\u597d\u610f\u601d</p> <p>\u6211\u5b9e\u5728\u4e0d\u77e5\u9053\u600e\u4e48\u6e05\u6670\u5730\u8bb2\u660e\u767d\u201c\u644a\u8fd8\u201d\u662f\u4ec0\u4e48\uff0c\u611f\u89c9\u8bb2\u4e0d\u592a\u6e05\u695a\uff0c\u6240\u4ee5\u5c31\u6bd4\u8f83\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\uff0c\u4f46\u662f\u6211\u4ecd\u7136\u4f1a\u6307\u51fa\u6211\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u8ba4\u4e3a\u5bf9\u6211\u542f\u53d1\u6027\u6bd4\u8f83\u5927\u7684\u5730\u65b9\u3002</p> <p>\u6240\u8c13\u7684\u644a\u8fd8\u5206\u6790\uff0c\u5206\u6790\u7684\u662f\u644a\u8fd8\u8fb9\u754c\uff0c\u6216\u8005\u8bf4\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5e73\u5e38\u6211\u4eec\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\u65f6\uff0c\u9488\u5bf9\u7684\u5f80\u5f80\u662f\u67d0\u4e2a\u5177\u4f53\u7684\u64cd\u4f5c\u3002\u800c\u644a\u8fd8\u5206\u6790\u7684\u5bf9\u8c61\u5219\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u800c\u8fd9\u4e00\u7cfb\u5217\u64cd\u4f5c\u4e2d\u6709\u6210\u672c\u8f83\u4f4e\u7684\uff0c\u4e5f\u6709\u6210\u672c\u8f83\u9ad8\u7684\uff0c\u800c\u4e14\u64cd\u4f5c\u4e4b\u95f4\u4e5f\u53ef\u80fd\u6709\u4e92\u76f8\u5f71\u54cd\u3002</p> <p>\u800c\u644a\u8fd8\u5206\u6790\u5219\u662f\u4ee5\u4e00\u4e2a\u66f4\u5168\u5c40\u7684\u89d2\u5ea6\u6765\u8ba1\u7b97\u201c\u5e73\u5747\u201d\u7684\u64cd\u4f5c\u4ee3\u4ef7\uff0c\u5b83\u8ba1\u7b97\u7684\u662f\u4ece\u521d\u59cb\u72b6\u6001\u5f00\u59cb\uff0c\u8fde\u7eed\u7684 M \u6b21\u4efb\u610f\u64cd\u4f5c\u6700\u591a\u6709 \u7684\u4ee3\u4ef7\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u4e0d\u540c\u4e8e\u5e73\u5747\u65f6\u95f4\u5206\u6790\uff08\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u51fa\u73b0\u6982\u7387\u5e73\u5747\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u6c42\u5e73\u5747\uff09\u548c\u6982\u7387\u7b97\u6cd5\u7684\u6982\u7387\u5206\u6790\uff08\u5e73\u5747\u8bdd\u6240\u6709\u53ef\u80fd\u7684\u968f\u673a\u9009\u62e9\uff0c\u4e5f\u5c31\u662f\u52a0\u6743\u6c42\u5e73\u5747\uff09\u4e0d\u540c\uff0c\u644a\u8fd8\u5206\u6790\u548c\u6982\u7387\u5b8c\u5168\u65e0\u5173\u3002</p> <p>\u5bb9\u6613\u5f97\u5230\u5982\u4e0b\u7b49\u5f0f\uff1a</p> \\[ \\text{worst-case bound} \\geq \\text{amortized bound} \\geq \\text{average-case bound} \\] <p>\u6211\u4eec\u77e5\u9053\uff0c\u7531\u4e8e amortized bound \u9650\u5236\u4e86\u6240\u6709\u7684 M \u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u5176\u4e0a\u754c\u5c31\u7b49\u4e8e\u6700\u5dee\u7684\u60c5\u51b5\u53d1\u751f M \u6b21\uff08\u5f53\u7136\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u4e0d\u4e00\u5b9a\u80fd\u53d6\u5230\u5168\u90fd\u662f\u6700\u5dee\u60c5\u51b5\uff09\uff1b\u540c\u6837\u7684\uff0c\u7531\u4e8e\u9700\u8981\u5bf9\u4efb\u610f\u7ec4\u5408\u90fd\u6210\u7acb\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e\u7edf\u8ba1\u5b66\u610f\u4e49\u4e0a\u7684\u5e73\u5747\u60c5\u51b5\u3002</p> <p>\u521a\u5f00\u59cb\u5b66\u5230\u644a\u8fd8\u5206\u6790\u7684\u65f6\u5019\uff0c\u770b\u7740\u8fd9\u4e9b\u5185\u5bb9\u6709\u4e00\u79cd\u83ab\u540d\u5176\u5999\u7684\u611f\u89c9\uff0c\u4e0d\u77e5\u9053\u5b83\u5728\u5e72\u561b\uff0c\u540e\u6765\u6211\u624d\u53d1\u73b0\u6211\u8bef\u89e3\u4e86\u644a\u8fd8\u5206\u6790\u7684\u76ee\u7684\u3002\u6240\u4ee5\u6211\u611f\u89c9\u8fd8\u662f\u9700\u8981\u5c31\u6b64\u7ed9\u51fa\u6211\u81ea\u5df1\u7684\u7406\u89e3\u3002</p> <p>\u644a\u8fd8\u5206\u6790</p> <p>\u5728\u6211\u7406\u89e3\u4e2d\uff0c\u644a\u8fd8\u5206\u6790\u5b9e\u9645\u4e0a\u662f\u4e00\u7cfb\u5217\u8bc1\u660e\u65b9\u6cd5\uff0c\u66f4\u8fdb\u4e00\u6b65\u7684\u8bf4\uff0c\u5728\u6211\u4eec\u4e4b\u540e\u4f1a\u8bb2\u5230\u7684\u4e09\u4e2a\u5206\u6790\u65b9\u6cd5\u4e2d\uff0c\u6709\u4e00\u4e9b\u53ef\u80fd\u96be\u4ee5\u76f4\u63a5\u5f97\u5230\u644a\u8fd8\u590d\u6742\u5ea6\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u4ed6\u4eec\u7684\u8fc7\u7a0b\u66f4\u50cf\u662f\u5df2\u77e5\u4e00\u4e2a\u644a\u8fd8\u8fb9\u754c\uff0c\u5e76\u8bc1\u660e\u5b83\u786e\u5b9e\u662f\u8fb9\u754c\u3002</p> <p>\u5e38\u89c1\u7684\u644a\u8fd8\u5206\u6790\u6709\u4e09\u79cd\uff1a\u805a\u5408(aggregate)\u6cd5\u3001\u6838(accounting)\u6cd5\u3001\u52bf\u80fd(potential)\u6cd5\uff0c\u63a5\u4e0b\u6765\u4e00\u4e00\u4ecb\u7ecd\u3002</p>"},{"location":"ZJU_CS/ADS/note/#_4","title":"\u805a\u5408\u6cd5","text":"<p>\u805a\u5408\u6cd5\u76f8\u5bf9\u7b80\u5355\uff0c\u5c31\u662f\u76f4\u63a5\u7d2f\u79ef\u8fde\u7eed M \u6b21\u64cd\u4f5c\u7684\u4ee3\u4ef7\uff0c\u518d\u9664\u4ee5 M\u3002</p> \\[ T_{amortized} = \\frac{\\sum_i{T_i}}{n} \\]"},{"location":"ZJU_CS/ADS/note/#_5","title":"\u6838\u6cd5","text":"<p>link</p> <p>\u5173\u4e8e Accounting Analysis \u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1ahttps://www.baeldung.com/cs/amortized-analysis</p> <p>\u505a\u4e00\u4e2a\u6bd4\u55bb\u7684\u8bdd\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a</p> <p>\u4f60\u53bb\u5403\u5348\u996d\uff0c\u5403\u7d20\u83dc\u8981 \u00a51\uff08\u5bf9\u6807\u6d88\u8017\u8f83\u5c0f\u7684\u64cd\u4f5c\uff09\uff0c\u5403\u8364\u83dc\u8981 \u00a54\uff08\u5bf9\u6807\u6d88\u8017\u8f83\u5927\u7684\u64cd\u4f5c\uff09\uff0c\u73b0\u5728\u4f60\u77e5\u9053\u4f60\u6bcf\u5929\u5403\u5348\u996d\u7684\u644a\u8fd8\u5f00\u9500\u4e3a \u00a52\uff08\u4ece\u8bc1\u660e\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff09\uff0c\u5e76\u4e14\u6211\u65e0\u8111\u7684\u8ba4\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u90fd\u662f \u00a52\uff08\u5728\u6838\u6cd5\u4e2d\uff0c\u6574\u4f53\u7684\u644a\u8fd8\u5f00\u9500\u548c\u5355\u4e2a\u64cd\u4f5c\u7684\u644a\u8fd8\u5f00\u9500\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5355\u4e2a\u64cd\u4f5c\u7684\u644a\u8fd8\u5f00\u9500\u662f\u53ef\u80fd\u4e92\u4e0d\u4e00\u6837\u7684\uff0cM \u4e2a\u64cd\u4f5c\u6c42\u548c\u53d6\u5e73\u5747\u4ee5\u540e\u624d\u662f\u6574\u4f53\u7684\u644a\u8fd8\u4ee3\u4ef7\uff09\u3002\u90a3\u4e48\u4f60\u4eca\u5929\u5403\u7d20\u83dc\uff0c\u8d26\u6237\u5165\u8d26 \u00a51\uff082 - 1 = 1\uff09\uff1b\u660e\u5929\u4f60\u4e5f\u5403\u7d20\u83dc\uff0c\u8d26\u6237\u4e5f\u5165\u8d26 \u00a51\uff1b\u540e\u5929\u4f60\u5403\u8364\u83dc\u4e86\uff0c\u90a3\u4e48\u8d26\u6237\u5c31\u51fa\u8d26 \u00a52\uff082 - 4 = -2\uff09\u2026\u2026</p> <p>\u6838\u6cd5\u5927\u6982\u5c31\u662f\u6309\u7167\u8fd9\u4e48\u4e00\u4e2a\u601d\u8def\u6765\u8bc1\u660e\uff0c\u4e0d\u8fc7\u5177\u4f53\u7ec6\u8282\u548c\u4e0a\u9762\u8fd9\u4e2a\u6848\u4f8b\u8fd8\u662f\u6709\u533a\u522b\u7684\uff0c\u53ef\u4ee5\u8be6\u7ec6\u53c2\u8003\u4e0a\u9762\u90a3\u7247\u6587\u7ae0\uff0c\u6211\u89c9\u5f97\u914d\u56fe\u548c\u8bf4\u660e\u90fd\u5f88\u8be6\u7ec6\u3002</p>"},{"location":"ZJU_CS/ADS/note/#_6","title":"\u52bf\u80fd\u6cd5","text":"<p>link</p> <p>\u5173\u4e8e Potential Analysis \u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1ahttps://en.wikipedia.org/wiki/Potential_method \u4ee5\u53ca ltgg \u7684\u8fd9\u671f\u5468\u62a5\u8bb2\u7684\u4e5f\u5f88\u597d\uff1ahttps://www.yuque.com/xianyuxuan/saltfish_shop/weekly002_amortized_analysis#KmnY6</p> <p>\u52bf\u80fd\u6cd5\u5f3a\u63a8 ltgg \u7684\u8fd9\u7bc7\u6587\u7ae0\uff0c\u8bb2\u7684\u975e\u5e38\u597d\u3002</p>"},{"location":"ZJU_CS/Database/","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<ul> <li>\u8001\u5e08\uff1a\u5b59\u5efa\u4f36</li> <li>\u6210\u7ee9\u5360\u6bd4\uff1a10%Exercise + 10%Quiz + 30%lab + 50%\u671f\u672b</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/","title":"Database System Review: Chapter 1-7","text":"<p>My review note before final exam of ZJU Database System, 2022 Spring &amp; Summer.</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap1_introduction","title":"Chap1: Introduction","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#0_outline","title":"0. Outline","text":"<ul> <li>\u6570\u636e\u5e93\u7cfb\u7edfDatabase Systems</li> <li>(\u4f7f\u7528)\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u76ee\u7684Purpose of Database Systems</li> <li>\u6570\u636e\u89c6\u56feView of Data</li> <li>\u6570\u636e\u6a21\u578bData Models</li> <li> <p>\u6570\u636e\u5e93\u8bed\u8a00Database Languages</p> </li> <li> <p>\u6570\u636e\u5e93\u8bbe\u8ba1Database Design</p> </li> <li>\u6570\u636e\u5e93\u5f15\u64ceDatabase Engine</li> <li>\u6570\u636e\u5e93\u7528\u6237\u4e0e\u7ba1\u7406\u5458Database Users and Administrators</li> <li>\u6570\u636e\u5e93\u7cfb\u7edf\u5386\u53f2History of Database Systems</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_database_systems","title":"1. Database Systems","text":"<p>\u6570\u636e\u5e93\u662f\u76f8\u4e92\u5173\u8054(interrelated)\u7684\u4f01\u4e1a\u6570\u636e\u7684\u805a\u5408(collection)\uff0c\u7531DBMS(Database Management System)\u7ba1\u7406\u3002 </p> <p>DBMS \u7684\u4e3b\u8981\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u79cd\u65e2\u65b9\u4fbf(convenient)\u53c8\u9ad8\u6548(efficient)\u7684\u5b58\u50a8(store)\u548c\u68c0\u7d22(retrieve)\u6570\u636e\u5e93\u4fe1\u606f\u7684\u65b9\u6cd5\u3002</p> <p>\uff08\u6570\u636e\u5e93\u4e2d\u7684\uff09\u6570\u636e\u7ba1\u7406\u5305\u62ec\u5b9a\u4e49\u4fe1\u606f\u5b58\u50a8\u7ed3\u6784(structures for storage of information)\u548c\u63d0\u4f9b\u4fe1\u606f\u64cd\u4f5c\u673a\u5236(mechanisms for the manipulation of information)\u3002</p> <p>\u6570\u636e\u5e93\u7cfb\u7edf\u5fc5\u987b\u786e\u4fdd\u5b58\u50a8\u4fe1\u606f\u7684\u5b89\u5168\uff0c\u5373\u4f7f\u7cfb\u7edf\u5d29\u6e83(crashes)\u6216\u8005\u8bd5\u56fe\u8fdb\u884c\u672a\u6388\u6743(unauthorized)\u8bbf\u95ee</p> <p>\u5982\u679c\u8981\u5728\u591a\u4e2a\u7528\u6237\u4e4b\u95f4\u5171\u4eab\u6570\u636e\uff0c\u7cfb\u7edf\u5fc5\u987b\u63d0\u4f9b\u5e76\u53d1\u63a7\u5236(concurrency control)\u673a\u5236\uff0c\u4ee5\u907f\u514d\u53ef\u80fd\u7684\u5f02\u5e38(anomalous)\u7ed3\u679c\u3002</p> <p>\u6570\u636e\u5e93-\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfDBMS-\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u7684\u5c42\u6b21\u7ed3\u6784</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_purpose_of_database_systems","title":"2. Purpose of Database Systems","text":"<p>\u76f4\u63a5\u57fa\u4e8e\u6587\u4ef6\u7cfb\u7edf(file systems)\u7684\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4f1a\u62db\u81f4\u8bf8\u591a\u4e25\u91cd\u540e\u679c\uff1a</p> <ul> <li>\u6570\u636e\u5197\u4f59 Data redundancy\u4e0e\u4e0d\u4e00\u81f4inconsistency</li> <li>\u6587\u4ef6\u683c\u5f0f\u7e41\u591a\uff0c\u6587\u4ef6\u95f4\u4fe1\u606f\u5197\u4f59\u3001\u4e0d\u4e00\u81f4multiple file formats, duplication of information in different files</li> <li>\u6570\u636e\u5b64\u7acb Data isolation</li> <li>multiple files and formats</li> <li>\u5b58\u53d6\u6570\u636e\u56f0\u96be Difficulty in accessing data</li> <li>Need to write a new program to carry out each new task</li> <li>\u5b8c\u6574\u6027\u95ee\u9898 Integrity problems</li> <li>\u5b8c\u6574\u6027\u7ea6\u675f(Integrity constraints)\u9690\u5f0f\u8868\u8fbe\uff08\u663e\u5f0f\u8868\u8fbestated explicitly\u6bd4\u8f83\u597d\uff09 </li> <li>\u7ef4\u62a4\u4e0e\u62d3\u5c55\uff1a\u96be\u4ee5\u589e\u52a0/\u66f4\u6539\u5b8c\u6574\u6027\u7ea6\u675f</li> <li>\u539f\u5b50\u6027\u95ee\u9898 Atomicity problems</li> <li>\u9519\u8befFailures\u53d1\u751f\u4e8e\u6570\u636e\u5e93\u4e0d\u4e00\u81f4\u72b6\u6001inconsistent state(\u53ea\u6709\u90e8\u5206\u6570\u636e\u66f4\u65b0\u88ab\u6267\u884cpartial updates carried out)</li> <li>\u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38 Concurrent access anomalies</li> <li>\u5e76\u53d1\u8bbf\u95ee\uff1a\u6027\u80fd\u9700\u6c42</li> <li>\u4e0d\u53d7\u63a7\u7684\u5e76\u53d1\u8bbf\u95ee\u5c06\u5bfc\u81f4\u4e0d\u4e00\u81f4inconsistencies</li> <li>\u5b89\u5168\u6027\u95ee\u9898 Security problems</li> <li>\u9700\u8981\u9650\u5236\u7528\u6237\u7684\u53ef\u8bbf\u95ee\u6570\u636e\u8303\u56f4</li> <li>\u8ba4\u8bc1Authentication</li> <li>\u6743\u9650Priviledge </li> <li>\u5ba1\u8ba1Audit</li> </ul> <p>\u76f8\u5bf9\u5e94\u5730\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u6709\u5982\u4e0b\u7279\u5f81\uff1a</p> <ul> <li>\u6570\u636e\u6301\u4e45\u6027data persistence</li> <li>\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027convenience in accessing data</li> <li>\u6570\u636e\u5b8c\u6574\u6027data integrity </li> <li>\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236concurrency control for multiple user</li> <li>\u6545\u969c\u6062\u590dfailure recovery</li> <li>\u5b89\u5168\u63a7\u5236security control</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#3_view_of_data","title":"3. View of Data","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#_1","title":"\u6570\u636e\u5e93\u4e09\u5c42\u6a21\u578b","text":"<p>\u6570\u636e\u5e93\u53ef\u4ee5\u5206\u4e3a\u89c6\u56fe\u5c42\u3001\u903b\u8f91\u5c42\u548c\u7269\u7406\u5c42\u3002\u5206\u522b\u7531\u89c6\u56fe/\u903b\u8f91\u6620\u5c04\u3001\u903b\u8f91/\u7269\u7406\u6620\u5c04\u8fdb\u884c\u53d8\u6362\u3002</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#schemainstance","title":"\u6a21\u5f0f(schema)\u4e0e\u5b9e\u4f8b(instance)","text":"<ul> <li>Schema\uff1a\u6570\u636e\u5e93\u7684\u903b\u8f91\u7ed3\u6784 </li> <li>Physical schema: database design at the physical level</li> <li>Logical schema: database design at the logical level</li> <li>Instance\uff1a\u7279\u5b9a\u65f6\u95f4\u70b9\uff0c\u6570\u636e\u5e93\u7684\u5b9e\u9645\u5185\u5bb9</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#data_independence","title":"\u6570\u636e\u72ec\u7acb\u6027(Data Independence)","text":"<ul> <li>Physical Data Independence\uff1a\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u903b\u8f91\u6a21\u5f0f\u7684\u524d\u63d0\u4e0b\u4fee\u6539\u7269\u7406\u6a21\u5f0f\u7684\u80fd\u529b</li> <li>\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u4e8e\u903b\u8f91\u6a21\u5f0f\u5373\u53ef</li> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u5e94\u660e\u786e\u5b9a\u4e49\u5404\u5c42\u6b21\u3001\u90e8\u5206\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u67d0\u4e9b\u90e8\u5206\u7684\u66f4\u6539\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u5176\u4ed6\u90e8\u5206\u3002\uff08\u5373\u597d\u597d\u8bbe\u8ba1logical/physical mapping\uff09</li> <li>Logical Data Independence\uff1a\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u7528\u6237\u89c6\u56fe\u6a21\u5f0f\u7684\u524d\u63d0\u4e0b\u4fee\u6539\u903b\u8f91\u6a21\u5f0f\u7684\u80fd\u529b</li> <li>\u9700\u8981\u597d\u597d\u8bbe\u8ba1view/logical mapping</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#4_data_models","title":"4. Data Models","text":"<ul> <li>A collection of tools for describing </li> <li>Data</li> <li>Data relationships</li> <li>Data semantics(\u8bed\u4e49)</li> <li> <p>Data constraints(\u7ea6\u675f)</p> </li> <li> <p>Relational model(\u5173\u7cfb\u6a21\u578b)</p> </li> <li>Entity-Relationship data model</li> <li>Object-based data models </li> <li>Object-oriented (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li> <p>Object-relational (\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</p> </li> <li> <p>Semistructured data model (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</p> </li> <li> <p>Other older models:</p> </li> <li>Network model (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#5_database_languages","title":"5. Database Languages","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#classification","title":"classification","text":"<ul> <li>Data Definition Language (DDL) \uff1a\u4ea7\u751ftemplates stored in data dictionary</li> <li>data dictionary\uff1a\u5305\u62ecmetadata<ul> <li>database schema</li> <li>integrity constraints\uff1aprimary key, referential integrity</li> <li>authorization</li> </ul> </li> <li>Data Manipulation Language (DML) </li> <li>Language for accessing and manipulating the data organized by the appropriate data model</li> <li>also known as query language</li> <li>2\u7c7b <ul> <li>Procedural \u2013 \u7528\u6237\u6307\u5b9a\u6240\u9700data\uff0c\u5982\u4f55\u5f97\u5230data</li> <li>Declarative (nonprocedural) \u2013 \u7528\u6237\u53ea\u9700\u6307\u5b9a\u6240\u9700data</li> </ul> </li> <li>SQL\uff1a\u6700\u5e7f\u6cdb\u5e94\u7528\u7684query language</li> <li>SQL Query Language</li> <li>Application Program Interface \uff08API\uff09</li> <li>\u975e\u8fc7\u7a0b\u67e5\u8be2\u8bed\u8a00\uff08\u5982SQL\uff09\u4e0d\u5982\u901a\u7528\u56fe\u7075\u673a\u5f3a\u5927\u3002</li> <li>SQL\u4e0d\u652f\u6301\u7528\u6237\u8f93\u5165\u3001\u663e\u793a\u5668\u8f93\u51fa\u6216\u7f51\u7edc\u901a\u4fe1\u7b49\u64cd\u4f5c\u3002</li> <li>\u6b64\u7c7b\u8ba1\u7b97\u548c\u64cd\u4f5c\u5fc5\u987b\u7528\u5bbf\u4e3b\u8bed\u8a00(host language)\u7f16\u5199\uff08C/C++, Java or Python.\uff09</li> <li>\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u8bbf\u95ee\u6570\u636e\u5e93\uff1a<ul> <li>\u8bed\u8a00\u6269\u5c55\u4ee5\u5141\u8bb8\u5d4c\u5165\u5f0fSQL (embedded SQL)</li> <li>API(e.g., ODBC/JDBC)\uff0c\u5141\u8bb8SQL\u67e5\u8be2\u8bed\u53e5\u88ab\u9001\u5165\u6570\u636e\u5e93</li> </ul> </li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#6_database_design","title":"6. Database Design","text":"<p>ER\u6a21\u578b\u4e0e\u89c4\u8303\u5316\u7406\u8bba(Normalization Theory)</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#7_database_engine","title":"7. Database Engine","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#functional_components","title":"\u529f\u80fd\u7ec4\u4ef6functional components","text":"<ul> <li>storage manager\u5b58\u50a8\u7ba1\u7406</li> <li>\u63d0\u4f9b\u63a5\u53e3\uff1a\u5e95\u5c42\u6570\u636e\u4e0e\u63d0\u4ea4\u7ed9\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\u67e5\u8be2\u4e4b\u95f4</li> <li>\u6240\u8d1f\u8d23\u4efb\u52a1\uff1a<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u7ba1\u7406\u5668\u7684\u4ea4\u4e92</li> <li>\u6570\u636e\u9ad8\u6548\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u66f4\u65b0</li> </ul> </li> <li>\u5305\u62ec\uff1a<ul> <li>\u6587\u4ef6\u7ba1\u7406\u5668File manager</li> <li>\u7f13\u51b2\u533a\u7ba1\u7406\u5668Buffer manager</li> <li>\u6743\u9650\u4e0e\u5b8c\u6574\u6027\u7ba1\u7406\u5668Authorization and integrity manager</li> <li>\u4e8b\u52a1\u7ba1\u7406\u5668Transaction manager</li> </ul> </li> <li>\u4f5c\u4e3a\u7269\u7406\u7cfb\u7edf\u5b9e\u73b0\uff0cstorage manager\u5b9e\u73b0\u4e86\u5982\u4e0b\u6570\u636e\u7ed3\u6784\uff1a<ul> <li>\u6570\u636e\u6587\u4ef6Data files--\u5b58\u50a8\u6570\u636e\u5e93\u672c\u8eab</li> <li>\u6570\u636e\u5b57\u5178Data dictionary--\u5b58\u50a8\u6570\u636e\u5e93\u7ed3\u6784\u7684\u5143\u6570\u636e\uff0c\u7279\u522b\u662f\u6a21\u5f0f\u3002</li> <li>\u7d22\u5f15Indices--\u63d0\u4f9b\u5bf9\u6570\u636e\u9879\u7684\u5feb\u901f\u8bbf\u95ee\u3002</li> <li>\u7edf\u8ba1\u6570\u636eStatistical data</li> </ul> </li> <li>query processor component\u67e5\u8be2\u5904\u7406</li> <li>DDL\u89e3\u91ca\u5668 DDL interpreter\u2014\u2014\u89e3\u91caDDL\u8bed\u53e5\u5e76\u5728\u6570\u636e\u5b57\u5178\u4e2d\u8bb0\u5f55\u5b9a\u4e49\u3002</li> <li>DML\u7f16\u8bd1\u5668 DML compiler\u2014\u2014\u5c06\u67e5\u8be2\u8bed\u8a00\u4e2dDML\u8bed\u53e5\u8f6c\u6362\u4e3a\u8bc4\u4f30\u8ba1\u5212(evaluation plan)\uff0c\u8bc4\u4f30\u8ba1\u5212\u7531\u67e5\u8be2\u8bc4\u4f30\u5f15\u64ce(query evaluation engine)\u80fd\u7406\u89e3\u7684\u5e95\u5c42\u6307\u4ee4\u7ec4\u6210\u3002<ul> <li>DML\u7f16\u8bd1\u5668\u6267\u884c\u67e5\u8be2\u4f18\u5316\uff0c\u5373\u4ece\u5404\u79cd\u5907\u9009\u65b9\u6848\u4e2d\u9009\u62e9\u6210\u672c\u6700\u4f4e\u7684\u8bc4\u4f30\u8ba1\u5212\u3002</li> </ul> </li> <li>\u67e5\u8be2\u8bc4\u4f30\u5f15\u64ce Query evaluation engine\u2014\u2014\u6267\u884cDML\u7f16\u8bd1\u5668\u751f\u6210\u7684\u5e95\u5c42\u6307\u4ee4\u3002</li> <li> <p>Parsing and translation - Optimization - Evaluation  -        </p> </li> <li> <p>transaction management component\u4e8b\u52a1\u7ba1\u7406</p> </li> <li>\u4e8b\u52a1transaction\uff1a\u5728\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6267\u884c\u5355\u4e2a\u903b\u8f91\u529f\u80fd\u7684\u64cd\u4f5c\u96c6\u5408\u3002</li> <li>\u6062\u590d\u7ba1\u7406\u5668Recover Manager\uff1a\u786e\u4fdd\u6570\u636e\u5e93\u5728\u51fa\u73b0\u6545\u969c\u65f6\u4ecd\u4fdd\u6301\u4e00\u81f4\uff08consistent\uff09\u72b6\u6001\u3002\u6545\u969c\u5305\u62ec\u7cfb\u7edf\u6545\u969c(system failures)\uff08\u7535\u6e90\u6545\u969cpower failure, \u64cd\u4f5c\u7cfb\u7edf\u5d29\u6e83OS crashes\u7b49\uff09\u548c\u4e8b\u52a1\u6545\u969c(transaction failures)\u3002</li> <li>\u5e76\u53d1\u63a7\u5236\u7ba1\u7406\u5668Concurrency-control manager\uff1a\u63a7\u5236\u5e76\u53d1\u4e8b\u52a1\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\u3002</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#8_database_users_and_administrators","title":"8. Database Users and Administrators","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#database_users","title":"Database Users","text":"<p>Naive users\uff1a\u53ea\u4e0e\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92(use interfaces)</p> <p>Application programmer\uff1aDatabase application, API\uff08\u901a\u8fc7DML calls\u4ea4\u4e92\uff09</p> <p>sophisticated(Data Analyst)\uff1aDBMS, query tools</p> <p>DBA(Database Administrator)\uff1aDBMS, administration tools</p> <p>\u534f\u8c03(coordinate)\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6240\u6709\u6d3b\u52a8\uff1b\u5bf9\u4f01\u4e1a\u7684\u4fe1\u606f\u8d44\u6e90\u548c\u9700\u6c42\u6709\u5f88\u597d\u7684\u4e86\u89e3\u3002</p> <ul> <li>Tasks</li> <li>\u6a21\u5f0f\u5b9a\u4e49Schema definition</li> <li>\u5b58\u50a8\u7ed3\u6784\u548c\u8bbf\u95ee\u65b9\u6cd5\u5b9a\u4e49Storage structure and access method definition</li> <li>\u6a21\u5f0f\u548c\u7269\u7406\u7ec4\u7ec7\u65b9\u5f0f\u4fee\u6539Schema and physical organization modification</li> <li>\u6388\u6743\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93Granting user authority to access the database</li> <li>\u6307\u5b9a\u5b8c\u6574\u6027\u7ea6\u675fSpecifying integrity constraints</li> <li>\u5145\u5f53\u4e0e\u7528\u6237\u7684\u8054\u7edc\u4ebaActing as liaison with users</li> <li>\u76d1\u63a7\u6027\u80fd\u548c\u54cd\u5e94\u9700\u6c42\u53d8\u5316-\u6027\u80fd\u8c03\u6574Monitoring performance and responding to changes in requirements - Performance Tuning</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#9_history_of_database_systems","title":"9. History of Database Systems","text":"<ul> <li>1950s-early 1960s\uff1amagnetic tapes, sequential access</li> <li>1960s\uff1ahard disks(direct access), network/hierarchical model</li> <li>1961, IDS, GE, Charles W.Bachman(father of databases, 1973 Turing)</li> <li>1968, IBM IMS</li> <li>1970s\uff1aBusiness Aplications(OLTP)</li> <li>1970, relational model, Edgar F. Codd(1981 Turing)</li> <li>1974, System R prototype, Jim Gray, IBM</li> <li>1974,  Ingres prototype, Michael Stonebraker</li> <li>2004, SIGMOD renamed its highest prize to the SIGMOD Edgar F. Codd Innovations Award(\u6570\u636e\u5e93\u9886\u57df\u6700\u9ad8\u5956).</li> <li>1980s:</li> <li>RDBMS implementation </li> <li>Research relational prototypes evolve into commercial system<ul> <li>Oracle(1983), IBM DB2(1983), Informix(1985), Sybase(1987), Postgres (PostgresSQL,1989)</li> </ul> </li> <li>Parallel/Distributed/Object-oriented/Object-relational database systems</li> <li>Extended to Engineering Applications</li> <li>1998 Turing\uff1aJim Gray(also SIGMOD)\uff0cdisappear Jan. 28 2007</li> <li>1990s:</li> <li>Business intelligence(BI)</li> <li>Large decision support and data-mining applications</li> <li>Large multi-terabyte data warehouses</li> <li>OLAP(Online Analytical Processing)</li> <li>Emergence of Web commerce<ul> <li>The Web changes everything</li> <li>New workloads \u2013 performance, concurrency, availability</li> </ul> </li> <li>2000s:</li> <li>Web Era<ul> <li>Big data</li> </ul> </li> <li>XML and XQuery standards</li> <li>Automated database administration</li> <li>NoSQL(not only SQL)<ul> <li>looser consistency, horizontal scaling and higher availability</li> <li>useful for big data</li> <li>MongoDB, Cassandra, HBase</li> </ul> </li> <li>2010s:</li> <li>NewSQL</li> <li>Cloud database</li> <li>Blockchain</li> <li>Autonomous Database (AI powered Database)</li> <li>NewSQL\uff1aVoltDB, NuoDB, Clustrix, JustOneDB</li> <li>2014 Turing\uff1aMichael Stonebraker</li> <li>2010s: Cloud Database</li> <li>A cloud database is a database that typically runs on a cloud computing platform, access to it is provided as a service.</li> <li>Characteristics<ul> <li>Scalability, High availability, Resource transparency, Trustiness, Security and privacy</li> </ul> </li> <li>Vendors<ul> <li>Amazon RDS/DynamoDB/SimpleDB</li> <li>Microsoft Azure SQL Database </li> <li>Google Aurora</li> <li>Huawei GaussDB</li> <li>Aliyun PolarDB</li> <li>Tencent TDSQL-C/ TencentDB</li> </ul> </li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap2_relational_model","title":"Chap2: Relational Model","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#0_outline_1","title":"0. Outline","text":"<ul> <li>\u952e\u503c</li> <li>\u5173\u7cfb\u4ee3\u6570</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_key","title":"1. key","text":"<ul> <li>superkey</li> <li>candidate key\uff1aminimal superkey</li> <li>primary key\uff1aselected candidate key</li> <li>foreign key\uff1areferencing-&gt;referenced(primary key)</li> <li>referential integrity</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_relational_algebra","title":"2. relational algebra","text":"<ul> <li>\"Pure\u201d languages:</li> <li>Relational algebra\uff1a\u975e\u56fe\u7075\u673a\u7b49\u4ef7</li> <li>Tuple/Domain relational calculus</li> <li>6 basic</li> <li>select\uff1a\u6761\u4ef6\u79f0\u4e3aselection predicate</li> <li>project</li> <li>union</li> <li>set difference<ul> <li>union, set differenct\u90fd\u8981\u6c42same arity\uff0c\u5bf9\u5e94\u5c5e\u6027\u7684type\u8981compatible</li> </ul> </li> <li>Cartesian product</li> <li>rename</li> <li>Additional</li> <li>set intersection</li> <li>natural join\u3001theta join</li> <li>assignment</li> <li>outer join</li> <li>semijoin</li> <li>division operation</li> <li>extended</li> <li>Generalized Projection\uff1aarithmetic functions of attributes</li> <li>Aggregation function\uff1aavg\u3001min\u3001max\u3001sum\u3001count</li> <li>multiset\u4e2dduplicates\u6811</li> <li>selection: \u6ee1\u8db3\u6761\u4ef6\uff0c\u4fdd\u6301</li> <li>projection: \u4fdd\u6301</li> <li>cross product: m of t1 in r, n of t2 in s, mn in r  x s</li> <li>union: m + n</li> <li>intersection: min(m, n)</li> <li>difference: min(0, m - n)</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap3_introduction_to_sql","title":"Chap3: Introduction to SQL","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_sql","title":"1. SQL","text":"<ul> <li>Structured Query Language(SQL)</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_ddl","title":"2. DDL","text":"<ul> <li>\u5305\u542bschema, domain, integrity constraints, indices, security+authorization, physical storage structure</li> <li>type</li> <li>(var)char, int, smallint, numeric(p, d), real, double, float</li> <li>date(ymd), time(hms), timestamp(date+time), interval</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#3_integrity_constraints","title":"3. integrity constraints","text":"<ul> <li>not null</li> <li>primary key()</li> <li>foreign key() references r()</li> <li>on delete/update cascade/set null/restrict/set default</li> <li>alter</li> <li>alter table r add A D</li> <li>alter table r drop A</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#4_dml","title":"4. DML","text":"<ul> <li>duplicates\uff1adistinct/all(default)</li> <li>between\u95ed\u533a\u95f4</li> <li>string: like '\u901a\u914d\u7b26'</li> <li>%\u914dstring, _\u914d\u5b57\u7b26</li> <li>\u9003\u9038\u5b57\u7b26\u7528\\\uff0c\u6216\u7528escape\u6307\u5b9a</li> <li>order by ... desc/asc(default)</li> <li>limit offset=0, cnt</li> <li>union, intersect, except</li> <li>\u9ed8\u8ba4\u53bbduplicates\uff0c\u53ef+all</li> <li>\u542bnull\u7b97\u672f\u5f97null\uff0c\u6bd4\u8f83\u5f97unknown\uff0cis null\u5224\u65ad</li> <li>\u9664count\u7684\u805a\u5408\u51fd\u6570\u5ffd\u7565null\uff0c\u5982\u53ea\u6709null\u8fd4\u56denull</li> <li>\u5d4c\u5957\u5b50\u67e5\u8be2</li> <li>set membership\uff1a(not) in</li> <li>set comparison\uff1asome, all</li> <li>scalar subquery</li> <li>(not) exists</li> <li>unique\uff08\u5d4c\u5957\u5b50\u67e5\u8be2\u4e0d\u53efdistinct\uff09</li> <li>delete from ... where</li> <li>insert into ... values()</li> <li>insert into t1 select ... from t2</li> <li>update ... set ... where</li> <li>case when then else end</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap4_intermediate_sql","title":"Chap4: Intermediate SQL","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_join","title":"1. join","text":"<ul> <li>join type\uff1ainner join, left/right/full outer join</li> <li>join condition\uff1anatural, on..., using ...</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_sql_data_types_and_schemas","title":"2. SQL Data Types and Schemas","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#type_domain","title":"type, domain","text":"<ul> <li>create type ... as numeric(12, 2)</li> <li>create domain ... char(20) not null</li> <li>create domain ... char(20)</li> <li>constraint (name)</li> <li>check(value in());</li> <li>Large-Object Types</li> <li>blob: binary large object</li> <li>clob: character large object</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#3_integrity_constraints_1","title":"3. Integrity constraints","text":"<ul> <li>not null</li> <li>primary key</li> <li>unique</li> <li>check()\uff1a\u53ef\u5d4c\u5957\u67e5\u8be2\uff0c\u4f46\u672a\u5e38\u5b9e\u73b0</li> <li>foreign key</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#assertion","title":"Assertion","text":"<p>create assertion (name) check ...</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#4_views","title":"4. views","text":"<p>create view v as ...</p> <p>\u63d2\u5165view\uff0c\u4e5f\u4f1a\u6539\u53d8\u539frelation</p> <p>\u7269\u7406view</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#5_indices","title":"5. Indices","text":"<p>create index (name) on r(A)</p>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#6_transactions","title":"6. Transactions","text":"<ul> <li> <p>commit, rollback</p> </li> <li> <p>SET AUTOCOMMIT = 0</p> </li> <li>serializable, repeatable read, read commit, read uncommit</li> <li>ACID</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#7_authorization","title":"7. Authorization","text":"<ul> <li>select, insert, update, delete</li> <li>index, resources, alteration, drop</li> <li>grant (priv) on () to (user)</li> <li>revoke (priv) on () from (user)</li> <li>DCL</li> <li>create role (name)</li> <li>grant (role) to (user)</li> <li>grant reference () on () to()</li> <li>grant with grant option</li> <li>revoke cascade/restrict</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap5_advanced_sql","title":"Chap5: Advanced SQL","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_accessing_sql_from_a_programming_language","title":"1. Accessing SQL From a Programming Language","text":"<ul> <li>API, O(Open)DBC(Connectivity)/J(Java)DBC, Embedded SQL(in C), SQLJ, JP(Persistence)A(API)</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_sql_functions","title":"2. SQL Functions","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#3_trigger","title":"3. Trigger","text":"<ul> <li> <p>insert, delete, update</p> </li> <li> <p>before, after</p> </li> <li>referencing new/old row/table as</li> <li>for each statement/row</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap6_entity-relationship_model","title":"Chap6: Entity-Relationship Model","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_db_design_process","title":"1. DB Design Process","text":"<ul> <li>avoid\uff1aredundancy and incompleteness</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_er_model","title":"2. ER model","text":"<ul> <li> <p>roles  -      </p> </li> <li> <p>binary/ternary relationship</p> </li> <li>attributes(with domain)</li> <li>simple/composite</li> <li>single-valued/multivalued</li> <li>derived</li> <li>weak entity set-&gt;identifying entity set</li> <li>discriminator/partial key</li> <li>Specialization/Generalization</li> <li>Top-down, attribute inheritance/ bottom-up</li> <li>disjoint/overlapping</li> <li>total/partial(completeness constraint)</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#chap7_relational_database_design","title":"Chap7: Relational Database Design","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#1_pitfall_of_bad_relations","title":"1. pitfall of bad relations","text":"<ul> <li>\u4fe1\u606f\u91cd\u590dInformation repetition</li> <li>\u63d2\u5165\u5f02\u5e38Insertion anomalies</li> <li>\u66f4\u65b0\u56f0\u96beUpdate difficulty</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#2_decomposition_lossless","title":"2. Decomposition Lossless","text":"<ul> <li>R-&gt;R1,R2\uff0c\u5145\u8981\u6761\u4ef6</li> <li>\\(R_1\\cap R_2\\rightarrow R_1\\)</li> <li>\\(R_1\\cap R_2\\rightarrow R_2\\)</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#3_forms","title":"3. Forms","text":"<ul> <li>\u7b2c\u4e00\u8303\u5f0fFirst Normal Form\uff1a\u5404attribute\u90fdatomic\uff08\u4e0d\u53ef\u5206\uff09</li> <li>Boyce-Codd Normal Form(BCNF)\uff1a\u4efb\u610f\u51fd\u6570\u4f9d\u8d56\\(\\alpha\\rightarrow\\beta\\)\uff0c\u8981\u4e48trivial\uff0c\u8981\u4e48\\(\\alpha\\)\u4e3a\u8d85\u952e</li> <li>3NF\uff1aBCNF\u5fc53NF\u3002\u82e5\\(\\beta-\\alpha\\)\u7684\u4efb\u610f\u5c5e\u6027\u90fd\u5728\u6574\u4f53\\(R\\)\u7684\u67d0candidate key\u4e2d\uff0c\u4e5f\u5c5e3NF\u3002</li> <li>4NF\uff1a\u7c7b\u4f3cBCNF\u7684\u5b9a\u4e49\u3002\u82e54NF\uff0c\u5fc5BCNF\u3002</li> </ul>"},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#4_dependencies","title":"4. Dependencies","text":""},{"location":"ZJU_CS/Database/db-ch1-to-7-review/#functional_dependencies","title":"Functional dependencies","text":"<ul> <li>functional/multivalued dependencies</li> <li>legal instance\uff1a\u6ee1\u8db3\u73b0\u5b9e\u7ea6\u675f</li> <li>superkey\uff1aK is superkey\u7b49\u4ef7\u4e8e\\(K\\rightarrow R\\)</li> <li>trivial\uff1a\\(A\\rightarrow B\\) is trivial if \\(B\\subset A\\)</li> <li>closure\uff1aall FDs(different from attribute closure)</li> <li> <p>Armstrong\u2019s Axioms:  -        </p> </li> <li> <p>sound and complete</p> </li> <li> <p>Additional  -        </p> </li> <li> <p>Canonial Cover\uff1a\u53bb\u9664\u6240\u6709Extraneous Attributes</p> </li> <li> <p>dependency preserving</p> </li> </ul>"},{"location":"ZJU_CS/Database/note/","title":"Note","text":""},{"location":"ZJU_CS/Database/note/#introduction","title":"Introduction","text":""},{"location":"ZJU_CS/Database/note/#0_outline","title":"0. Outline","text":"<ul> <li>\u6570\u636e\u5e93\u7cfb\u7edfDatabase Systems</li> <li>(\u4f7f\u7528)\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u76ee\u7684Purpose of Database Systems</li> <li>\u6570\u636e\u89c6\u56feView of Data</li> <li>\u6570\u636e\u6a21\u578bData Models</li> <li> <p>\u6570\u636e\u5e93\u8bed\u8a00Database Languages</p> </li> <li> <p>\u6570\u636e\u5e93\u8bbe\u8ba1Database Design</p> </li> <li>\u6570\u636e\u5e93\u5f15\u64ceDatabase Engine</li> <li>\u6570\u636e\u5e93\u7528\u6237\u4e0e\u7ba1\u7406\u5458Database Users and Administrators</li> <li>\u6570\u636e\u5e93\u7cfb\u7edf\u5386\u53f2History of Database Systems</li> </ul>"},{"location":"ZJU_CS/Database/note/#database_system","title":"Database System","text":"<ul> <li>DBMS: Database Management System</li> <li>Application built on files vs. built on databases.</li> <li>The primary goal of a DBMS is to provide a way to store and retrieve database information that is both convenient and efficient.</li> <li>concurrency control(\u5e76\u53d1\u63a7\u5236) and recovery from failures are also important.</li> </ul>"},{"location":"ZJU_CS/Database/note/#purpose_of_db","title":"Purpose of DB","text":"<ul> <li>Data storage, retrieval and update.</li> <li>Data reduncancy(\u6570\u636e\u5197\u4f59) and inconsistency. </li> <li>Data isolation(\u6570\u636e\u9694\u79bb)  integrity(\u6570\u636e\u5b8c\u6574\u6027) and atomicity(\u539f\u5b50\u6027). </li> <li>Difficulty in accessing data.</li> <li>security problems.(audit\u5ba1\u8ba1) </li> </ul>"},{"location":"ZJU_CS/Database/note/#database_engine","title":"Database Engine","text":""},{"location":"ZJU_CS/Database/note/#1_database_systems","title":"1. Database Systems","text":"<p>\u6570\u636e\u5e93\u662f\u76f8\u4e92\u5173\u8054(interrelated)\u7684\u4f01\u4e1a\u6570\u636e\u7684\u805a\u5408(collection)\uff0c\u7531DBMS(Database Management System)\u7ba1\u7406\u3002 </p> <p>DBMS \u7684\u4e3b\u8981\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u79cd\u65e2\u65b9\u4fbf(convenient)\u53c8\u9ad8\u6548(efficient)\u7684\u5b58\u50a8(store)\u548c\u68c0\u7d22(retrieve)\u6570\u636e\u5e93\u4fe1\u606f\u7684\u65b9\u6cd5\u3002</p> <p>\uff08\u6570\u636e\u5e93\u4e2d\u7684\uff09\u6570\u636e\u7ba1\u7406\u5305\u62ec\u5b9a\u4e49\u4fe1\u606f\u5b58\u50a8\u7ed3\u6784(structures for storage of information)\u548c\u63d0\u4f9b\u4fe1\u606f\u64cd\u4f5c\u673a\u5236(mechanisms for the manipulation of information)\u3002</p> <p>\u6570\u636e\u5e93\u7cfb\u7edf\u5fc5\u987b\u786e\u4fdd\u5b58\u50a8\u4fe1\u606f\u7684\u5b89\u5168\uff0c\u5373\u4f7f\u7cfb\u7edf\u5d29\u6e83(crashes)\u6216\u8005\u8bd5\u56fe\u8fdb\u884c\u672a\u6388\u6743(unauthorized)\u8bbf\u95ee</p> <p>\u5982\u679c\u8981\u5728\u591a\u4e2a\u7528\u6237\u4e4b\u95f4\u5171\u4eab\u6570\u636e\uff0c\u7cfb\u7edf\u5fc5\u987b\u63d0\u4f9b\u5e76\u53d1\u63a7\u5236(concurrency control)\u673a\u5236\uff0c\u4ee5\u907f\u514d\u53ef\u80fd\u7684\u5f02\u5e38(anomalous)\u7ed3\u679c\u3002</p> <p>\u6570\u636e\u5e93-\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfDBMS-\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u7684\u5c42\u6b21\u7ed3\u6784</p>"},{"location":"ZJU_CS/Database/note/#2_purpose_of_database_systems","title":"2. Purpose of Database Systems","text":"<p>\u76f4\u63a5\u57fa\u4e8e\u6587\u4ef6\u7cfb\u7edf(file systems)\u7684\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4f1a\u62db\u81f4\u8bf8\u591a\u4e25\u91cd\u540e\u679c\uff1a</p> <ul> <li>\u6570\u636e\u5197\u4f59 Data redundancy\u4e0e\u4e0d\u4e00\u81f4inconsistency</li> <li>\u6587\u4ef6\u683c\u5f0f\u7e41\u591a\uff0c\u6587\u4ef6\u95f4\u4fe1\u606f\u5197\u4f59\u3001\u4e0d\u4e00\u81f4multiple file formats, duplication of information in different files</li> <li>\u6570\u636e\u5b64\u7acb Data isolation</li> <li>multiple files and formats</li> <li>\u5b58\u53d6\u6570\u636e\u56f0\u96be Difficulty in accessing data</li> <li>Need to write a new program to carry out each new task</li> <li>\u5b8c\u6574\u6027\u95ee\u9898 Integrity problems</li> <li>\u5b8c\u6574\u6027\u7ea6\u675f(Integrity constraints)\u9690\u5f0f\u8868\u8fbe\uff08\u663e\u5f0f\u8868\u8fbestated explicitly\u6bd4\u8f83\u597d\uff09 </li> <li>\u7ef4\u62a4\u4e0e\u62d3\u5c55\uff1a\u96be\u4ee5\u589e\u52a0/\u66f4\u6539\u5b8c\u6574\u6027\u7ea6\u675f</li> <li>\u539f\u5b50\u6027\u95ee\u9898 Atomicity problems</li> <li>\u9519\u8befFailures\u53d1\u751f\u4e8e\u6570\u636e\u5e93\u4e0d\u4e00\u81f4\u72b6\u6001inconsistent state(\u53ea\u6709\u90e8\u5206\u6570\u636e\u66f4\u65b0\u88ab\u6267\u884cpartial updates carried out)</li> <li>\u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38 Concurrent access anomalies</li> <li>\u5e76\u53d1\u8bbf\u95ee\uff1a\u6027\u80fd\u9700\u6c42</li> <li>\u4e0d\u53d7\u63a7\u7684\u5e76\u53d1\u8bbf\u95ee\u5c06\u5bfc\u81f4\u4e0d\u4e00\u81f4inconsistencies</li> <li>\u5b89\u5168\u6027\u95ee\u9898 Security problems</li> <li>\u9700\u8981\u9650\u5236\u7528\u6237\u7684\u53ef\u8bbf\u95ee\u6570\u636e\u8303\u56f4</li> <li>\u8ba4\u8bc1Authentication</li> <li>\u6743\u9650Priviledge </li> <li>\u5ba1\u8ba1Audit</li> </ul> <p>\u76f8\u5bf9\u5e94\u5730\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u6709\u5982\u4e0b\u7279\u5f81\uff1a</p> <ul> <li>\u6570\u636e\u6301\u4e45\u6027data persistence</li> <li>\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027convenience in accessing data</li> <li>\u6570\u636e\u5b8c\u6574\u6027data integrity </li> <li>\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236concurrency control for multiple user</li> <li>\u6545\u969c\u6062\u590dfailure recovery</li> <li>\u5b89\u5168\u63a7\u5236security control</li> </ul>"},{"location":"ZJU_CS/Database/note/#3_view_of_data","title":"3. View of Data","text":""},{"location":"ZJU_CS/Database/note/#_2","title":"\u6570\u636e\u5e93\u4e09\u5c42\u6a21\u578b","text":"<p>\u6570\u636e\u5e93\u53ef\u4ee5\u5206\u4e3a\u89c6\u56fe\u5c42\u3001\u903b\u8f91\u5c42\u548c\u7269\u7406\u5c42\u3002\u5206\u522b\u7531\u89c6\u56fe/\u903b\u8f91\u6620\u5c04\u3001\u903b\u8f91/\u7269\u7406\u6620\u5c04\u8fdb\u884c\u53d8\u6362\u3002</p>"},{"location":"ZJU_CS/Database/note/#schemainstance","title":"\u6a21\u5f0f(schema)\u4e0e\u5b9e\u4f8b(instance)","text":"<ul> <li>Schema\uff1a\u6570\u636e\u5e93\u7684\u903b\u8f91\u7ed3\u6784 </li> <li>Physical schema: database design at the physical level</li> <li>Logical schema: database design at the logical level</li> <li>Instance\uff1a\u7279\u5b9a\u65f6\u95f4\u70b9\uff0c\u6570\u636e\u5e93\u7684\u5b9e\u9645\u5185\u5bb9</li> </ul>"},{"location":"ZJU_CS/Database/note/#data_independence","title":"\u6570\u636e\u72ec\u7acb\u6027(Data Independence)","text":"<ul> <li>Physical Data Independence\uff1a\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u903b\u8f91\u6a21\u5f0f\u7684\u524d\u63d0\u4e0b\u4fee\u6539\u7269\u7406\u6a21\u5f0f\u7684\u80fd\u529b</li> <li>\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u4e8e\u903b\u8f91\u6a21\u5f0f\u5373\u53ef</li> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u5e94\u660e\u786e\u5b9a\u4e49\u5404\u5c42\u6b21\u3001\u90e8\u5206\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u67d0\u4e9b\u90e8\u5206\u7684\u66f4\u6539\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u5176\u4ed6\u90e8\u5206\u3002\uff08\u5373\u597d\u597d\u8bbe\u8ba1logical/physical mapping\uff09</li> <li>Logical Data Independence\uff1a\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u7528\u6237\u89c6\u56fe\u6a21\u5f0f\u7684\u524d\u63d0\u4e0b\u4fee\u6539\u903b\u8f91\u6a21\u5f0f\u7684\u80fd\u529b</li> <li>\u9700\u8981\u597d\u597d\u8bbe\u8ba1view/logical mapping</li> </ul>"},{"location":"ZJU_CS/Database/note/#4_data_models","title":"4. Data Models","text":"<ul> <li>A collection of tools for describing </li> <li>Data</li> <li>Data relationships</li> <li>Data semantics(\u8bed\u4e49)</li> <li> <p>Data constraints(\u7ea6\u675f)</p> </li> <li> <p>Relational model(\u5173\u7cfb\u6a21\u578b)</p> </li> <li>Entity-Relationship data model</li> <li>Object-based data models </li> <li>Object-oriented (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li> <p>Object-relational (\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</p> </li> <li> <p>Semistructured data model (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</p> </li> <li> <p>Other older models:</p> </li> <li>Network model (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul>"},{"location":"ZJU_CS/Database/note/#5_database_languages","title":"5. Database Languages","text":""},{"location":"ZJU_CS/Database/note/#classification","title":"classification","text":"<ul> <li>Data Definition Language (DDL) \uff1a\u4ea7\u751ftemplates stored in data dictionary</li> <li>data dictionary\uff1a\u5305\u62ecmetadata<ul> <li>database schema</li> <li>integrity constraints\uff1aprimary key, referential integrity</li> <li>authorization</li> </ul> </li> <li>Data Manipulation Language (DML) </li> <li>Language for accessing and manipulating the data organized by the appropriate data model</li> <li>also known as query language</li> <li>2\u7c7b <ul> <li>Procedural \u2013 \u7528\u6237\u6307\u5b9a\u6240\u9700data\uff0c\u5982\u4f55\u5f97\u5230data</li> <li>Declarative (nonprocedural) \u2013 \u7528\u6237\u53ea\u9700\u6307\u5b9a\u6240\u9700data</li> </ul> </li> <li>SQL\uff1a\u6700\u5e7f\u6cdb\u5e94\u7528\u7684query language</li> <li>SQL Query Language</li> <li>Application Program Interface \uff08API\uff09</li> <li>\u975e\u8fc7\u7a0b\u67e5\u8be2\u8bed\u8a00\uff08\u5982SQL\uff09\u4e0d\u5982\u901a\u7528\u56fe\u7075\u673a\u5f3a\u5927\u3002</li> <li>SQL\u4e0d\u652f\u6301\u7528\u6237\u8f93\u5165\u3001\u663e\u793a\u5668\u8f93\u51fa\u6216\u7f51\u7edc\u901a\u4fe1\u7b49\u64cd\u4f5c\u3002</li> <li>\u6b64\u7c7b\u8ba1\u7b97\u548c\u64cd\u4f5c\u5fc5\u987b\u7528\u5bbf\u4e3b\u8bed\u8a00(host language)\u7f16\u5199\uff08C/C++, Java or Python.\uff09</li> <li>\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u8bbf\u95ee\u6570\u636e\u5e93\uff1a<ul> <li>\u8bed\u8a00\u6269\u5c55\u4ee5\u5141\u8bb8\u5d4c\u5165\u5f0fSQL (embedded SQL)</li> <li>API(e.g., ODBC/JDBC)\uff0c\u5141\u8bb8SQL\u67e5\u8be2\u8bed\u53e5\u88ab\u9001\u5165\u6570\u636e\u5e93</li> </ul> </li> </ul>"},{"location":"ZJU_CS/Database/note/#6_database_design","title":"6. Database Design","text":"<p>ER\u6a21\u578b\u4e0e\u89c4\u8303\u5316\u7406\u8bba(Normalization Theory)</p>"},{"location":"ZJU_CS/Database/note/#7_database_engine","title":"7. Database Engine","text":""},{"location":"ZJU_CS/Database/note/#functional_components","title":"\u529f\u80fd\u7ec4\u4ef6functional components","text":"<ul> <li>storage manager\u5b58\u50a8\u7ba1\u7406</li> <li>\u63d0\u4f9b\u63a5\u53e3\uff1a\u5e95\u5c42\u6570\u636e\u4e0e\u63d0\u4ea4\u7ed9\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\u67e5\u8be2\u4e4b\u95f4</li> <li>\u6240\u8d1f\u8d23\u4efb\u52a1\uff1a<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u7ba1\u7406\u5668\u7684\u4ea4\u4e92</li> <li>\u6570\u636e\u9ad8\u6548\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u66f4\u65b0</li> </ul> </li> <li>\u5305\u62ec\uff1a<ul> <li>\u6587\u4ef6\u7ba1\u7406\u5668File manager</li> <li>\u7f13\u51b2\u533a\u7ba1\u7406\u5668Buffer manager</li> <li>\u6743\u9650\u4e0e\u5b8c\u6574\u6027\u7ba1\u7406\u5668Authorization and integrity manager</li> <li>\u4e8b\u52a1\u7ba1\u7406\u5668Transaction manager</li> </ul> </li> <li>\u4f5c\u4e3a\u7269\u7406\u7cfb\u7edf\u5b9e\u73b0\uff0cstorage manager\u5b9e\u73b0\u4e86\u5982\u4e0b\u6570\u636e\u7ed3\u6784\uff1a<ul> <li>\u6570\u636e\u6587\u4ef6Data files--\u5b58\u50a8\u6570\u636e\u5e93\u672c\u8eab</li> <li>\u6570\u636e\u5b57\u5178Data dictionary--\u5b58\u50a8\u6570\u636e\u5e93\u7ed3\u6784\u7684\u5143\u6570\u636e\uff0c\u7279\u522b\u662f\u6a21\u5f0f\u3002</li> <li>\u7d22\u5f15Indices--\u63d0\u4f9b\u5bf9\u6570\u636e\u9879\u7684\u5feb\u901f\u8bbf\u95ee\u3002</li> <li>\u7edf\u8ba1\u6570\u636eStatistical data</li> </ul> </li> <li>query processor component\u67e5\u8be2\u5904\u7406</li> <li>DDL\u89e3\u91ca\u5668 DDL interpreter\u2014\u2014\u89e3\u91caDDL\u8bed\u53e5\u5e76\u5728\u6570\u636e\u5b57\u5178\u4e2d\u8bb0\u5f55\u5b9a\u4e49\u3002</li> <li>DML\u7f16\u8bd1\u5668 DML compiler\u2014\u2014\u5c06\u67e5\u8be2\u8bed\u8a00\u4e2dDML\u8bed\u53e5\u8f6c\u6362\u4e3a\u8bc4\u4f30\u8ba1\u5212(evaluation plan)\uff0c\u8bc4\u4f30\u8ba1\u5212\u7531\u67e5\u8be2\u8bc4\u4f30\u5f15\u64ce(query evaluation engine)\u80fd\u7406\u89e3\u7684\u5e95\u5c42\u6307\u4ee4\u7ec4\u6210\u3002<ul> <li>DML\u7f16\u8bd1\u5668\u6267\u884c\u67e5\u8be2\u4f18\u5316\uff0c\u5373\u4ece\u5404\u79cd\u5907\u9009\u65b9\u6848\u4e2d\u9009\u62e9\u6210\u672c\u6700\u4f4e\u7684\u8bc4\u4f30\u8ba1\u5212\u3002</li> </ul> </li> <li>\u67e5\u8be2\u8bc4\u4f30\u5f15\u64ce Query evaluation engine\u2014\u2014\u6267\u884cDML\u7f16\u8bd1\u5668\u751f\u6210\u7684\u5e95\u5c42\u6307\u4ee4\u3002</li> <li> <p>Parsing and translation - Optimization - Evaluation  -        </p> </li> <li> <p>transaction management component\u4e8b\u52a1\u7ba1\u7406</p> </li> <li>\u4e8b\u52a1transaction\uff1a\u5728\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6267\u884c\u5355\u4e2a\u903b\u8f91\u529f\u80fd\u7684\u64cd\u4f5c\u96c6\u5408\u3002</li> <li>\u6062\u590d\u7ba1\u7406\u5668Recover Manager\uff1a\u786e\u4fdd\u6570\u636e\u5e93\u5728\u51fa\u73b0\u6545\u969c\u65f6\u4ecd\u4fdd\u6301\u4e00\u81f4\uff08consistent\uff09\u72b6\u6001\u3002\u6545\u969c\u5305\u62ec\u7cfb\u7edf\u6545\u969c(system failures)\uff08\u7535\u6e90\u6545\u969cpower failure, \u64cd\u4f5c\u7cfb\u7edf\u5d29\u6e83OS crashes\u7b49\uff09\u548c\u4e8b\u52a1\u6545\u969c(transaction failures)\u3002</li> <li>\u5e76\u53d1\u63a7\u5236\u7ba1\u7406\u5668Concurrency-control manager\uff1a\u63a7\u5236\u5e76\u53d1\u4e8b\u52a1\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\u3002</li> </ul>"},{"location":"ZJU_CS/Database/note/#8_database_users_and_administrators","title":"8. Database Users and Administrators","text":""},{"location":"ZJU_CS/Database/note/#database_users","title":"Database Users","text":"<p>Naive users\uff1a\u53ea\u4e0e\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92(use interfaces)</p> <p>Application programmer\uff1aDatabase application, API\uff08\u901a\u8fc7DML calls\u4ea4\u4e92\uff09</p> <p>sophisticated(Data Analyst)\uff1aDBMS, query tools</p> <p>DBA(Database Administrator)\uff1aDBMS, administration tools</p> <p>\u534f\u8c03(coordinate)\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6240\u6709\u6d3b\u52a8\uff1b\u5bf9\u4f01\u4e1a\u7684\u4fe1\u606f\u8d44\u6e90\u548c\u9700\u6c42\u6709\u5f88\u597d\u7684\u4e86\u89e3\u3002</p> <ul> <li>Tasks</li> <li>\u6a21\u5f0f\u5b9a\u4e49Schema definition</li> <li>\u5b58\u50a8\u7ed3\u6784\u548c\u8bbf\u95ee\u65b9\u6cd5\u5b9a\u4e49Storage structure and access method definition</li> <li>\u6a21\u5f0f\u548c\u7269\u7406\u7ec4\u7ec7\u65b9\u5f0f\u4fee\u6539Schema and physical organization modification</li> <li>\u6388\u6743\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93Granting user authority to access the database</li> <li>\u6307\u5b9a\u5b8c\u6574\u6027\u7ea6\u675fSpecifying integrity constraints</li> <li>\u5145\u5f53\u4e0e\u7528\u6237\u7684\u8054\u7edc\u4ebaActing as liaison with users</li> <li>\u76d1\u63a7\u6027\u80fd\u548c\u54cd\u5e94\u9700\u6c42\u53d8\u5316-\u6027\u80fd\u8c03\u6574Monitoring performance and responding to changes in requirements - Performance Tuning</li> </ul>"},{"location":"ZJU_CS/Database/note/#9_history_of_database_systems","title":"9. History of Database Systems","text":"<ul> <li>1950s-early 1960s\uff1amagnetic tapes, sequential access</li> <li>1960s\uff1ahard disks(direct access), network/hierarchical model</li> <li>1961, IDS, GE, Charles W.Bachman(father of databases, 1973 Turing)</li> <li>1968, IBM IMS</li> <li>1970s\uff1aBusiness Aplications(OLTP)</li> <li>1970, relational model, Edgar F. Codd(1981 Turing)</li> <li>1974, System R prototype, Jim Gray, IBM</li> <li>1974,  Ingres prototype, Michael Stonebraker</li> <li>2004, SIGMOD renamed its highest prize to the SIGMOD Edgar F. Codd Innovations Award(\u6570\u636e\u5e93\u9886\u57df\u6700\u9ad8\u5956).</li> <li>1980s:</li> <li>RDBMS implementation </li> <li>Research relational prototypes evolve into commercial system<ul> <li>Oracle(1983), IBM DB2(1983), Informix(1985), Sybase(1987), Postgres (PostgresSQL,1989)</li> </ul> </li> <li>Parallel/Distributed/Object-oriented/Object-relational database systems</li> <li>Extended to Engineering Applications</li> <li>1998 Turing\uff1aJim Gray(also SIGMOD)\uff0cdisappear Jan. 28 2007</li> <li>1990s:</li> <li>Business intelligence(BI)</li> <li>Large decision support and data-mining applications</li> <li>Large multi-terabyte data warehouses</li> <li>OLAP(Online Analytical Processing)</li> <li>Emergence of Web commerce<ul> <li>The Web changes everything</li> <li>New workloads \u2013 performance, concurrency, availability</li> </ul> </li> <li>2000s:</li> <li>Web Era<ul> <li>Big data</li> </ul> </li> <li>XML and XQuery standards</li> <li>Automated database administration</li> <li>NoSQL(not only SQL)<ul> <li>looser consistency, horizontal scaling and higher availability</li> <li>useful for big data</li> <li>MongoDB, Cassandra, HBase</li> </ul> </li> <li>2010s:</li> <li>NewSQL</li> <li>Cloud database</li> <li>Blockchain</li> <li>Autonomous Database (AI powered Database)</li> <li>NewSQL\uff1aVoltDB, NuoDB, Clustrix, JustOneDB</li> <li>2014 Turing\uff1aMichael Stonebraker</li> <li>2010s: Cloud Database</li> <li>A cloud database is a database that typically runs on a cloud computing platform, access to it is provided as a service.</li> <li>Characteristics<ul> <li>Scalability, High availability, Resource transparency, Trustiness, Security and privacy</li> </ul> </li> <li>Vendors<ul> <li>Amazon RDS/DynamoDB/SimpleDB</li> <li>Microsoft Azure SQL Database </li> <li>Google Aurora</li> <li>Huawei GaussDB</li> <li>Aliyun PolarDB</li> <li>Tencent TDSQL-C/ TencentDB</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/","title":"[\u5927\u4e8c\u79cb\u51ac] \u6570\u5b57\u903b\u8f91\u8bbe\u8ba1 | Digital Design","text":"<p>\u7531\u4e8eZJU\u6709\u592a\u591a\u4f18\u79c0\u5b66\u957f\u7684\u535a\u5ba2\uff0c\u6240\u4ee5\u672c\u8bfe\u6211clone\u4e86Xiu\u4f6c\u7684\u7b14\u8bb0\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u52a0\u4e0a\u81ea\u5df1\u7684\u8bb0\u5f55\u3002</p> <p>\u8bfe\u7a0b\u4fe1\u606f</p> <ul> <li>\u6388\u8bfe\uff1azmm</li> <li>\u667a\u4e91\u8bfe\u5802\u94fe\u63a5\uff1a\ud83d\udd17 \u8fd9\u91cc\u4e0d\u5efa\u8bae\u5927\u5bb6\u542czmm\u8001\u5e08\u7684\u667a\u4e91\uff0cmaybe\u81ea\u5b66\u6216\u8005\u9694\u58c1\u73ed\u7684md\u8001\u5e08\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u4f53\u9a8c</li> <li>\u6559\u6750\uff1aLogic and Computer Design Fundamentals, Fifth Edition</li> <li>\u7531\u4e8e\u672c\u4eba\u4ece\u672a\u5728\u6b64\u4e4b\u524d\u4e0a\u8fc7\u5b8c\u6574\u7684\u786c\u4ef6\u8bfe\u7a0b\uff08\u5982ICS\uff09\uff0c\u53ea\u662f\u96f6\u788e\u7684\u5438\u6536\u4e86\u8bb8\u591a\u6742\u4e03\u6742\u516b\u7684\u77e5\u8bc6\u3002\u540e\u8003\u8bd5\u8865\u5929\u6545\u9009\u62e9\u4e86GuaGua\u7b14\u8bb0\u548c\u4fee\u4f6c\u7684\u7f51\u7ad9\u6765\u76d8\u70b9<sub>~\u590d\u4e60</sub>~\u9884\u4e60\u3002\u5e0c\u671b\u5927\u5bb6\u6709\u4efb\u4f55\u610f\u89c1\u6216\u8005\u5efa\u8bae\u90fd\u5199\u5728\u8bc4\u8bba\u533a\u91cc\u8ba9\u6211\u77e5\u9053\uff01\u5e0c\u671b\u8fd9\u4efd\u8d44\u6599\u53ef\u4ee5\u7ed9\u4f60\u5e26\u6765\u5e2e\u52a9\uff01</li> </ul> <p>List</p> <p>\u8865\u5929\u65f6\u5019\u7684\u4e00\u70b9\u60f3\u6cd5\uff0c\u56e0\u4e3a\u8bfe\u672c\u6bcf\u4e00\u7ae0\u90fd\u6709\u4e00\u4e2a summary\uff0c\u6240\u4ee5\u5982\u679c\u8981\u770b\u4e66\u7684\u8bdd\u6216\u8bb8\u53ef\u4ee5\u5148\u770b\u90a3\u4e2a summary \u518d\u770b\u5177\u4f53\u7684\u3002</p> <ul> <li> Chap 1 Digital Systems and Information</li> <li> Chap 2 Combinational Logic Circuits</li> <li> Chap 3 Combinational Logic Design</li> <li> Chap 4 Sequential Circuits</li> <li> Chap 5 Digital Hardware Implementation \uff08\u7565\u7b80\u7565\uff09</li> <li> Chap 6 Registers &amp; Register Transfers</li> <li> Chap 7 Memory Basics </li> <li> Glossary</li> <li> \u5b66\u4e60\u601d\u8def\u4ee5\u53ca\u8d44\u6e90</li> </ul> <p>\u672c\u7b14\u8bb0\u4e3b\u8981\u53c2\u8003\u4e86 isshikih\uff0880%\uff09 \u548c Guahao\uff0810%\uff09\u3002\u81ea\u5df1\u5728\u6b64\u57fa\u7840\u4e0a\u5b89\u88c5\u65b0\u624b\u7684\u601d\u8def\u8fdb\u884c\u8c03\u6574\u4fee\u6539\u3002\u5f53\u6211\u4eec\u4e0d\u5f97\u4e0d\u627f\u8ba4\u4ed6\u4f1a\u66f4\u6709\u603b\u62ec\u6027\uff0c\u4e0d\u5b8c\u5168\u6309\u7167\u8bfe\u672c\u7ae0\u8282\uff0c\u751a\u81f3\u6bcf\u7ae0\u90fd\u6709\u8865\u5145\u3002\u66f4\u591a\u5185\u5bb9\u8bf7\u770b\u5b66\u4e60\u601d\u8def\u4ee5\u53ca\u8d44\u6e90</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/","title":"Chap 1 Digital Systems and Information","text":""},{"location":"ZJU_CS/DigitalDesign/Chap01/#information_representation","title":"\u4fe1\u606f\u8868\u8fbe | Information Representation","text":"<p>\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4fe1\u606f\u5f80\u5f80\u662f \u8fde\u7eed(continuous) \u7684\uff0c\u4f46\u5728\u4eba\u9020\u7269\u7684\u4e16\u754c\u4e2d\uff0c\u5927\u90e8\u5206\u4fe1\u606f\u90fd\u662f \u79bb\u6563(discrete) \u7684\u3002</p> <p>\u5728\u7535\u5b50\u4fe1\u606f\u7cfb\u7edf\u4e2d\uff0c\u4fe1\u53f7\u5206\u4e3a \u6a21\u62df\u4fe1\u53f7(analog signal) \u548c \u6570\u5b57\u4fe1\u53f7(digital signal) \u4e24\u79cd\u3002\u5176\u4e2d\uff0c\u5728 \u6570\u5b57\u4fe1\u53f7(digital signal) \u4e2d\u53c8\u6709\u591a\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u5982\u4eca\u6211\u4eec\u6700\u5e38\u7528\u7684\u662f \u4e8c\u8fdb\u5236(binary)\u3002\u5bf9\u5e94\u5230\u7535\u8def\u5c42\u9762\uff0c\u6211\u4eec\u5e38\u5e38\u7528 \u9ad8\u7535\u4f4d(HIGH) \u548c \u4f4e\u7535\u4f4d(LOW) \u6765\u8868\u5f81 1 \u548c 0\u3002</p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8f93\u5165\u548c\u8f93\u51fa\u4e2d\uff0c\u9ad8\u4f4e\u7535\u4f4d\u7684\u63a5\u53d7\u8303\u56f4\u662f\u4e0d\u540c\u7684\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u7684\u5224\u5b9a\u8303\u56f4\u6bd4\u8f93\u51fa\u7684\u5224\u5b9a\u8303\u56f4\u5927\uff0c\u5373 \u5bbd\u8fdb\u4e25\u51fa\u3002\u5176\u76ee\u7684\u662f\u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u9ad8\u7535\u8def\u5728\u566a\u97f3\u7b49\u5f02\u5e38\u5f71\u54cd\u4e0b\u4e5f\u80fd\u6b63\u5e38\u8868\u73b0\u7684\u80fd\u529b\u3002</p> HIGH output LOW output HIGH input LOW input 0.9 ~ 1.1 -0.1 ~ 0.1 0.6 ~ 1.1 -0.1 ~ 0.4 <p>\u6216\u8bb8\u4f60\u4e5f\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u56fe\u4e2d\uff0cHIGH \u7684\u63a5\u53d7\u8303\u56f4\u548c LOW \u7684\u63a5\u53d7\u8303\u56f4\u4e4b\u95f4\u8fd8\u5b58\u5728\u4e00\u6bb5\u533a\u57df\u3002\u843d\u5728\u8fd9\u4e00\u90e8\u5206\u7684\u7535\u5e73\u662f \u672a\u5b9a\u4e49(undefined) \u7684\uff0c\u4e5f\u88ab\u79f0\u4e3a\u662f \u6d6e\u52a8(floating) \u7684\u3002\u5982\u679c\u8f93\u51fa\u7684\u7535\u5e73\u662f\u5728\u6d6e\u52a8\u533a\u95f4\u7684\uff0c\u90a3\u4e48\u5176\u8ba4\u5b9a\u503c\u5c06\u662f\u968f\u673a\u7684\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4fe1\u606f\u7684\u5bf9\u5e94\u4e0a\uff0c\u867d\u7136\u5c06\u9ad8\u4f4e\u7535\u5e73\u540c HIGH/LOW \u8054\u7cfb\u662f\u5f88\u81ea\u7136\u7684\uff0c\u4f46\u662f\u5c06\u4ed6\u4eec\u540c true/false \u6216\u8005 1/0 \u8054\u7cfb\u5176\u5b9e\u5e76\u4e0d\u552f\u4e00\u3002\u4f46\u662f\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a positive logic\uff09\uff0c\u6211\u4eec\u90fd\u8ba4\u4e3a HIGH ~ true ~ 1\uff0c LOW ~ false ~ 0\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c(b) \u56fe\u4e2d\u7684\u6a21\u62df\u4fe1\u53f7\u5728\u7ecf\u8fc7\u6211\u4eec\u7684\u5668\u4ef6\u540e\uff0c\u4f1a\u88ab\u8ba4\u4e3a\u662f (c) \u56fe\u6240\u793a\u7684\u4fe1\u53f7\u3002\u800c\u8fd9\u4e9b\u64cd\u4f5c\u5728\u786c\u4ef6\u5c42\u9762\uff0c\u6211\u4eec\u901a\u8fc7 \u6676\u4f53\u7ba1(transistors) \u6765\u5b9e\u73b0\u3002</p> <p>\u8fd9\u4e5f\u7275\u626f\u5230\u6211\u4eec\u4e3a\u4ec0\u4e48\u6700\u7ec8\u4f7f\u7528\u4e8c\u8fdb\u5236\u6765\u8868\u793a\u4fe1\u606f\u3002\u4e00\u65b9\u9762\u662f\u56e0\u4e3a\u4e8c\u503c\u5668\u4ef6\u6bd4\u8f83\u5e38\u89c1\uff0c\u4ea6\u5373\u8fd9\u91cc\u63d0\u5230\u7684\u6676\u4f53\u7ba1\uff1b\u53e6\u5916\u4e00\u65b9\u9762\u662f\u4f7f\u7528\u4e8c\u8fdb\u5236\u53ef\u4ee5\u964d\u4f4e\u7535\u8def\u6210\u672c\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#abstraction_layers_in_computer_systems_design","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\u7684\u62bd\u8c61\u5c42 | Abstraction Layers in Computer Systems Design","text":"\u8d8a\u4e0a\u5c42\u62bd\u8c61\u7a0b\u5ea6\u8d8a\u9ad8 Algorithms Programing Languages Operating Systems Instruction Set Architecture Microarchitecture Register Transfers Logic Gates Transistor Circuits"},{"location":"ZJU_CS/DigitalDesign/Chap01/#number_systems","title":"\u6570\u5b57\u7cfb\u7edf | Number Systems","text":"<p>\u9996\u5148\u9700\u8981\u6d89\u53ca\u7684\u95ee\u9898\u662f\u8fdb\u5236\u8f6c\u6362\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\\(r\\)\u8fdb\u5236\u6570\uff0c\u5b83\u4e00\u822c\u88ab\u5199\u6210\u8fd9\u6837\uff1a</p> \\[(A_{n-1}A_{n-2}...A_1A_0A_{-1}...A_{-(m-1)}A_{-m})_{r}\\] <p>\u800c\u5b83\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u771f\u503c\u4e3a\uff1a</p> \\[ \\begin{align} \\sum_{n-1\\leq i \\leq m} A_ir^i\\;\\; =&amp;A_{n-1}r^{n-1}+A_{n-2}r^{n-2}+...\\\\ +&amp;A_{1}r^{1}+A_0r^0+A_{-1}r^{-1}+...\\\\ +&amp;A_{-(m-1)}r^{m-1}+A_{-m}r^{-m} \\end{align} \\] <p>\u8ba1\u7b97\u673a\u9886\u57df\u5e38\u89c1\u7684\u8fdb\u5236\u4e3b\u8981\u662f \u4e8c\u8fdb\u5236(binary)\uff0c\u516b\u8fdb\u5236(octal)\uff0c\u5341\u8fdb\u5236(decimal) \u548c \u5341\u516d\u8fdb\u5236(hexadecimal)\u3002</p> <p>\u5176\u4e2d\u4e8c\u3001\u516b\u3001\u5341\u516d\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u6362\u975e\u5e38\u7b80\u5355\uff0c\u5b58\u5728\u591a\u4f4d\u5230\u4e00\u4f4d\u4e4b\u95f4\u7684\u65e0\u540e\u6548\u6027\u6620\u5c04\uff0c\u4f8b\u5982\u4e8c\u8fdb\u5236\u8f6c\u6362\u5230\u5341\u516d\u8fdb\u5236\u53ea\u9700\u8981\u5c06\u4ece\u4f4e\u5230\u9ad8\u6bcf\u56db\u4f4d\u8f6c\u5316\u6210\u5341\u516d\u8fdb\u5236\u4e2d\u7684\u4e00\u4f4d\u5373\u53ef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\uff0c\u7531\u4e8e\u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236\u5728\u96f6\u4f4d\u4e0a\u7684\u6743\u91cd\u76f8\u540c\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6574\u6570\u90e8\u5206\uff0c\u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236\u662f\u53ef\u4ee5\u76f8\u4e92\u7cbe\u51c6\u8f6c\u5316\u7684\uff08\u5373\u6700\u5c0f\u7cbe\u5ea6\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f 1\uff09\uff1b\u7136\u800c\u8be5\u6027\u8d28\u5728\u5c0f\u6570\u90e8\u5206\u5e76\u4e0d\u6210\u7acb\uff08\u56e0\u4e3a\u5c0f\u6570\u90e8\u5206\u4e0d\u5b58\u5728\u201c\u6700\u5c0f\u7cbe\u5ea6\u201d\u4e00\u8bf4\uff09\uff0c\u5373\u5341\u8fdb\u5236\u65e0\u6cd5\u7cbe\u51c6\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u4f46\u4e8c\u8fdb\u5236\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#arithmetic_operations","title":"\u7b97\u672f\u8fd0\u7b97 | Arithmetic Operations","text":"<p>\u8fd9\u91cc\u6d89\u53ca\u7684\u4e3b\u8981\u662f \u52a0\u6cd5(Addition)\u3001\u51cf\u6cd5(Subtraction)\u3001\u4e58\u6cd5(Multiplication)\u3002</p> <p>\u6574\u4f53\u6d41\u7a0b\u548c\u5c0f\u5b66\u7ad6\u5f0f\u52a0\u6cd5\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u5176\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5b66\u4f1a\u7528\u53d6\u4f59\u6765\u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u5316(\u5305\u62ec\u5c0f\u6570\u4f4d\u7f6e)</p> \u4e8c\u8fdb\u5236\u8fd0\u7b97 <p> </p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#codes","title":"\u7f16\u7801 | Codes","text":"<p>\u4e8c\u8fdb\u5236\u7f16\u7801\u4e3b\u8981\u5206\u4e3a\u8fd9\u4e48\u51e0\u79cd\uff1a</p> <ul> <li>Numeric<ul> <li>\u5fc5\u987b\u8868\u8fbe\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6570\u5b57\uff1b</li> <li>\u80fd\u591f\u652f\u6301\u7b80\u5355\u4e14\u666e\u904d\u7684\u8ba1\u7b97\uff1b</li> <li>\u548c\u4e8c\u8fdb\u5236\u6570\u503c\u672c\u8eab\u6709\u8f83\u5927\u5173\u8054\uff1b</li> </ul> </li> <li>Non-numeric<ul> <li>\u76f8\u5bf9\u7075\u6d3b\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u9002\u914d\u666e\u904d\u7684\u8fd0\u7b97\u6cd5\u5219\uff1b<ul> <li>\u7075\u6d3b\u6027\u6307\uff0c\u4fdd\u8bc1\u7f16\u7801\u6620\u5c04\u5173\u7cfb\u662f\u552f\u4e00\u7684\u7684\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u79f0\u4e3a\u5408\u6cd5\u7f16\u7801\uff1b</li> </ul> </li> <li>\u548c\u4e8c\u8fdb\u5236\u6570\u503c\u672c\u8eab\u672a\u5fc5\u6709\u5173\u7cfb\uff1b</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_1","title":"\u72ec\u70ed\u7801 &amp; \u72ec\u51b7\u7801","text":"<p>\u72ec\u70ed\u7801(one-hot) \u8981\u6c42\u6bd4\u7279\u5411\u91cf\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f <code>1</code>\uff1b\u5bf9\u5e94\u7684\u8fd8\u6709 \u72ec\u51b7\u7801(one-cold)\u3002Wiki</p> <p>\u4f7f\u7528\u8fd9\u79cd\u7f16\u7801\u7684\u597d\u5904\u662f\uff0c\u51b3\u5b9a\u6216\u6539\u53d8\u72b6\u6001\u673a\u76ee\u524d\u7684\u72b6\u6001\u7684\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff0c\u5bb9\u6613\u8bbe\u8ba1\u4e5f\u5bb9\u6613\u68c0\u6d4b\u975e\u6cd5\u884c\u4e3a\u7b49\u3002</p> <p>\u4f46\u662f\u76f8\u5bf9\u5e94\u7684\uff0c\u7f3a\u70b9\u662f\u4fe1\u606f\u8868\u793a\u7387\u8f83\u4f4e\uff0c\u975e\u6cd5\u72b6\u6001\u975e\u5e38\u591a\u800c\u6709\u6548\u72b6\u6001\u5f88\u5c11\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#bcd","title":"BCD \u7801","text":"<p>\u7531\u4e8e\u771f\u5b9e\u4e16\u754c\u4e2d\u5927\u90e8\u5206\u6570\u636e\u8868\u8ff0\u90fd\u662f\u4ee5\u5341\u8fdb\u5236\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7814\u7a76\u5982\u4f55\u7528\u4e8c\u8fdb\u5236\u6765\u8868\u793a\u5341\u8fdb\u5236\u3002</p> <p>\u9996\u5148\uff0c\u4e00\u4f4d\u4e8c\u8fdb\u5236\u6570\u80fd\u5305\u542b\u7684\u4fe1\u606f\u662f 1bit\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u201c\u771f\u201d\u6216\u8005\u4e00\u4e2a\u201c\u5047\u201d\u3002\u6211\u4eec\u79f0\u4e00\u4e2a\u62e5\u6709 n \u4e2a\u5143\u7d20\u7684\u4e8c\u8fdb\u5236\u5411\u91cf\u4e3a\u4e00\u4e2a n\u4f4d\u4e8c\u8fdb\u5236\u7f16\u7801(n-bit binary code)\u3002\u4e00\u4e2a n \u4f4d\u4e8c\u8fdb\u5236\u6570\u62e5\u6709\\(2^{n}\\)\u79cd\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u56e0\u800c\u53ef\u4ee5\u8868\u793a\\(2^n\\)\u79cd\u4fe1\u606f\u3002</p> <p>\u800c\u6211\u4eec\u9700\u8981\u8bbe\u8ba1\u7684\u7f16\u7801\u7cfb\u7edf\uff0c\u5c31\u662f\u5c06\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\u6620\u5c04\u5230\u8fd9\\(2^n\\)\u4e2a\u201c\u7a7a\u4f4d\u201d\u4e2d\u3002\u5f53\u7136\uff0c\u5f53\u6211\u4eec\u9700\u8981\u8868\u793a\u7684\u4fe1\u606f\u6570\u91cf\u5e76\u4e0d\u662f 2 \u7684\u5e42\u6b21\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e9b \u672a\u5206\u914d(unassigned) \u7684\u6bd4\u7279\u7ec4\u5408\u3002</p> <p>\u800c\u5728\u8fd9\u79cd\u7f16\u7801\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f BCD\u7801(binary-coded demical)\u3002\u5176\u6838\u5fc3\u601d\u8def\u5c31\u662f\uff0c\u5c06\u5341\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d \u5206\u522b \u7528 \u771f\u503c\u76f8\u7b49\u7684 4 \u4f4d\u4e8c\u8fdb\u5236 \u8868\u793a\uff0c\u5373 <code>0</code> ~ <code>9</code> \u5206\u522b\u7528 <code>0000</code> ~ <code>1001</code> \u8868\u793a\u3002</p> DecimalSymbol BCDDigit <code>0</code> <code>0000</code> <code>1</code> <code>0001</code> <code>2</code> <code>0010</code> <code>3</code> <code>0011</code> <code>4</code> <code>0100</code> <code>5</code> <code>0101</code> <code>6</code> <code>0110</code> <code>7</code> <code>0111</code> <code>8</code> <code>1000</code> <code>9</code> <code>1001</code> <p>eg</p> \\[ \\mathrm{ (185)_{10}\\;=\\;(0001\\;1000\\;0101)_{BCD}\\;=\\;(10111001)_2 } \\]"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_2","title":"\u4f59\u4e09\u7801","text":"<p>\u4e00\u79cd BCD\u7801 \u7684\u6539\u8fdb\u662f \u4f59\u4e09\u7801(Excess3)\u3002\u5176\u6838\u5fc3\u601d\u8def\u662f\u5728 BCD\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e00\u4e2a\u5927\u5c0f\u4e3a 3 \u7684\u504f\u79fb\u91cf\u3002</p> DecimalSymbol Excess3Digit <code>0</code> <code>0011</code> <code>1</code> <code>0100</code> <code>2</code> <code>0101</code> <code>3</code> <code>0110</code> <code>4</code> <code>0111</code> <code>5</code> <code>1000</code> <code>6</code> <code>1001</code> <code>7</code> <code>1010</code> <code>8</code> <code>1011</code> <code>9</code> <code>1100</code> <p>\u4e3a\u4ec0\u4e48\u662f 3 \u5462\uff1f\u9996\u5148\u8fd9\u4e2a 3 \u6765\u81ea\u4e8e \\(\\frac{16-10}{2}\\)\uff0c\u4e5f\u5c31\u662f 8421 \u7801\u7684\u5bb9\u91cf\u51cf\u53bb\u6211\u4eec\u9700\u8981\u8868\u793a\u7684\u6570\u5b57\u6570\u91cf\uff0c\u518d\u9664\u4ee5\u4e8c\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\uff0c\u5341\u8fdb\u5236\u4e0b\u80fd\u8fdb\u4f4d\u7684\u4e24\u4e2a\u6570\uff0c\u5728\u4f59\u4e09\u7801\u4e0b\u76f8\u52a0\u4e5f\u521a\u597d\u8fdb\u4f4d\u3002</p> <p>\u4f46\u662f\u9700\u8981\u5f3a\u8c03\u7684\u4e00\u70b9\u662f\uff0c\u7f16\u7801\u548c\u6570\u503c\u662f\u5b58\u5728\u533a\u522b\u7684\uff0c\u867d\u7136\u6211\u4eec\u63d0\u5230\u4e86\u4f59\u4e09\u7801\u76f8\u52a0\uff0c\u4f46\u662f\u7f16\u7801\u505a\u8fd0\u7b97\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u201c\u8fd0\u7b97\u201d\u7684\u4e3b\u4f53\u66f4\u591a\u662f\u6570\u503c\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_3","title":"\u683c\u96f7\u7801","text":"<p>\u6b64\u5916\uff0c\u8fd9\u91cc\u4e0d\u5f97\u4e0d\u63d0\u7684\u53e6\u5916\u4e00\u4e2a\u7f16\u7801\u662f \u683c\u96f7\u7801(Gray Codes)\u3002\u683c\u96f7\u7801\u7684\u7279\u5f81\uff0c\u4e5f\u662f\u4ed6\u7684\u4f18\u70b9\uff0c\u5c31\u662f\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u8868\u793a\u53ea\u5dee\u4e00\u4f4d\uff08\u5f53\u5728\u5360\u6ee1\u65f6\uff0c\u5bf9\u4e8e\u6574\u4e2a\u7f16\u7801\u5e8f\u5217\uff0c\u73af\u72b6\u6ee1\u8db3\u8be5\u6761\u4ef6\uff09\u3002</p> <p>\u6bd4\u5982\u6709\u5982\u4e0b\u5e94\u7528\uff1a</p> <p></p> <p>\u4ee5\u53ca\u5728\u8bb8\u591a\u72b6\u6001\u63a7\u5236\u4e2d\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p> <p>\u4ece\u7b14\u8bd5\u505a\u9898\u89d2\u5ea6\u6765\u8bf4\uff0c\u683c\u96f7\u7801\u6700\u9ebb\u70e6\u7684\u5176\u5b9e\u662f\u4e0e\u5341\u8fdb\u5236\u6570\u7684\u8f6c\u6362\u3002\uff08\u6b64\u5904 @CSP-S2019-Day1-T1\uff09</p> <p>\u6280\u5de7</p> <ol> <li>zmm\u8001\u5e08\u4e0a\u8bfe\u4e5f\u8bb2\u89e3\u8fc7\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u955c\u9762\u6620\u5c04\u4e0d\u65ad\u5ef6\u62d3\u7684\u65b9\u6cd5\uff0c\u6bd4\u8f83\u5b9e\u7528\u3002</li> <li>\u4e2a\u4eba\u8ba4\u4e3a\u53ef\u4ee5\u66ff\u8eab\u601d\u7ef4\u505a\u6cd5\u5c31\u662f\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u627e\u7684\u662f\u7b2c k \u4e2a\u683c\u96f7\u7801\uff0c\u5219\u5bf9\u5e94\u7684\u683c\u96f7\u7801\u4e3a\uff1a</li> </ol> \\[ k \\;\\;\\mathrm{XOR}\\;\\; (k&gt;&gt;1) \\] <ol> <li>\u6b64\u5916\u8bb0\u5f97\u6ce8\u610f0-9\u7684\u683c\u96f7\u7801\uff0c9\u6240\u5bf9\u5370\u7684\u683c\u96f7\u7801\u662f<code>1000</code>\u800c\u4e0d\u662f<code>1101</code></li> </ol> <p>\u6c47\u603b\uff1a </p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#ascii","title":"ASCII \u7801","text":"<p>\u5b57\u7b26\u7f16\u7801\u6240\u4f7f\u7528\u7684\u4e00\u822c\u662f ASCII \u7f16\u7801\uff0c\u7531\u4e8e ASCII \u5df2\u7ecf\u662f\u8001\u751f\u5e38\u8c08\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u518d\u5c55\u5f00\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_4","title":"\u5947\u5076\u6821\u9a8c\u4f4d","text":"<p>\u4fe1\u9053\u7f16\u7801\u4e0e\u4fe1\u6e90\u7f16\u7801\uff1a</p> <p></p> <p>\u5728\u4fe1\u53f7\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u7531\u4e8e\u73af\u5883\u5e72\u6270\u7b49\u539f\u56e0\uff0c\u51fa\u73b0\u5404\u79cd\u4fe1\u53f7\u6296\u52a8\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u4fe1\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u9519\u8bef\u68c0\u6d4b\u673a\u5236\u3002</p> <p>\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f \u5197\u4f59(Redundancy)\uff0c\u5373\u52a0\u5165\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\u7528\u4ee5\u6821\u9a8c\u3002</p>  graph TD A[Error Detection Techniques] B[Single Parity Check] C[Cyclic Redundancy Check] D[Check Sum]  A--&gt;B A--&gt;C A--&gt;D   <p>\u5176\u4e2d\u4e00\u79cd\u505a\u6cd5\u662f\u5f15\u5165 \u5947\u5076\u6821\u9a8c\u4f4d(Parity Bit)\u3002\u5b83\u5206\u4e3a \u5947\u6821\u9a8c(Odd Parity) \u548c \u5076\u6821\u9a8c(Even Parity)\u3002\u5206\u522b\u901a\u8fc7\u5f15\u5165\u989d\u5916\u7684\u4e00\u4f4d\uff08\u52a0\u5728\u6700\u540e\uff09\uff0c\u6765\u4fdd\u8bc1\u6574\u4e2a\u4fe1\u606f\u4e32\u4e2d <code>1</code> \u7684\u6570\u91cf\u662f\u5947\u6570/\u5076\u6570\u3002</p> <p>\u7528\u4eba\u8bdd\u5c06\uff0c\u5c31\u662f\u5728\u6570\u5b57\u540e\u9762\u88650/1\u6765\u4f7f\u6570\u5b57\u6ee1\u8db3\u5947\u6570\u4e2a\u6216\u8005\u5076\u6570\u4e2a1\uff0c\u4ee5\u6b64\u6765\u68c0\u9a8c\u4fe1\u606f\u662f\u5426\u6b63\u786e\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/","title":"Chap 2 Combinational Logic Circuits","text":"<p>abstract</p> \u672c\u7ae0\u8bf4\u660e\u76ee\u5f55 <p>\u9644\u6ce8\uff1a\u672c\u8282\u539f\u7b14\u8005\u5728\u8f83\u591a\u7bc7\u5e45\u5f3a\u8c03\u4e860/1\u7684\u76f8\u5bf9\u6027\uff0c\u867d\u7136\u7bc7\u5e45\u8f83\u957f\uff0c\u4f46\u5e0c\u671b\u5404\u4f4d\u80fd\u9886\u4f1a\u5176\u7cbe\u534e\u6240\u5728\u3002</p> <ul> <li>Chap 2 Combinational Logic Circuits<ul> <li>\u903b\u8f91\u8fd0\u7b97</li> <li>\u903b\u8f91\u95e8<ul> <li>CMOS</li> <li>\u5ef6\u65f6</li> </ul> </li> <li>\u5e03\u5c14\u4ee3\u6570<ul> <li>\u8fd0\u7b97\u5f8b</li> <li>\u8fd0\u7b97\u5f8b\u63a8\u5e7f</li> <li>\u5bf9\u5076\u6cd5\u5219</li> <li>\u4e92\u8865\u51fd\u6570</li> <li>\u66ff\u4ee3\u6cd5\u5219</li> <li>\u4e00\u81f4\u6027\u5b9a\u7406</li> <li>\u5176\u4ed6\u516c\u5f0f</li> </ul> </li> <li>\u6807\u51c6\u5f62\u5f0f\u4e0e\u89c4\u8303\u5f62\u5f0f<ul> <li>\u6700\u5c0f\u9879\u4e4b\u548c SOM</li> <li>\u6700\u5927\u9879\u4e4b\u79ef POM</li> <li>\u7ec3\u4e60</li> </ul> </li> <li>\u7535\u8def\u5b9e\u73b0\u4e0e\u4f18\u5316<ul> <li>\u6210\u672c\u6807\u51c6<ul> <li>\u6309\u7167\u5b57\u9762\u91cf\u5b57\u9762\u91cf\u8ba1</li> <li>\u6309\u95e8\u8f93\u5165\u8ba1</li> </ul> </li> <li>\u5361\u8bfa\u56fe<ul> <li>\u5361\u8bfa\u56fe\u7684\u601d\u60f3</li> <li>\u5361\u8bfa\u56fe\u7684\u5c40\u9650\u6027</li> <li>\u5361\u8bfa\u56fe\u7684\u7ed3\u6784</li> <li>\u4f7f\u7528\u5361\u8bfa\u56fe\u4f18\u5316</li> <li>\u4e0d\u5b9a\u9879</li> <li>\u8574\u542b\u9879\u3001\u4e3b\u8574\u542b\u9879\u4e0e\u57fa\u672c\u4e3b\u8574\u542b\u9879</li> </ul> </li> </ul> </li> <li>\u7ecf\u5178\u7ec4\u5408\u7535\u8def<ul> <li>\u4e09\u6001\u95e8</li> <li>\u590d\u6742\u95e8</li> <li>Universal Gate</li> </ul> </li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_1","title":"\u903b\u8f91\u8fd0\u7b97","text":"<p>\u903b\u8f91\u8fd0\u7b97\u7684\u5bf9\u8c61\u662f\u5e03\u5c14\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f 0/1 \u4e8c\u503c\u3002</p> <p>\u4e3b\u8981\u7684\u8fd0\u7b97\u5c31\u662f \u4e0e(AND)\uff0c\u6216(OR)\uff0c\u975e(NOT)\uff0c\u5f02\u6216(XOR)\uff0c\u4ee5\u53ca \u4e0e\u975e(NAND)\uff0c\u6216\u975e(NOR)\uff0c\u540c\u6216(XNOR)\u3002</p> <p>\u9ad8\u7ef4</p> <p>\u591a\u8f93\u5165\u7684\u5f02\u6216\u548c\u540c\u6216\u88ab\u79f0\u4e3a\u5947\u51fd\u6570\u548c\u5076\u51fd\u6570\u3002</p> <p>\u5176\u4e2d\u5f02\u6216\u662f\u53ef\u63a7\u903b\u8f91\u95e8</p> <p>\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u5b9e\u73b0\u5947\u6821\u9a8c\u548c\u5076\u6821\u9a8c\u3002</p> <p>\u800c\u4e14\u89c2\u5bdf\u5176\u5361\u8bfa\u56fe\u7684\u5f62\u72b6\uff08\u68cb\u76d8\u5f62\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u662f\u5929\u7136\u4f18\u5316\u7684\uff0c\u5373\u4e0d\u53ef\u4f18\u5316\u7684\u3002</p> <p>\u8fd0\u7b97\u89c4\u5219\u633a\u7b80\u5355\u7684\uff0c\u5728\u6b64\u7565\u53bb\u3002</p> <p>\u6bd4\u8f83\u57fa\u7840\u7684\uff0c\u9700\u8981\u4e86\u89e3\u4e0e\u6216\u975e\u7684\u7b26\u53f7\u8868\u793a\u3002</p> <ul> <li><code>A</code> <code>AND</code> <code>B</code> \u5199\u4f5c\\(A \\cdot B\\)\u6216\u8005\\(AB\\)\uff1b</li> <li><code>A</code> <code>OR</code> <code>B</code> \u5199\u4f5c\\(A+B\\)\uff1b</li> <li><code>NOT A</code> \u5199\u4f5c\\(\\overline{A}\\)\uff1b</li> <li><code>XOR</code> \u5199\u4f5c\\(\\overline{A}B+A\\overline{B}\\)</li> </ul> <p>\u7531\u6b64\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u7ec4\u5408\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>A</code> <code>NOR</code> <code>B</code> \u53ef\u5199\u4f5c \\(\\overline{A+B}\\)\uff1b</li> <li><code>A</code> <code>NAND</code> <code>B</code> \u53ef\u5199\u4f5c \\(\\overline{A\\cdot B}\\)\uff1b</li> </ul> <p>\u518d\u6b21\u8fd8\u9700\u8981\u63d0\u5230\u7684\u662f \u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b(De Morgan's Laws)\uff0c\u5176\u8868\u8ff0\u4e3a\uff1a(\u4e0e\u6982\u7387\u8bba\u4e2d\u5341\u5206\u76f8\u4f3c)</p> <ul> <li>\\(\\overline{A+B} = \\overline{A}\\cdot\\overline{B}\\)\uff1b</li> <li>\\(\\overline{A\\cdot B} = \\overline{A}+\\overline{B}\\)\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_2","title":"\u903b\u8f91\u95e8","text":"<p>\u903b\u8f91\u95e8\u662f\u5728\u786c\u4ef6\u5c42\u9762\u4e0a\u5b9e\u73b0\u5e03\u5c14\u4ee3\u6570\u7684\u903b\u8f91\u5355\u5143\u3002\u5176\u64cd\u4f5c\u5bf9\u8c61\u4e3a\u9ad8\u4f4e\u7535\u5e73\u3002</p> <p></p> <p>\u5982\u56fe\uff0c(a)\u4e2d\u7ed8\u5236\u4e86\u4e09\u4e2a\u5e38\u7528\u903b\u8f91\u95e8\u7684\u7b26\u53f7\uff1b(b)\u4e2d\u5219\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u8fd0\u7b97\u5728 \u65f6\u5e8f\u56fe(timing diagram) \u4e2d\u7684\u72b6\u6001\uff1b\u00a9\u5219\u63cf\u8ff0\u4e86\u5728\u5ef6\u65f6\uff08\u89c1\u4e0b\uff09\u6548\u5e94\u4e0b\u7684\u65f6\u5e8f\u56fe\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\u662f\uff0c\u975e\u95e8\u5176\u5b9e\u66f4\u591a\u7684\u88ab\u79f0\u4e3a inverter\uff0c\u800c\u975e NOT\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#cmos","title":"CMOS","text":""},{"location":"ZJU_CS/DigitalDesign/Chap02/#_3","title":"\u5ef6\u65f6","text":"<p>\u4f46\u662f\u7531\u4e8e\u662f\u7269\u7406\u5c42\u9762\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u4f1a\u6709\u4e00\u4e9b\u903b\u8f91\u8fd0\u7b97\u5c42\u9762\u4e0d\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u6bd4\u5982 \u5ef6\u65f6(delay)\u3002</p> <p></p> <p>Source: https://en.wikipedia.org/wiki/Signal_propagation_delay#Electronics</p> <p>\u5ef6\u65f6\u7684\u957f\u77ed\u4e0e\u5f88\u591a\u56e0\u7d20\u6709\u5173\uff0c\u53d6\u51b3\u4e8e\u903b\u8f91\u95e8\u7684\u5b9e\u73b0\u6280\u672f\u3002\u800c\u4e14\u901a\u5e38\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e0d\u540c\u8fd0\u7b97\u53c2\u6570\uff0c\u5176\u5ef6\u65f6\u4e5f\u4f1a\u6709\u4e0d\u540c\u3002</p> <p>\u6b64\u5916\uff0c\u4e0e\u95e8\u548c\u6216\u95e8\u53ef\u80fd\u6709\u66f4\u591a\u7684\u8f93\u5165\u5f15\u811a\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\u81f3\u6b64\uff0c\u7ed9\u51fa\u4e86 AND, OR, NOT \u4e09\u4e2a\u95e8\u7684\u7b26\u53f7\u8868\u793a\uff0c\u7c7b\u4f3c\u4e0a\u4e00\u5c0f\u8282\u63d0\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e09\u4e2a\u57fa\u7840\u7684\u95e8\u7535\u8def\u6765\u6784\u6210\u5176\u4ed6\u7684\u95e8\u7535\u8def\uff08\u867d\u7136\u901a\u5e38\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u80fd\u662f\u901a\u8fc7 NAND + NOT \u6765\u5b9e\u73b0 AND \u7684\uff09\u3002</p> <p>\u4e8e\u662f\u53c8\u5f15\u7533\u51fa\u4e00\u4e2a\u6982\u5ff5\u2014\u2014\u901a\u7528\u95e8(Universal Gate)\u3002\u4e00\u4e2a\u529f\u80fd\u5b8c\u5168\u7684\uff0c\u80fd\u591f\u8868\u793a\u5176\u4ed6\u6240\u6709\u95e8\u7684\u903b\u8f91\u95e8\u88ab\u79f0\u4e3a\u901a\u7528\u95e8\uff0c\u5728\u6211\u4eec\u5b66\u8fc7\u7684\u903b\u8f91\u95e8\u4e2d\uff0cNAND \u548c NOR \u90fd\u662f\u901a\u7528\u95e8\u3002</p> <p>\u63a8\u8350\u9605\u8bfb</p> <ul> <li>Title: Universal Logic Gates</li> <li>URL: https://www.electronics-tutorials.ws/logic/universal-gates.html</li> <li>Video: https://www.bilibili.com/video/BV1EW411u7th/</li> </ul> <p>Universal Logic gates can be used to produce any other logic or Boolean function with the NAND and NOR gates being minimal</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_4","title":"\u5e03\u5c14\u4ee3\u6570","text":"<p>literal ~ \u5b57\u9762\u91cf\uff0c\u4e5f\u5c31\u662f\u201c\u53d8\u91cf\u201d\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f, \u5982\u679c\u5df2\u77e5  \\(X+Y= X+Z\\) \u6216  \\(XY = XZ\\) , \u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5f97\u5230  \\(Y = Z\\) .(\u4e0d\u80fd\u6d88\u53bb)</p> <p>\u5bf9\u4e8e\u6bcf\u2f00\u4e2a\u5e03\u5c14\u51fd\u6570, \u5b83\u7684\u771f\u503c\u8868\u662f\u552f\u2f00\u7684, \u4f46\u662f\u7ed9\u5b9a\u2f00\u4e2a\u771f\u503c\u8868, \u53ef\u80fd\u6709\u591a\u4e2a\u5e03\u5c14\u51fd\u6570\u4e0e\u4e4b\u5bf9\u5e94.(\u4ece\u5e03\u5c14\u51fd\u6570\u5230\u771f\u503c\u8868\u6620\u5c04\u6ee1\u5c04\u4f46\u4e0d\u5355\u5c04)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_5","title":"\u8fd0\u7b97\u5f8b","text":"<p>\u8fd9\u5f20\u56fe\u7247\u603b\u7ed3\u4e86\u5e03\u5c14\u8fd0\u7b97\u4e2d\u7684\u8fd0\u7b97\u5f8b\uff0c\u4e2a\u4eba\u611f\u89c9\u6700\u9700\u8981\u5f3a\u5316\u8bb0\u5fc6\u7684\u662f 15 \u6761\uff0c\u56e0\u4e3a\u5e03\u5c14\u4ee3\u6570\u501f\u7528\u4e86\u666e\u901a\u4ee3\u6570\u7684\u7b26\u53f7\uff0c\u4f46\u7b2c 15 \u6761\u5728\u666e\u901a\u4ee3\u6570\u4e2d\u5e76\u4e0d\u6210\u7acb\uff0c\u6240\u4ee5\u9700\u8981\u6ce8\u610f\u3002</p> <p>\u5728\u8bb0\u5fc6\u8fd9\u5957\u8fd0\u7b97\u89c4\u5f8b\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u5efa\u7acb \u4e0e \u548c \u6216 \u662f\u5bf9\u7b49\u7684\u89c2\u5ff5\u3002\u6211\u4eec\u4e60\u60ef\u7528\u201c\u771f\u201d\u53bb\u7406\u89e3\u8fd9\u4e24\u4e2a\u8fd0\u7b97\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5982\u679c\u4f60\u4ee5\u201c\u5047\u201d\u4e3a\u4e3b\u4f53\u53bb\u5206\u6790\u8fd9\u4e24\u4e2a\u8fd0\u7b97\uff0c\u4f1a\u53d1\u73b0\u548c\u201c\u771f\u201d\u662f\u5b8c\u5168\u5bf9\u79f0\u7684\u3002</p> <p>\u4f46\u662f\u8ba9\u8fd9\u4ef6\u4e8b\u53d8\u5f97\u53c8\u6ca1\u90a3\u4e48\u7b80\u5355\u7684\u4e8b\u60c5\u662f\uff0c\u867d\u7136 \u4e0e \u548c \u6216 \u662f\u5bf9\u7b49\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5728\u501f\u7528\u666e\u901a\u4ee3\u6570\u7b26\u53f7\u4f53\u7cfb\u7684\u540c\u65f6\uff0c\u53c8\u4eba\u4e3a\u5730\u7ed9\u4ed6\u4eec\u6dfb\u52a0\u4e86\u4f18\u5148\u7ea7\uff08\u4f46\u662f\u8fd9\u4e5f\u662f\u5fc5\u8981\u7684\uff0c\u5426\u5219\u8868\u8fbe\u5f0f\u5c31\u4f1a\u5145\u6ee1\u62ec\u53f7\uff09\u3002</p> <p>\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u4f9d\u6b21\u4e3a\uff1a</p> <ol> <li>\u62ec\u53f7 / ()\uff1b</li> <li>\u975e / NOT / \\(\\overline A\\)\uff1b</li> <li>\u4e0e / AND / \\(\\cdot\\)\uff1b</li> <li>\u6216 / OR / \\(+\\)\uff1b</li> </ol> <p>advice</p> <ol> <li>\u8bf7\u6ce8\u610f3\u30014 \u7684\u4f18\u5148\u7ea7</li> <li>\u5e76\u4e14\u8003\u524d\u53ef\u4ee5\u591a\u52a0\u7ec3\u4e60</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_6","title":"\u8fd0\u7b97\u5f8b\u63a8\u5e7f","text":"<p>\u9664\u6b64\u4e4b\u5916\uff0c\u4ece\u4e0a\u9762\u63d0\u5230\u7684\u8fd0\u7b97\u5f8b\u4e2d\u8fd8\u80fd\u63a8\u5e7f\u51fa\u5982\u4e0b\u51e0\u4e2a\u6a21\u578b\uff0c\u6bd4\u8f83\u91cd\u8981\uff1a</p> <p></p> <p>\u6d88\u9664\u5f8b\u771f\u7684\u5f88\u91cd\u8981</p> <p>\\(A + \\overline{A}B = A + B\\)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_7","title":"\u5bf9\u5076\u6cd5\u5219","text":"<p>\u5bf9\u5076\u6cd5\u5219(Duality Rule)\uff1a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684 \u5bf9\u5076(dual) \u4e3a\uff0c\u5c06\u6240\u6709\u7684 \u4e0e \u548c \u6216 \u5bf9\u8c03\u5f97\u5230\u7684\u5f0f\u5b50\uff08\u6ce8\u610f\uff01\u9700\u8981\u4fdd\u8bc1\u53c2\u4e0e\u8fd0\u7b97\u7684\u7ed3\u6784\u4e0d\u80fd\u53d8\uff08\u662f\u201c\u5e26\u62ec\u53f7\u201d\u7684\u5b8f\u5c55\u5f00\uff09\uff0c\u6bd4\u5982 \u4e00\u822c\u60c5\u51b5\u4e0b \\(A\\cdot B\\) \u4f1a\u88ab\u5bf9\u5076\u4e3a \\((A+B)\\) \u4ee5\u4fdd\u8bc1\u8fd0\u7b97\u987a\u5e8f\uff09\u3002</p> <p>eg</p> <ul> <li>\\(X+XY\\) \u548c \\(X(X+Y)\\) \u5bf9\u5076\uff1b</li> <li>\\(X(Y+Z)\\) \u548c \\(X+YZ\\) \u5bf9\u5076\uff1b</li> </ul> <p>\u800c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9664\u975e\u67d0\u4e2a\u8868\u8fbe\u5f0f\u662f \u81ea\u5bf9\u5076(self-dual) \u7684\uff0c\u90a3\u4e48\u5b83\u7684\u8868\u73b0\u90fd\u4e0e\u539f\u8868\u8fbe\u5f0f\u4e0d\u540c\u3002</p> <p>\u5bf9\u5076\u8868\u8fbe\u5f0f\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u5982\u679c F \u7684\u5bf9\u5076\u662f G\uff0c\u90a3\u4e48 F \u4e5f\u662f G \u7684\u5bf9\u5076\uff0c\u5373\u5bf9\u5076\u5173\u7cfb\u662f\u5bf9\u6210\u7684\uff1b</li> <li>\u5982\u679c\u8868\u8fbe\u5f0f F \u548c G \u7b49\u4ef7\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u5bf9\u5076\u4e5f\u7b49\u4ef7\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_8","title":"\u4e92\u8865\u51fd\u6570","text":"<p>\u4e00\u4e2a \u51fd\u6570\u7684\u4e92\u8865(Complement of a Function) \u6307\u7684\u662f\uff0c\u5c06\u5b83\u7684 \u5bf9\u5076\u51fd\u6570 \u4e2d\u6bcf\u4e00\u4e2a \u53d8\u91cf \u90fd\u53d6\u53cd\u5f97\u5230\u7684\u51fd\u6570\uff0c\u800c\u8be5\u51fd\u6570\u6b63\u597d\u7b49\u4e8e\u539f\u51fd\u6570\u7684 \u975e(\u771f\u503c\u88680/1\u5bf9\u8c03)\u3002</p> <p>eg</p> <ul> <li>\u539f\u51fd\u6570\uff1a\\(F=\\overline{A}B+C\\overline{B}\\)\uff1b</li> <li>\u5176\u5bf9\u5076\u51fd\u6570\uff1a\\(F=(\\overline{A}+B)(C+\\overline{B})\\)\uff1b</li> <li>\u5176\u4e92\u8865\u51fd\u6570\uff1a\\(\\overline{F}=(A+\\overline{B})(\\overline{C}+D)\\)\uff1b\uff08\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u539f\u51fd\u6570\u76f4\u63a5\u53d6\u53cd\uff09</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_9","title":"\u66ff\u4ee3\u6cd5\u5219","text":"<p>\u66ff\u4ee3\u6cd5\u5219(Substitution Rules): \u5982\u679c\u5c06\u4e00\u4e2a\u7b49\u5f0f\u4e2d \u6240\u6709\u7684 \u67d0\u4e2a\u53d8\u91cf \u90fd\u66ff\u6362\u4e3a\u540c\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5219\u7b49\u5f0f\u4f9d\u7136\u6210\u7acb\u3002</p> <p>eg</p> <ul> <li>\u539f\u7b49\u5f0f\uff1a\\(X(Y+Z)=XY+XZ\\)\uff1b</li> <li>\u5982\u679c\u4f7f\u7528 \\(X+YZ\\) \u66ff\u6362\u6240\u6709\u7684 \\(X\\)\uff0c\u5219\uff1a</li> <li>\u4fee\u6539\u540e\u7684\u7b49\u5f0f \\((X+YZ)(Y+Z)=(X+YZ)Y+(X+YZ)Z\\) \u4f9d\u7136\u6210\u7acb\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_10","title":"\u4e00\u81f4\u6027\u5b9a\u7406","text":"<p>\u5728\u7b80\u5316\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u4e00\u81f4\u6027\u5b9a\u7406(Consensus Theorem) \u5982\u4e0b\uff08\u6bd4\u8f83\u597d\u7528\uff09\uff1a</p> \\[ XY+\\overline{X}Z+YZ=XY+\\overline{X}Z \\] <p>\u5176\u8bc1\u660e\u7684\u7b2c\u4e00\u6b65\u662f\u8fd9\u6837\u7684\uff1a \\(XY+\\overline{X}Z+YZ=XY+\\overline{X}Z+(X+\\overline{X})YZ\\)\uff0c\u90a3\u540e\u9762\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u672c\u8d28\u4e0a\u8fd9\u4e2a\u7b49\u5f0f\u662f\u5229\u7528\u4e86\u88c2\u9879\uff0c\u9700\u8981\u5c06\u5176\u4e2d\u6700\u672c\u8d28\u7684\u90e8\u5206\uff0c\u6700\u5c0f\u7684\u7c92\u5ea6\u7ed9\u88c2\u5f00\u6765\uff0c\u7136\u540e\u518d\u6162\u6162\u6d88\u6389\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_11","title":"\u5176\u4ed6\u516c\u5f0f","text":""},{"location":"ZJU_CS/DigitalDesign/Chap02/#_12","title":"\u6807\u51c6\u5f62\u5f0f\u4e0e\u89c4\u8303\u5f62\u5f0f","text":"<p>\u5c0f\u6d4b\u4f1a\u8003\uff08\u72d7\u5934</p> <p>\u7531\u4e8e\u672c\u8d28\u4e0a\u76f8\u7b49\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u79cd\u5199\u6cd5\uff0c\u800c\u4e14\u968f\u7740\u53d8\u91cf\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u6bd4\u8f83\u4f1a\u5f88\u56f0\u96be\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u79cd\u5f62\u5f0f\uff0c\u4f7f\u5f97\u6240\u6709\u76f8\u540c\u7684\u8868\u8fbe\u5f0f\u90fd\u80fd\u6bd4\u8f83\u65b9\u4fbf\u7684\u201c\u5316\u7b80\u201d\u4e3a\u540c\u4e00\u4e2a\u5f62\u5f0f\uff0c\u540c\u65f6\u4e5f\u80fd\u8fa8\u522b\u51fa\u4e24\u4e2a\u8868\u8fbe\u5f0f\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u8fd9\u5c31\u5f15\u5165\u4e86 \u6807\u51c6\u5f62\u5f0f(Standard Forms)\uff0c\u5305\u62ec SOP \u548c POS\uff1b\u4ee5\u53ca \u89c4\u8303\u5f62\u5f0f(Canonical Forms)\uff0c\u5206\u522b\u4e3a \u6700\u5c0f\u9879\u4e4b\u548c(Sum of Minterms)SOM \u548c \u6700\u5927\u9879\u4e4b\u79ef(Product of Maxterms)POM\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7ed9\u51fa\u8fd9\u6837\u4e00\u5f20 \ud83c\udf30 \u771f\u503c\u8868\u3002</p> \ud83c\udf30 Index X Y Z Output 0 / <code>000</code> <code>0</code> <code>0</code> <code>0</code> <code>0</code> 1 / <code>001</code> <code>0</code> <code>0</code> <code>1</code> <code>0</code> 2 / <code>010</code> <code>0</code> <code>1</code> <code>0</code> <code>1</code> 3 / <code>011</code> <code>0</code> <code>1</code> <code>1</code> <code>0</code> 4 / <code>100</code> <code>1</code> <code>0</code> <code>0</code> <code>1</code> 5 / <code>101</code> <code>1</code> <code>0</code> <code>1</code> <code>1</code> 6 / <code>110</code> <code>1</code> <code>1</code> <code>0</code> <code>0</code> 7 / <code>111</code> <code>1</code> <code>1</code> <code>1</code> <code>1</code> <p>\u6570\u503c\u662f\u968f\u4fbf\u6413\u7684\uff0c\u8bf7\u7559\u610f\u4e3a\u4ec0\u4e48\u4e3a\u8981\u5728 Index \u7279\u5730\u5199\u51fa\u4e8c\u8fdb\u5236\u7684\u8868\u8ff0\u3002</p> <p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u9700\u8981\u5f3a\u8c03\uff0c\u6211\u4eec\u5f15\u5165 SOM \u548c POM \u7684\u76ee\u7684\u662f\u5bfb\u627e\u4e00\u79cd\u6bd4\u8f83\u5178\u578b\u7684 \u8868\u8fbe\uff0c\u4f7f\u5f97\u4ed6\u4eec\u80fd\u591f \u786e\u5b9a \u4e00\u5f20\u771f\u503c\u8868\u3002\u5373\uff0c\u77e5\u9053\u8fd9\u79cd \u8868\u8fbe \u6211\u4eec\u5c31\u8db3\u591f\u5199\u51fa\u8fd9\u5f20\u771f\u503c\u8868\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p> <p>\u6ce8\u610f</p> <p>\u8d77\u521d\u6211\u5728\u770b\u4fee\u4f6c\u7b14\u8bb0\u7684\u65f6\u5019\uff0c\u8ba4\u4e3a\u4ed6\u8fd9\u91cc\u662f\u6709\u4e9b\u201c\u5197\u957f\u201d\u6216\u8005\u8bf4\u5927\u8d39\u7bc7\u7ae0\u7684\uff0c\u4f46\u671f\u672b\u6700\u540e\u4e00\u6b21\u8003\u524d\u68b3\u7406\u7684\u65f6\u5019\u53d1\u73b0\uff0c\u81ea\u5df1\u4e00\u76f4\u6ca1\u6709\u641e\u6e05\u6700\u5c0f\u9879\u7684\u672c\u8d28\u662f\u4ec0\u4e48\u3002</p> <p>\u5efa\u8bae\u8bfb\u8005\u7b2c\u4e00\u6b21\u8bfb\u53ea\u9700\u5efa\u7acb\u4e00\u4e2a\u76f4\u89c2\u611f\u89c9\uff0c\u4e4b\u540e\u53ef\u4ee5\u518d\u56de\u6765\u770b\u4e00\u770b\u8ffd\u52a0\u8bf4\u660e\uff0c\u8fd9\u6837\u4f1a\u5bf9\u7406\u89e3\u975e\u5e38\u6709\u5e2e\u52a9\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#som","title":"\u6700\u5c0f\u9879\u4e4b\u548c SOM","text":"<p>\u8fd9\u91cc\u6211\u4eec\u4e0d\u5f97\u4e0d\u63d0\u53ca\u539f\u4f5c\u8005\u5bf9\u8fd9\u90e8\u5206\u7684\u89e3\u91ca\u6709\u4e9b\u8fc7\u4e8e\u5197\u957f\u4e86\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u90e8\u5206\u7684\u89e3\u91ca\u662f\u975e\u5e38\u6709\u8da3\u548c\u5177\u6709\u542f\u53d1\u610f\u4e49\u7684\u3002</p> <p>\u8bfe\u672c\u4e2d\u6700\u5c0f\u9879\u7684\u5b9a\u4e49</p> <p>A product term in which all the variables appear exactly once, either complemented or uncomplemented, is called minterm.  Its characteristic property is that it represents exactly one combination of binary variable values in the truth table.</p> <p>\u7528\u6211\u7684\u8bdd\u6765\u8bf4\uff0c\u6700\u5c0f\u9879\u4e4b\u548c\u5c31\u662f\u6311\u51fa\u771f\u503c\u8868\u4e2d\u6240\u6709\u7ed3\u679c\u662f <code>1</code> \u7684\u6700\u5c0f\u9879\uff08\u6bd4\u8f83\u6a21\u7cca\u4f46\u76f4\u89c2\uff0c\u6240\u4ee5\u8bf7\u5148\u56eb\u56f5\u541e\u67a3\uff0c\u6211\u5728\u201c\u8ffd\u52a0\u8bf4\u660e\u201d\u4f1a\u8fdb\u4e00\u6b65\u8bf4\u660e\uff09\u7136\u540e <code>OR</code> \u8d77\u6765\u3002\u663e\u7136\uff0c\u6700\u5c0f\u9879\u4e4b\u548c\u7684\u542b\u4e49\u5c31\u662f\uff0c\u4e00\u65e6\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u4e86\u8fd9\u51e0\u4e2a\u201c\u6700\u5c0f\u9879\u201d\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f <code>1</code>\uff0c\u7b26\u5408\u4e86 <code>OR</code> \u7684\u201c\u67091\u5f971\u201d\u7684\u89c4\u5219\u3002</p> <p>\u6211\u4eec\u4f7f\u7528\u7b26\u53f7 \\(m_{idx}\\) \u6765\u8868\u793a\u53d8\u91cf\u7ec4\u5408 \\(idx\\) \u662f\u4e00\u4e2a\u6700\u5c0f\u9879\uff0c\u5176\u4e2d \\(idx\\) \u8868\u793a\u63cf\u8ff0\u7684\u90a3\u4e00\u9879\u5728\u771f\u503c\u8868\u7684\u5e8f\u53f7\uff0c\u540c\u65f6\u8fd9\u4e2a\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u4e5f\u80fd\u53cd\u6620\u51fa\u5b57\u9762\u91cf\u7684\u7ec4\u5408\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 \ud83c\udf30 \u4e2d\uff0coutput \u4e3a <code>1</code> \u7684\u9879\u6709\uff1a<code>010</code> <code>100</code> <code>101</code> <code>111</code> \u8fd9\u56db\u9879\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6311\u51fa\u6765\u7684\u6700\u5c0f\u9879\u8868\u8fbe\u5c31\u5206\u522b\u662f \\(m_{2}=\\overline{X}Y\\overline{Z}, \\; m_{4}=X\\overline{Y}\\overline{Z}, \\; m_{5}=X\\overline{Y}Z, \\; m_{7}=XYZ\\)\uff0c\u8fd9\u4e9b\u53d8\u91cf\u8868\u8fbe\u5f0f\u90fd\u662f\u5f53\u4e14\u4ec5\u5f53\u53d8\u91cf\u7ec4\u5408\u4e3a\u5bf9\u5e94\u9879\u65f6\u624d\u4f1a\u53d6 <code>1</code> \u7684\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u552f\u4e00\u8868\u8fbe\u4e86\u8fd9\u4e9b\u771f\u503c\u8868\u4e2d\u7684 <code>1</code>\u3002</p> \u8ffd\u52a0\u8bf4\u660e\uff08\u7b80\u5355\uff0c\u4f46\u662f\u5efa\u8bae\u770b\u4e00\u770b\uff09 <p>\u6216\u8bb8\u60a8\u89c9\u5f97\u6700\u5c0f\u9879\u7684\u5f97\u5230\u975e\u5e38\u7684\u81ea\u7136\u4e14\u7b80\u5355\uff0c\u6211\u5efa\u8bae\u60a8\u4e5f\u5c1d\u8bd5\u7740\u770b\u4e00\u770b\u8ffd\u52a0\u8bf4\u660e\uff0c\u56e0\u4e3a\u8fd9\u5bf9\u7406\u89e3\u6700\u5927\u9879\u633a\u6709\u5e2e\u52a9\u7684\u3002</p> <p>\u90a3\u4e48\u4ec0\u4e48\u662f\u201c\u5217\u4e3e\u201d\u5462\uff1f\u8ba9\u6211\u4eec\u518d\u770b\u4e00\u773c\u4e0a\u9762\u5bf9\u6700\u5c0f\u9879\u4e4b\u548c\u7684\u63cf\u8ff0\uff1a\u201c\u4e00\u65e6\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u8fd9\u51e0\u4e2a\u2018\u6700\u5c0f\u9879\u2019\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f\u771f\u201d\uff0c\u8ffd\u672c\u6eaf\u6e90\uff0c\u5728\u6700\u5c0f\u9879\u4e2d\uff0c\u6211\u4eec\u5c31\u9700\u8981\u505a\u5230\u53ea\u6709\u5f53\u4e00\u4e2a\u7535\u8def\u7684\u72b6\u6001\u662f\u7279\u5b9a\u7ec4\u5408\u65f6\uff0c\u5176\u8fd4\u56de\u503c\u4e3a <code>1</code>\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8e \ud83c\udf30 \u4e2d\u7684 \\(m_{5}=X\\overline{Y}Z\\)\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u4e00\u79cd\u66f4\u5570\u55e6\u7684\u65b9\u5f0f\u8868\u8fbe\u51fa\u6765\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>if(X == 1 &amp;&amp; Y == 0 &amp;&amp; Z == 1) {\n    Output = 1;\n} else {\n    Output = 0;\n}\n</code></pre> <p>\uff08\u5faa\u5e8f\u6e10\u8fdb\uff09\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u53d8\u5316\u4e3a\u8fd9\u6837\uff1a</p> <pre><code>if(X == 1 &amp;&amp; (!Y) == 1 &amp;&amp; Z == 1) {\n    Output = 1;\n} else {\n    Output = 0;\n}\n</code></pre> <p>\u5982\u679c\u4f60\u719f\u6089\u201c\u538b\u884c\u201d\u6280\u5de7\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u90fd\u53ef\u4ee5\u5199\u6210\uff1a</p> <pre><code>Output = (X == 1 &amp;&amp; (!Y) == 1 &amp;&amp; Z == 1);\n</code></pre> <p>\u800c\u8fd9\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u5b9e\u9645\u4e0a\u5df2\u7ecf\u548c \\(m_5=X\\overline{Y}Z\\) \u4e00\u6a21\u4e00\u6837\u4e86\u3002</p> <p>\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u603b\u7ed3\u6027\u7684\u8868\u8ff0\uff1a\u6240\u8c13\u7684\u201c\u6311\u51fa\u201d\uff0c\u5c31\u662f\u5bf9\u4e8e\u9009\u5b9a\u7684\u4e00\u4e2a\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u8868\u8fbe\u5f0f\uff0c\u4f7f\u5f97\u53ea\u6709\u8fd9\u79cd\u7ec4\u5408\u7684\u7ed3\u679c\u662f \\(f\\)\uff0c\u800c\u5bf9\u4e8e\u4efb\u4f55\u5176\u4ed6\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u90fd\u662f \\(\\overline{f}\\)\uff0c\u5373\u5b9e\u73b0\u4e86\u8be5\u8868\u8fbe\u5f0f\u80fd \u552f\u4e00\u8868\u8fbe \u8fd9\u4e2a\u53d6\u503c\u7ec4\u5408\u3002\uff08\u8fd9\u91cc\u4e4b\u6240\u4ee5\u5199\u7684\u662f \\(f\\) \u800c\u4e0d\u662f <code>1</code>\uff0c\u662f\u4e3a\u4e86\u7ed9\u4e4b\u540e\u5206\u6790 POM \u505a\u94fa\u57ab\uff0c\u5bf9\u4e8e POM\uff0c<code>0</code> \u624d\u662f\u552f\u4e00\u8868\u8fbe\u7684\u7279\u5f81\u7ed3\u679c\u3002\uff09</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86 \ud83c\udf30 \u6240\u5bf9\u5e94\u7684 SOM\uff1a</p> \\[ \\begin{array}{l}     F(X,Y,Z)     &amp; = \\sum m(2,4,5,7) \\\\     &amp; = m_2+m_4+m_5+m_7 \\\\     &amp; = \\overline{X}Y\\overline{Z}+X\\overline{Y}\\,\\overline{Z}+X\\overline{Y}Z+XYZ \\end{array} \\] <p>\u518d\u6b21\u5f52\u7eb3\uff0c\u4f7f\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u8bf4\uff0c\u6700\u5c0f\u9879\u4e4b\u548c\u66f4\u50cf\u662f\u201c\u679a\u4e3e\u4e86\u6240\u6709 <code>1</code> \u7684\u53ef\u80fd\u201d\uff0c\u53ea\u8981\u5339\u914d\u4e86\u8fd9\u4e2a\u201c\u548c\u201d\u4e2d\u7684\u67d0\u4e00\u9879\uff08\u4e8b\u5b9e\u4e0a\u4e0d\u505a\u5316\u7b80\u7684\u8bdd\u4f60\u4e5f\u53ea\u80fd\u6ee1\u8db3\u4e00\u9879\u7684\u503c\u53d6\u5230 <code>1</code>\uff09\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4f1a\u53d8\u6210 <code>1</code>\uff1b\u800c\u4e00\u4e2a\u90fd\u4e0d\u5339\u914d\u7684\uff0c\u81ea\u7136\u5c31\u53ea\u80fd\u5f97\u5230 <code>0</code>\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#pom","title":"\u6700\u5927\u9879\u4e4b\u79ef POM","text":"<p>\u5c31\u50cf\u6211\u4e4b\u524d\u4e0d\u65ad\u4e0d\u65ad\u4e0d\u65ad\u5f3a\u8c03\u7684\uff0c\u6240\u8c13\u7684 <code>1</code> \u548c <code>0</code> \u90fd\u53ea\u662f\u4eba\u4e3a\u5b9a\u4e49\u7684\uff0c\u6446\u8131\u6f5c\u610f\u8bc6\u91cc\u5bf9\u8fd9\u4e24\u8005\u4e4b\u4e00\u7684\u503e\u5411\uff08\u4f8b\u5982\u6211\u672c\u4eba\u5c31\u4e00\u76f4\u5f88\u503e\u5411\u4e8e\u4ee5 <code>1</code> \u4e3a\u4e3b\u4f53\u7814\u7a76\u95ee\u9898\uff09\u4f1a\u5bf9\u7406\u89e3\u6700\u5927\u9879\u4e4b\u79ef\u548c\u903b\u8f91\u8868\u8fbe\u5f0f\u5316\u7b80\u5f88\u6709\u5e2e\u52a9\u3002</p> <p>\u800c\u6700\u5927\u9879\u4e4b\u79ef\u2014\u2014\u4ee5\u6211\u4e2a\u4eba\u7684\u611a\u89c1\u2014\u2014\u5c31\u662f\u4ee5 <code>0</code> \u4e3a\u4e3b\u4f53\u6765\u7814\u7a76\u771f\u503c\u8868\u7684\u7279\u5f81\u7684\u3002</p> <p>\u8bfe\u672c\u4e2d\u5bf9\u6700\u5927\u9879\u7684\u5b9a\u4e49</p> <p>A sum term that contains all the variables in complemented or uncomplemented form is called a maxterm.</p> <p>\u4e0e\u6700\u5c0f\u9879\u5bf9\u6bd4\uff0c\u65e0\u975e\u662f\u628a \"product term\" \u6362\u6210\u4e86 \"sum term\"\uff0c\u4e5f\u5c31\u662f\u628a AND \u6362\u6210\u4e86 OR\u3002</p> <p>\u800c\u6700\u5927\u9879\u4e4b\u79ef\uff0c\u5c31\u662f\u6311\u51fa\u6240\u6709\u7ed3\u679c\u4e3a <code>0</code> \u7684\u6700\u5927\u9879\uff08\u201c\u6311\u51fa\u201d\u7684\u5b9a\u4e49\u6211\u5df2\u7ecf\u5728 SOM \u7684\u8ffd\u52a0\u8bf4\u660e\u4e2d\u7ed9\u51fa\uff0c\u5728 POM \u7684\u8ffd\u52a0\u8bf4\u660e\u4e2d\u6211\u8fd8\u4f1a\u518d\u4e00\u6b21\u63d0\u53ca\uff09\uff0c\u518d\u505a AND\u3002\u4ee5 <code>1</code> \u4e3a\u4e3b\u4f53\u63cf\u8ff0 AND \u662f\u201c\u90fd1\u51fa1\u201d\uff0c\u800c\u4ee5 <code>0</code> \u4e3a\u4e3b\u4f53\u63cf\u8ff0 AND \u5219\u662f\u201c\u67090\u51fa0\u201d\uff0c\u8fd9\u4e0e OR \u7684\u201c\u67091\u51fa1\u201d\u4e5f\u662f\u9ad8\u5ea6\u5bf9\u79f0\u7684\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u5927\u9879\u4e4b\u79ef\u7684\u542b\u4e49\u662f\uff0c\u5728\u6700\u5927\u9879\u4e4b\u79ef\u4e2d\uff0c\u53ea\u8981\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u8fd9\u51e0\u4e2a\u201c\u6700\u5927\u9879\u201d\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210 <code>0</code>\u3002</p> <p>\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u7b26\u53f7 \\(M_{idx}\\) \u6765\u8868\u793a\u53d8\u91cf\u7ec4\u5408 \\(idx\\) \u662f\u4e00\u4e2a\u6700\u5927\u9879\uff0c\u5176\u4e2d \\(idx\\) \u8868\u793a\u63cf\u8ff0\u7684\u90a3\u4e00\u9879\u5728\u771f\u503c\u8868\u7684\u5e8f\u53f7\uff0c\u540c\u65f6\u8fd9\u4e2a\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u4e5f\u80fd\u53cd\u6620\u51fa\u5b57\u9762\u91cf\u7684\u7ec4\u5408\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 \ud83c\udf30 \u4e2d\uff0coutput \u4e3a <code>0</code> \u7684\u9879\u6709\uff1a<code>000</code> <code>001</code> <code>011</code> <code>110</code> \u8fd9\u56db\u9879\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6311\u51fa\u6765\u7684\u6700\u5c0f\u9879\u8868\u8fbe\u5c31\u5206\u522b\u662f\\(M_{0}=X+Y+Z, \\; M_{1}=X+Y+\\overline{Z}, \\; M_{3}=X+\\overline{Y}+\\overline{Z}, \\; M_{6}=\\overline{X}+\\overline{Y}+Z\\)\u3002\u53ef\u4ee5\u68c0\u9a8c\uff0c\u53ea\u6709\u4ee3\u5165\u4ed6\u4eec\u5bf9\u5e94\u7684\u90a3\u4e00\u884c\u771f\u503c\u8868\u7ec4\u5408\u65f6\uff0c\u4ed6\u4eec\u624d\u4f1a\u5f97\u5230 <code>0</code>\u3002</p> \u8ffd\u52a0\u8bf4\u660e <p>\u540c\u6837\u7684\uff0c\u56de\u987e\u6700\u5927\u9879\u4e4b\u79ef\u7684\u63cf\u8ff0\uff1a\u201c\u5728\u6700\u5927\u9879\u4e4b\u79ef\u4e2d\uff0c\u53ea\u8981\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u8fd9\u51e0\u4e2a\u2018\u6700\u5927\u9879\u2019\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210 <code>0</code>\u201d\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8e \ud83c\udf30 \u4e2d\u7684 \\(M_6=\\overline{X}+\\overline{Y}+Z\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5982\u4e0b\u63cf\u8ff0\uff1a</p> <pre><code>if(X == 1 &amp;&amp; Y == 1 &amp;&amp; Z == 0){\n    Output = 0;\n} else {\n    Output = 1;\n}\n</code></pre> <p>\u56de\u987e\u6700\u5927\u9879\u7684\u76ee\u7684\u662f\u6ee1\u8db3\u8fd9\u4e2a\u5206\u652f\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u8f93\u51fa <code>0</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u8868\u8fbe <code>(X == 1 &amp;&amp; Y == 1 &amp;&amp; Z == 0)</code> \u8fd9\u4e2a\u903b\u8f91\u6761\u4ef6\u3002\u4f46\u7531\u4e8e\u6700\u5927\u9879\u7684\u5b9e\u73b0\u5f62\u5f0f\u662f <code>OR</code>\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06 <code>&amp;&amp;</code> \u7684\u5f0f\u5b50\u4ee5 <code>||</code> \u7684\u5f62\u5f0f\u8868\u8fbe\u3002</p> <p>\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u5404\u79cd\u8fd0\u7b97\u5f8b\u6765\u5316\u7b80\uff0c\u4f46\u662f\u4e0d\u59a8\u60f3\u4e00\u60f3 <code>AND</code> \u548c <code>OR</code> \u7684\u8fd0\u7b97\u7279\u5f81\uff0c\u524d\u8005\u662f\u201c\u67090\u51fa0\u201d\uff0c\u540e\u8005\u662f\u201c\u67091\u51fa1\u201d\u3002\u800c\u5bf9\u4e8e <code>AND</code> \u6765\u8bf4\uff0c\u60f3\u8981\u505a\u5230\u6761\u4ef6\u7b5b\u9009\uff0c\u5c31\u9700\u8981\u6bcf\u4e00\u4e2a\u6761\u4ef6\u90fd\u662f <code>1</code>\uff0c\u6700\u540e\u5982\u679c\u7b5b\u9009\u6210\u529f\u7ed3\u679c\u5c31\u662f <code>1</code>\uff1b\u5bf9\u4e8e <code>OR</code> \u6765\u8bf4\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u6761\u4ef6\u90fd\u662f <code>0</code>\uff0c\u5982\u679c \u7b5b\u9009\u6210\u529f \u7684\u7ed3\u679c\u5c31\u662f <code>0</code>\u3002\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6216\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff1a</p> <pre><code>if((X == 0 || Y == 0 || (!Z) == 0) == 0){\n    Output = 0;\n} else {\n    Output = 1;\n}\n</code></pre> <p>\u540c\u6837\u8fdb\u884c\u4e00\u4e0b\u538b\u884c\uff1a</p> <pre><code>// It might be too complex.\nOutput = !((X == 0 || Y == 0 || (!Z) == 0) == 0);\n// So we can simplify it.\nOutput = (X == 0 || Y == 0 || (!Z) == 0);\n</code></pre> <p>\u8fd9\u4e5f\u6b63\u5bf9\u5e94\u4e86 \\(M_6=\\overline{X}+\\overline{Y}+Z\\)\u3002</p> <p>\u518d\u6b21\u7ed9\u51fa\u8fd9\u4e2a\u603b\u7ed3\u6027\u7684\u8868\u8ff0\uff1a\u6240\u8c13\u7684\u201c\u6311\u51fa\u201d\uff0c\u5c31\u662f\u5bf9\u4e8e\u9009\u5b9a\u7684\u4e00\u4e2a\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u8868\u8fbe\u5f0f\uff0c\u4f7f\u5f97\u53ea\u6709\u8fd9\u79cd\u7ec4\u5408\u7684\u7ed3\u679c\u662f \\(f\\)\uff0c\u800c\u5bf9\u4e8e\u4efb\u4f55\u5176\u4ed6\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u90fd\u662f \\(\\overline{f}\\)\uff0c\u5373\u5b9e\u73b0\u4e86\u8be5\u8868\u8fbe\u5f0f\u80fd \u552f\u4e00\u8868\u8fbe \u8fd9\u4e2a\u53d6\u503c\u7ec4\u5408\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86 \ud83c\udf30 \u6240\u5bf9\u5e94\u7684 POM\uff1a</p> \\[ \\begin{aligned}     F(X,Y,Z)     &amp; = \\prod M(0,1,3,6) \\\\     &amp; = M_0M_1M_3M_6 \\\\     &amp; = (X+Y+Z)(X+Y+\\overline{Z})(X+\\overline{Y}+\\overline{Z})(\\overline{X}+\\overline{Y}+Z) \\end{aligned} \\] <p>\u540c\u6837\u518d\u6b21\u5f52\u7eb3\uff0c\u4f7f\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u8bf4\uff0c\u6700\u5927\u9879\u4e4b\u79ef\u66f4\u50cf\u662f\u201c\u679a\u4e3e\u4e86\u6240\u6709 <code>0</code> \u7684\u53ef\u80fd\u201d\uff0c\u53ea\u8981\u5339\u914d\u4e86\u8fd9\u4e2a\u201c\u79ef\u201d\u4e2d\u7684\u67d0\u4e00\u9879\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4f1a\u53d8\u6210 <code>0</code>\uff1b\u800c\u4e00\u4e2a\u90fd\u4e0d\u5339\u914d\u7684\uff0c\u81ea\u7136\u5c31\u53ea\u80fd\u5f97\u5230 <code>1</code>\u3002</p> <p>\u4e0e\u6700\u5c0f\u9879\u76f8\u6bd4\uff0c\u4e00\u4e2a\u679a\u4e3e\u4e86\u6240\u6709\u7684 <code>1</code> \u7684\u53ef\u80fd\uff0c\u4e00\u4e2a\u679a\u4e3e\u4e86\u6240\u6709\u662f <code>0</code> \u7684\u53ef\u80fd\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u503c\u8868\u8fbe\u5f0f\u6765\u8bf4\uff0c\u4e24\u79cd \u8868\u8fbe \u90fd\u662f\u5145\u8981\u7684\u3002</p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u8fd8\u80fd\u53d1\u73b0\uff1a</p> <p>\u4f8b\u5982\uff1a\\(M_5 = \\overline{X} + Y + \\overline{Z} = \\overline{ X\\overline{Y}Z } = \\overline{m}_5\\)</p> <p>\u5173\u4e8e\u8fd9\u4e2a\u53d1\u73b0\u7684\u66f4\u591a\u7684\u4f8b\u5b50\u548c\u8bf4\u660e\uff0c\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u7b2c\u4e00\u4e2a\u7ec3\u4e60\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_13","title":"\u7ec3\u4e60","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u6765\u8fdb\u4e00\u6b65\u5f3a\u5316\u8fd9\u4e9b\u7406\u89e3\uff0c\u5e76\u4e14\u6316\u6398\u4e00\u4e9b\u795e\u5947\u7684\u7279\u6027\u3002</p> \u9898\u9762 <p>\u8bf7\u5206\u522b\u5199\u51fa\u5982\u4e0b\u771f\u503c\u8868\u4e2d \\(F\\) \u548c \\(\\overline{F}\\) \u7684 SOM \u548c POM\u3002 </p> <p>\u200b    === \"\u7b54\u6848\"</p> <p>\u200b        \u7b54\u6848\uff1a</p> <pre><code>    $$\n            \\begin{aligned}\n                F(X,Y,Z)\n                &amp; = \\sum m(0,2,5,7) \\\\\n                &amp; = \\overline{X}\\,\\overline{Y}\\,\\overline{Z} + \\overline{X}Y\\overline{Z} + X\\overline{Y}Z + XYZ \\\\\n                &amp; = \\prod M(1,3,4,6) \\\\\n                &amp; = (X+Y+\\overline{Z})(X+\\overline{Y}+\\overline{Z})(\\overline{X}+Y+Z)(\\overline{X}+\\overline{Y}+Z)\n            \\end{aligned}\n    $$\n    $$\n            \\begin{array}{l}\n                \\overline{F}(X,Y,Z)\n                &amp; = \\sum m(1,3,4,6) \\\\\n                &amp; = \\overline{X}\\,\\overline{Y}Z + \\overline{X}YZ + X\\overline{Y}\\,\\overline{Z} + XY\\overline{Z} \\\\\n                &amp; = \\prod M(0,2,5,7) \\\\\n                &amp; = (X+Y+Z)(X+\\overline{Y}+Z)(\\overline{X}+Y+\\overline{Z})(\\overline{X}+\\overline{Y}+\\overline{Z})\n            \\end{array}\n    $$\n</code></pre> <p>\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u4e00\u4ef6\u5f88\u6709\u610f\u601d\u7684\u4e8b\u60c5\uff0c\\(F\\) \u7684 SOM \u7684\u4e0b\u6807\u4e0e \\(\\overline{F}\\) \u7684 POM \u7684\u4e0b\u6807\u662f\u4e00\u6837\u7684\uff1b\u5f53\u7136\u5bf9\u4e8e \\(F\\) \u7684 POM \u548c \\(\\overline{F}\\) \u7684 SOM \u4e5f\u662f\u4e00\u6837\u7684\u3002\u8fd9\u53c8\u53cc\u5370\u8bc1\u4e86\u5bf9\u79f0\u6027\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_14","title":"\u7535\u8def\u5b9e\u73b0\u4e0e\u4f18\u5316","text":"<p>\u5f15\u5165</p> <p>\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6807\u51c6\u5f62\u5f0f\u6765\u5f97\u5230\u5bf9\u5e94\u7684\u7535\u8def\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u6210\u672c\u8fc7\u9ad8\u4ee5\u53ca\u7535\u8def\u590d\u6742\uff08\u56e0\u4e3a\u95e8\u592a\u591a\u4e86\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u7535\u8def\u8fdb\u884c\u4f18\u5316\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecb\u7ecd\u901a\u8fc7 \u5361\u8bfa\u56fe(Karnaugh map) \u6765\u4f18\u5316\u903b\u8f91\u7535\u8def\u7684\u65b9\u6cd5\u3002</p> <p>\u4e0d\u8fc7\u518d\u5f00\u59cb\u201c\u4f18\u5316\u201d\u7684\u8bdd\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4ec0\u4e48\u662f\u201c\u4f18\u201d\uff0c\u4e5f\u5c31\u662f\u7ed9\u51fa\u4e00\u4e2a\u7535\u8def\u6210\u672c\u7684\u8861\u91cf\u4f9d\u636e\uff0c\u5373 \u6210\u672c\u6807\u51c6(cost criteria)\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_15","title":"\u6210\u672c\u6807\u51c6","text":"<p>\u5728\u6210\u672c\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd\u7684\u4e3b\u8981\u6709\u4e09\u79cd\u6807\u51c6\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>\u6309\u7167\u5b57\u9762\u91cf\u5b57\u9762\u91cf\u8ba1(literal cost)\uff1a\\(L\\)</li> <li>\u6309\u95e8\u8f93\u5165\u8ba1\uff0c\u4e0d\u8ba1\u975e\u95e8(gate-input cost)\uff1a\\(G\\)</li> <li>\u6309\u95e8\u8f93\u5165\u8ba1\uff0c\u8ba1\u975e\u95e8(gate-input cost with NOTs)\uff1a\\(GN\\)</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_16","title":"\u6309\u7167\u5b57\u9762\u91cf\u5b57\u9762\u91cf\u8ba1","text":"<p>\u5f88\u76f4\u767d\uff0c\u5c31\u662f\u6309\u7167\u8868\u8fbe\u5f0f\u4e2d\u6709\u591a\u5c11\u5b57\u9762\u91cf\u6765\u8ba1\u7b97\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\\(F = BD + A\\overline{B}C + A\\overline{C}\\,\\overline{D}\\) \u4e2d \\(L = 8\\)\uff1b</li> <li>\\(F = ABC+\\overline{A}\\,\\overline{B}\\,\\overline{C}\\) \u4e2d \\(L = 6\\)\uff1b</li> <li>\\(F = (A+B+C)(\\overline{A}+\\overline{B} + \\overline{C})\\) \u4e2d \\(L = 6\\)\uff1b</li> </ul> <p>\u53ef\u4ee5\u60f3\u8c61\uff0c\u867d\u7136\u8fd9\u79cd\u8ba1\u7b97\u65b9\u6cd5\u975e\u5e38\u7684\u7b80\u5355\uff0c\u4f46\u662f\u611f\u89c9\u4e0d\u592a\u9760\u8c31\u3002\u6bd4\u5982\uff0c\u540e\u9762\u4e24\u4e2a\u4f8b\u5b50\uff0c\u867d\u7136\u4ed6\u4eec\u7684 literal cost \u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u663e\u7136\u5f00\u9500\u4e0d\u592a\u4e00\u6837\uff08\u56e0\u4e3a\u4e00\u4e2a\u662f 3+3 \u4e00\u4e2a\u662f 2+2+2\uff09\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u5408\u9002\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_17","title":"\u6309\u95e8\u8f93\u5165\u8ba1","text":"<p>\u6309\u7167\u95e8\u8f93\u5165\u8ba1\u5c31\u662f\u6309\u7167\u903b\u8f91\u95e8\u8f93\u5165\u5f15\u811a\u7684\u603b\u4e2a\u6570\u6765\u8ba1\u7b97\uff0c\u8fd9\u91cc\u7684\u8f93\u5165\u5e76\u4e0d\u4ec5\u4ec5\u662f\u76f4\u63a5\u6765\u81ea\u4e8e\u5b57\u9762\u91cf\u8f93\u5165\u7684\u90a3\u4e9b\u5f15\u811a\uff0c\u4e5f\u5305\u62ec\u5b57\u9762\u91cf\u505a\u8fd0\u7b97\u540e\u5f97\u5230\u7684\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u4f20\u5165\u4e0b\u4e00\u7ea7\u903b\u8f91\u95e8\u7684\u5f15\u811a\u3002</p> <p>\u6ce8\u610f</p> <p>\u867d\u7136\u975e\u95e8\u4e5f\u662f\u95e8\uff0c\u4f46\u662f\u6211\u4eec\u901a\u5e38\u4e0d\u628a\u975e\u95e8\u76f4\u63a5\u8ba1\u5165 gate-input cost\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u63d0\u5230\u7684\u201c\u8f93\u5165\u5f15\u811a\u201d\u9ed8\u8ba4\u662f\u4e0d\u5305\u542b\u975e\u95e8\u7684\u8f93\u5165\u5f15\u811a\u7684\u3002</p> <p></p> <p>\u4f8b\u5982\u8fd9\u5f20\u5bf9\u5e94\u8868\u8fbe\u5f0f\\(F = A+BC+\\overline{B}\\,\\overline{C}\\) \u7684\u56fe\u4e2d\uff1a</p> <ul> <li>\u7eff\u8272\u539f\u70b9\u8868\u793a\u4e00\u7ea7\u8f93\u5165\u5f15\u811a\uff1b</li> <li>\u84dd\u8272\u65b9\u70b9\u8868\u793a\u4e8c\u7ea7\u8f93\u5165\u5f15\u811a\uff1b</li> <li>\u9ed1\u8272\u4e09\u89d2\u8868\u793a\u975e\u95e8\u7684\u8f93\u5165\u5f15\u811a\uff1b</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u91cc\u4e00\u5171\u6709 5 + 2 = 7 \u4e2a\u8f93\u5165\u5f15\u811a\uff0c\u4ee5\u53ca 2 \u4e2a\u975e\u95e8\u8f93\u5165\u5f15\u811a\u3002</p> <p>\u4ece\u8868\u8fbe\u5f0f\u6765\u770b\uff0c\u5b83\u53ef\u4ee5\u770b\u4f5c\u662f\u6bcf\u4e00\u5c42\u8fd0\u7b97\u7684\u53c2\u6570\u6570\u91cf\u6c42\u548c\uff0c\u4e0d\u8fc7\u6211\u4eec\u5ffd\u7565\u975e\u95e8\u3002</p> <p>\u4f8b\u5982\uff0c\u5f0f\u5b50\\(F=AB+\\overline{B}C+C\\overline{D}\\) \u4e2d\uff0c\u6700\u9876\u5c42\u7684\u8fd0\u7b97\u662f\u4e00\u4e2a\u4e09\u8f93\u5165\u6216\u8fd0\u7b97\uff0c\u6240\u4ee5\u6709 3 \u4e2a\u8f93\u5165\uff1b\u63a5\u4e0b\u6765\u6709\u4e09\u4e2a\u4e8c\u8f93\u5165\u4e0e\u8fd0\u7b97\uff0c\u6240\u4ee5\u5404\u8ba1 2 \u4e2a\u8f93\u5165\uff0c\u4e00\u5171 2 * 3 = 6 \u4e2a\u8f93\u5165\uff0c\u4e00\u5171\u662f 9 \u4e2a\u8f93\u5165\u3002</p> <p>\u5f53\u7136\uff0c\u5b9e\u9645\u4e0a\u4ece\u5e95\u5c42\u5f80\u4e0a\u6570\u66f4\u65b9\u4fbf\uff1a</p> <ul> <li>A \u548c B \u5404\u81ea\u7b97\u4e00\u4e2a\uff0cAB \u6574\u4f53\u7b97\u4e00\u4e2a\uff0c\u4e00\u5171 3 \u4e2a\uff1b</li> <li>\u4e00\u5171\u6709\u4e09\u7ec4\u7c7b\u4f3c AB \u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u4e00\u5171\u662f 3 * 3 = 9 \u4e2a\uff1b</li> <li>\u5373\\(G=9\\)\uff1b</li> </ul> <p>Conclusion</p> <p>\u603b\u800c\u8a00\u4e4b\u6211\u4eec\u4e0d\u59a8\u6309\u7167\u62ec\u53f7\u4e00\u5c42\u4e00\u5c42\u5c42\u7ea7\u5f80\u4e0a\u8d70\u6570\u5373\u53ef\u3002</p> <p>\u800c\u5bf9\u4e8e gate-input cost with NOTs\uff0c\u53ea\u8981\u518d\u989d\u5916\u8ba1\u5165\u975e\u95e8\u7684\u8f93\u5165\u5373\u53ef\u3002\u4f8b\u5982\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\uff1a</p> <ul> <li>\u53d1\u73b0\u6709\u4e24\u4e2a\u88ab\u975e\u4e86\u7684\u5b57\u9762\u91cf\uff0c\u6240\u4ee5\u8981\u989d\u5916\u8ba1 2 \u4e2a\uff0c\u4e00\u5171\u662f 11 \u4e2a\uff1b</li> <li>\u5373\\(GN=11\\)\uff1b</li> </ul> <p>\u6ce8\u610f</p> <p>\u5982\u679c\u51fa\u73b0\u4e86\u6bd4\u5982 \\(F=\\overline{A}B+\\overline{A}C\\) \u7684\u60c5\u51b5\uff0c\u975e\u95e8\u53ea\u9700\u8981\u8ba1 1 \u4e2a\uff0c\u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u628a\u975e\u4e86\u4ee5\u540e\u7684\u4e1c\u897f\u5f53\u4f5c\u4e86\u4e00\u4e2a\u5b57\u9762\u91cf\u518d\u7528\u7684\uff0c\u5728\u5b9e\u9645\u7535\u8def\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u975e\u4e00\u6b21\uff0c\u4e4b\u540e\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u8f93\u51fa\u503c\u62ff\u8d70\u53bb\u7528\u5c31\u884c\u3002</p> <p>\u63a5\u4e0b\u6765\u653e\u51e0\u9053\u4f8b\u9898\u3002</p> \u9898\u9762 <p>\u8ba1\u7b97\\(F=ABC+\\overline{A}\\,\\overline{B}\\,\\overline{C}\\) \u7684 \\(L\\)\u3001\\(G\\)\u3001\\(GN\\)\u3002</p> <p>\u200b    === \"\u7b54\u6848\"         - \\(L = 6\\)\uff1b           - \\(G= 8\\)\uff1b           - \\(GN = 11\\)\uff1b    </p> \u9898\u9762\u7b54\u6848 <p>\u8ba1\u7b97 \\(F=(A+\\overline{C})(\\overline{B}+C)(\\overline{A}+B)\\) \u7684 \\(L\\)\u3001\\(G\\)\u3001\\(GN\\)\u3002</p> <ul> <li>\\(L = 6\\)\uff1b</li> <li>\\(G= 9\\)\uff1b</li> <li>\\(GN = 12\\)\uff1b</li> </ul> \u9898\u9762\u7b54\u6848 <p>\u8ba1\u7b97 \\(F=(A+\\overline{B})(A+D)(B+C+\\overline{D})(\\overline{B}+\\overline{C}+D)\\) \u7684 \\(L\\)\u3001\\(G\\)\u3001\\(GN\\)\u3002</p> <ul> <li>\\(L = 10\\)\uff1b</li> <li>\\(G= 14\\)\uff1b</li> <li>\\(GN = 17\\)\uff1b</li> </ul> <p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u88ab\u975e\u4e86\u7684\u5b57\u9762\u91cf\uff0c\u4e0d\u8981\u91cd\u590d\u8ba1\u7b97\uff01</p> \u9898\u9762\u7b54\u6848 <p>\u8ba1\u7b97 \\(F=BD+A\\overline{B}C+A\\overline{B}\\,\\overline{D}+AB\\overline{C}\\) \u7684 \\(L\\)\u3001\\(G\\)\u3001\\(GN\\)\u3002</p> <ul> <li>\\(L = 11\\)\uff1b</li> <li>\\(G = 15\\)\uff1b</li> <li>\\(GN = 18\\)\uff1b</li> </ul> <p>\u8fd9\u91cc\u540c\u6837\u9700\u8981\u6ce8\u610f\uff0c\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u88ab\u975e\u4e86\u7684\u5b57\u9762\u91cf\uff0c\u4e0d\u8981\u91cd\u590d\u8ba1\u7b97\uff01</p> \u9898\u9762\u7b54\u6848 <p>\u8ba1\u7b97 \\(F=\\overline{A}\\,\\overline{C}(B+\\overline{D})+AC(B+\\overline{D})\\) \u7684 \\(L\\)\u3001\\(G\\)\u3001\\(GN\\)\u3002</p> <ul> <li>\\(L = 8\\)\uff1b</li> <li>\\(G = 12\\)\uff1b</li> <li>\\(GN = 15\\)\uff1b</li> </ul> <p>\u5c0f\u7ed3\uff1a \u8fd9\u91cc\u540c\u6837\u9700\u8981\u6ce8\u610f\uff0c\u51fa\u73b0\u4e86\u6bd4\u8f83\u590d\u6742\u7684\u903b\u8f91\u8fd0\u7b97\uff0c\u4ee5 \\(\\overline{A}\\,\\overline{C}(B+\\overline{D})\\) \u4e3a\u4f8b\uff0c\u81ea\u9876\u5411\u4e0b\u662f\uff1a\u24f5\u4e09\u8f93\u5165\u4e0e\u95e8\uff0c\u24f6\u4e8c\u8f93\u5165\u6216\u95e8\uff1b\u6240\u4ee5\u5e94\u8be5\u662f \\(1^{\\overline{A}} + 1^{\\overline{C}} + 1^{B} + 1^{\\overline{D}} + 1^{B+\\overline{D}} + 1^{\\overline{A}\\,\\overline{C}(B+\\overline{D})}\\)\uff0c\u5373 6\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_18","title":"\u5361\u8bfa\u56fe","text":""},{"location":"ZJU_CS/DigitalDesign/Chap02/#_19","title":"\u5361\u8bfa\u56fe\u7684\u601d\u60f3","text":"<p>\u4f18\u5316\u903b\u8f91\u8868\u8fbe\u5f0f\u6700\u76f4\u767d\u7684\u601d\u60f3\u5c31\u662f\u51cf\u5c11\u95e8\u7535\u8def\uff0c\u4e5f\u5c31\u662f\u53bb\u51cf\u5c11 gate-input cost\u3002\u90a3\u4e48\u8981\u5982\u4f55\u505a\u5462\uff1f</p> <p>\u6211\u4eec\u8003\u8651\u5230\u903b\u8f91\u8fd0\u7b97\u5f8b\u4e2d\u7684\u8fd9\u4e2a\u63a8\u5e7f\\(XY+X\\overline{Y}=X(Y+\\overline{Y})=X\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e24\u4e2a\u6700\u5c0f\u9879\u53ea\u5dee\u4e00\u4e2a\u5b57\u9762\u91cf\u7684\u975e\uff0c\u90a3\u4e48\u4ed6\u4eec\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff1b\u5f53\u7136\uff0c\u5bf9\u79f0\u7684\uff0c\u6839\u636e\\((X+\\overline{Y})(X+Y)=X+Y\\overline{Y}=X\\)\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\u5bf9\u6700\u5927\u9879\u4e5f\u6210\u7acb\u3002</p> <p>\u662f\u4e0d\u662f\u89c9\u5f97\u201c\u53ea\u5dee\u4e00\u4e2a\u201d\u5f88\u8033\u719f\uff1f\u662f\u7684\uff01\u6211\u4eec\u60f3\u5230\u4e86\u683c\u96f7\u7801\uff01\u5047\u8bbe\u6211\u4eec\u5c06 n \u4e2a\u5b57\u9762\u91cf\u6392\u5217\u6210\u4e00\u4e2a n bits \u7684\u5411\u91cf\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6309\u7167\u683c\u96f7\u7801\u6392\u5e8f\uff0c\u4e00\u65e6\u53d1\u73b0\u6709\u76f8\u90bb\u7684\u6700\u5c0f\u9879\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5408\u5e76\u4ed6\u4eec\u3002</p> <p>\u4f46\u8fd9\u8fd8\u4e0d\u591f\u5145\u5206\uff0c\u4f8b\u5982\u5728\u4e00\u4e2a\u6709\u4e09\u4e2a\u5b57\u9762\u91cf\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\uff0c\u201c\u4e0e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u76f8\u90bb\u201d\u7684\u8868\u8fbe\u5f0f\u5176\u5b9e\u6709\u4e09\u4e2a\uff0c\u4f46\u662f\u7528\u7ebf\u6027\u7684\u8868\u793a\u65b9\u6cd5\u53c8\u6ca1\u6cd5\u5f88\u597d\u7684\u8868\u793a\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u5c06\u5b83\u5199\u6210\u4e00\u5f20\u4e8c\u7ef4\u7684\u8868\uff0c\u5373\u5c06\u5b57\u9762\u91cf\u62c6\u6210\u4e24\u7ec4 bit \u5411\u91cf\uff0c\u5404\u81ea\u6309\u7167\u683c\u96f7\u7801\u6392\u5217\uff0c\u5f62\u6210\u4e00\u5f20\u4e8c\u7ef4\u8868\uff0c\u8fd9\u5c31\u662f \u5361\u8bfa\u56fe(Karnaugh Map)\uff0c\u4e5f\u53eb K-map\u3002</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u683c\u5b50\u90fd\u53ea\u5dee\u4e00\u4e2a\u5b57\u9762\u91cf\u7684\u975e\uff0c\u800c\u4e14\u662f\u5145\u8981\u7684\uff0c\u5373\u6240\u6709\u201c\u76f8\u90bb\u201d\u90fd\u53ef\u4ee5\u5728\u8fd9\u5f20\u56fe\u8868\u73b0\u51fa\u6765\u3002</p> <p>\u8bf4\u660e</p> <p>\u7531\u4e8e\u683c\u96f7\u7801\u7684\u6027\u8d28\u662f\u4e00\u4e2a\u5728\u201c\u6ee1\u201d\u72b6\u6001\u4e0b \u73af\u72b6\u6210\u7acb \u7684\u6027\u8d28\uff0c\u6240\u4ee5\u5361\u8bfa\u56fe\u4e5f\u9700\u8981\u7528\u201c\u73af\u72b6\u201d\u7684\u601d\u8def\u53bb\u770b\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8054\u60f3\u4e00\u4e0b\u884c\u5217\u5f0f\u7684\u5f62\u8c61\u5316\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5c06\u8fd9\u5f20\u8868\u5f53\u4f5c\u4e00\u4e2a\u65e0\u9650\u6269\u5c55\u7684\u8868\u683c\u3002</p> <p>\u601d\u8003\u9898</p> <p>\u5728\u8fd9\u91cc\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u7740\u611f\u53d7\u4e00\u4e0b\u4e24\u4e2a\u5b57\u9762\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u5b9e\u9645\u4e0a\u201c\u76f8\u90bb\u4e5f\u53ea\u67092\u4e2a\u201d\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u201c4\u4e2a\u76f8\u90bb\u201d\u7684\u5361\u8bfa\u56fe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e09\u4e2a\u5b57\u9762\u91cf\u4e5f\u53ea\u6709\u201c3\u4e2a\u76f8\u90bb\u201d\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u660e\u660e\u6709\u201c4\u4e2a\u76f8\u90bb\u201d\u7684\u5361\u8bfa\u56fe\u6765\u5b9e\u73b0\u5462\uff1f</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_20","title":"\u5361\u8bfa\u56fe\u7684\u5c40\u9650\u6027","text":"<p>\u7136\u800c\uff0c\u4e0a\u9762\u7684\u8bf4\u6cd5\u5176\u5b9e\u5f88\u7275\u5f3a\u3002\u56e0\u4e3a\u4e00\u5f20\u4e8c\u7ef4\u8868\u4e2d\uff0c\u80fd\u4e0e\u4e00\u4e2a\u5143\u7d20\u76f8\u90bb\u7684\u5143\u7d20\u6700\u591a\u53ea\u6709\u56db\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6491\u6b7b\u4e5f\u53ea\u80fd\u7528\u5361\u8bfa\u56fe\u8868\u793a 4 \u4e2a\u5b57\u9762\u91cf\u7684\u60c5\u51b5\uff08\u5f53\u7136\u66f4\u591a\u7684\u53d8\u91cf\u4e5f\u6709\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u591a\u5c11\u6709\u70b9\u9ebb\u70e6\u4e86\uff09\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\u5361\u8bfa\u56fe\u53ea\u80fd\u7528\u4e8e\u5316\u7b80\u975e\u5e38\u7b80\u5355\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u3002</p> <p>\u66f4\u591a\u60c5\u51b5\u4e0b\uff0c\u5361\u8bfa\u56fe\u5b9e\u9645\u4e0a\u53ea\u9002\u5408\u6211\u4eec\u505a\u9898\u3002\u4f46\u662f\u5176\u601d\u8def\u662f\u975e\u5e38\u6709\u610f\u601d\u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_21","title":"\u5361\u8bfa\u56fe\u7684\u7ed3\u6784","text":"<p>\u8fd9\u91cc\u6211\u4eec\u4ee5 3 \u5143\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e3a\u4f8b\uff0c2 \u5143\u548c 4 \u5143\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\u3002</p> <p>\u540c\u6837\uff0c\u4e3e\u4e00\u4e2a \ud83c\udf30 \uff1a\\(F(X,Y,Z) = \\sum m(2,3,4,5)\\)</p> <p>\u9996\u5148\u6211\u4eec\u6309\u7167\u6bd4\u7279\u5411\u91cf\u7684\u5f62\u5f0f\u628a\u6700\u5c0f\u9879\u5199\u51fa\u6765\uff1a</p> \u503c X Y Z 2 0 1 0 3 0 1 1 4 1 0 0 5 1 0 1 <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u7ed8\u5236\u5361\u8bfa\u56fe\uff0c\u6211\u4eec\u5c06 bit \u5411\u91cf <code>[x, y, z]</code> \u62c6\u6210 <code>[x]</code> \u548c <code>[y, z]</code> \u505a\u5982\u4e0b\u8868\u683c\uff1a</p> <code>yz</code> = <code>00</code> <code>yz</code> = <code>01</code> <code>yz</code> = <code>11</code> <code>yz</code> = <code>10</code> <code>x</code> = <code>0</code> 0 0 1 1 <code>x</code> = <code>1</code> 1 1 0 0 <p>\u53e6\u5916\u4e00\u79cd\u6807\u6ce8\u8868\u683c\u7684\u65b9\u5f0f\u662f\u8fd9\u6837\uff0c\u5b83\u53ef\u80fd\u66f4\u6e05\u6670\uff1a</p> <p></p> <p>\u4f46\u662f\u4ed6\u4eec\u7684\u672c\u8d28\u90fd\u662f\u683c\u96f7\u7801\u3002</p> <p>4 \u5143\u5b57\u9762\u91cf\u7684\u5361\u8bfa\u56fe\u5219\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_22","title":"\u4f7f\u7528\u5361\u8bfa\u56fe\u4f18\u5316","text":"<p>\u5df2\u7ecf\u8bb2\u4e86\u601d\u60f3\u548c\u5361\u8bfa\u56fe\u7684\u7ed3\u6784\uff0c\u90a3\u4e48\u5230\u5e95\u8981\u5982\u4f55\u5229\u7528\u5361\u8bfa\u56fe\u8fdb\u884c\u4f18\u5316\u5462\uff1f</p> <p>\u8ba9\u6211\u4eec\u56de\u987e\u4f18\u5316\u7684\u65b9\u6cd5\uff0c\u5373\u5408\u5e76\u76f8\u90bb\u4e24\u9879\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u5361\u8bfa\u56fe\u4e2d\u76f8\u90bb\u7684\u90e8\u5206\u3002\u4f46\u662f\u8fd9\u4e0d\u591f\uff0c\u6211\u4eec\u8fd8\u8981\u601d\u8003\u662f\u4e0d\u662f\u80fd\u5408\u5e76\u5df2\u7ecf\u76f8\u90bb\u7684\u90e8\u5206\uff0c\u6bd4\u5982\uff1a</p> <p>\u6211\u4eec\u901a\u8fc7\u5361\u8bfa\u56fe\uff0c\u9996\u5148\u5408\u5e76\u4e86 \\(WXYZ\\) \u548c \\(WXY\\overline{Z}\\)\uff0c\\(WX\\overline{Y}Z\\) \u548c \\(WX\\overline{Y}\\,\\overline{Z}\\)\uff0c\u5206\u522b\u5f97\u5230\u4e86 \\(WXY\\) \u548c \\(WX\\overline{Y}\\)\uff0c\u663e\u7136\u8fd9\u4e24\u4e2a\u4e1c\u897f\u4e5f\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff1b\u800c\u5728\u5361\u8bfa\u56fe\u4e0a\uff0c\u8fd9\u8868\u73b0\u4e3a\u4e24\u4e2a\u76f8\u90bb\u7684 <code>1*2</code> \u7684\u77e9\u5f62\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u79cd\u8fed\u4ee3\u5408\u5e76\u7684\u884c\u4e3a\u6700\u7ec8\u53ef\u4ee5\u5212\u5f52\u4e3a\u8fd9\u6837\u4e00\u4e2a\u884c\u4e3a\uff1a</p> <p>\u6211\u4eec\u5728\u5361\u8bfa\u56fe\u4e2d\u5bfb\u627e\u82e5\u5e72 \u6781\u5927 \u7684 2 \u5e42\u77e9\u5f62\uff0c\u5373\u5143\u7d20\u4e2a\u6570\u4e3a 2 \u7684\u5e42\u6b21\uff08\u81ea\u7136\u8fb9\u957f\u4e5f\u90fd\u4e3a 2 \u7684\u5e42\u6b21\uff09\u7684\u77e9\u5f62\uff0c\u800c\u6bcf\u4e00\u4e2a\u77e9\u5f62\u6240\u8986\u76d6\u7684\u5143\u7d20\u90fd\u5e94\u8be5\u662f \u6700\u5c0f\u9879/\u6700\u5927\u9879\uff08\u4e00\u822c\u90fd\u662f\u505a\u6700\u5c0f\u9879\uff09\u3002\u9700\u8981\u6ce8\u610f\uff0c\u201c\u5faa\u73af\u201d\u7684\u6027\u8d28\u4ecd\u7136\u6ee1\u8db3\uff0c\u5373\u7b2c\u4e00\u5217\u548c\u6700\u540e\u4e00\u5217\uff0c\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u76f8\u90bb\u7684\u3002</p> <p></p> <p></p> <p>\u4f8b\u5982\uff1a</p> <p></p> <p>\u4f8b\u5982\uff1a</p> <p></p> <p>\u518d\u4f8b\u5982\uff1a</p> <p></p> <p>\u90fd\u662f\u5408\u7406\u7684\u5361\u8bfa\u56fe\u5212\u5206\u3002</p> <p>\u5728\u5f97\u5230\u8fd9\u4e9b\u5212\u5206\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5c06\u8fd9\u4e9b\u9879\u62ce\u51fa\u6765\uff0c\u5199\u51fa\u5b83\u4eec\u7684\u8868\u8fbe\u5f0f\u3002</p> <p>\u800c\u81f3\u4e8e\u5982\u4f55\u62ce\u51fa\u6765\u2014\u2014\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u6846\u4e2d\uff0c\u67d0\u4e00\u4e2a\u5b57\u9762\u91cf\u7684\u503c\u65e2\u53ef\u4ee5\u662f <code>0</code>\uff0c\u53c8\u53ef\u4ee5\u662f <code>1</code> \u65f6\uff08\u8fd9\u91cc\u6307\u7684\u662f\u8f93\u5165\u7684\u503c\uff0c\u5e76\u975e\u8f93\u51fa\u7ed3\u679c\uff09\uff0c\u5728\u8fd9\u4e2a\u4f18\u5316\u9879\u7684\u7ed3\u679c\u4e2d\u5c31\u53ef\u4ee5\u4e0d\u7528\u5199\u51fa\u8fd9\u4e2a\u5b57\u9762\u91cf\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u9762\u91cf\\(X\\) \u7684\u503c\u90fd\u662f <code>0</code>\uff0c\u5219\u7ed3\u679c\u4e2d\u4f1a\u5305\u542b \\(\\overline{X}\\)\uff0c\u5982\u679c\u90fd\u662f <code>1</code>\uff0c\u5219\u7ed3\u679c\u4e2d\u4f1a\u5305\u542b \\(X\\)\u3002</p> \u9898\u9762\u7b54\u6848 <p>\u5229\u7528\u5361\u8bfa\u56fe\u4f18\u5316\\(F(X,Y,Z) = \\sum m(0,1,2,4,6,7)\\) \u7684\u7ed3\u679c\u3002</p> <p>\u753b\u51fa\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5bf9\u5e94\u7684\u5361\u8bfa\u56fe\uff1a</p> <p></p> <p>\u7136\u540e\u5212\u51fa\u5176\u4e2d\u7684\u6781\u5927\u6700\u5c0f\u9879\u4f18\u5316\u9879\uff1a</p> <p></p> <p>\u5199\u51fa\u6765\u662f\uff1a</p> <ul> <li>\u7eff\uff1a\\(x=0,\\;y=0,\\;z=0/1\\)<ul> <li>\u6240\u4ee5\u662f\uff1a\\(\\overline{X}\\,\\overline{Y}\\)\uff1b</li> </ul> </li> <li>\u84dd\uff1a\\(x=0/1,\\;y=0/1,\\;z=0\\)<ul> <li>\u6240\u4ee5\u662f\uff1a\\(\\overline{Z}\\)\uff1b</li> </ul> </li> <li>\u7ea2\uff1a\\(x=1,\\;y=1,\\;z=0/1\\)<ul> <li>\u6240\u4ee5\u662f\uff1a\\(XY\\)</li> </ul> </li> </ul> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u4f18\u5316\u7ed3\u679c\u662f \\(F = \\overline{X}\\,\\overline{Y} + \\overline{Z} + XY\\)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_23","title":"\u4e0d\u5b9a\u9879","text":"<p>\u63a8\u8350\u9605\u8bfb</p> <p>https://www.geeksforgeeks.org/dont-care-x-conditions-in-k-maps/</p> <p>\u4e0d\u5b9a\u9879(Don't Cares) \u6307\u7684\u662f\u9700\u8981\u5316\u7b80\u7684\u903b\u8f91\u51fd\u6570\u4e2d\uff0c\u6ca1\u6709\u7ed9\u51fa\u5b9a\u4e49\u7684\u51e0\u9879\uff0c\u5b83\u4eec\u53ef\u80fd\u662f\uff1a</p> <ul> <li>\u8f93\u5165\u7ec4\u5408\u4e0d\u4f1a\u51fa\u73b0\uff1b</li> <li>\u8f93\u5165\u7ec4\u5408\u7684\u8f93\u51fa\u4e0d\u88ab\u4f7f\u7528\uff1b</li> </ul> <p>\u5bf9\u4e8e\u8fd9\u79cd\u9879\uff0c\u5728\u5361\u8bfa\u56fe\u4e2d\u7528 X \u6765\u8868\u793a\uff0c\u5728\u6700\u5c0f\u9879\u4e4b\u548c\u4e2d\u7528 \\(\\sum d(...)\\) \u8868\u793a\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\u5b83\u4eec\u7684\u8f93\u51fa\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u9879\u6765\u65b9\u4fbf\u6211\u4eec\u7684\u4f18\u5316\u2014\u2014\u5f53\u6211\u4eec\u753b\u51fa\u6765\u7684\u6781\u5927\u77e9\u9635\u8d8a\u5927\uff0c\u6210\u672c\u5c31\u8d8a\u4f4e\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 BCD \u7801\u8868\u793a\u7684\u6570\u5b57\u5927\u4e8e\u7b49\u4e8e 5 \u65f6\u8fd4\u56de <code>1</code>\uff0c\u5219\u5b83\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u5f62\u5f0f\u6765\u4f18\u5316\uff1a</p> <p></p> <p>\u6839\u636e\u7ed3\u679c\uff0c\u5199\u51fa\u4f18\u5316\u540e\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a\\(F(W,X,Y,Z) = W + XY + XZ\\)\u3002</p> <p>\u503c\u5f97\u601d\u8003\u7684\u4f8b\u9898\u2014\u2014\u7531\u5361\u8bfa\u56fe\u5f97\u5230\u4e58\u79ef\u7ed3\u679c</p> <p>\u5c3d\u7ba1\u6211\u4eec\u4e0d\u505c\u5f3a\u8c03 \u4e0e \u548c \u6216 \u662f\u5bf9\u79f0\u7684\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u5f88\u591a\u64cd\u4f5c\u662f\u9274\u4e8e\u6211\u4eec\u5bf9 <code>1</code> \u7684\u504f\u7231\u624d\u4f1a\u987a\u624b\u7684\uff08\u4f60\u4f1a\u53d1\u73b0\uff0c\u628a\u4e58\u9664\u6362\u6210\u6211\u4eec\u5b8c\u5168\u4e0d\u719f\u6089\u7684\u7b26\u53f7\uff0c\u4f60\u751a\u81f3\u53ef\u80fd\u65e0\u4ece\u4e0b\u624b\uff09\u3002</p> <p>\u6240\u4ee5\uff0c\u5728\u5361\u8bfa\u56fe\u7684\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u8981\u5229\u7528\u5361\u8bfa\u56fe\u5f97\u5230 \\(F\\) \u4f18\u5316\u540e\u7684\u4e58\u79ef\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 \\(\\overline{F}\\) \u4f18\u5316\u540e\u7684\u548c\u5f62\u5f0f\uff0c\u7136\u540e\u518d\u5bf9\u5176\u53d6\u53cd\u8fc7\uff0c\u5229\u7528\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b\u6765\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u53cd\u8f6c K-map \u4e2d\u6240\u6709\u7684 <code>0</code> \u548c <code>1</code>\uff0c\u7136\u540e\u7740\u773c\u4e8e SOM \u8fdb\u884c\u4f18\u5316\uff0c\u6700\u540e\u518d\u5bf9\u7ed3\u679c\u53d6\u53cd\uff0c\u7528\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b\u6765\u5f97\u5230\u7ed3\u679c\u3002</p> eg <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_24","title":"\u8574\u542b\u9879\u3001\u4e3b\u8574\u542b\u9879\u4e0e\u57fa\u672c\u4e3b\u8574\u542b\u9879","text":"<p>\u8574\u542b\u9879(implicant) \u5206\u4e3a \u4e3b\u8574\u542b\u9879(prime implicant) \u548c \u8d28\u4e3b\u8574\u542b\u9879(essential prime implicant) \uff08\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u7ef4\u5757\uff09\u3002 </p> <ul> <li>\u5728\u5361\u8bfa\u56fe\u4e2d\uff0c\u4e00\u4e2a\u8574\u542b\u9879\u5c31\u662f\u4efb\u610f\u4e00\u4e2a\u5305\u542b \\(2^n\\) \u4e2a <code>1</code> \u7684\u5355\u5143\uff1b</li> <li>\u800c\u4e3b\u8574\u542b\u9879\u5219\u662f\u5728\u5361\u8bfa\u56fe\u4e2d\u7684 \u6781\u5927 \u8574\u542b\u9879\uff08\u4e0d\u53ef\u80fd\u88ab\u66f4\u5927\u7684\u77e9\u5f62\u5708\u5305\u542b\uff09\uff1b<ul> <li>\u5bf9\u4e8e\u5b58\u5728 Dont'cares \u7684 K-map\uff0c\u5982\u679c\u6211\u4eec\u5173\u6ce8\u7684\u662f <code>1</code>\uff0c\u90a3\u6211\u4eec\u79ef\u6781\u5730\u5c06\u4ed6\u4eec\u5f53\u4f5c <code>1</code> \u6765\u5904\u7406\uff0c\u53cd\u4e4b\u4ea6\u7136\uff1b</li> <li>\u6ce8\u610f\uff1a \u5355\u72ec\u7684 <code>X</code> \u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e3b\u8574\u542b\u9879\uff1b</li> </ul> </li> <li>\u8d28\u4e3b\u8574\u542b\u9879\u662f\u5305\u542b \u53ea\u88ab\u5b83(\u8d28\u4e3b\u8574\u542b\u9879)\u8986\u76d6\u7684 <code>1</code> \u7684\u4e3b\u8574\u542b\u9879\uff1b\uff08\u8fd9\u4e2a\u7a0d\u5fae\u54c1\u8bfb\u4e0b\u5373\u53ef\uff09</li> </ul> <p>\u563f\u563f\uff0c\u662f\u4e0d\u662f\u770b\u5b8c\u8fd8\u662f\u770b\u4e0d\u61c2\uff08doge\uff09\uff0c\u6211\u4e5f\u662f\uff0c\u6240\u4ee5\u4e0d\u5982\u76f4\u63a5\u770b\u4e2ab\u7ad9\u89c6\u9891</p> <p>\u4f8b\u5982</p> <p></p> <p>\u5982\u56fe\uff0c\u5de6\u4fa7\u7684\u4e24\u4e2a\u4e3b\u8574\u542b\u9879\u56e0\u4e3a\u5305\u62ec\u4e86 \u24f5 \u548c \u24f6 \u8fd9\u4e24\u4e2a\u552f\u4e00\u7684 <code>1</code>\uff0c\u6240\u4ee5\u662f\u57fa\u672c\u4e3b\u8574\u542b\u9879\uff1b</p> <p>\u800c\u53f3\u4fa7\u7684\u8574\u542b\u9879\u5219\u662f\u4e00\u4e2a\u5197\u4f59\u7684\u8574\u542b\u9879\uff1b</p> <p>Warning\uff1a \u5bf9\u4e8e\u4efb\u610f\u51fd\u6570\uff0c\u4e3b\u8574\u542b\u9879\u4e00\u5b9a\u5b58\u5728\uff0c\u4f46\u662f\u8d28\u4e3b\u8574\u542b\u9879\u4e0d\u4e00\u5b9a\u5b58\u5728\u3002</p> <p>\ud83e\udd14</p> <p>\u6b63\u56e0\u4e3a\u6709\u8d28\u4e3b\u8574\u542b\u9879\u7684\u5b58\u5728\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u51fd\u6570\uff0c\u4f18\u5316\u7684\u591a\u89e3\u7ed3\u679c\u603b\u6709\u4e00\u90e8\u5206\u662f\u4e0d\u53d8\u7684\uff08\u53ea\u4e0d\u8fc7\u6ca1\u6709\u8d28\u4e3b\u8574\u542b\u9879\u7684\u65f6\u5019\u8fd9\u90e8\u5206\u4e3a\u96f6\uff09\u3002</p> <p>\u9ea6\u514b\u62c9\u594e\u56e0\u7b97\u6cd5</p> <p>\u6709\u5f85\u7814\u7a76\uff01 \u94fe\u63a5\uff1ahttps://zh.wikipedia.org/wiki/%E5%A5%8E%E5%9B%A0-%E9%BA%A6%E5%85%8B%E6%8B%89%E6%96%AF%E5%9F%BA%E7%AE%97%E6%B3%95</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_25","title":"\u7ecf\u5178\u7ec4\u5408\u7535\u8def","text":"<p>\u5f15\u5165</p> <p>\u5728\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u73b0\u6210\u7684\u7ec4\u5408\u7535\u8def\u80fd\u591f\u4f7f\u7528\uff0c\u6765\u65b9\u4fbf\u6211\u4eec\u8bbe\u8ba1\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_26","title":"\u4e09\u6001\u95e8","text":"<p>\u4e09\u6001\u7f13\u51b2\u5668(3-State Buffer)</p> <p>\u9664\u4e86\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a \u4f7f\u80fd\u7aef(enable) \u6765\u63a7\u5236\u8f93\u51fa\u3002</p> <p>\u6240\u8c13\u7684\u4e09\u6001\u6307\u7684\u662f\uff1a</p> <ul> <li>\u5f53\u4f7f\u80fd\u7aef\u4e3a <code>1</code>\uff0c\u4e14\u8f93\u5165\u4e3a <code>1</code> \u65f6\uff0c\u8f93\u51fa\u4e3a <code>1</code>\uff1b</li> <li>\u5f53\u4f7f\u80fd\u7aef\u4e3a <code>1</code>\uff0c\u4e14\u8f93\u5165\u4e3a <code>0</code> \u65f6\uff0c\u8f93\u51fa\u4e3a <code>0</code>\uff1b</li> <li>\u5f53\u4f7f\u80fd\u7aef\u4e3a <code>0</code>\uff0c\u8f93\u51fa\u4e3a <code>Hi-Z</code>/<code>Z</code>/<code>z</code>(\u6d6e\u52a8\uff0c\u9ad8\u963b\u6001)\uff1b</li> </ul> <p></p> <p>\u4f5c\u7528</p> <p>\u6211\u4eec\u53ef\u4ee5\u7528\u4e09\u6001\u95e8\u6765\u89e3\u51b3\u591a\u8def\u8f93\u51fa\u4e92\u8054\u7684\u95ee\u9898\u3002\u6b63\u5982\u5728 ICS \u7b14\u8bb0\u4e2d\u63d0\u5230\u7684\uff0c\u53ef\u4ee5\u8ba9\u591a\u4e2a\u8f93\u5165\u5728\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u88ab\u8f93\u51fa\u5230\u603b\u7ebf\u4e2d\u2014\u2014\u5b9e\u73b0\u7684\u624b\u6bb5\u5c31\u662f\u901a\u8fc7\u7535\u8def\u6765\u4f7f\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4f7f\u80fd\u7aef\u4e3a <code>1</code>\u3002</p> <p>\u5728\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u4e2d\uff0c\u4e09\u6001\u95e8\u5b9e\u73b0\u603b\u7ebf\u7684\u76f8\u5173\u77e5\u8bc6\u5c06\u5728 \u7b2c\u516d\u7ae0 \u63d0\u5230\u3002</p> <p>\u788e\u788e\u5ff5</p> <p>\u6240\u4ee5\u4ec0\u4e48\u662f\u300c\u9ad8\u963b\u6001\u300d\uff1f\u5b83\u8981\u5982\u4f55\u7406\u89e3\uff1f\u4ee5\u4e0b\u662f\u6211\u6839\u636e\u5b83\u7684\u5e94\u7528\u53cd\u63a8\u5f97\u5230\u7684\u7ed3\u8bba\uff1a</p> <p>\u9ad8\u963b\u6001\u540c\u5b83\u5b57\u9762\u610f\u601d\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f53\u5b83\u6b64\u65f6\u662f\u65ad\u8def\uff0c\u800c\u9ad8\u963b\u6001\u91cd\u70b9\u8981\u4e0e\u4f4e\u7535\u5e73\u505a\u533a\u5206\uff1a\u5982\u679c\u73b0\u5728\u5b58\u5728\u4e00\u4e2a\u201c\u5bfc\u7ebf\u201d\uff0c\u5b83\u6709\u4e09\u4e2a\u7aef\uff0c\u5176\u4e2d\u6211\u4eec\u4eba\u4e3a\u5730\u8ba4\u4e3a\u5176\u4e2d\u4e24\u4e2a\u662f\u8f93\u5165\uff0c\u5206\u522b\u547d\u540d\u4e3a a \u548c b\uff0c\u53e6\u5916\u4e00\u4e2a\u8ba4\u4e3a\u662f\u8f93\u51fa\uff0c\u547d\u540d\u4e3a c\u3002</p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u662f\u4e0d\u5141\u8bb8 a \u548c b \u4e00\u4e2a\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e00\u4e2a\u4e3a\u4f4e\u7535\u5e73\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u4eba\u4e3a\u5b9a\u4e49\u7684\u8f93\u5165\u8f93\u51fa\u5e76\u4e0d\u5f71\u54cd\u7535\u6d41\u7684\u6d41\u52a8\u65b9\u5411\uff0c\u6240\u4ee5\u5f53 a \u4e3a <code>1</code>\uff0cb \u4e3a <code>0</code> \u65f6\uff0c\u7535\u6d41\u5f88\u53ef\u80fd\u4f1a\u53d8\u6210\u4ece a \u6d41\u5411 b\uff0c\u7535\u6e90\u53ef\u80fd\u76f4\u63a5\u63a5\u5730\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u7684\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6216\u95e8\u6765\u5b9e\u73b0\u8fd9\u4e2a\u903b\u8f91\u884c\u4e3a\uff08\u6362\u8a00\u4e4b\uff0c\u8fd9\u79cd\u201c\u4e09\u7aef\u201d\u7535\u8def\u662f\u76f8\u5f53\u5371\u9669\u7684\uff0c\u4e0d\u8fc7\u5f53\u6211\u4eec\u4eba\u4e3a\u5b9a\u4e49\u591a\u4e2a\u8f93\u51fa\u65f6\uff0c\u4e00\u822c\u4f5c\u4e3a\u63a5\u6536\u7aef\u7684\u7535\u8def\u90fd\u6709\u4e8c\u6781\u7ba1\u9632\u6b62\u9006\u6d41\uff0c\u6240\u4ee5\u5355\u8f93\u5165\u591a\u8f93\u51fa\u662f\u5f88\u5e38\u89c1\u7684\uff09\u3002</p> <p>\u4ece\u66f4\u62bd\u8c61\u5730\u89d2\u5ea6\u6765\u7406\u89e3\uff0c\u4e00\u6839\u5bfc\u7ebf\u6700\u591a\u627f\u8f7d\u4e00\u4efd\u4fe1\u606f\uff0c\u7136\u800c\u6709\u4e24\u4e2a\u8f93\u5165\u4ecb\u5165\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u6709 <code>0</code>/<code>1</code> \u4e24\u6001\uff0c\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u6211\u4eec\u90fd\u540c\u65f6\u62ff\u5230\u4e86\u6765\u81ea\u4e24\u4e2a\u8f93\u5165\u7684\u6570\u636e\uff0c\u800c\u5bf9\u4e8e\u53ea\u80fd\u627f\u8f7d\u4e00\u4efd\u4fe1\u606f\u7684\u5bfc\u7ebf\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u606f\u51b2\u7a81\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981 <code>MUX</code> \u6765\u9009\u62e9\u6211\u4eec\u9700\u8981\u7684\u5230\u5e95\u662f\u54ea\u4e2a\u4fe1\u606f\uff0c\u7136\u540e\u518d\u7ed9\u5bfc\u7ebf\u3002</p> <p>\u800c\u4e09\u6001\u95e8\uff0c\u5728\u9ad8\u4f4e\u7535\u5e73\u5916\u5f15\u5165\u4e86\u300c\u9ad8\u963b\u6001\u300d\uff0c\u5c31\u975e\u5e38\u5de7\u5999\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u300c\u591a\u8f93\u5165\u300d\u5371\u9669\u7684\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4e2a\u6570\u636e\u88ab\u8f93\u5165\u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u65ad\u5f00\uff0c\u7c7b\u4f3c\u4e8e\u76f4\u63a5\u628a\u5f00\u5173\u65ad\u5f00\uff0c\u53ea\u8981\u6211\u4eec\u8ba9\u5bfc\u7ebf\u7684\u82e5\u5e72\u8f93\u5165\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e09\u6001\u95e8\u4e0d\u5728\u300c\u9ad8\u963b\u6001\u300d\uff0c\u5c31\u80fd\u591f\u4f18\u96c5\u5730\u5b9e\u73b0\u591a\u8def\u8f93\u51fa\u4e92\u8054\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_27","title":"\u590d\u6742\u95e8","text":"<p>\u901a\u8fc7\u4e00\u4e9b\u57fa\u672c\u95e8\u7ec4\u5408\u51fa\u6765\u7684\u95e8\uff0c\u5b83\u4eec\u7684\u8868\u793a\u65b9\u6cd5\u5927\u81f4\u5982\u4e0b\uff1a</p> <p> </p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#universal_gate","title":"Universal Gate","text":"<p>\u6211\u4eec\u4e0d\u5f97\u4e0d\u63d0 \\(NAND\\) \u95e8\u662f\u81ea\u7136\u642d\u5efa\u901f\u5ea6\u6700\u5feb\u7684\u95e8\u3002</p> <p>\u5e38\u89c1\u7684\u95e8\u7684\u5b9e\u9645\u5b9e\u73b0\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/","title":"Chap 3 Combinational Logic Design","text":"<p>\u5f15\u8a00</p> <p>\u6309\u7167\u529f\u80fd\uff0c\u903b\u8f91\u7535\u8def\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>\u7ec4\u5408\u7535\u8def(Combinational Circuit)<ul> <li>\u62e5\u6709 m \u4e2a\u8f93\u5165\u548c n \u4e2a\u8f93\u51fa\uff0c\u5176\u4e2d\u5305\u542b\u4e86 \\(2^m\\) \u79cd\u8f93\u5165\u7ec4\u5408\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684 n \u4e2a\u4e0d\u540c\u7684\u51fd\u6570\uff1b</li> <li>\u6700\u5173\u952e\u7684\u662f\uff0c\u5b83\u7684 \u8f93\u51fa\u53ea\u4f9d\u8d56\u4e8e\u8fd9 m \u4e2a\u8f93\u5165\u7684\u7ec4\u5408\uff08\u4e0d\u5305\u542b\u56de\u8def\uff09\uff1b</li> </ul> </li> <li>\u65f6\u5e8f\u7535\u8def(Sequential Logic Cirtuit)<ul> <li>\u4e0e\u4e4b\u5bf9\u5e94\u7684\uff0c\u65f6\u5e8f\u7535\u8def\u5177\u6709\u8bb0\u5fc6\u529f\u80fd\uff0c\u5373\u5b83\u7684\u8f93\u51fa\u53ef\u80fd\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u7ed3\u679c\uff1b</li> </ul> </li> </ul> <p>\u672c\u7ae0\u7740\u773c\u4e8e\u7ec4\u5408\u7535\u8def\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u65f6\u5e8f\u7535\u8def\u7684\u76f8\u5173\u5185\u5bb9\u5c06\u5728 \u4e0b\u4e00\u7ae0 \u4ecb\u7ecd\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_1","title":"\u7ec4\u5408\u7535\u8def\u8bbe\u8ba1","text":"<p>\u8868\u793a\u903b\u8f91\u7684\u65b9\u6cd5</p> <ol> <li>\u771f\u503c\u8868(Truth Table)\uff1b</li> <li>\u5e03\u5c14\u51fd\u6570(Boolean Function)\uff1b</li> <li>\u5361\u8bfa\u56fe(Karnaugh Maps)\uff1b</li> <li>\u65f6\u5e8f\u56fe(Timing Diagram)\uff1b</li> <li>\u903b\u8f91\u7535\u8def\u56fe(Logic Circuit)\uff1b</li> </ol> <p>\u5176\u4e2d\uff0c\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5\u5728\u529f\u80fd\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u8868\u793a\u662f\u552f\u4e00\u7684\u3002</p> <p>\u800c\u6211\u4eec\u7684\u8bbe\u8ba1\uff0c\u5c31\u662f\u5728\u6ee1\u8db3\u529f\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4f18\u5316\u548c\u627e\u5230\u6700\u597d\u7684\u8bbe\u8ba1\u3002</p> <p>\u800c\u4e3b\u8981\u7684\u8bbe\u8ba1\u8fc7\u7a0b(Specification)\u5982\u4e0b\uff1a</p> <ol> <li>\u786e\u5b9a\u7cfb\u7edf\u7684\u884c\u4e3a\uff1b</li> <li>\u9610\u8ff0\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u5e76\u7528\u771f\u503c\u8868\u6216\u903b\u8f91\u8868\u8fbe\u5f0f(Formulation)\u8868\u8fbe\u51fa\u6765\uff1b</li> <li>\u4f18\u5316\u903b\u8f91\u8868\u8fbe\u4ee5\u51cf\u5c11\u6210\u672c(\u6bd4\u5982\u4f7f\u7528\u5361\u8bfa\u56fe)\uff1b</li> <li>\u5c06\u4f18\u5316\u540e\u7684\u903b\u8f91\u8bbe\u8ba1\u5de5\u827a\u6620\u5c04\u5230\u786c\u4ef6\u5b9e\u73b0\u4e0a(Technology Mapping);</li> <li>\u9a8c\u8bc1\u6b63\u786e\u6027\uff08\u5728\u4eff\u771f\u73af\u5883\u4e2d\uff09\uff1b</li> </ol> <p>graph LR;  A[\"\u5b9e\u9645\u95ee\u9898\"] ===&gt; B[\"\u771f\u503c\u8868\"]  B ==&gt;|\"\u5316\u7b80\"| C[\"\u6700\u7b80\u529f\u80fd\"] ===&gt;|\"\u5de5\u827a\u6620\u5c04\"| D[\"\u7f51\u8868\"]  B ==&gt;|\"\u53d8\u6362\"| E[\"\u5408\u9002\u7684\u8868\u8fbe\u5f0f\"] ===&gt;|\"\u5de5\u827a\u6620\u5c04\"| D  </p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_2","title":"\u5206\u5c42\u8bbe\u8ba1","text":"<p>\u5206\u5c42\u8bbe\u8ba1\u5373\u5c06\u590d\u6742\u95ee\u9898\u6a21\u5757\u5316\u5206\u89e3\u4e3a\u82e5\u5e72\u5c42\u6b21\uff0c\u7136\u540e\u9010\u4e2a\u62bd\u8c61\u89e3\u51b3\u3002</p> <p>\u5176\u8bbe\u8ba1\u65b9\u6cd5\u5206\u4e3a \u81ea\u9876\u5411\u4e0b(Top-Down) \u548c \u81ea\u5e95\u5411\u4e0a(Bottom-Up)\u3002</p> <p>\u524d\u8005\u4ece\u9700\u6c42\u5f00\u59cb\uff0c\u81ea\u9876\u5411\u4e0b\u5206\u89e3\u529f\u80fd\u8bbe\u8ba1\uff1b\u540e\u8005\u6839\u636e\u73b0\u6709\u7684\u5143\u4ef6\u53bb\u7ec4\u5408\u6210\u76ee\u6807\u529f\u80fd\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_3","title":"\u96c6\u6210\u7535\u8def","text":"<p>\u96c6\u6210\u7535\u8def(integrated circuits) \u53c8\u53eb \u82af\u7247(chip)\uff0c\u5206\u4e3a\u5982\u4e0b\u82e5\u5e72\u7b49\u7ea7\uff1a</p> <ul> <li>SSI(small-scale integrated) \u5185\u542b\u4e0d\u5230 10 \u4e2a gates\uff1b</li> <li>MSI(medium-scale integrated) \u5185\u542b 10 ~ 100 \u4e2a gates\uff1b</li> <li>LSI(large-scale integrated) \u5185\u542b \u6210\u767e\u4e0a\u5343 \u4e2a gates\uff1b</li> <li>VLSI(very large-scale integrated) \u5185\u542b \u6210\u5343\u4e0a\u4ebf \u4e2a gates\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_4","title":"\u6280\u672f\u53c2\u6570","text":"<p>\u95e8\u7684\u5b9e\u73b0\u4e3b\u8981\u901a\u8fc7\u8fd9\u4e9b\u53c2\u6570\u7279\u6027\u6765\u63cf\u8ff0\uff1a</p> Name Description Fan-in \u4e00\u4e2a\u95e8\u53ef\u7528\u7684\u8f93\u5165 Fan-out \u4e00\u4e2a\u6805\u6781\u8f93\u51fa\u9a71\u52a8\u7684\u6807\u51c6\u8d1f\u8f7d\u6570\u91cf Logic Levels \u88ab\u8ba4\u4e3a\u662f\u9ad8\u4f4e\u7535\u5e73\u7684\u8f93\u5165\u8f93\u51fa\u7535\u538b\u8303\u56f4 Noise Margin \u5bf9\u5916\u754c\u566a\u58f0\u7684\u5bb9\u5fcd\u80fd\u529b(\u5177\u4f53\u6765\u8bf4\u662f\u4e0d\u4f1a\u5bfc\u81f4\u884c\u4e3a\u5f02\u53d8\u7684\u6700\u5927\u566a\u58f0\u538b\u503c) Cost for a gate \u7ee7\u627f\u7535\u8def\u7684\u95e8\u6210\u672c Propagation Delay \u4fe1\u53f7\u6539\u53d8\u540e\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u6240\u9700\u7684\u53d8\u5316\u65f6\u95f4 Power Dissipation \u7535\u6e90\u8f93\u51fa\u80fd\u8017\u548c\u95e8\u7684\u80fd\u8017"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_5","title":"\u6247\u5165\u6247\u51fa","text":"<p>\u6247\u5165\u63cf\u8ff0\u4e86\u4e00\u4e2a\u95e8\u80fd\u591f\u63a5\u53d7\u7684\u6700\u591a\u8f93\u5165\u91cf\uff0c\u5982\u4e00\u4e2a\u56db\u8f93\u5165\u4e0e\u975e\u95e8\u7684\u6247\u5165\u5c31\u662f 4\uff1b\u800c\u6247\u51fa\u63cf\u8ff0\u7684\u5219\u662f\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa(\u6805\u6781\u8f93\u51fa)\u5728\u4e0d\u964d\u4f4e\u5de5\u4f5c\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u8d1f\u8f7d\u591a\u5c11\u95e8\uff0c\u4f8b\u5982\u4e00\u4e2a\u975e\u95e8\u7684\u8f93\u51fa\u80fd\u591f\u540c\u65f6\u8d1f\u8f7d 4 \u4e2a\u975e\u95e8\u5e76\u4e14\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5219\u5176\u6247\u51fa\u4e3a 4\uff0c\u5176\u4e5f\u80fd\u901a\u8fc7\u6807\u51c6\u8d1f\u8f7d\u6765\u5b9a\u4e49\u3002</p> <p>\u6807\u51c6\u8d1f\u8f7d</p> <p>\u6240\u8c13\u7684\u6807\u51c6\u8d1f\u8f7d\uff0c\u662f\u8861\u91cf\u201c\u8d1f\u8f7d\u201d\u7684\u4e00\u4e2a\u201c\u5355\u4f4d\u781d\u7801\u201d\u3002\u5176\u5927\u5c0f\u7b49\u4e8e\u4e00\u4e2a\u975e\u95e8(\u9006\u53d8\u5668)\u8d21\u732e\u7684\u8d1f\u8f7d\u538b\u529b\u3002</p> <p>\u90a3\u4e48\u8981\u5982\u4f55\u8bc4\u4f30\u8d1f\u8f7d\u5462\uff1f\u9996\u5148\u6211\u4eec\u5f15\u5165 \u8fc7\u6e21\u65f6\u95f4(transition time)\uff1a</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#transition_time","title":"\u8f6c\u6362\u65f6\u95f4 \uff08Transition Time\uff09","text":"<p>\u8f6c\u6362\u65f6\u95f4\u5206\u4e3a \\(\\mathrm{t_{LH}}\\)(rise time) \u548c \\(\\mathrm{t_{HL}}\\)(fall time) \u4e24\u4e2a\u90e8\u5206\u3002</p> <ul> <li>rise time \u7b49\u4e8e\u6805\u6781\u8f93\u51fa\u4ece \\(\\mathrm{V_{CC}}\\) \u7684 10% \u5347\u9ad8\u5230 90% \u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b</li> <li>fall time \u7b49\u4e8e\u6805\u6781\u8f93\u51fa\u4ece \\(\\mathrm{V_{CC}}\\) \u7684 90% \u964d\u4f4e\u5230 10% \u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b</li> </ul> <p>\u901a\u8fc7\u65f6\u5e8f\u56fe\u8868\u793a\u5c31\u662f\u8fd9\u6837\uff1a</p> <p></p> <p>\u968f\u7740\u8d1f\u8f7d\u589e\u52a0\uff0c\u8f6c\u6362\u65f6\u95f4\u4e5f\u4f1a\u589e\u52a0\uff08\u7ed9\u7535\u5bb9\u5145\u7535\u7684\u65f6\u95f4\u589e\u52a0\uff09\uff0c\u800c\u6247\u51fa\u5b9a\u4e49\u4e2d\u63d0\u5230\u7684\u201c\u6700\u5927\u8d1f\u8f7d\u201d\uff0c\u5c31\u662f\u6307\u5b83\u7684\u8f6c\u6362\u65f6\u95f4\u4e0d\u8d85\u8fc7\u5b83\u9884\u5b9a\u7684\u6700\u5927\u8f6c\u6362\u65f6\u95f4\u3002</p> <p></p> <p>\u4ece\u5de6\u5230\u53f3\u8868\u793a\u8d1f\u8f7d\u4e0d\u65ad\u589e\u52a0\u65f6\uff0crise time \u7684\u53d8\u5316\u8d8b\u52bf\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u7c7b\u4f3c\u7684\uff0c\u8d85\u51fa\u6247\u5165\u540e\uff0c\u95e8\u5bf9\u8f93\u5165\u7684\u53cd\u5e94\u5c31\u592a\u6162\u4e86\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#propagation_delay","title":"\u4f20\u64ad\u5ef6\u8fdf \uff08Propagation Delay\uff09","text":"<p>\u4f20\u64ad\u5ef6\u8fdf(propagation delay) \u8861\u91cf\u4e86\u95e8\u7684\u8f93\u5165\u53d8\u5316\u5bfc\u81f4\u8f93\u51fa\u53d8\u5316\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002\u7531\u4e8e\u4ece\u4f4e\u7535\u5e73\u8f6c\u5316\u5230\u9ad8\u7535\u5e73\u548c\u9ad8\u7535\u5e73\u8f6c\u5316\u5230\u4f4e\u7535\u5e73\u6240\u9700\u8981\u7684\u65f6\u95f4\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u4f20\u64ad\u5ef6\u8fdf\u540c\u6837\u6709\u4e24\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u4f7f\u7528 \\(\\mathrm{t_{PHL}}\\) \u548c \\(\\mathrm{t_{PLH}} \u6765\u8868\u793a\\)\u3002</p> <p>\u66f4\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u4f20\u64ad\u5ef6\u8fdf\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u8f93\u5165\u548c\u8f93\u51fa\u7684\u53d8\u5316\u4e2d\u70b9\uff08\u5373\u53d8\u5316\u5230 \\(\\frac{1}{2}V_{CC}\\) \u65f6\uff09\u7684\u65f6\u95f4\u5dee\uff0c\u901a\u8fc7\u65f6\u5e8f\u56fe\u8868\u793a\u5c31\u662f\u8fd9\u6837\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f15\u5165 \\(\\mathrm{ t_{pd} }\\) \u6765\u7edf\u4e00\u8868\u793a \\(\\mathrm{t_{PHL}}\\) \u548c \\(\\mathrm{t_{PLH}}\\)\u3002\u6570\u503c\u4e0a\uff0c\\(\\mathrm{ t_{pd} } = average(\\mathrm{t_{PHL}}, \\mathrm{t_{PLH}})\\) \u6216 \\(\\mathrm{ t_{pd} } = max(\\mathrm{t_{PHL}}, \\mathrm{t_{PLH}})\\)\u3002</p> <p>\u601d\u8003\u9898</p> \u9898\u9762\u7b54\u6848 <p>\u6839\u636e\u65f6\u5e8f\u56fe\uff0c\u5199\u51fa\u95e8\u7684\u4f20\u64ad\u5ef6\u8fdf\uff0c\u6b64\u5904 \\(\\mathrm{ t_{pd} } = average(\\mathrm{t_{PHL}}, \\mathrm{t_{PLH}})\\)\u3002</p> <p></p> <p></p> <p>Transition Time vs. Propagation Delay</p> <p>\u8f6c\u6362\u65f6\u95f4\u4e13\u6ce8\u4e8e\u8f93\u51fa\u7684\u53d8\u5316\uff0c\u800c\u4f20\u64ad\u5ef6\u8fdf\u5219\u5305\u542b\u4e86\u8f93\u5165\u7684\u53d8\u5316\u548c\u8f93\u51fa\u7684\u53d8\u5316\u6574\u4e2a\u8fc7\u7a0b\u3002</p> <p>\u4ece\u65f6\u5e8f\u56fe\u4e0a\u7684\u8868\u793a\u6765\u770b\uff0c\u8f6c\u6362\u65f6\u95f4\u53ea\u9700\u8981\u8f93\u51fa\u7684\u65f6\u5e8f\u56fe\u5373\u53ef\u8868\u793a\uff1b\u4f46\u4f20\u64ad\u5ef6\u8fdf\u5219\u662f\u901a\u8fc7\u6bd4\u8f83\u8f93\u5165\u548c\u8f93\u51fa\u7684\u504f\u5dee\u6765\u8868\u793a\u7684\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_6","title":"\u5ef6\u8fdf\u6a21\u578b","text":"<p>\u4e3a\u4e86\u7814\u7a76\u4e3a\u4ec0\u4e48\u4f1a\u5b58\u5728\u95e8\u5ef6\u8fdf\uff0c\u523b\u753b\u95e8\u7684 \u56fa\u6709\u95e8\u5ef6\u8fdf(inherent gate delay)\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u5efa\u6a21\uff0c\u5e38\u89c1\u7684 \u5ef6\u8fdf\u6a21\u578b(delay model) \u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a</p> <ul> <li>\u4f20\u8f93\u5ef6\u8fdf(transport delay): \u8ba4\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u5ef6\u8fdf\u662f\u4e00\u4e2a\u5b9a\u503c\u7684\uff1b</li> </ul> <p></p> <ul> <li>\u60ef\u6027\u5ef6\u8fdf(inertial delay): \u5f15\u5165\u4e86 \u62d2\u7edd\u65f6\u95f4(rejection time)\uff0c\u53ea\u6709\u5f53\u8f93\u5165\u8fbe\u5230\u4e00\u5b9a\u80fd\u91cf\u540e\uff0c\u624d\u4f1a\u51fa\u53d1\u6805\u6781\u8f93\u51fa\uff08\u5728\u8fd9\u79cd\u6a21\u578b\u4e0b\uff0c\u566a\u97f3\u7b49\u4f1a\u88ab\u8fc7\u6ee4\uff09\uff1b</li> </ul> <p></p> <p>\u5c06\u4e0d\u5b58\u5728\u5ef6\u8fdf\u7684\u6a21\u578b\u3001\u4f20\u8f93\u5ef6\u8fdf\u6a21\u578b\u548c\u60ef\u6027\u5ef6\u8fdf\u6a21\u578b\u505a\u6bd4\u8f83\u5730\u6765\u770b\uff0c\u5c31\u662f\u5982\u4e0b\u60c5\u51b5\uff1a</p> <p></p> Info <p>\u7531\u4e8e\u5b9e\u9645\u7535\u8def\u4e2d\u5b9e\u73b0\u5ef6\u8fdf\uff0c\u6570\u5b66\u4e0a\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e0e\u5b9e\u9645\u7535\u8def\u60c5\u51b5\u4f1a\u5b58\u5728\u4e0d\u540c\u2014\u2014\u5373\u5b58\u5728\u82e5\u5e72\u6570\u5b66\u4e0a\u65e0\u6cd5\u76f4\u63a5\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>\u6240\u4ee5\u7814\u7a76\u5ef6\u8fdf\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_7","title":"\u5ef6\u8fdf\u8ba1\u7b97","text":"<p>\u8ba1\u7b97\u4e00\u4e2a\u7535\u8def\u7684\u5ef6\u8fdf\u65f6\uff0c\u6709\u4e24\u65b9\u9762\u9700\u8981\u8003\u8651\uff0c\u4e00\u65b9\u9762\u662f\u7535\u8def\u81ea\u8eab\u6240\u5bfc\u81f4\u7684\u4e00\u4e2a\u56fa\u5b9a\u5ef6\u8fdf\uff0c\u53e6\u5916\u4e00\u65b9\u9762\u5219\u662f\u7531\u4e8e\u4e0d\u540c\u7684\u8d1f\u8f7d\u5bfc\u81f4\u7684\u989d\u5916\u5ef6\u8fdf\u3002</p> <p></p> <p>\u6ce8</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c0.07 \u4e3a\u56fa\u5b9a\u5ef6\u8fdf\uff0c0.021 \u4e3a\u4e00\u4e2a\u6807\u51c6\u8d1f\u8f7d\u5e26\u6765\u7684\u5ef6\u8fdf\u7cfb\u6570\uff0cSL(4.5 here) \u5219\u662f\u6807\u51c6\u5316\u7684\u8d1f\u8f7d\u91cf\u3002</p> <p>\u800c\u5177\u4f53\u7684\u8868\u8fbe\u5f0f\uff0c\u4f1a\u5728 Cell Library \u91cc\u5199\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_8","title":"\u5ef6\u8fdf\u5e26\u6765\u7684\u95ee\u9898","text":"<p>\u7531\u4e8e\u5b58\u5728\u5ef6\u8fdf\uff0c\u8bb8\u591a\u5728\u6570\u5b66\u610f\u4e49\u4e0a\u6ca1\u6709\u95ee\u9898\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u5728\u7535\u8def\u4e2d\u5c31\u5b58\u5728\u975e\u5e38\u5927\u7684\u95ee\u9898\u3002</p> <p>\u4f8b\u5982\uff0c\u4ece\u6570\u5b66\u89d2\u5ea6\u770b\uff0c\\(\\mathrm{Y=\\overline{A}A}\\) \u7684\u503c\u6052\u4e3a <code>0</code>\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u7531\u4e8e\u5ef6\u8fdf\uff0c\u5176\u4eff\u771f\u6ce2\u5f62\u4e2d\u4f1a\u51fa\u73b0\u8fd9\u6837\u4e00\u4e2a \u6bdb\u523a(glitch)\uff0c\u800c\u8fd9\u5728\u5de5\u7a0b\u610f\u4e49\u4e0a\u6709\u5f88\u5927\u7684\u95ee\u9898\u3002</p> <p></p> \u66f4\u590d\u6742\u7684 \ud83c\udf30 <p>\u8ba9\u6211\u4eec\u5206\u6790\u4e0b\u9762\u8fd9\u4e2a\u4e8c\u8def\u9009\u62e9\u5668\uff0c\u5176\u529f\u80fd\u662f\u901a\u8fc7 S \u63a7\u5236\u8f93\u51fa\u8868\u8fbe\u7684\u662f A \u8fd8\u662f B\uff0c\u5728\u4f20\u8f93\u5ef6\u8fdf\u6a21\u578b\u4e0b\uff0c\u5176\u6ce2\u5f62\u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0cY \u4e2d\u51fa\u73b0\u4e86\u610f\u6599\u4e4b\u5916\u7684\u6bdb\u523a\u3002</p> <p>\u800c\u8fd9\u4e2d\u6bdb\u523a\u53ef\u4ee5\u7528\u6dfb\u52a0\u5197\u4f59\u9879\u6765\u89e3\u51b3\uff1a</p> <p></p> <p>\u7531\u6b64\u53ef\u89c1\uff0c\u8868\u8fbe\u5f0f\u6700\u7b80\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u597d\u7684</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_9","title":"\u6b63\u903b\u8f91\u548c\u8d1f\u903b\u8f91","text":"<p>\u6b63\u903b\u8f91(positive logic) \u5c31\u662f <code>1</code> \u662f\u6709\u6548\u4fe1\u53f7\uff0c\u8d1f\u903b\u8f91(negative logic) \u5c31\u662f <code>0</code> \u662f\u6709\u6548\u4fe1\u53f7\u3002\u800c\u5728\u6b63\u903b\u8f91\u4e2d AND \u95e8\u7684\u4f5c\u7528\u5c31\u7b49\u6548\u4e8e\u8d1f\u903b\u8f91\u4e2d OR \u95e8\u7684\u4f5c\u7528\uff0c\u8fd9\u4e5f\u6b63\u662f\u524d\u51e0\u7ae0\u7684\u7b14\u8bb0\u4e2d\u63d0\u5230\u7684\u5bf9\u79f0\u3002</p> <p>\u800c\u6b63\u903b\u8f91\u7684\u7535\u8def\u7684\u7b26\u53f7\u4e00\u822c\u5c31\u662f\u6b63\u5e38\u7684\u903b\u8f91\u95e8\u7b26\u53f7\uff0c\u800c\u8d1f\u903b\u8f91\u7684\u903b\u8f91\u95e8\u7b26\u53f7\u5219\u53ef\u80fd\u6709\u5c0f\u4e09\u89d2\u6807\uff0c\u5373 \u6781\u6027\u6307\u793a\u5668(polarity indicator)\uff1a</p> <p></p> <p>\u5982\u56fe\uff0c\u5de6\u4fa7\u662f\u6b63\u903b\u8f91\u7535\u8def\u7684\u7b26\u53f7\uff0c\u53f3\u4fa7\u662f\u8d1f\u903b\u8f91\u7535\u8def\u7684\u7b26\u53f7\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_10","title":"\u5de5\u827a\u6620\u5c04","text":"<p>\u5de5\u827a\u6620\u5c04(technology mapping) \u662f\u6307\u5c06\u903b\u8f91\u56fe\u6216\u7f51\u8868\u8f6c\u5316\u4e3a\u53ef\u4ee5\u7528\u5de5\u827a\u5b9e\u73b0\u7684\u5fc3\u7684\u56fe\u6216\u7f51\u8868\u7684\u8fc7\u7a0b\u3002</p> <p>\u6709\u65f6\u6211\u4eec\u4f1a\u4f7f\u7528\u4e0e\u975e\u95e8\u548c\u975e\u95e8\u66ff\u6362\u4e0e\u95e8\u548c\u6216\u95e8(\u7535\u8def\u5c42\u9762\uff0c\u4e0e\u95e8\u5b9e\u9645\u4e0a\u5c31\u662f\u901a\u8fc7\u4e0e\u975e\u95e8\u5b9e\u73b0\u7684)\uff0c\u7136\u540e\u4f1a\u53d1\u73b0\u6709\u4e00\u4e9b\u8fde\u7eed\u5bf9\u975e\u95e8\u53ef\u4ee5\u76f8\u4e92\u62b5\u6d88\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u60c5\u51b5\uff1a</p> <p></p> <p>\u84dd\u7eff\u8272\u5757\u4e2d\u5373\u4e3a\u88ab\u66ff\u6362\u540e\u7684\u5185\u5bb9\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u51fa\u73b0\u4e86\u82e5\u5e72\u53ef\u4ee5\u62b5\u6d88\u7684\u975e\u95e8\u3002</p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6216\u975e\u95e8\u6765\u5b9e\u73b0\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u60c5\u51b5\uff1a</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_11","title":"\u9a8c\u8bc1\u6b63\u786e\u6027","text":"<ul> <li>\u753b\u771f\u503c\u8868\u9a8c\u8bc1\uff08\u5373\u5b9e\u9a8c\u65f6\u7684\u4eff\u771f\uff09\u6216\u8005\u5e03\u5c14\u4ee3\u6570\u5f0f</li> <li>\u529f\u80fd\u5206\u6790<ul> <li>\u5b9a\u4e49\u5bf9\u4efb\u2f00\u4fe1\u53f7\u7684\u4f5c\u2f64\u4ee5\u53ca\u6574\u4e2a\u7535\u8def\u7684\u4f5c\u2f64</li> <li>\u753b\u65f6\u5e8f\u56fe</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_12","title":"\u7ec4\u5408\u903b\u8f91","text":""},{"location":"ZJU_CS/DigitalDesign/Chap03/#_13","title":"\u57fa\u672c\u903b\u8f91\u51fd\u6570","text":"<ul> <li>\u5e38\u91cf\u51fd\u6570(Value-Fixing)\uff1a\\(F=0\\;\\;or\\;\\;F=1\\) | \u8f93\u51fa\u5b9a\u503c\uff1b</li> <li>\u4f20\u8f93\u51fd\u6570(Transferring)\uff1a\\(F=X\\) | \u76f4\u63a5\u8f93\u51fa\u8f93\u5165\u503c\uff1b</li> <li>\u9006\u53d8\u51fd\u6570(Inverting)\uff1a\\(F=\\overline{X}\\) | \u8f93\u51fa\u8f93\u5165\u7684\u76f8\u53cd\uff1b</li> <li>\u4f7f\u80fd\u51fd\u6570(Enabling)\uff1a\\(F=X\\cdot En \\;\\; or \\;\\; F = X + \\overline{En}\\) | \u901a\u8fc7\u4f7f\u80fd\u63a7\u5236\u8f93\u51fa\u662f\u5426\u53ef\u53d8\uff0c\u5206\u4e3a\u4e24\u79cd\uff0c\u6bd4\u5982\u4e0e\u7684\u5f62\u5f0f\u4e2d\uff0c\u53ea\u6709 \\(En\\) \u4e3a <code>1</code> \u65f6\uff0c\\(F\\) \u8868\u73b0\u4e3a \\(X\\) \u7684\u503c\uff1b\u53cd\u4e4b\u8f93\u51fa\u5fc5\u5b9a\u4e3a <code>0</code>\uff08\u6ce8\u610f\u533a\u5206\u5b83\u4e0e\u4e09\u6001\u95e8\u7684\u533a\u522b\uff0c\u9ad8\u963b\u6001or\u5b9a\u503c\uff09\uff1b</li> </ul> <p>\u77e5\u8bc6\u70b9</p> <ol> <li>\u2f00\u4e2a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u79f0\u4e3a\u529f\u80fd\u5757.</li> <li>SSI MSI LSI \u2f29\u4e2d\u2f24\u89c4\u6a21\u96c6\u6210\u7535\u8def</li> <li>VLSI \u8d85\u2f24\u89c4\u6a21\u96c6\u6210\u7535\u8def</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_14","title":"\u57fa\u672c\u529f\u80fd\u5757","text":"<p>\u8fd9\u91cc\u6211\u4eec\u66f4\u63a8\u8350\u901a\u8fc7\u74dc\u8c6a\u5b66\u957f\u7684\u5b9e\u9a8c\u6587\u6863\u6765\u5b66\u4e60\u3002</p> <ul> <li>\u8bd1\u7801\u5668(Decoder)</li> <li> <p>\u7f16\u7801\u5668(Encoder)</p> </li> <li> <p>\uff08\u4e09\u7aef\uff09\u591a\u8def\u590d\u7528\u5668(Multiplexer) <code>MUX</code>\uff08\u7c7b\u4f3c\u4e8e\u65cb\u8f6c\u5f00\u5173\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7535\u8def\u56fe\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u5b9e\u9a8c\u8bfe\uff09</p> </li> <li>\uff08\u4e09\u7aef\uff09\u4fe1\u53f7\u5206\u914d\u5668(Demultiplexer) <code>DEMUX</code></li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_15","title":"\u8bd1\u7801\u5668","text":"<p>\u7a77\u4e3e\u53ef\u80fd\u6027\uff0c\u7a20\u5bc6 -&gt; \u7a20\u5bc6/\u7a00\u758f</p> <p>\u4e3a\u4e86\u8282\u7701\u95e8\u8f93\u5165\u6210\u672c\uff0c\u6211\u4eec\u5e38\u5e38\u4f7f\u7528 \u5206\u7ea7 (\u4ea6\u6216\u662f\u9012\u5f52) \u7684\u601d\u60f3\u6765\u6784\u9020\u591a\u8f93\u5165\u591a\u8bd1\u7801\u5668\u3002</p> <p>eg:</p> <p></p> <p>\u7531\u4e8e\u5e95\u5c42\u7684\u7535\u8def\u80fd\u591f\u76f4\u63a5\u5b9e\u73b0\u7684\u8fd0\u7b97\u5341\u5206\u5c40\u9650\uff0c\u6240\u4ee5\u9700\u8981\u7528\u8bd1\u7801\u5668\u6765\u5b9e\u73b0\u4e00\u4e9b\u57fa\u7840\u8fd0\u7b97\uff0c\u4f8b\u5982\u52a0\u6cd5\u3002</p> <p>\u4e00\u4f4d\u52a0\u6cd5\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bd1\u7801\u5668\u548c\u6216\u95e8\u5b9e\u73b0\uff0c\u6838\u5fc3\u5c31\u662f\u679a\u4e3e\u8f93\u5165\u7684\u5404\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u7528\u6216\u95e8\u62fe\u53d6 sum \u548c carry \u7684\u6700\u5c0f\u9879\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_16","title":"\u7f16\u7801\u5668","text":"<p>\u7a20\u5bc6/\u7a00\u758f -&gt; \u7a20\u5bc6</p> <p>\u5982\u4e0a\u5b9a\u4e49\u7684\u7f16\u7801\u5668\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u5373\u4efb\u4f55\u65f6\u5019\u8f93\u5165\u53ea\u80fd\u6709\u4e00\u4e2a\u662f\u6d3b\u52a8\u7684\uff0c\u5373\u8f93\u5165\u662f one-hot \u7684\u3002</p> <p>\u4f18\u5148\u7f16\u7801\u5668</p> \u5b9a\u4e49\u4f8b\u5b50 \u4e2d\u65ad(interrupt)\u5224\u4f18\u5668 <p>\u4f18\u5148\u7f16\u7801\u5668\u80fd\u591f\u5b9e\u73b0\u4f18\u5148\u7ea7\u51fd\u6570\uff0c\u5b83\u4e0d\u8981\u6c42\u8f93\u5165\u662f one-hot \u7684\uff0c\u800c\u662f\u603b\u662f\u5173\u6ce8\u6709\u6548\u8f93\u5165\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e00\u4e2a\u3002\u5373\u6bd4\u5982\u5f53\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e00\u4f4d\u662f <code>1</code> \u65f6\uff0c\u5176\u5b83\u6240\u6709\u4f18\u5148\u7ea7\u4e0d\u5982\u5b83\u7684\u4f4d\u7f6e\u7684\u503c\u90fd\u662f\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u5185\u5bb9\u4e86\u3002</p> <p>\u4f18\u5148\u7f16\u7801\u5668\u7684\u4e00\u79cd\u5e94\u7528\u5c31\u662f\u4e2d\u65ad\u5224\u4f18\u5668\u3002</p> <p></p> <p>\u5176\u4e2d \\(V\\) \u8868\u793a\u8f93\u51fa\u662f\u5426\u6709\u6548\uff0c\u5728\u4e2d\u65ad\u5224\u4f18\u7cfb\u7edf\u4e2d\u5373\u8868\u793a\u662f\u5426\u6709\u4e2d\u65ad\u8bf7\u6c42\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_17","title":"\u591a\u8def\u590d\u7528\u5668","text":"<p>\u901a\u8fc7\u63a7\u5236\u7aef\u9009\u62e9\u8f93\u51fa\u7684\u662f\u82e5\u5e72\u8f93\u5165\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002</p> <p>\u901a\u8fc7\u4e09\u6001\u95e8\u6765\u5b9e\u73b0 <code>MUX</code> \u80fd\u591f\u964d\u4f4e\u95e8\u8f93\u5165\u4ee3\u4ef7\u3002</p> eg <p></p> <p>\u5b8c\u5168\u4f7f\u7528\u4e09\u6001\u95e8\u6765\u5b9e\u73b0\u56db\u8f93\u5165 <code>MUX</code>\uff0c\u95e8\u8f93\u5165\u5927\u5927\u51cf\u5c11\u3002</p> <p><code>MUX</code> \u8fd8\u53ef\u4ee5 \u5b9e\u73b0\u4efb\u610f\u7684\u903b\u8f91\u51fd\u6570\uff1a</p> <ul> <li>\u5c06\u63a7\u5236\u7aef\u5f53\u4f5c\u8f93\u5165\uff0c\u539f\u6765\u7684\u8f93\u5165\u5f53\u4f5c\u7ed3\u679c\uff1b</li> <li>\u5373\u53ef\u4ee5\u5c06\u4e00\u4e2a\u56db\u8f93\u5165 <code>MUX</code> \u5f53\u4f5c\u4e00\u4e2a\u4e8c\u8f93\u5165\u7684\u51fd\u6570\uff1b</li> </ul> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u539f\u6765\u7684\u63a7\u5236\u7aef\u5f53\u4f5c\u8f93\u5165\u7aef\uff0c\u5e76\u5728\u539f\u6765\u7684\u8f93\u5165\u7aef\u5199\u5165\u903b\u8f91\u51fd\u6570\u7684\u771f\u503c\u8868\uff0c\u4ee5\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u628a\u4e00\u90e8\u5206\u7684\u8f93\u5165\u5f53\u4f5c\u5e38\u91cf\u7aef\u6765\u7b80\u5316\u5143\u4ef6\uff08\u964d\u7ef4\uff09\uff1a</p> <p></p> <p>\u89c2\u5bdf\u5176\u6700\u5c0f\u9879\uff0c\u4f7f\u5176\u8f93\u51fa\u6240\u6709\u6700\u5c0f\u9879\u3002\u4f46\u662f\u5728\u964d\u7ef4\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u9700\u8981\u5168\u90fd\u662f C\uff0c\u5982\u679c\u5361\u8bfa\u56fe\u4e2d\u5b58\u5728\u53cc <code>1</code> \u6216\u8005\u53cc <code>0</code>\uff0c\u4e5f\u53ef\u4ee5\u4ecd\u7136\u4f7f\u7528\u5e38\u91cf\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_18","title":"\u4fe1\u53f7\u5206\u914d\u5668","text":"<p>\u7b80\u5199\u4e3a <code>DEMUX</code>\uff0c\u901a\u8fc7\u63a7\u5236\u7aef\u9009\u62e9\u8f93\u5165\u7ed9\u5230\u82e5\u5e72\u8f93\u51fa\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002</p> <p></p> <p>\u540e\u7eed \ud83d\udc49 \u53ef\u91cd\u7f16\u7a0b\u6280\u672f</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_19","title":"\u7b97\u672f\u903b\u8f91\u7535\u8def","text":"<p>\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u7684\u8ba1\u7b97\u4e3b\u8981\u5305\u62ec\u903b\u8f91\u8fd0\u7b97\u548c\u7b97\u672f\u8fd0\u7b97\uff0c\u524d\u8005\u7531\u4e8e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u57fa\u672c\u95e8\u5f88\u65b9\u4fbf\u5b9e\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u8fc7\u591a\u8003\u8651\uff1b\u5728\u6b64\u4e3b\u8981\u4ecb\u7ecd\u7b97\u6570\u8fd0\u7b97\u3002\u5728\u8ba1\u7b97\u673a\u786c\u4ef6\u4e2d\uff0c\u627f\u62c5\u8ba1\u7b97\u5de5\u4f5c\u7684\u4e3b\u8981\u90e8\u4ef6\u4e3a <code>ALU</code>(Arithmetic Logical Unit)\u3002</p> <p>\u5f15\u5165</p> <p>\u5728\u4e4b\u524d #\u8bd1\u7801\u5668 \u548c #\u591a\u8def\u590d\u7528\u5668 \u7684\u90e8\u5206\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e00\u4e9b\u5b9e\u73b0 1 bit \u52a0\u6cd5\u5668\u7684\u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u8be6\u7ec6\u770b\u770b\u52a0\u6cd5\u5668\u8fd9\u4e2a\u4e1c\u897f\u3002</p> <p>\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u52a0\u6cd5\u5668\u6700\u5e95\u5c42\u7684\u5355\u5143\uff0c\u5373\u5b9e\u73b0 1 bit \u8fd0\u7b97\u7684 \u534a\u52a0\u5668(half adder) \u548c \u5168\u52a0\u5668(full adder)\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u5c06\u4ed6\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5b9e\u73b0 n bits \u7684\u52a0\u6cd5\u5668\uff0c\u5176\u4e2d\u4e3b\u8981\u4ecb\u7ecd \u884c\u6ce2\u52a0\u6cd5\u5668(binary ripple carry adder)\u3002\u6b64\u5916\uff0c\u57fa\u4e8e\u4e00\u4e9b\u7f16\u7801\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5b83\u6539\u88c5\u6210\u52a0\u51cf\u6cd5\u5668\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_20","title":"\u534a\u52a0\u5668 &amp; \u5168\u52a0\u5668","text":"<p>\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\uff0c\u5176\u8f93\u51fa\u65e0\u7591\u6709\u5f53\u524d\u4f4d\u7684\u548c <code>S</code> \u548c\u8fdb\u4f4d <code>C</code>\uff0c\u800c\u8f93\u5165\u9664\u4e86\u4e24\u4e2a\u64cd\u4f5c\u6570 <code>X</code> \u548c <code>Y</code> \u4ee5\u5916\uff0c\u8fd8\u53ef\u80fd\u6709\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d <code>Z</code>(\u6216\u8005<code>C{n-1}</code>)\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u7b2c\u4e00\u4f4d\uff0c\u663e\u7136\u4e0d\u4f1a\u6709\u8fdb\u4f4d\uff0c\u6216\u8005\u8bf4 <code>Z=0</code>\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a <code>Z</code> \u53bb\u6389\uff0c\u5373\u8f93\u5165\u53ea\u6709 <code>X</code> \u548c <code>Y</code>\uff0c\u8fd9\u5c31\u662f \u534a\u52a0\u5668(half adder)\uff1b\u663e\u7136\uff0c\u5bf9\u5e94\u7684\uff0c\u5982\u679c\u8f93\u5165\u4e2d\u6709\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d <code>Z</code>\uff0c\u5219\u79f0\u4e3a \u5168\u52a0\u5668(full adder)\u3002</p> \u534a\u52a0\u5668\u5168\u52a0\u5668 \u903b\u8f91\u8868\u8fbe\u5f0f\u771f\u503c\u8868\u7535\u8def\u56fe \\[ S=\\overline{X}Y+X\\overline{Y}=X\\oplus Y \\\\ C = XY \\] <p> </p> <p> </p> \u903b\u8f91\u8868\u8fbe\u5f0f\u771f\u503c\u8868\u5361\u8bfa\u56fe\u903b\u8f91\u8868\u8fbe\u5f0f with XOR \\[ S=\\overline{X}\\,\\overline{Y}Z + \\overline{X}Y\\overline{Z} + X\\overline{Y}\\,\\overline{Z} + XYZ \\\\ C = XY + XZ + YZ \\] <p> </p> <p> </p> \\[ S = (X\\oplus Y)\\oplus Z \\\\ C = XY + Z(X\\oplus Y) \\]"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_21","title":"\u884c\u6ce2\u52a0\u6cd5\u5668","text":"<p>\u884c\u6ce2\u52a0\u6cd5\u5668\u662f\u6734\u7d20\u7684 n bits \u52a0\u6cd5\u5668\u5b9e\u73b0\u3002\u5176\u6838\u5fc3\u601d\u60f3\u4e5f\u5c31\u662f\u6a21\u62df\u6211\u4eec\u4f7f\u7528\u201c\u7ad6\u5f0f\u201d\u6765\u8ba1\u7b97\u52a0\u6cd5\uff0c\u4ece\u4f4e\u4f4d\u5f00\u59cb\u9010\u4f4d\u8ba1\u7b97\uff0c\u5e76\u5c06\u8fdb\u4f4d\u7ed9\u5230\u4e0b\u4e00\u4f4d\u4f5c\u4e3a\u8f93\u5165\u3002</p> <p>\u5b9e\u9645\u4e0a\u65e0\u8bba\u662f\u53ea\u7528\u534a\u52a0\u5668\u6216\u662f\u53ea\u7528\u5168\u52a0\u5668\uff0c\u90fd\u53ef\u4ee5\u5b9e\u73b0\u884c\u6ce2\u52a0\u6cd5\u5668\uff0c\u4f46\u662f\u6b8a\u9014\u540c\u5f52\uff0c\u65e0\u975e\u662f\u901a\u8fc7\u5916\u90e8\u5668\u4ef6\u6765\u8fdb\u884c\u4e92\u76f8\u8f6c\u5316\u800c\u5df2\u3002\u5982\u679c\u53ea\u4f7f\u7528\u5168\u52a0\u5668\u6765\u5b9e\u73b0\uff0c\u5219\u4ee5 4 bits \u884c\u6ce2\u52a0\u6cd5\u5668\u4e3a\u4f8b\uff0c\u5176\u5927\u81f4\u903b\u8f91\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0c\u5728\u52a0\u6cd5\u5668\u4e2d\uff0c\\(C_0\\) \u5fc5\u7136\u662f <code>0</code>\u3002</p> <p>\u52a0\u51cf\u6cd5\u5668\uff0c\u6216\u8005\u8bf4\u52a0\u6cd5\u5668\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5728 <code>ALU</code> \u4e2d\u662f\u6700\u5f71\u54cd\u6548\u7387\u7684\u90e8\u5206\uff0c\u800c\u4e14\u5982\u679c\u4f7f\u7528\u884c\u6ce2\u52a0\u6cd5\u5668\uff0c\u968f\u7740\u4f4d\u6570\u589e\u52a0\u6548\u7387\u4f1a\u8d8a\u6765\u8d8a\u6162\u3002</p> <p>\u6240\u4ee5\u4f1a\u6709\u7c7b\u4f3c\u4e8e\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4e4b\u7c7b\u7684\u4e1c\u897f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u66f4\u591a\u7684\u5185\u5bb9\u53ef\u4ee5\u770b xyx \u7684\u8ba1\u7ec4\u7b14\u8bb0\u3002\uff08\u6570\u903b\u4e2d\u6700\u591a\u4e86\u89e3\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u5373\u53ef\u3002\uff09</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_22","title":"\u4e8c\u8fdb\u5236\u51cf\u6cd5","text":"<p>\u9996\u5148\uff0c\u5728\u5f00\u59cb\u4e8c\u8fdb\u5236\u51cf\u6cd5\u7684\u4ecb\u7ecd\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u4e86\u89e3 \u8865\u7801(2's complement)\u3002</p> <p>\u7ed3\u5408\u8865\u7801\uff0c\u6211\u4eec\u518d\u6765\u89c2\u5bdf\u884c\u6ce2\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u51cf\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\uff0c\u5e76\u5bf9\u6574\u4e2a\u6570\u52a0\u4e00\uff0c\u518d\u76f4\u63a5\u5c06\u5b83\u4eec\u76f8\u52a0\u5373\u53ef\uff0c\u5373\u5c06\u51cf\u6cd5\u8f6c\u5316\u4e3a\u8865\u7801\u4e0b\u7684\u52a0\u6cd5\u3002</p> <p></p> <p>\u5176\u4e2d\u52a0\u4e00\u8fd9\u4e00\u6b65\u6070\u597d\u53ef\u4ee5\u901a\u8fc7\u5728\u52a0\u6cd5\u5668\u4e2d\u5fc5\u5b9a\u4e3a <code>0</code> \u7684 \\(C_0\\) \u6765\u5b9e\u73b0\uff0c\u7136\u540e\u6211\u4eec\u518d\u5728\u8f93\u5165\u4e2d\u6dfb\u52a0 <code>MUX</code>\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a0\u51cf\u6cd5\u5668\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_23","title":"\u6709\u7b26\u53f7\u6570\u7684\u8868\u793a\u4e0e\u8ba1\u7b97","text":"<ul> <li>\u6ce8\u610flab8\u4e2d\u51cf\u6cd5\u64cd\u4f5c\u6570\u4e0e\u8fdb\u4f4d\u540e\u6709\u4e2aXOR\u95e8\uff01</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap04/","title":"Chap 4 Sequential Circuits","text":"<p>4.6\u4e0d\u5728\u8bfe\u7a0b\u5927\u7eb2\u4e0a</p> <p>\u4e0a\u4e00\u7ae0\u8bb2\u7684\u662f\u7ec4\u5408\u7535\u8def\uff0c\u867d\u7136\u7ec4\u5408\u7535\u8def\u80fd\u591f\u5b9e\u73b0\u8bf8\u591a\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u4f9d\u7136\u5b58\u5728\u4e00\u4e9b\u7684\u95ee\u9898\uff1a</p> <ol> <li>\u5bf9\u4e8e\u590d\u6742\u7684\u903b\u8f91\uff0c\u62bd\u8c61\u5c42\u7ea7\u591a\uff0c\u5bfc\u81f4\u786c\u4ef6\u5c42\u9762\u5f00\u9500\u5927\u3001\u8017\u65f6\u957f\uff0c\u4e00\u65b9\u9762\u63d0\u9ad8\u6210\u672c\uff0c\u4e00\u65b9\u9762\u964d\u4f4e\u6548\u7387\uff1b</li> <li>\u7ec4\u5408\u7535\u8def\u6ca1\u6cd5\u5b9e\u73b0\u4fe1\u606f\u7684\u5b58\u50a8\uff0c\u6240\u6709\u7684\u529f\u80fd\u6a21\u5757\u5bf9\u4e8e\u7279\u5b9a\u7684\u8f93\u5165\u7ed9\u51fa\u76f8\u540c\u7684\u8f93\u51fa\uff1b</li> </ol> <p>\u800c\u65f6\u5e8f\u7535\u8def\u5219\u62e5\u6709\u5b58\u50a8\u4fe1\u606f\u7684\u80fd\u529b\uff0c\u5bf9\u4e8e\u65f6\u5e8f\u7535\u8def\u6765\u8bf4\uff0c\u8f93\u51fa\u9664\u4e86\u4e0e\u8f93\u5165\u6709\u5173\uff08\u751a\u81f3\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\uff09\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u81ea\u8eab \u72b6\u6001(state) \u6709\u5173\u3002</p> <p>\u65f6\u5e8f\u7535\u8def\u4e3b\u8981\u5206\u4e3a\u4e24\u7c7b\uff08\u4e3b\u8981\u5206\u7c7b\u4f9d\u636e\u662f\u8f93\u5165\u4fe1\u53f7\u7684\u65f6\u95f4\u548c\u5185\u90e8\u72b6\u6001\u6539\u53d8\u7684\u65f6\u95f4\uff09\uff1a\u540c\u6b65\u65f6\u5e8f\u7535\u8def(synchronous sequential circuit) \u548c \u5f02\u6b65\u65f6\u5e8f\u7535\u8def(asynchronous sequential circuit)\u3002</p> <p>\u5b9a\u4e49</p> <p>The behavior of a synchronous sequential circuit can be defined from the knowledge of its signals at discrete instants of time. The behavior of an asynchronous sequential circuit depends upon the inputs at any instant of time and the order in continuous time in which the inputs change.</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5f02\u6b65\u7535\u8def\u7684\u8bbe\u8ba1\u76f8\u5bf9\u56f0\u96be\uff08\u884c\u4e3a\u4e0e\u95e8\u7684\u4f20\u64ad\u5ef6\u8fdf\u548c\u8f93\u5165\u4fe1\u53f7\u53d8\u5316\u7684\u65f6\u95f4\u5e8f\u5217\u5bc6\u5207\u76f8\u5173\uff09\uff0c\u4f46\u4ecd\u7136\u5341\u5206\u5fc5\u8981\uff0c\u6bd4\u5982\u89e6\u53d1\u5668\u5c31\u662f\u4ee5\u4e00\u90e8\u9501\u5b58\u5668\u4e3a\u6a21\u5757\u8bbe\u8ba1\u7684\uff1b\u800c\u540c\u6b65\u7535\u8def\u7684\u4f7f\u7528\u66f4\u52a0\u5e7f\u6cdb\uff0c\u901a\u5e38\u8fd9\u4e9b\u201c\u79bb\u6563\u7684\u65f6\u523b\u201d\u90fd\u662f\u7531 \u65f6\u949f\u53d1\u751f\u5668(clock generator) \u8fd9\u79cd\u65f6\u5e8f\u5668\u4ef6\u4ea7\u751f\u5468\u671f\u6027\u7684 \u65f6\u949f\u8109\u51b2(clock pulse) \u5e8f\u5217\u6765\u5b9e\u73b0\u7684\uff08\u8fd9\u79cd\u7535\u8def\u4e00\u822c\u88ab\u79f0\u4e3a \u949f\u63a7\u65f6\u5e8f\u7535\u8def(clocked sequential circuit)\uff0c\u7531\u4e8e\u8bbe\u8ba1\u76f8\u5bf9\u5bb9\u6613\uff0c\u9c81\u68d2\u6027\u5f3a\uff0c\u6240\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\uff09\u3002</p> <p>\u7f13\u51b2</p> <p>\u7f13\u51b2\u5668(buffer) \u4e00\u822c\u901a\u8fc7\u4e24\u4e2a\u975e\u95e8\u4e32\u8054\uff0c\u5e76\u5c06\u8f93\u5165\u8fde\u901a\u8f93\u51fa\u5b9e\u73b0\uff0c\u8fd9\u6837\u80fd\u591f\u5b9e\u73b0\u4fe1\u606f\u7684\u5b58\u50a8\uff0c\u7136\u800c\u65e0\u6cd5\u4fee\u6539\u3002\u800c\u9501\u5b58\u5668\u5c31\u662f\u5728\u7f13\u51b2\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u975e\u95e8\u66ff\u6362\u4e3a\u6216\u975e\u95e8\u6216\u4e0e\u975e\u95e8\u5b9e\u73b0\u7684\u3002</p> <p></p> <p>\u5176\u4e2d\uff0c\u4ece\u7ed9\u5b9a\u8f93\u5165\u5230\u66f4\u65b0\u8f93\u51fa\u6709\u4e00\u4e2a \\(t_G\\) \u7684\u5ef6\u65f6\u3002</p> <p>\u5f15\u5165</p> <p>\u663e\u7136\uff0c\u6839\u636e\u4e0a\u9762\u7684\u6982\u8ff0\uff0c\u65f6\u5e8f\u7535\u8def\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u4fe1\u606f\u5b58\u50a8\u5143\u4ef6\u3002\u5f53\u8f93\u5165\u4fe1\u53f7\u4e0d\u53d1\u751f\u53d8\u5316\u65f6\uff08\u91cd\u70b9\u662f\u53d8\u5316\uff0c\u5373\u8f93\u5165\u548c\u5b58\u50a8\u4fe1\u606f\u672a\u5fc5\u5b58\u5728\u5bf9\u5e94\u5173\u7cfb\uff09\u5b58\u50a8\u5143\u4ef6\u5c31\u80fd\u591f\u4fdd\u6301\u5176\u5185\u90e8\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002</p> <p>\u5b58\u50a8\u5143\u4ef6\u4e3b\u8981\u7531 \u9501\u5b58\u5668(latch) \u548c \u89e6\u53d1\u5668(flip-flop) \u4e24\u79cd\uff0c\u5176\u4e2d\u524d\u8005\u662f\u540e\u8005\u7684\u57fa\u7840\uff0c\u540e\u8005\u7531\u524d\u8005\u6784\u6210\uff0c \u6216\u8005\u8bf4\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u4f7f\u7528\u540e\u8005\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#latch","title":"\u9501\u5b58\u5668(latch)","text":""},{"location":"ZJU_CS/DigitalDesign/Chap04/#sr_sr","title":"SR &amp; S'R' \u9501\u5b58\u5668","text":"<p>SR \u9501\u5b58\u5668\u548c S'R' \u9501\u5b58\u5668\u7684\u57fa\u672c\u539f\u7406\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u524d\u8005\u7528\u7684\u662f\u6216\u975e\u95e8\uff0c\u540e\u8005\u7528\u7684\u662f\u4e0e\u975e\u95e8\u3002</p> <p>SR \u9501\u5b58\u5668\u548c S'R' \u9501\u5b58\u5668\u7684\u8f93\u5165\u90fd\u662f S(Set) \u548c R(Reset) \u4e24\u4e2a\u90e8\u5206\uff0c\u8f93\u51fa\u90fd\u662f Q \u548c Q' \u4e24\u4e2a\u90e8\u5206\u3002</p> <p>\u540d\u79f0\u4e0a \u7684\u5171\u540c\u70b9\u662f\uff0c\u5f53 S \u4e3a <code>1</code> \u65f6\uff0cQ \u90fd\u4f1a\u662f <code>1</code>\uff1b\u5bf9\u4e8e R \u548c Q' \u4e5f\u662f\u8fd9\u6837\uff0c\u53ea\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0cS'R'\u9501\u5b58\u5668\u8f93\u5165\u7684\u5e76\u4e0d\u662f\u8fd9\u91cc\u6240\u8bf4\u7684 S\uff0c\u800c\u662f\u5c06 S' \u4f5c\u4e3a\u8f93\u5165\u3002</p> SR \u9501\u5b58\u5668S'R' \u9501\u5b58\u5668 <p> </p> <p> </p> <p>\u4e00\u4e2a\u8bb0\u5fc6\u65b9\u6cd5\u662f\uff0cSR \u7684\u95e8\u5143\u4ef6\u5bf9 <code>1</code> \u654f\u611f\uff0c\u6240\u4ee5\u662f \u6216\u975e\u95e8 \u7684\u5b9e\u73b0\uff1b\u800c S'R' \u7684\u95e8\u5143\u4ef6\u5bf9 <code>0</code> \u654f\u611f\uff0c\u6240\u4ee5\u662f \u4e0e\u975e\u95e8 \u7684\u5b9e\u73b0\u3002\u800c\u901a\u8fc7 \u300c\u5f53 S \u4e3a <code>1</code> \u65f6\uff0cQ \u90fd\u4f1a\u662f <code>1</code>\u300d\u53ef\u4ee5\u5f97\u5230 S\u3001R \u4e0e Q\u3001Q' \u7684\u4f4d\u7f6e\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u7684\u5b58\u50a8\u5143\u4ef6\u5e76\u4e0d\u662f\u5355\u7eaf\u7684 SR/S'R' Latches\uff0c\u6240\u4ee5\u5b83\u4eec\u5f53\u7136\u662f\u5b58\u5728\u95ee\u9898\u7684\u3002\u7531\u4e8e\u7535\u8def\u5b58\u5728\u5ef6\u65f6\uff0c\u6240\u4ee5 S \u548c R \u7684\u8f93\u5165\u5f88\u96be\u540c\u65f6\u5230\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u4e00\u4e2a\u63a7\u5236\u7aef\uff0c\u5f53\u786e\u4fdd\u4e24\u4e2a\u8f93\u5165\u90fd\u5230\u4f4d\u7684\u65f6\u5019\u518d\u4f7f\u80fd\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\uff0c\u5e26\u63a7\u5236\u8f93\u5165\u7684 SR \u9501\u5b58\u5668(SR Latch with Control Input)\uff08S'R'\u7565\uff09\uff1a</p> <p></p> <p>\u6ce8\u610f\uff01SR \u9501\u5b58\u5668\u901a\u8fc7 \u6216\u975e\u95e8 \u5b9e\u73b0\uff0c\u4f46\u5e26\u8f93\u5165\u63a7\u5236\u7684 SR \u9501\u5b58\u5668\u5219\u901a\u8fc7 \u4e0e\u975e\u95e8 \u5b9e\u73b0\uff01</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#d","title":"D \u9501\u5b58\u5668","text":"<p>D \u9501\u5b58\u5668\u5b9e\u9645\u4e0a\u662f\u5e26\u63a7\u5236\u8f93\u5165\u7684 SR \u9501\u5b58\u5668\u7684\u6539\u8fdb\u3002\u5176\u4e2d\u6211\u4eec\u5173\u6ce8\u5230\uff0c\u867d\u7136 S \u548c R \u8d77\u4f5c\u7528\u7684\u6709\u4e09\u79cd\u72b6\u6001</p> <p>\u6211\u4eec\u5173\u6ce8\u5230\uff0c\u5373\u4f7f\u662f\u5e26\u63a7\u5236\u8f93\u5165\u7684 SR \u9501\u5b58\u5668\uff0c\u4e5f\u5b58\u5728\u4e00\u4e2a\u300cundefined\u300d\u72b6\u6001\uff0c\u800c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u51fa\u73b0\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\uff0c\u80fd\u4e0d\u80fd\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u7531\u4e8e\u53ef\u4ee5\u901a\u8fc7 C \u6765\u63a7\u5236\u662f\u5426\u4fdd\u6301\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f3a\u5236\u8981\u6c42 \\(S = \\overline R\\)\uff0c\u4e8e\u662f\u5c31\u907f\u514d\u4e86 undefined \u60c5\u51b5\u7684\u51fa\u73b0\uff0c\u8fd9\u5c31\u662f D \u9501\u5b58\u5668\u3002</p> <p></p> <p>\u53ea\u6709\u5f53 C \u4e3a <code>1</code> \u65f6\uff0cD \u9501\u5b58\u5668\u624d\u80fd\u5199\u5165\u6570\u636e\uff1b\u800c\u5f53 C \u4e3a <code>0</code> \u65f6\uff0cD \u9501\u5b58\u5668\u7684\u6570\u636e\u5c31\u4e0d\u4f1a\u53d8\u5316\u3002</p> <p>\u900f\u660e\u7684\u5371\u5bb3\uff1a\u7a7a\u7ffb</p> <p>\u5f53\u7136\uff0cD \u9501\u5b58\u5668\u4e5f\u5b58\u5728\u95ee\u9898\u3002\u5982\u679c\u6211\u95e8\u5c06 \\(\\overline Q\\) \u63a5\u5230 \\(D\\) \u4e0a\uff0c\u5c31\u4f1a\u53d1\u73b0 D \u9501\u5b58\u5668\u5c06\u4e0d\u505c\u7684\u53d8\u5316\u5176\u4e2d\u7684\u6570\u636e\uff0c\u51fa\u73b0 \u7a7a\u7ffb\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a C \u7f6e <code>0</code> \u65f6 Q \u7684\u8f93\u51fa\u7a76\u7adf\u662f\u4ec0\u4e48\uff0c\u800c\u8fd9\u662f\u975e\u5e38\u5371\u9669\u7684\u3002</p> <p>\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a D \u9501\u5b58\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u662f\u76f4\u63a5\u66b4\u9732\u51fa\u6765\u3001\u540c\u65f6\u5141\u8bb8\u53d8\u5316\u7684\uff08\u4e0d\u662f\u540c\u65f6\u53d8\u5316\uff0c\u662f\u6307\u5728 Input \u53ef\u4ee5\u53d8\u7684\u65f6\u5019 Output \u4e5f\u80fd\u53d8\uff09\uff0c\u5373 \u900f\u660e(transparent) \u7684\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u91cc\uff0c\u540c\u65f6\u5b58\u5728 \u53ef\u4ee5\u4e92\u76f8\u5f71\u54cd \u7684\u4e24\u4e2a\u4e1c\u897f\u3002\u8fd9\u4e5f\u662f\u89e6\u53d1\u5668\u6240\u89e3\u51b3\u7684\u95ee\u9898\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#flip-flop","title":"\u89e6\u53d1\u5668\uff08flip-flop\uff09","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u63d0\u5230\u7684\uff0c\u7531\u300c\u900f\u660e\u300d\u5f15\u53d1\u7684\u95ee\u9898\uff0c\u800c\u91c7\u7528\u89e6\u53d1\u5668\u7684\u8bbe\u8ba1\u3002\u901a\u8fc7\u7ec4\u5408\u4e24\u4e2a\u9501\u5b58\u5668\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <ol> <li>\u5728\u6709\u8109\u51b2\uff08\u9ad8\u7535\u5e73\uff09\u65f6\uff0c\u4fee\u6539\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fdd\u6301\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff1b\u5728\u6ca1\u6709\u8109\u51b2\uff08\u4f4e\u7535\u5e73\uff09\u65f6\u5019\u4fdd\u6301\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fee\u6539\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u66f4\u65b0\u89e6\u53d1\u5668\u7684\u72b6\u6001\uff0c\u5373 \u4e3b\u4ece\u5f0f(master-slave)\u89e6\u53d1\u5668\uff1b</li> <li>\u4ec5\u5728\u65f6\u949f\u7684\u8fb9\u7f18\u89e6\u53d1\uff0c\u5373\u5728\u7279\u5b9a\u65f6\u523b\u4ec5\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\uff0c\u5373 \u8fb9\u6cbf\u89e6\u53d1\u5f0f(edge-triggered)\u89e6\u53d1\u5668\uff1b</li> </ol> <p>\u8fb9\u6cbf\u89e6\u53d1\u5f0f D \u89e6\u53d1\u5668\u662f\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u89e6\u53d1\u5668\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#sr","title":"SR \u4e3b\u4ece\u89e6\u53d1\u5668","text":"<p>\u867d\u7136\u5b83\u53eb FF\uff0c\u4f46\u5b83\u5e76\u4e0d\u7b26\u5408 FF \u7684\u7279\u5f81\uff0c\u7136\u800c\u5206\u7c7b\u4e0a\u53c8\u5c5e\u4e8e pulse-triggered FF\u3002</p> <p>SR \u89e6\u53d1\u5668\u77e5\u6240\u4ee5\u662f\u6240\u8c13\u7684 pulse-triggered \u7684\uff0c\u662f\u56e0\u4e3a\u5728 S \u548c R \u8f93\u5165\u90fd\u4e3a <code>0</code> \u65f6\uff0c\u5982\u679c\u51fa\u73b0\u566a\u97f3\uff0c\u5c31\u4f1a\u5bfc\u81f4 Slave \u5199\u5165\u5f02\u5e38\u6570\u636e\u3002</p> <p>\u4f46\u662f\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f SR \u81ea\u8eab\u6709\u4e24\u4e2a\u4fdd\u6301\u6001\u5bfc\u81f4\u7684\u5f0a\u7aef\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5c31\u4e0d\u5e94\u8be5\u6709\u8f93\u5165\u4e3a S \u548c R \u90fd\u4e3a <code>0</code> \u7684\u60c5\u51b5\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_1","title":"\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668","text":"<p>\u4e0a\u9762\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\u4e3b\u8981\u5bf9\u8109\u51b2\u7684 \u4e0a\u5347\u6cbf \u6216 \u4e0b\u964d\u6cbf \u654f\u611f\u3002</p> <p>\u4e0b\u56fe\u4e3a\u6b63\u8fb9\u6cbf\u89e6\u53d1 D \u89e6\u53d1\u5668\u7684\u5927\u81f4\u539f\u7406\u56fe\u3002</p> <p></p> <p>\u5173\u6ce8\u4e0a\u5347\u6cbf\u524d\u540e\uff0c\u4e0a\u5347\u6cbf\u524d\u4e00\u523b\uff0c\u4e3b\u9501\u5b58\u5668\u53ef\u5199\uff0c\u4ece\u9501\u5b58\u5668\u53ea\u8bfb\uff1b\u4e0a\u5347\u6cbf\u540e\u4e00\u523b\uff0c\u4e3b\u9501\u5b58\u5668\u53ea\u8bfb\uff0c\u4ece\u9501\u5b58\u5668\u53ea\u5199\uff0c\u4e14\u5199\u5165\u7684\u662f\u4e3b\u9501\u5b58\u5668\u5b58\u50a8\u7684\u503c\u2014\u2014\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5b58\u7684\u662f\u4e0a\u5347\u6cbf\u524d\u4e00\u523b\u5199\u5165\u4e3b\u9501\u5b58\u5668\u7684\u5185\u5bb9\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cD \u89e6\u53d1\u5668\u6ca1\u6709\u300c\u4fdd\u6301\u300d\u6001\u3002\u5982\u679c\u8981\u4f7f D \u89e6\u53d1\u5668\u4fdd\u6301\uff0c\u53ef\u4ee5\u4f7f\u65f6\u949f\u8109\u51b2\u5931\u6548\u6216\u901a\u8fc7 <code>MUX</code> \u5c06\u8f93\u51fa\u63a5\u5230\u8f93\u5165\u5b9e\u73b0\u3002\u5176\u4e2d\u524d\u8005\u4e0d\u592a\u5e38\u7528\uff0c\u56e0\u4e3a\u53d7\u95e8\u63a7\u7684\u65f6\u949f\u8109\u51b2\u8fdb\u5165\u89e6\u53d1\u5668\u65f6\u6709\u5ef6\u8fdf\uff0c\u5373 \u65f6\u949f\u504f\u79fb(clock skew)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#jk","title":"JK \u89e6\u53d1\u5668","text":"<p>JK\u89e6\u53d1\u5668\u7684\u72b6\u6001\u8f6c\u6362\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5f53J=1\uff0cK=0\u65f6\uff0c\u89e6\u53d1\u5668\u5c06\u7f6e\u4f4d\uff08Q=1\uff09\uff1b</li> <li>\u5f53J=0\uff0cK=1\u65f6\uff0c\u89e6\u53d1\u5668\u5c06\u590d\u4f4d\uff08Q=0\uff09\uff1b</li> <li>\u5f53J=1\uff0cK=1\u65f6\uff0c\u89e6\u53d1\u5668\u5c06\u5207\u6362\u72b6\u6001\uff08\u5982\u679c\u4e4b\u524d\u662f\u7f6e\u4f4d\u72b6\u6001\uff0c\u5219\u53d8\u4e3a\u590d\u4f4d\u72b6\u6001\uff1b\u5982\u679c\u4e4b\u524d\u662f\u590d\u4f4d\u72b6\u6001\uff0c\u5219\u53d8\u4e3a\u7f6e\u4f4d\u72b6\u6001\uff09\uff1b</li> <li>\u5f53J=0\uff0cK=0\u65f6\uff0c\u89e6\u53d1\u5668\u4fdd\u6301\u539f\u72b6\u6001\u4e0d\u53d8</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#t","title":"T \u89e6\u53d1\u5668","text":"<p>\\(Q_{n+1} = \\overline{Q_n}T + Q_n\\overline{T} = Q_n \\oplus T\\)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_2","title":"\u6807\u51c6\u56fe\u5f62\u7b26\u53f7","text":"<p>\u5e26\u5706\u5708\u8868\u793a\u8d1f\u903b\u8f91\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_3","title":"\u76f4\u63a5\u8f93\u5165","text":"<p>\u8fd9\u4e9b\u76f4\u63a5\u8f93\u5165\u5f80\u5f80\u662f\u5f02\u6b65\u7684\uff0c\u4e00\u822c\u7528\u6765\u5f02\u6b65\u7f6e\u4f4d\uff08\u76f4\u63a5\u7f6e\u4f4d\u6216\u9884\u7f6e\uff09\u6216\u5f02\u6b65\u590d\u4f4d\uff08\u76f4\u63a5\u590d\u4f4d\u6216\u6e05\u96f6\uff09\u3002</p> <p>\u5bf9\u4e8e\u65f6\u5e8f\u7535\u8def\u6765\u8bf4\uff0c\u300c\u590d\u4f4d\u300d\u6216\u300c\u7f6e\u4f4d\u300d\u8fd9\u79cd\u8f93\u5165\u5e38\u5e38\u4f5c\u4e3a\u521d\u59cb\u5316\uff0c\u5373\u786e\u5b9a\u5404\u4e2a\u89e6\u53d1\u5668\u7684\u300c\u521d\u59cb\u72b6\u6001\u300d\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_4","title":"\u65f6\u5e8f\u7535\u8def\u5206\u6790","text":"<p>\u4e3a\u4e86\u5206\u6790\u65f6\u5e8f\u7535\u8def\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5de5\u5177\u6765\u8868\u793a\u65f6\u5e8f\u7535\u8def\u7684\u4e00\u4e9b\u7279\u5f81\u4e0e\u903b\u8f91\u3002\u89c2\u5bdf\u65f6\u5e8f\u7535\u8def\u548c\u7ec4\u5408\u7535\u8def\u7684\u533a\u522b\uff0c\u53d1\u73b0\u6700\u6838\u5fc3\u7684\u5c31\u662f\u903b\u8f91\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u300c\u72b6\u6001\u300d\u53c2\u4e0e\u8fd0\u7b97\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u5404\u4e2a\u7ec4\u5408\u7535\u8def\u5206\u6790\u4e2d\u91c7\u7528\u7684\u8868\u793a\u65b9\u6cd5\u4e2d\uff0c\u6dfb\u52a0\u8868\u793a\u300c\u72b6\u6001\u300d\u7684\u4fe1\u606f\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u5c06\u300c\u72b6\u6001\u300d\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u8f93\u5165\uff0c\u4f5c\u4e3a\u589e\u91cf\u6dfb\u52a0\u5230\u8868\u8fbe\u65b9\u5f0f\u4e2d\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u8868\u8ff0\u4f1a\u663e\u5f97\u5f88\u91cd\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5bfb\u627e\u4e00\u79cd\u66f4\u597d\u7684\u529e\u6cd5\u6765\u8868\u8fbe\u65f6\u5e8f\u7535\u8def\u4e2d\u7684\u903b\u8f91\uff0c\u8fd9\u5c31\u662f\u300c\u72b6\u6001\u56fe\u300d\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_5","title":"\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b","text":"<p>\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b(flip-flop input equation) \u4e3b\u8981\u662f\u4e3a\u5176\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u6570\u8868\u8fbe\u65b9\u5f0f\u3002\u5b83\u7684\u4e3b\u8981\u60f3\u6cd5\u662f\uff1a1.\u8868\u8fbe\u6bcf\u4e00\u4e2a\u89e6\u53d1\u5668\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b2.\u8868\u8fbe\u6bcf\u4e00\u4e2a\u76f4\u63a5\u8f93\u51fa\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u3002\u5176\u4e2d\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u7b26\u53f7\u8868\u793a\u4e86\u5176\u7c7b\u578b\uff08\u5373\u7b26\u53f7\uff09\u4e0e\u8f93\u51fa\uff08\u5373\u4e0b\u6807\uff09\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u7535\u8def\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u89e6\u53d1\u5668 \\(D_A\\) \u548c \\(D_B\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7ec4\u5408\u903b\u8f91\u8f93\u51fa \\(Y\\)\uff0c\u56e0\u800c\u53ef\u4ee5\u6839\u636e\u7535\u8def\u7684\u7279\u5f81\uff0c\u5f97\u5230\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5f0f\u5b50\uff1a</p> \\[ \\begin{aligned}     D_A &amp; = AX + BX \\\\     D_B &amp; = \\overline{A}X \\\\     Y   &amp; = (A + B)\\overline{X} \\end{aligned} \\]"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_6","title":"\u72b6\u6001\u8868","text":"<p>\u5f53\u7136\uff0c\u65f6\u5e8f\u7535\u8def\u7684\u903b\u8f91\u6709\u65f6\u5019\u4e5f\u53ef\u4ee5\u901a\u8fc7\u72b6\u6001\u8868\u6765\u63cf\u8ff0\uff0c\u53ea\u4e0d\u8fc7\u4e0e\u7ec4\u5408\u7535\u8def\u7684 \u771f\u503c\u8868 \u4e0d\u540c\uff0c\u72b6\u6001\u8868(state table) \u6709\u56db\u680f\uff1a\u5f53\u524d\u72b6\u6001(present state)\u3001\u8f93\u5165(input)\u3001\u4e0b\u4e00\u72b6\u6001(next state)\u3001\u8f93\u51fa(output)\u3002\u5176\u542b\u4e49\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u901a\u8fc7\u7535\u8def\u56fe\u5f97\u5230\u72b6\u6001\u8868\uff0c\u9700\u8981\u9996\u5148\u5f97\u5230\u300c\u5f53\u524d\u72b6\u6001\u300d\u5411\u300c\u4e0b\u4e00\u72b6\u6001\u300d\u8f6c\u79fb\u7684\u65b9\u7a0b\uff0c\u5373\u5bf9\u4e8e\u67d0\u4e2a\u65f6\u523b \\(t\\) \u7684\u89e6\u53d1\u5668 \\(A\\) \u7684\u8f93\u51fa \\(A(t)\\)\uff0c\u9700\u8981\u5f97\u5230\u5b83\u4e0b\u4e00\u523b\u7684\u72b6\u6001 \\(A(t+1) = f(A(t), ...)\\)\u3002</p> <p>\u540c\u6837\u4ee5\u8fd9\u4e2a\u7535\u8def\u4e3a \ud83c\udf30\uff1a</p> <p></p> <p>\u9996\u5148\u6211\u4eec\u5bf9 \\(D_A\\) \u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\\(A(t+1) = D_A = A(t)X + B(t)X\\)\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a \\(A(t+1) = D_A = AX+BX\\)\u3002\u7c7b\u4f3c\u5730\u4e5f\u80fd\u5f97\u5230 \\(B\\) \u7684\u8f6c\u79fb\u65b9\u7a0b\u3002</p> <p>\u4e8e\u662f\uff0c\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5b83\u7684\u72b6\u6001\u8868\uff1a</p> Present State<code>AB</code> Input<code>X</code> Next State<code>AB</code> Output<code>Y</code> <code>00</code> <code>0</code> <code>00</code> <code>0</code> <code>00</code> <code>1</code> <code>01</code> <code>0</code> <code>01</code> <code>0</code> <code>00</code> <code>1</code> <code>01</code> <code>1</code> <code>11</code> <code>0</code> <code>10</code> <code>0</code> <code>00</code> <code>1</code> <code>10</code> <code>1</code> <code>10</code> <code>0</code> <code>11</code> <code>0</code> <code>00</code> <code>1</code> <code>11</code> <code>1</code> <code>10</code> <code>0</code> <p>Mealy model circuit &amp; Moore model circuit</p> <p>\u5982\u679c\u8f93\u51fa\u65e2\u4f9d\u8d56\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u4e5f\u4f9d\u8d56\u4e8e\u8f93\u5165\u7684\u65f6\u5e8f\u7535\u8def\uff0c\u5219\u79f0\u4e3a \u7c73\u52d2\u578b\u7535\u8def(Mealy model circuit)\uff1b\u800c\u5982\u679c\u8f93\u51fa\u53ea\u4f9d\u8d56\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u5219\u79f0\u4e3a \u6469\u5c14\u578b\u7535\u8def(Moore model circuit)\u3002</p> <p>\u5728 \u72b6\u6001\u56fe \u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u518d\u4e00\u6b21\u9047\u5230\u8fd9\u4e24\u4e2a\u4eba\u540d\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_7","title":"\u72b6\u6001\u56fe","text":"<p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u72b6\u6001\u8868\u6bd4\u8f83\u6e05\u6670\u7684\u8868\u8fbe\u4e86\u4e0d\u540c\u7684\u72b6\u6001\u548c\u8f93\u5165\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u5bf9\u4e8e\u300c\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u662f\u5982\u4f55\u8f6c\u6362\u7684\u300d\u8fd9\u4ef6\u4e8b\u7684\u63cf\u8ff0\u5e76\u4e0d\u6e05\u6670\u3002\u800c\u5bf9\u4e8e\u300c\u8054\u7cfb\u300d\u8fd9\u4ef6\u4e8b\uff0c\u6709\u5411\u56fe\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4ecb\u7ecd \u72b6\u6001\u56fe(state diagram)\u3002</p> <p>\u72b6\u6001\u56fe\u627f\u8f7d\u7684\u4fe1\u606f\u91cf\u548c\u72b6\u6001\u8868\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4e5f\u662f\u9700\u8981\u8868\u8fbe \u5f53\u524d\u72b6\u6001(present state)\u3001\u8f93\u5165(input)\u3001\u4e0b\u4e00\u72b6\u6001(next state)\u3001\u8f93\u51fa(output) \u8fd9\u56db\u4e2a\u4e1c\u897f\u3002\u53ea\u4e0d\u8fc7\u300c\u4e0b\u4e00\u72b6\u6001\u300d\u662f\u901a\u8fc7\u6709\u5411\u8fb9\u6765\u8868\u793a\u7684\u3002\u5f53\u524d\u72b6\u6001\u4f5c\u4e3a\u4e00\u4e2a node \u7684\u5c5e\u6027\uff1b\u800c\u8f93\u5165\u4f5c\u4e3a edge \u7684\u4e00\u4e2a\u5c5e\u6027\uff1b\u81f3\u4e8e\u8f93\u51fa\uff0c\u6839\u636e\u5b83\u662f\u653e\u5728 edge \u4e0a\u8fd8\u662f node \u4e0a\uff0c\u5206\u4e3a \u7c73\u52d2\u578b(Mealy) \u548c \u6469\u5c14\u578b(Moore) \u4e24\u79cd\u3002</p> <p>Mealy</p> <p>\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a \u7c73\u52d2\u578b \u7684\u72b6\u6001\u56fe\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u72b6\u6001\u8868\u3002</p> <p></p> <p>\u56e0\u4e3a\u7c73\u52d2\u578b\u7535\u8def\u7684 \u8f93\u51fa\u4e0e\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u90fd\u6709\u5173\uff0c\u6240\u4ee5\u8f93\u51fa\u4f1a\u548c\u8f93\u5165\u653e\u5728\u4e00\u8d77\uff0c\u5373\u653e\u5728 edge \u91cc\u3002</p> <p>\u5bf9\u4e8e\u7c73\u52d2\u578b\uff0cnode \u5185\u7684\u4e8c\u8fdb\u5236\u4e3a present state \u4e2d\u7684 <code>AB</code>\uff1bedge \u4e0a\u5206\u522b\u4e3a input \u548c output\uff1a<code>X</code>/<code>Y</code>\uff1b\u6709\u5411\u8fb9\u8868\u8fbe\u4e86\u6bcf\u4e2a\u72b6\u6001\u5728\u7279\u5b9a\u8f93\u5165\u4e0b\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</p> <p>\u4f8b\u5982\uff0c\u5173\u6ce8 node <code>00</code>\uff0c\u5b83\u6709\u4e00\u6761\u81ea\u73af <code>0</code>/<code>0</code>\uff0c\u5bf9\u5e94 \u72b6\u6001\u8868 \u7684\u7b2c\u4e00\u884c\uff1b\u5b83\u6709\u4e00\u6761 edge <code>1</code>/<code>0</code> \u6307\u5411 node <code>01</code>\uff0c\u5bf9\u5e94 \u72b6\u6001\u8868\u7684\u7b2c\u4e8c\u884c\u3002</p> <p>\u5f53\u7136\uff0c\u7c73\u52d2\u578b\u662f\u6709 \u7f3a\u9677 \u7684\uff0c\u5728\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u4e4b\u540e\u7684\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u5b83\u6765\u5bf9\u6bcf\u4e00\u4e2a\u72b6\u6001\u8bbe\u8ba1\u8f93\u51fa\u65b9\u7a0b\u3002\u6b64\u65f6\u7531\u4e8e\u4e24\u4e2a\u8f93\u51fa\u5171\u4eab\u540c\u4e00\u4e2a\u76ee\u6807\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u4e24\u4e2a\u8f93\u51fa\u7ed3\u5408\u5230\u540c\u4e00\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u8fd9\u5c06\u63d0\u9ad8\u8bbe\u8ba1\u96be\u5ea6\u548c\u7ec4\u5408\u7535\u8def\u6210\u672c\u3002</p> <p>Moore</p> <p>\u800c\u4e0b\u9762\u662f\u4e00\u4e2a \u6469\u5c14\u578b \u7684\u72b6\u6001\u56fe\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u72b6\u6001\u8868\u3002</p> <p></p> <p>\u56e0\u4e3a\u6469\u5c14\u578b\u7535\u8def\u7684 \u8f93\u51fa\u53ea\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u8f93\u51fa\u4f1a\u548c\u5f53\u524d\u72b6\u6001\u653e\u5728\u4e00\u8d77\uff0c\u5373\u653e\u5728 node \u91cc\u3002</p> <p>\u5bf9\u4e8e\u6469\u5c14\u578b\uff0cnode \u5185\u7684\u4e8c\u8fdb\u5236\u8868\u793a present state \u548c output\uff1a<code>A</code>/<code>Z</code>\uff1bedge \u4e0a\u5217\u4e3e\u4e86\u8fd9\u79cd\u8f6c\u79fb\u53ef\u80fd\u7684 inputs\uff1a<code>XY</code>\u3002</p> <p>\u4f8b\u5982\uff0c\u5173\u6ce8 node <code>0</code>/<code>0</code>\uff0c\u5b83\u6709\u4e24\u6761\u81ea\u73af <code>00</code> \u548c <code>11</code>\uff0c\u5206\u522b\u5bf9\u5e94 \u72b6\u6001\u8868 \u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u56db\u884c\uff1b\u5b83\u6709\u4e24\u6761 edge <code>01</code> \u548c <code>10</code> \u6307\u5411 node <code>1</code>/<code>1</code>\uff0c\u5bf9\u5e94 \u72b6\u6001\u8868 \u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u3002</p> <p>\u6469\u5c14\u578b\u4e5f\u5b58\u5728 \u7f3a\u9677 \u7684\uff0c\u975e\u5e38\u663e\u7136\uff0c\u76f8\u6bd4\u4e8e\u7c73\u52d2\u578b\uff0c\u6469\u5c14\u578b\u9700\u8981\u66f4\u591a\u7684\u72b6\u6001\u3002</p> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u7c73\u52d2\u578b\u503e\u5411\u4e8e\u8868\u8fbe\u300c\u5728\u7279\u5b9a\u72b6\u6001\u4e0b\uff0c\u7279\u5b9a\u8f93\u5165\u5c06\u5bfc\u81f4\u67d0\u79cd\u7ed3\u679c\uff0c\u4ee5\u53ca\u72b6\u6001\u8f6c\u79fb\u300d\uff1b\u800c\u6469\u5c14\u578b\u503e\u5411\u4e8e\u8868\u8fbe\u300c\u7279\u5b9a\u8f93\u5165\u5c06\u5bfc\u81f4\u67d0\u4e2a\u72b6\u6001\u5411\u53e6\u5916\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\uff0c\u800c\u8f93\u51fa\u66f4\u50cf\u662f\u4e00\u79cd\u72b6\u6001\u7684\u7ed3\u679c\u300d\u3002</p> <p>\u72b6\u6001\u56fe\u8fd8\u6709\u8fdb\u9636\u5f62\u6001\uff0c\u4e4b\u540e\u4f1a\u63d0\u53ca\uff0c\u5c31\u662f \u72b6\u6001\u673a\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_8","title":"\u7b49\u4ef7\u72b6\u6001","text":"<p>Hidden Table(\u662f\u8003\u70b9) \u5efa\u8bae\u53bb\u770b\u770bPPT\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\u3002</p> <p>\u5ef6\u65f6\u5206\u6790</p> <p>\u5ef6\u65f6\u5206\u6790\u662f\u4e00\u4e2a\u91cd\u96be\u70b9\uff0c\u5bf9\u4e8e\u65f6\u5e8f\u7535\u8def\u7684\u5ef6\u65f6\u5206\u6790\uff0c\u5c06\u5728\u4e4b\u540e\u5355\u72ec\u5f00\u4e00\u4e2a\u5c0f\u7ed3\u91cd\u70b9\u4ecb\u7ecd\u3002</p> <p>\u8bf7\u53c2\u8003 \u5ef6\u65f6\u5206\u6790\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_9","title":"\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1","text":"<p>\u7c7b\u6bd4\u7ec4\u5408\u903b\u8f91\u7535\u8def\u901a\u8fc7\u771f\u503c\u8868\u8bbe\u8ba1\u7535\u8def\uff0c\uff08\u540c\u6b65\uff09\u65f6\u5e8f\u7535\u8def\u4e3b\u8981\u4f9d\u636e\u72b6\u6001\u8868\uff08\u6216\u7b49\u4ef7\u8868\u8fbe\uff0c\u5982\u72b6\u6001\u56fe\uff09\u6765\u8bbe\u8ba1\u7535\u8def\u3002\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u89e6\u53d1\u5668\u4ee5\u53ca\u5176\u5b83\u7ec4\u5408\u7535\u8def\u7684\u9009\u62e9\u4e0e\u8bbe\u8ba1\uff1a</p> <ul> <li>\u89e6\u53d1\u5668\u7684\u6570\u91cf\u57fa\u672c\u53d6\u51b3\u4e8e\u6574\u4e2a\u9700\u6c42\u4e2d \u72b6\u6001 \u7684\u6570\u91cf\uff0c\\(n\\) \u4e2a\u89e6\u53d1\u5668\u80fd\u591f\u8868\u8fbe \\(2^n\\) \u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\uff1b</li> <li>\u7ec4\u5408\u7535\u8def\u7684\u4e3b\u8981\u8bbe\u8ba1\u56f4\u7ed5 \u89e6\u53d1\u5668 \u7684 \u8f93\u5165 \u548c \u8f93\u51fa \u5c55\u5f00\uff1b</li> </ul> <p>\u800c\u4e3b\u8981\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u548c\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684\u8bbe\u8ba1\u662f\u7c7b\u4f3c\u7684\uff0c\u5982\u4e0b\uff1a</p> <ol> <li>\u786e\u5b9a\u7cfb\u7edf\u7684\u884c\u4e3a\uff1b<ol> <li>\u63cf\u8ff0\u7cfb\u7edf\u884c\u4e3a\u8fc7\u7a0b\u4e2d\uff0c\u8981\u6ce8\u610f\u72b6\u6001\u7684\u590d\u7528\uff08\u4e0d\u8fc7\u5e76\u975e\u72b6\u6001\u8d8a\u5c11\u6210\u672c\u5c31\u8d8a\u5c0f\uff0c\u8fd9\u91cc\u6709\u89e6\u53d1\u5668\u6570\u91cf\u548c\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684 trade-off\uff09\uff1b</li> <li>\u786e\u5b9a\u7535\u8def\u7684\u521d\u59cb\u72b6\u6001\uff08\u590d\u4f4d\u72b6\u6001(reset state)\uff0c\u901a\u8fc7\u7ed9\u5b9a\u590d\u4f4d(reset)\u4fe1\u53f7\u5b9e\u73b0\uff09\uff1b<ul> <li>\u590d\u4f4d\u4e00\u822c\u53ef\u4ee5\u662f\u5f02\u6b65\u7684\uff1b</li> </ul> </li> </ol> </li> <li>\u9610\u8ff0\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u5e76\u7528\u771f\u503c\u8868\u6216\u903b\u8f91\u8868\u8fbe\u5f0f\u8868\u8fbe\u51fa\u6765\uff1b</li> <li>\u7ed9\u8bbe\u8ba1\u597d\u7684\u72b6\u6001\u7f16\u7801\u8d4b\u503c\uff0c\u5f97\u5230\u5177\u4f53\u7684\u72b6\u6001\u8868\uff1b<ol> <li>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u6309\u8ba1\u6570\u987a\u5e8f\u3001 \u6309\u683c\u96f7\u7801\u3001\u7528\u72ec\u70ed\u7801 \u6765\u7ed9\u72b6\u6001\u8d4b\u503c\uff0c\u66f4\u7cfb\u7edf\u7684\u65b9\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u505a\u8ba8\u8bba\uff1b</li> <li>\u5176\u4e2d\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u6240\u9700\u8981\u7684\u72b6\u6001\u4e0d\u80fd\u5b8c\u6574\u586b\u5145 \\(2^n\\) \u79cd\u60c5\u51b5\uff0c\u9700\u8981\u8bbe\u8ba1\u65e0\u6548\u72b6\u6001\uff0c\u8fd9\u79cd\u65f6\u5019\u53ef\u4ee5\u4e0d\u8003\u8651\u5b83\u4eec\uff1b</li> </ol> </li> <li>\u6839\u636e\u72b6\u6001\u8868\u786e\u5b9a\u4f7f\u7528\u7684\u89e6\u53d1\u5668\u53ca\u5176\u8f93\u5165\u65b9\u7a0b\uff1b</li> <li>\u6839\u636e\u72b6\u6001\u8868\u786e\u5b9a\u8f93\u51fa\u65b9\u7a0b\uff1b</li> <li>\u4f18\u5316\u8f93\u5165\u65b9\u7a0b\u548c\u8f93\u51fa\u65b9\u7a0b\uff1b</li> <li>\u5c06\u4f18\u5316\u540e\u7684\u903b\u8f91\u8bbe\u8ba1\u5de5\u827a\u6620\u5c04\u5230\u786c\u4ef6\u5b9e\u73b0\u4e0a\uff1b</li> <li>\u9a8c\u8bc1\u6b63\u786e\u6027\uff08\u5728\u4eff\u771f\u73af\u5883\u4e2d\uff09\uff1b<ul> <li>\u4e3b\u8981\u5c31\u662f\u770b\u80fd\u4e0d\u80fd\u590d\u73b0\u72b6\u6001\u56fe\uff1b</li> </ul> </li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_10","title":"\u72b6\u6001\u673a","text":"<p>\u5c3d\u7ba1\u5728\u5c0f\u89c4\u6a21\u7684\u8bbe\u8ba1\u4e2d\uff0c\u72b6\u6001\u56fe\u8868\u73b0\u826f\u597d\uff0c\u4f46\u662f\u968f\u7740\u8bbe\u8ba1\u7684\u7cfb\u7edf\u89c4\u6a21\u53d8\u5927\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u52a0\u6cdb\u7528\u7684\u65b9\u5f0f\u6765\u8868\u8fbe\u7c7b\u4f3c\u7684\u65f6\u5e8f\u903b\u8f91\u3002</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u72b6\u6001\u56fe\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u8bbe\u8ba1\u4e86 \u72b6\u6001\u673a(State-Machine Diagram) \u6765\u505a\u8fd9\u4ef6\u4e8b\u3002</p> <p>\u72b6\u6001\u673a\u6df7\u7528\u4e86\u7c73\u52d2\u578b\u548c\u6469\u5c14\u578b\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u4f18\u52a3\u5728 \u72b6\u6001\u56fe \u4e2d\u6709\u6240\u63d0\u53ca\u3002\u5e76\u4e14\uff0c\u6709\u9650\u56fe\u5c06\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5199\u5165\uff0c\u603b\u4f53\u4e0a\u5bf9\u7535\u8def\u8bbe\u8ba1\u66f4\u53cb\u597d\u3002\u4e0b\u56fe\u662f\u72b6\u6001\u673a\u7684\u4e00\u4e2a\u201c\u8303\u5f0f\u201d\u3002</p> <p>Generic State Diagram Template</p> <p></p> <p>\u9996\u5148\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u201c\u8303\u5f0f\u201d\uff1a</p> <p>\u5177\u4f53\u89e3\u91ca\u72b6\u6001\u673a\u6709\u54ea\u4e9b\u5185\u5bb9\uff0c\u4ee5\u53ca\u5404\u4e2a\u90e8\u5206\u4e4b\u95f4\u7684\u903b\u8f91\u3002\u5173\u4e8e\u5404\u4e2a\u90e8\u5206\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8bf7\u53c2\u8003 Template\u3002</p> <p>\u53e6\u5916\uff0c\u4e3a\u4e86\u7b80\u5316\u8bed\u53e5\uff0c\u4e0b\u9762\u7684\u8bf4\u6cd5\u7701\u7565\u4e86\u65f6\u949f\uff0c\u8bf7\u8bb0\u5f97\u8003\u8651\u3002</p> <p>\u72b6\u6001\u673a\u6a21\u578b\u4e3b\u8981\u6709\u4e09\u8981\u7d20\uff1a\u8f93\u5165\u6761\u4ef6(Input Conditions)\u3001\u72b6\u6001\u8f6c\u79fb(Transitions) \u548c \u8f93\u51fa\u884c\u4e3a(Output Actions)\u3002\u603b\u4f53\u6765\u8bf4\uff0c\u8f93\u5165\u6761\u4ef6\u544a\u8bc9\u6211\u4eec\u6574\u4e2a\u72b6\u6001\u673a\u8981\u5982\u4f55\u53d8\u5316\uff1b\u72b6\u6001\u8f6c\u79fb\u63cf\u8ff0\u4e86\u72b6\u6001\u673a\u7684\u5185\u90e8\u8f6c\u79fb\u884c\u4e3a\uff0c\u5373\u56fe\u8bba\u4e0a\u7684\u6709\u5411\u8054\u901a\u5173\u7cfb\uff1b\u8f93\u51fa\u884c\u4e3a\u63cf\u8ff0\u52a8\u6001\u53d8\u5316\u8fc7\u7a0b\u4e2d\u72b6\u6001\u673a\u7684\u5bf9\u5916\u8868\u8fbe\u3002\u5176\u4e2d\uff0c\u72b6\u6001\u8f6c\u79fb\u548c\u8f93\u51fa\u884c\u4e3a\u662f\u6211\u4eec\u9700\u8981\u5173\u6ce8\u7684\u72b6\u6001\u673a\u7684\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u8f93\u5165\u6761\u4ef6\u662f\u6211\u4eec\u7528\u6765\u505a\u5b9e\u65f6\u5224\u65ad\u7684\u5916\u90e8\u4f9d\u636e\u3002</p> <p>\u300c\u8f93\u5165\u6761\u4ef6\u300d\u662f\u7531\u8f93\u5165\u53d8\u91cf\u5f62\u6210\u7684\u4e00\u4e2a\u5e03\u5c14\u65b9\u7a0b\uff0c\u5728\u6574\u4e2a\u72b6\u6001\u673a\u4e2d\uff0c\u8f93\u5165\u662f\u53d8\u5316\u7684\u201c\u56e0\u53d8\u91cf\u201d\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u72b6\u6001\u8f6c\u79fb\u8fd8\u662f\u8f93\u51fa\uff0c\u90fd\u53d6\u51b3\u4e8e\u8f93\u5165\u6761\u4ef6\u3002\u800c\u5bfc\u81f4\u7279\u5b9a\u884c\u4e3a\u7684\u8f93\u5165\u6761\u4ef6\u5219\u88ab\u5206\u7c7b\u4e3a \u8f6c\u79fb\u6761\u4ef6(Transition Condition)TC \u548c \u8f93\u51fa\u6761\u4ef6(Output Condition)OC\u3002</p> <p>\u300c\u72b6\u6001\u8f6c\u79fb\u300d\u5728\u56fe\u4e2d\u8868\u73b0\u4e3a\u6709\u5411\u8fb9\uff0c\u5f53 TC \u6210\u7acb\u65f6\uff0c\u72b6\u6001\u8f6c\u79fb\u53d1\u751f\uff1b\u6216\u8005\u5bf9\u4e8e\u65e0\u6761\u4ef6\u8f6c\u79fb\uff0c\u53ea\u8981\u5f97\u5230\u65f6\u949f\u8109\u51b2\u5c31\u4f1a\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</p> <p>\u300c\u8f93\u51fa\u884c\u4e3a\u300d\u5728\u72b6\u6001\u673a\u4e2d\u6709\u56db\u79cd\u89e6\u53d1\u65b9\u6cd5\uff08\u5373\u56db\u79cd OC\uff09\uff1aMoore\u3001\u4e0d\u4f9d\u8d56\u8f6c\u79fb(Transition-condition Independent)TCI Mealy\u3001\u4f9d\u8d56\u8f6c\u79fb(Transition-condition Dependent)TCD Mealy \u548c \u4f9d\u8d56\u8f6c\u79fb\u548c\u8f93\u51fa\u6761\u4ef6(Transition and Output-condition Dependent)TOCD Mealy\u3002\u6839\u636e\u5b57\u9762\u610f\u601d\u6765\u770b\uff1a</p> <ul> <li>Moore \u53ea\u4e0e\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u5728\u56fe\u4e2d\u4ece\u72b6\u6001\u8282\u70b9\u5f15\u51fa\uff1b</li> <li>TCI Mealy \u4e0e\u72b6\u6001\u548c\u8f93\u51fa\u6761\u4ef6\u6709\u5173\uff0c\u6240\u4ee5\u5728\u56fe\u4e2d\u4ece\u72b6\u6001\u8282\u70b9\u5f15\u51fa\u5199\u5728 OC \u540e\u9762\uff08<code>OC</code>/<code>TCI OA</code>\uff09\uff1b</li> <li>TCD Mealy \u4e0e\u8f6c\u79fb\u6761\u4ef6\u6709\u5173\uff0c\u5f53\u8f6c\u79fb\u6210\u7acb\u7684\u65f6\u5019\u53d1\u751f Output Action\uff0c\u6240\u4ee5\u76f4\u63a5\u5199\u5728 TC \u540e\u9762\uff08<code>TC</code>/<code>TCD OA</code>\uff09\uff1b</li> <li>TOCD Mealy \u5728\u8f6c\u79fb\u53d1\u751f\u65f6\u5019\u624d\u53ef\u80fd\u6761\u4ef6\u6210\u7acb\uff0c\u5373\u5f53 TC \u548c OC \u90fd\u6210\u7acb\u65f6\u624d\u53d1\u751f Output Action\uff0c\u6240\u4ee5\u9700\u8981\u4ece TC \u5f15\u51fa OC\uff0c\u5e76\u8ddf\u5728 OC \u540e\u9762\uff08<code>TC</code>\u2014\u2014<code>OC</code>/<code>TOCD OA</code>\uff09\uff1b         - \u5982\u679c\u51fa\u73b0\u590d\u6570\u7684 TOCD OA\uff0c\u5219\u4f7f\u7528 <code>,</code> \u5206\u9694\uff1b</li> </ul> <p>In a given state, an output action occurs if: (a) it is unconditional (Moore), (b)  TCI and its output condition OC = 1, (c) TCD and its transition condition TD = 1, and (d) TOCD and its transition condition TC and output condition OC are both equal to 1, i.e, TC\u00b7OC = 1. Note that Moore and TCI output actions attached to a state, apply to all transitions from the state as well.</p> <p>\u56de\u5230\u8f93\u51fa\u884c\u4e3a\u672c\u8eab\uff0c\u5f53 OC \u6210\u7acb\u65f6\u8f93\u51fa\u884c\u4e3a\u53d1\u751f\uff0c\u4e00\u822c\u4f1a\u5c06\u8f93\u51fa\u53d8\u91cf\u6807\u51fa\uff0c\u5982\u679c\u5199\u7684\u662f NOT X\uff0c\u8868\u793a OC \u6210\u7acb\u65f6 X \u5e94\u4e3a <code>0</code>\uff1b\u5982\u679c\u5199\u7684\u662f X\uff0c\u5219\u8868\u793a OC \u6210\u7acb\u65f6 X \u4e3a <code>1</code>\u3002</p> <p>\u6ce8\u610f\u70b9</p> <p>\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u70b9\u9700\u8981\u8fa8\u6790\uff0c\u7531\u4e8e\u300cTransition\u300d\u8868\u793a\u7684\u662f\u201c\u4e0b\u4e00\u4e2a\u201d\u72b6\u6001\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5f53\u524d\u65f6\u523b\uff0c\u5f53\u524d\u8282\u70b9\u7684\u8f93\u51fa\u548c\u51fa\u5ea6\u7684\u8f93\u51fa\u4e0d\u80fd\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u56e0\u4e3a Moore \u8f93\u51fa\u884c\u4e3a\u7684 Z \u548c TC=AB \u90a3\u6761\u8fb9\u7684 Z' \u51b2\u7a81\uff0c\u6240\u4ee5\u975e\u6cd5\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u975e\u6cd5\u72b6\u6001\u673a\u5e76\u4e0d\u53ea\u6709\u8fd9\u4e00\u4e2a\u5224\u636e\u3002\u4e0d\u8fc7\u6838\u5fc3\u601d\u60f3\u5c31\u662f \u4e0d\u80fd\u6709\u6b67\u4e49\u6216\u51b2\u7a81\u4e14\u9700\u8981\u5145\u5206\uff0c\u66f4\u6570\u5b66\u7684\u8868\u8fbe\u662f\uff0c\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <p>1.\u975e\u4ea4\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001 \\(S_i\\)\uff0c\u5b83\u7684\u4efb\u610f\u4e24\u4e2a\u51fa\u5ea6 \\((T_{ij},T_{jk})\\) \u90fd\u4e0d\u80fd\u540c\u65f6\u6210\u7acb\uff0c\u5373\u5e94\u6709\uff1a</p> \\[ \\forall (T_{ij},T_{ik})\\;,\\;\\;T_{ij}\\cdot T_{ik} = 0 \\] <p>2.\u5145\u5206\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001 \\(S_i\\)\uff0c\u5b83\u7684\u6240\u6709\u51fa\u5ea6\u6761\u4ef6\u5e94\u8be5\u6db5\u76d6\u6240\u6709\u53ef\u80fd\uff0c\u5373\u5e94\u6709\uff1a</p> \\[ \\sum_{j}T_{ij} = 1 \\] <p>Tips: \u4e0a\u9762\u662f\u5bf9 Transition Condition \u7684\u7ea6\u675f\uff0c\u5c06 TC \u6362\u6210 OC \u4e5f\u9700\u8981\u6210\u7acb\u3002</p> \u7f29\u5199\u5bf9\u7167\u8868 \u7f29\u5199 \u542b\u4e49 \u6ce8\u91ca TC Transition Condition \u8f6c\u79fb\u6761\u4ef6\uff1a\u5bfc\u81f4 Transition \u7684 Input Condition OC Output Condition \u8f93\u51fa\u6761\u4ef6\uff1a\u5bfc\u81f4 Output Actions \u7684 Input Condition TCI Transition-condition Independent \u4e0d\u4f9d\u8d56\u8f6c\u79fb\uff1a\u53ea\u4e0e State \u6709\u5173\u7684 Output Actions TCD Transition-condition Dependent \u4f9d\u8d56\u8f6c\u79fb\uff1aTransition Condition \u6210\u7acb\u624d\u6709 Output Actions TOCD Transition and Output-condition Dependent \u4f9d\u8d56\u8f6c\u79fb\u548c\u8f93\u51fa\u65b9\u7a0b\uff1aTransition Condition \u548c Output Condition \u90fd\u6210\u7acb\u624d\u6709 Output Actions State Machine Diagram \ud83c\udf30 <p></p> <p>\u6ce8\u610f\uff0c\u56fe\u4e2d\u6709\u4e00\u4e2a\u9519\u8bef\uff08\u5927\u6982\uff09\uff0c\u53f3\u4fa7 \\(S_1\\) \u7684 OC \u5e94\u4e3a \\((\\overline{A}\\cdot\\overline{B})\\)\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_11","title":"\u5ef6\u65f6\u5206\u6790","text":"<p>\u9996\u5148\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u7ed9\u51fa\u89c2\u5ff5\uff0c\u65f6\u5e8f\u7535\u8def\u7684\u5ef6\u65f6\u5206\u6790\u6709\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\u548c\u4e00\u4e2a\u6b21\u8981\u90e8\u5206\uff1a</p> <ol> <li>\u7ec4\u5408\u7535\u8def\u5bfc\u81f4\u7684\u5ef6\u65f6\uff1b</li> <li>\u89e6\u53d1\u5668\u5bfc\u81f4\u7684\u5ef6\u65f6\uff1b</li> <li>\u7535\u8def\u7684\u677e\u5f1b\u65f6\u95f4\uff1b</li> </ol> <p>\u5e76\u4e14\u5f80\u5f80\u662f\u6839\u636e\u89e6\u53d1\u5668\u7684\u7c7b\u578b\uff0c\u8ba1\u7b97\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u65f6\u95f4\u3002\u6700\u6838\u5fc3\u7684\u95ee\u9898\u5c31\u662f\u8ba1\u7b97\u7535\u8def\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u7684\u6700\u77ed\u65f6\u949f\u5468\u671f\u3002\u63a5\u4e0b\u6765\uff0c\u81ea\u4e0b\u800c\u4e0a\u7684\u8fdb\u884c\u7ec6\u8282\u8865\u5145\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_12","title":"\u7ec4\u5408\u7535\u8def\u5ef6\u65f6","text":"<p>\u8fd9\u4e00\u90e8\u5206\u7684\u8be6\u7ec6\u5185\u5bb9\u5df2\u7ecf\u5728 \u4e0a\u4e00\u7ae0 \u4ecb\u7ecd\u8fc7\u4e86\uff0c\u5728\u8fd9\u91cc\uff0c\u4e3a\u4e86\u7b80\u5316\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u6211\u4eec\u5168\u90e8\u91c7\u7528 \\(t_{pd}\\)\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_13","title":"\u89e6\u53d1\u5668\u5ef6\u65f6","text":"<p>\u89e6\u53d1\u5668\u5ef6\u65f6\u76f8\u6bd4\u7ec4\u5408\u7535\u8def\u5ef6\u65f6\u590d\u6742\u5f88\u591a\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u91c7\u6837\u3002\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u201c\u5ef6\u65f6\u201d\u5e76\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u7535\u4fe1\u53f7\u4f20\u64ad\u7684\u5ef6\u8fdf\uff0c\u8fd8\u6709\u4e3a\u4e86\u4fdd\u8bc1\u4fe1\u53f7\u7a33\u5b9a\u8bbe\u8ba1\u7684\u4e00\u4e9b\u5185\u5bb9\u3002</p> <p>\u5927\u81f4\u6765\u8bf4\u6709\u4e09\u4e2a\u90e8\u5206\uff1a</p> Time <p>t_{pd}\uff08\u4f20\u64ad\u5ef6\u8fdf\u65f6\u95f4\uff09\uff1a\u8fd9\u662f\u6307\u8f93\u5165\u53d1\u751f\u53d8\u5316\u540e\uff0c\u8f93\u51fa\u53d1\u751f\u53d8\u5316\u6240\u9700\u7684\u65f6\u95f4\u3002\u5b83\u8868\u793a\u4e86\u4ece\u8f93\u5165\u53d1\u751f\u53d8\u5316\u5230\u8f93\u51fa\u53d1\u751f\u53d8\u5316\u4e4b\u95f4\u7684\u5ef6\u8fdf\u65f6\u95f4\u3002 t_{s}\uff08Setup Time\uff09\uff1a\u8fd9\u662f\u6307\u5728\u65f6\u949f\u4fe1\u53f7\u4f5c\u7528\u4e0b\uff0c\u4f7f\u5f97\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4ece\u4f4e\u7535\u5e73\u53d8\u4e3a\u9ad8\u7535\u5e73\u6240\u9700\u7684\u65f6\u95f4\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u8bbe\u7f6e\u4fe1\u53f7\u5fc5\u987b\u4fdd\u6301\u7a33\u5b9a\uff0c\u4ee5\u786e\u4fdd\u89e6\u53d1\u5668\u6b63\u786e\u5730\u5c06\u8f93\u51fa\u7f6e\u4e3a\u9ad8\u7535\u5e73\u3002 t_{h}\uff08Hold Time\uff09\uff1a\u8fd9\u662f\u6307\u5728\u65f6\u949f\u4fe1\u53f7\u4f5c\u7528\u4e0b\uff0c\u4f7f\u5f97\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4ece\u9ad8\u7535\u5e73\u53d8\u4e3a\u4f4e\u7535\u5e73\u6240\u9700\u7684\u65f6\u95f4\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u4fdd\u6301\u4fe1\u53f7\u5fc5\u987b\u4fdd\u6301\u7a33\u5b9a\uff0c\u4ee5\u786e\u4fdd\u89e6\u53d1\u5668\u6b63\u786e\u5730\u5c06\u8f93\u51fa\u7f6e\u4e3a\u4f4e\u7535\u5e73\u3002</p> <ul> <li>Setup Time\uff1a\u91c7\u6837\u8fb9\u7f18\u524d\u8f93\u5165\u4fe1\u53f7\u9700\u8981\u4fdd\u6301\u7a33\u5b9a\u7684\u65f6\u95f4\uff1b</li> <li>Hold Time\uff1a\u91c7\u6837\u8fb9\u7f18\u540e\u8f93\u5165\u4fe1\u53f7\u9700\u8981\u4fdd\u6301\u7a33\u5b9a\u7684\u65f6\u95f4\uff1b</li> <li>Propagation Time\uff1a\u89e6\u53d1\u5668\u7684\u91c7\u6837\u8fb9\u7f18\u5230\u8f93\u51fa\u7a33\u5b9a\u7684\u65f6\u95f4\uff08\u4f20\u64ad\u65f6\u95f4\uff09\uff1b</li> </ul> <p>\u4e00\u7bc7\u4ecb\u7ecd Setup Time \u548c Hold Time \u7684 \u6587\u7ae0\u3002</p> <p>\u6839\u636e\u89e6\u53d1\u5668\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u4e3b\u8981\u7684 Setup Time \u4e5f\u4e0d\u540c\uff1a</p> <p></p> <p>\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u4e9b\u70b9\u662f\uff1a</p> <ol> <li>\u8fd9\u51e0\u4e2a\u65f6\u95f4\u70b9\u8d77\u70b9/\u7ec8\u70b9\u90fd\u662f\u89e6\u53d1\u8fb9\u7f18\uff1b</li> <li>Propagation Time \u4e00\u5b9a\u957f\u4e8e Hold Time\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u7535\u8def\u5ef6\u8fdf\u65f6\u53ea\u8003\u8651 Propagation Time\uff1b</li> <li>Pulse-trigger \u548c Edge-trigger \u5728\u8868\u73b0\u4e0a\u7684\u533a\u522b\u5728\u4e8e Setup Time\uff0c\u524d\u8005\u9700\u8981\u8986\u76d6\u6574\u4e2a pulse(<code>pos</code> or <code>neg</code>)\uff1b</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_14","title":"\u677e\u5f1b\u65f6\u95f4","text":"<p>\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u7ed9\u6574\u4e2a\u7535\u8def\u7684\u4e00\u4e2a\u201c\u5bb9\u5dee\u201d\u65f6\u95f4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u8bef\u5dee\uff0c\u4f46\u662f\u7531\u4e8e\u901a\u8fc7\u524d\u4e24\u8005\u8ba1\u7b97\u51fa\u6765\u7684\u662f\u6700\u77ed\u65f6\u95f4\uff0c\u6240\u4ee5\u677e\u5f1b\u65f6\u95f4\u5fc5\u5b9a\u975e\u8d1f\u3002\uff08\u4e0d\u80fd\u5012\u6263\uff01\uff09</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_15","title":"\u65f6\u5e8f\u7535\u8def\u5ef6\u65f6","text":"<p>\u65f6\u5e8f\u7535\u8def\u7684\u5ef6\u65f6\u8ba1\u7b97\u5b9e\u9645\u4e0a\u662f\u4e3a\u4e86\u8ba1\u7b97\u65f6\u5e8f\u7535\u8def\u8fd0\u4f5c\u7684\u6700\u5927\u9891\u7387\u4ee5\u8bbe\u8ba1\u65f6\u949f\u9891\u7387\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7b97\u51fa\u7535\u8def\u80fd\u591f\u7a33\u5b9a\u5de5\u4f5c\u7684\u6700\u5c0f\u65f6\u949f\u671f\u3002</p> <p>\u5176\u8ba1\u7b97\u9075\u5faa\u4e00\u5b9a\u65b9\u6cd5\uff1a</p> <p></p> <p>\u56fe\u4e2d \\(t_{pd,FF}\\) \u6307\u89e6\u53d1\u5668\u7684 propagation time\uff0c\\(t_{COMB}\\) \u6307\u7ec4\u5408\u7535\u8def\u7684\u603b\u4f20\u64ad\u65f6\u95f4\uff08\u4e00\u822c\u60c5\u51b5\u4e0b \\(t_{COMB} = \\max{\\sum_i t_{pd,gate_i}}\\)\uff09\uff0c\\(t_{s}\\) \u6307\u89e6\u53d1\u5668\u7684 setup time\uff0c\\(t_{slack}\\) \u8868\u793a\u7535\u8def\u7684\u677e\u5f1b\u65f6\u95f4\u3002</p> <p>\uff08\u5047\uff09\u7ecf\u9a8c\u4e4b\u8c08</p> <p>\u4e00\u822c\u4ece\u4e00\u4e2a FF \u7684\u8f93\u51fa\u51fa\u53d1\u5230 FF \u7684\u8f93\u5165\u7ed3\u675f\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/","title":"Chap 5 Digital Hardware Implementation","text":"<p>\u6ce8\u610f</p> <p>\u672c\u7ae0\u8282\u5728\u8865\u5929\u4e2d\u5b8c\u6210\uff0c\u5185\u5bb9\u53ef\u80fd\u6bd4\u8f83\u7b80\u7565\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#_1","title":"\u53ef\u91cd\u7f16\u7a0b\u6280\u672f","text":"<p>\u53ef\u91cd\u7f16\u7a0b\u6280\u672f(programmable implementation technologies)</p> <p>\u76f4\u63a5\u66f4\u6539\u7535\u8def\u6765\u4fee\u6539\u7535\u8def\u529f\u80fd\u88ab\u79f0\u4e3a\u786c\u7f16\u7a0b\uff0c\u800c\u53ef\u91cd\u53d8\u6210\u6280\u672f\u8ba9\u6211\u4eec\u80fd\u591f\u4e0d\u66f4\u6539\u786c\u4ef6\u5e03\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u903b\u8f91\u529f\u80fd\u7684\u91cd\u65b0\u7f16\u8f91\u3002</p> <p>FPGA</p> <ul> <li>\u73b0\u573a\u53ef\u7f16\u7a0b\u903b\u8f91\u95e8\u9635\u5217(Field Programmable Gate Array)FPGA</li> <li>\u67e5\u627e\u8868(lookup table)LUT</li> </ul> <p>\u7f16\u7a0b\u6280\u672f(programming technologies) \u5728\u786c\u4ef6\u5c42\u9762\u6709\u4e09\u79cd\u5b9e\u73b0\u624b\u6bb5\uff1a</p> <ul> <li>\u63a7\u5236\u8fde\u63a5\u6765\u5b9e\u73b0\uff08\u4e0d\u662f\u53ef\u91cd\u7f16\u7a0b\uff09\uff1b<ul> <li>Mask programing\uff08\u63a9\u7801\u7f16\u7a0b\uff09</li> <li>Fuse\uff08\u4fdd\u9669\u4e1d\uff09</li> <li>Anti-fuse</li> </ul> </li> <li>\u63a7\u5236\u95e8\u7ea7\u7535\u8def\u7535\u538b\uff1b<ul> <li>Single-bit storage element</li> <li>Stored charge on a floating gate<ul> <li>Erasable</li> <li>Electrically erasable</li> <li>Flash (as in Flash Memory) </li> </ul> </li> </ul> </li> <li>\u4f7f\u7528\u67e5\u627e\u8868(LUT)\uff1b<ul> <li>Storage elements for the function<ul> <li>\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a <code>MUX</code>\uff0c\u5e76\u5c06\u8f93\u5165\u7aef\u63a5\u5185\u5b58\uff0c\u901a\u8fc7\u4fee\u6539\u5185\u5b58\u7684\u503c\u6765\u4fee\u6539 <code>MUX</code> \u7684\u884c\u4e3a\uff0c\u8fdb\u800c\u5b9e\u73b0\u51fd\u6570\u91cd\u7f16\u7a0b</li> </ul> </li> </ul> </li> </ul> <p>\u8bfe\u7a0b\u4e2d\u4ecb\u7ecd\u7684\u53ef\u91cd\u7f16\u7a0b\u7684\u5668\u4ef6\u4e3b\u8981\u6709\u5982\u4e0b\u56db\u79cd\uff1a</p> <ul> <li>\u53ea\u8bfb\u5185\u5b58 Read Only Memory (ROM) </li> <li>\u53ef\u7f16\u7a0b\u9635\u5217\u903b\u8f91 Programmable Array Logic (PAL^\u24c7^)</li> <li>\u53ef\u7f16\u7a0b\u903b\u8f91\u9635\u5217 Programmable Logic Array (PLA)</li> <li>Complex Programmable Logic Device (CPLD) or Field-Programmable Gate Array(FPGA)</li> </ul> <p>\u524d\u4e09\u8005\u90fd\u53ea\u80fd\u91cd\u5199\u4e00\u6b21\uff0c\u5982\u4e0b\u662f\u5b83\u4eec\u7684\u91cd\u5199\u5185\u5bb9\uff1a</p> <p></p> <p>\u5f15\u5165</p> <p>\u7531\u4e8e\u4e4b\u540e\u51fa\u73b0\u7684\u7535\u8def\u56fe\u4f1a\u975e\u5e38\u5e9e\u5927\uff0c\u6240\u4ee5\u9700\u8981\u5f15\u5165\u4e00\u4e9b\u903b\u8f91\u7b26\u53f7\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#_2","title":"\u903b\u8f91\u7b26\u53f7\u4ecb\u7ecd","text":"<p>Buffer\u2014\u2014\u7b80\u5316\u8868\u793a\u4e00\u4e2a\u53d8\u91cf\u7684\u81ea\u8eab\u548c\u5176\u975e</p> <p></p> <p>Wire connecting</p> <p>\u5728\u53ef\u7f16\u7a0b\u903b\u8f91\u7535\u8def\u4e2d\uff0c\u7ebf\u7684\u8fde\u63a5\u4e0d\u518d\u53ea\u6709\u5355\u7eaf\u7684\u8fde\u901a\u548c\u4e0d\u8fde\u901a\u7684\u5173\u7cfb\uff1a</p> <p>\u5bf9\u4e8e\u4e24\u6761\u76f8\u4ea4\u5bfc\u7ebf\uff1a</p> <ul> <li>\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u7b26\u53f7\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u4ea4\u53c9\u70b9 is not connected \uff1b</li> </ul> <p></p> <ul> <li>\u5982\u679c\u6709\u4e00\u4e2a \u274c\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u4ea4\u53c9\u70b9 programmable\uff1b</li> </ul> <p></p> <ul> <li>\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u52a0\u7c97\u7684\u70b9\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u4ea4\u53c9\u70b9 not programmable\uff1b</li> </ul> <p></p> <p>\u7279\u522b\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u5668\u4ef6\u7684\u6240\u6709\u8f93\u5165\u90fd\u662f programmable\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u9009\u62e9\u628a\u8fd9\u4e2a \u274c \u753b\u5230\u903b\u8f91\u95e8\u4e0a\uff08\u5982\u4e0b\u56fe e \u548c f\uff09\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#rom","title":"ROM","text":"<p>ROM \u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a \uff08\u56fa\u5b9a\u4e0e\u95e8\u548c\u53ef\u7f16\u7a0b\u6216\u95e8\u6784\u6210\uff09</p> <p></p> <p>\u800c ROM \u7684\u5927\u5c0f\u5982\u4e0b\u8ba1\u7b97\uff08\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff09\uff1a</p> \\[ \\begin{aligned}     ROM\\;\\;size\\;\\;&amp;=\\;\\;address\\;\\;width\\;\\;\\times\\;\\;word\\;\\;width&amp;\\\\                    &amp;=\\;\\;2^2\\;\\;\\times\\;\\;4\\;\\;=\\;\\;16\\;\\;bit&amp; \\end{aligned} \\] eg <p>\u66f4\u6e05\u6670\u7684\u8868\u793a\u5176\u5185\u90e8\u903b\u8f91\u7684\uff0c\u53ef\u4ee5\u5c06 ROM \u5199\u6210\u8fd9\u6837\uff1a </p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#pal","title":"PAL","text":"<p>\u53ef\u91cd\u7f16\u7a0b\u8f93\u5165\u7ec4\u5408\u6765\u5f97\u5230\u56fa\u5b9a\u8f93\u51fa\u3002</p> <p>\u5176\u5177\u6709\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u56e0\u4e3a\u8868\u8fbe\u51fd\u6570\u7684\u65b9\u6cd5\u4e0d\u662f\u901a\u8fc7 SOM \u6216\u8005 POM \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u80fd\u591f\u5b8c\u5907\u8868\u8fbe\u51fd\u6570\u3002</p> <p>\u5728\u6b64\u57fa\u7840\u4e0a\u7684\u4e00\u4e2a\u6539\u8fdb\u662f\uff0c\u901a\u8fc7\u5c06\u4e00\u4e2a\u65e2\u6709\u7684 PAL \u8f93\u51fa\u5f53\u4f5c\u8f93\u5165\uff0c\u8f93\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898\u3002</p> eg <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#pla","title":"PLA","text":"<p>\u4e0e PAL \u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u4e5f\u80fd\u5bf9\u8f93\u51fa\u7ec4\u5408\u8fdb\u884c\u91cd\u7f16\u7a0b\u3002</p> <p>\u5176\u540c PAL \u4e00\u6837\u5177\u6709\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u56e0\u4e3a\u8868\u8fbe\u51fd\u6570\u7684\u65b9\u6cd5\u4e0d\u662f\u901a\u8fc7 SOM \u6216\u8005 POM \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u80fd\u591f\u5b8c\u5907\u8868\u8fbe\u51fd\u6570\u3002</p> <p>\u5728\u57fa\u7840\u4e0a\u4e00\u4e2a\u6539\u8fdb\u662f\u5728\u8f93\u51fa\u7684\u65f6\u5019\u518d\u505a\u4e00\u6b21\u5f02\u6216\uff08\u4e0d\u7528\u975e\u95e8\u4f53\u73b0\u4e86\u53ef\u91cd\u7f16\u7a0b\u7684\u601d\u60f3\uff09\uff0c\u4ee5\u4ea7\u751f\u65b0\u7684\u9879\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898\u3002 Attention:\u6ce8\u610fXOR\u7684\u4f5c\u7528\uff01\uff01\uff01</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u51fa\u73b0\u4e86\u65b0\u7684\u9879\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#lookup_tables","title":"Lookup Tables","text":"<p>\u901a\u8fc7\u8ba9\u6570\u636e\u6e90\u63a5\u5185\u5b58\uff0c\u5e76\u901a\u8fc7\u4fee\u6539\u771f\u503c\u8868\u5185\u7684\u503c\uff0c\u5373\u4fee\u6539\u5185\u5b58\u91cc\u7684\u503c\uff0c\u6765\u5b9e\u73b0\u6570\u636e\u6e90\u7684\u53d8\u5316\uff0c\u6765\u6539\u53d8 <code>MUX</code> \u7684\u884c\u4e3a\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u51fd\u6570\u8f93\u5165\u7684\u6570\u91cf\u4f1a\u53d8\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u901a\u8fc7\u7075\u6d3b\u7ec4\u5408\u7684\u65b9\u6cd5\uff08\u6bd4\u5982\u901a\u8fc7\u56db\u9009\u4e8c\u9009\u4e00\u7684\u65b9\u5f0f\uff0c\u7528\u4e09\u4e2a\u4e8c\u9009\u4e00\u7684 <code>MUX</code> \u6765\u5b9e\u73b0\u56db\u9009\u4e00\uff09\u6765\u5b9e\u73b0\u591a\u8f93\u5165\u3002</p> <p>\u5e38\u89c1\u7684 <code>LUT</code> \u5927\u5c0f\u4ee5 16bits \u6216 64bits \u7684 4 \u8f93\u5165\u6216 6 \u8f93\u5165\u4e3a\u4e3b\u3002</p> <p>\u7531\u4e8e <code>LUT</code> \u5b58\u7684\u672c\u8d28\u4e0a\u662f\u771f\u503c\u8868\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u8f93\u5165\u7b26\u5408\u8981\u6c42\u7684\u903b\u8f91\u51fd\u6570\u3002</p> <p>\u6240\u4ee5\uff0c\u95ee\u9898\u5c31\u53d8\u5316\u4e3a\u5982\u4f55\u7528\u8f83\u5c0f\u7684 <code>LUT</code> \u6765\u7ec4\u5408\u5b9e\u73b0\u590d\u6742\u7684\u903b\u8f91\u51fd\u6570\u3002</p> <p><code>LUT</code> \u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p><code>FPGA</code> \u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>CLB(Configurable Logic Block)<ul> <li>\u5927\u91cf\u5b58\u50a8 <code>LUT</code></li> </ul> </li> <li>SM(Switch Matrix)<ul> <li>\u53ef\u7f16\u7a0b\u7684\u4ea4\u6362\u77e9\u9635</li> </ul> </li> <li>IOB(Input &amp; Output Block)<ul> <li>\u53ef\u7f16\u7a0b\u7684\u8f93\u5165\u8f93\u51fa\u5355\u5143</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#clb","title":"CLB","text":"<p>CLB \u662f <code>FPGA</code> \u4e2d\u7684\u57fa\u7840\u903b\u8f91\u5355\u5143\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#sm","title":"SM","text":"<p>\u901a\u8fc7\u76f8\u5f53\u590d\u6742\u7684\u7b97\u6cd5\uff0c <code>SM</code> \u4f1a\u6839\u636e\u76ee\u6807\u903b\u8f91\uff0c\u9009\u62e9\u94fe\u63a5\u4e0d\u540c\u7684 <code>CLB</code> \u4ee5\u5b9e\u73b0\u590d\u6742\u903b\u8f91\u3002</p> <p>\u5b83\u5177\u6709\u8fd9\u4e9b\u57fa\u672c\u5c5e\u6027\uff1a</p> <ol> <li>Flexibility: \u8bc4\u4f30\u4e00\u6761\u7ebf\u53ef\u4ee5\u8fde\u63a5\u5230\u591a\u5c11\u7ebf\uff1b</li> <li>Topology: \u54ea\u4e9b\u7ebf\u53ef\u4ee5\u88ab\u8fde\u63a5\u5230\uff1b</li> <li>Routability: \u6709\u591a\u5c11\u56de\u8def\u53ef\u4ee5\u88ab\u8def\u7531\uff1b</li> </ol> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#iob","title":"IOB","text":"<p><code>IOB</code> \u7528\u6765\u5bf9\u5916\u90e8\u8bbe\u5907\u8fdb\u884c\u8fde\u63a5\uff0c\u7528\u6765\u63a7\u5236\u8f93\u5165\u548c\u8f93\u51fa\u3002</p> <p></p> eg for <code>FPGA</code> <p>\u901a\u8fc7 <code>FPGA</code> \u5b9e\u73b0 \\(f=x_1x_2+\\overline{x_2x_3}\\)\uff1a</p> <p>\u5206\u89e3\u95ee\u9898\uff1a\\(f_1 = x_1x_2,\\;\\;f_2=\\overline{x_2x_3},\\;\\;f=f_1+f_2\\)\u3002</p> <p></p> <p>\u5728\u8f6f\u4ef6\u5c42\u9762\u7f16\u7a0b\u5b8c\u540e\uff0c\u4f1a\u751f\u6210\u4f4d\u6d41\u6587\u4ef6(<code>bitfile</code>)\uff0c\u4e0b\u8f7d\u5230\u677f\u65f6\u4f1a\u66f4\u65b0 <code>FPGA</code> \u4e2d\u7684\u5185\u5bb9\u3002</p> <p>\u7ec4\u5408\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u6cd5</p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e0d\u7ba1\u662f\u53ef\u91cd\u7f16\u7a0b\u8fd8\u662f\u4e0d\u53ef\u91cd\u7f16\u7a0b\uff0c\u90fd\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u8fdb\u884c\u4e00\u6b21\u5c0f\u7ed3\uff1a</p> <ol> <li><code>Decoder</code>s &amp; <code>OR</code> gates<ul> <li>\u5c06\u8bd1\u7801\u51fa\u6765\u7684\u9700\u8981\u7684\u76ee\u6807\u7ec4\u5408\u90fd <code>OR</code> \u5728\u4e00\u8d77\uff1b</li> </ul> </li> <li><code>MUX</code>s<ul> <li>\u901a\u8fc7\u591a\u8def\u9009\u62e9\u5668\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\uff1b </li> </ul> </li> <li><code>ROM</code>s</li> <li><code>PAL</code>s</li> <li><code>PLA</code>s</li> <li><code>LUT</code>s</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap06/","title":"Chap 6 Registers &amp; Register Transfers","text":""},{"location":"ZJU_CS/DigitalDesign/Chap06/#_1","title":"\u5bc4\u5b58\u5668","text":"<p>\u5bc4\u5b58\u5668(registers) \u7c97\u7565\u7684\u6765\u8bf4\u5c31\u662f\u4e00\u5806\u89e6\u53d1\u5668\u4ee5\u53ca\u5bf9\u5e94\u7684\u72b6\u6001\u63a7\u5236\u7535\u8def\uff0c\u7528\u6765\u5b9e\u73b0\u591a\u4f4d\u6570\u636e\u7684\u5b58\u50a8\u7b49\u64cd\u4f5c\u3002</p> <p>\u5176\u4e2d\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u5bc4\u5b58\u5668\u53eb \u8ba1\u6570\u5668(counter)\uff0c\u975e\u5e38\u76f4\u767d\u7684\uff0c\u5b83\u7684\u884c\u4e3a\u5c31\u662f\u968f\u7740\u65f6\u949f\u5468\u671f\u4e0d\u65ad\u5728\u56fa\u5b9a\u7684\u72b6\u6001\u5e8f\u5217\u4e2d\u5faa\u73af\u3002\u66f4\u5f62\u8c61\u7684\uff0c\u4e00\u822c\u662f\u5b9e\u73b0\u81ea\u52a8\u7684\u8ba1\u6570\u529f\u80fd\uff0c\u50cf\u7535\u5b50\u65f6\u949f\u90a3\u6837\u3002</p> <p>Registers are useful for storing and manipulating information; counters are employed in circuits that sequence and control operations in a digital system.</p> <p>\u5b9e\u73b0\u5bc4\u5b58\u5668\u4e00\u4e2a\u6700\u76f4\u767d\u7684\u60f3\u6cd5\u5c31\u662f\u516c\u7528\u63a7\u5236\u7ebf\u8def\u548c\u5206\u5217\u6570\u636e\u7ebf\u8def\u6765\u63a7\u5236\u591a\u4e2a\u89e6\u53d1\u5668\uff0c\u5982\u4e0b\u56fe\u662f\u4f7f\u7528 D <code>FF</code> \u5b9e\u73b0\u7684\u4e00\u4e2a 4-bit register\uff1a</p> <p></p> <p>\u6211\u4eec\u79f0\u65b0\u6570\u636e\u88ab\u5199\u5165\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\u4e3a \u8f7d\u5165(load)\uff0c\u800c\u5982\u679c\u8f7d\u5165\u64cd\u4f5c\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u8109\u51b2\u4e2d\u5b8c\u6210\uff0c\u6211\u4eec\u79f0\u4e4b\u662f \u5e76\u884c(parallel) \u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_2","title":"\u4fdd\u6301","text":"<p>\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u56fe\u7684\u5bc4\u5b58\u5668\u5728\u6bcf\u4e2a\u65f6\u949f\u90fd\u5141\u8bb8\u8f7d\u5165\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u90fd\u4f1a\u6539\u53d8\u4e3a\u8f93\u5165\u3002\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u5373\u4f7f\u6211\u4eec\u4e0d\u7ba1\u5b83\u5b83\u4e5f\u80fd\u4fdd\u6301\u4e4b\u524d\u7684\u503c\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u65b9\u6848\u3002</p> <p>\u65b9\u6848</p> plan Aplan B <p>\u5176\u4e2d\u4e00\u4e2a\u505a\u6cd5\u662f\u9700\u8981\u9009\u62e9\u6027\u7684\u8ba9\u5b83\u8ddf\u968f\u65f6\u949f\u8109\u51b2\u5207\u6362\u72b6\u6001\u3002\u505a\u6cd5\u5c31\u662f\u5c06 Control \u4fe1\u53f7\u4fee\u6539\u4e3a \\(C = \\overline{Load} + Clock\\)\uff0c\u5982\u6b64\u800c\u6765\uff0c\u5f53 \\(Load = 0\\) \u65f6\uff0c\u59cb\u7ec8\u6709 \\(C = 0\\)\uff0c\u8109\u51b2\u6d88\u5931\uff0c\u5bc4\u5b58\u5668\u65e0\u6cd5\u88ab\u8f7d\u5165\u3002\u5982\u4e0b\u56fe\uff0c\u8fd9\u79cd\u6280\u672f\u53eb \u95e8\u63a7\u65f6\u949f(clock gating)\u3002</p> <p></p> <p>\u53e6\u5916\u4e00\u4e2a\u505a\u6cd5\u662f\uff0c\u5728\u4e0d\u5e0c\u671b\u5b83\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4e0d\u65ad\u5c06\u5b83\u7684\u8f93\u5165\u8f7d\u5165\uff0c\u4e5f\u5c31\u662f\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a <code>MUX</code> \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u7528 <code>EN</code> \u4f7f\u80fd\u7aef\u6765\u9009\u62e9\u662f\u8f7d\u5165\u65b0\u503c\u8fd8\u662f\u4fdd\u6301\u4e4b\u524d\u7684\u503c\uff0c\u5982\u4e0b\u56fe\u3002</p> <p></p> <p>clock skew</p> <p>\u7136\u800c\uff0c\u5728\u95e8\u63a7\u65f6\u949f\u6280\u672f\u4e2d\uff0c\u7531\u4e8e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u903b\u8f91\u95e8\uff0c\u65f6\u949f\u8109\u51b2\u5230\u8fbe Control \u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u989d\u5916\u7684\u4f20\u64ad\u5ef6\u65f6\uff0c\u5373 \u65f6\u949f\u504f\u79fb(clock skew)\u3002\u800c\u8fd9\u5fae\u5c0f\u7684\u5ef6\u65f6\u4f1a\u5bfc\u81f4\u5728\u6574\u4e2a\u540c\u6b65\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u540c\u7ec4\u4ef6\u5f97\u5230\u7684\u65f6\u949f\u8109\u51b2\u6709\u504f\u5dee\uff0c\u800c\u8fd9\u662f\u6211\u4eec\u6240\u4e0d\u5e0c\u671b\u770b\u5230\u7684\u3002\u6240\u4ee5\u5728\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5e94\u5f53\u907f\u514d\u6216\u5c3d\u53ef\u80fd\u7f29\u5c0f\u65f6\u949f\u504f\u79fb\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_3","title":"\u5bc4\u5b58\u5668\u5355\u5143","text":"<p>\u5c0f\u8282\u5bfc\u8bfb</p> <p>\u672c\u5c0f\u8282\u5728\u4e66\u672c\u4e2d\u7684\u4f4d\u7f6e\u9760\u540e\uff0c\u4f46\u662f\u8003\u8651\u5230\u5185\u5bb9\u7684\u8fde\u7eed\u6027\u6211\u51b3\u5b9a\u63d0\u524d\uff0c\u672c\u8282\u5185\u5bb9\u4f1a\u6d89\u53ca\u4e00\u4e9b\u4e4b\u540e\u7684\u5185\u5bb9\uff0c\u5b9e\u9645\u4e0a\u7684\u7edd\u5bf9\u6027\u77e5\u8bc6\u8f83\u5c11\uff0c\u53ef\u4ee5\u7c97\u770b\u8fc7\u7559\u4e0b\u5370\u8c61\uff0c\u5927\u90e8\u5206\u77e5\u8bc6\u9700\u8981\u901a\u8fc7\u6848\u4f8b\u5206\u6790\u548c\u5b9e\u8df5\u83b7\u5f97\uff0c\u662f\u7c7b\u4f3c\u4e8e\u8bbe\u8ba1\u6307\u5bfc\u601d\u60f3\u7684\u5185\u5bb9\u3002</p> <p>\u5bc4\u5b58\u5668\u5355\u5143(Register Cell) \u662f\u5bc4\u5b58\u5668\u7684\u4e2a\u4f53\u5355\u5143\uff0c\u4e3b\u8981\u5305\u62ec\u4e00\u4e2a <code>FF</code> \u53ca\u5b9e\u73b0\u5176\u7ec4\u5408\u903b\u8f91\u7684\u7ec4\u5408\u7535\u8def\u3002</p> <p>A single-bit cell of an iterative combinational circuit, connected to a flip-flop that provides the output, forms a two-state sequential circuit called a register cell</p> <p>\u5bf9\u4e8e n bits \u7684\u5bc4\u5b58\u5668\u5355\u5143\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u5176 1 bit \u7684\u5bc4\u5b58\u5668\u5355\u5143\uff0c\u5e76\u590d\u5236 n \u4efd\u5b9e\u73b0\u3002</p> <p>\u8bbe\u8ba1\u5bc4\u5b58\u5668\u5355\u5143\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5bc4\u5b58\u5668\u5355\u5143\u8fdb\u884c\u5b9a\u4e49\u3002\u800c\u6307\u5b9a(Specify)\u4e00\u4e2a\u5bc4\u5b58\u5668\u5355\u5143\u7684\u529f\u80fd\u7684\u4e3b\u8981\u6709\u8fd9\u4e9b\u65b9\u9762\uff1a</p> <ul> <li>\u5bc4\u5b58\u5668\u7684\u529f\u80fd\u51fd\u6570\uff1b<ul> <li>\u4e00\u822c\u6307\u5bc4\u5b58\u5668\u4f20\u8f93\uff1b</li> </ul> </li> <li>\u63a7\u5236\u4fe1\u53f7\u6784\u6210\uff1b<ul> <li>\u6709\u54ea\u4e9b\u63a7\u5236\u4fe1\u53f7\u3001\u662f\u5426\u7f16\u7801\u3001\u5982\u4f55\u51b3\u5b9a\u662f\u5426 Load \u7b49\uff1b</li> </ul> </li> <li>\u5bc4\u5b58\u5668\u7684\u8f93\u5165\u6570\u636e\uff1b<ul> <li>\u6709\u54ea\u4e9b\u8f93\u5165\u6570\u636e\u3001\u662f\u5426\u9700\u8981\u9884\u5148\u5904\u7406\u7b49\uff1b</li> </ul> </li> </ul> <p>\u5728\u5b9e\u9645\u5b9e\u73b0\u65f6\uff0c\u5206\u4e3a <code>MUX</code> \u5b9e\u73b0\u548c\u65f6\u5e8f\u903b\u8f91\u5b9e\u73b0\u4e24\u79cd\u65b9\u6cd5\u3002</p> <p>\u524d\u8005\u5c31\u662f \u57fa\u4e8e Mux \u5b9e\u73b0\u4f20\u8f93 \u4e2d\u5c06\u8981\u63d0\u5230\u7684\u90a3\u6837\uff0c\u5173\u4e8e\u4e0a\u9762\u54ea\u4e9b\u5185\u5bb9\u5728\u8be5\u5c0f\u8282\u4e2d\u7684\u4f53\u73b0\u5982\u4e0b\u56fe\uff1b</p> <p></p> <p>\u4e5f\u5c31\u662f\u901a\u8fc7\u5206\u522b\u5b9e\u73b0\u903b\u8f91\uff0c\u7136\u540e\u901a\u8fc7\u63a7\u5236\u4fe1\u53f7\u9009\u62e9\u6570\u636e\u8f93\u5165\u6765\u5b9e\u73b0\u3002</p> <p>\u800c\u540e\u8005\u6309\u7167\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u786e\u5b9a\u72b6\u6001\u56fe\u540e\u6839\u636e\u72b6\u6001\u53d8\u5316\u8bbe\u8ba1\u65f6\u5e8f\u7535\u8def\uff0c\u8bbe\u8ba1\u4f18\u5316\u51b3\u5b9a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 \u7b2c\u56db\u7ae0#\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#transfer","title":"\u5bc4\u5b58\u5668\u4f20\u8f93(transfer)","text":"<p>\u8bf4\u660e</p> <p>\u628a transfer \u7ffb\u8bd1\u4e3a\u201c\u4f20\u8f93\u201d\u662f\u6211\u8111\u74dc\u4e00\u62cd\u7684\u884c\u4e3a\uff0c\u6211\u5e76\u4e0d\u77e5\u9053\u7ffb\u8bd1\u6210\u4ec0\u4e48\u6bd4\u8f83\u5408\u9002\uff0c\u5982\u679c\u8bfb\u8005\u6709\u66f4\u597d\u7684\u7ffb\u8bd1\uff0c\u8bf7\u544a\u8bc9\u6211\uff01</p> <p>\u4e00\u4e2a\u590d\u6742\u7cfb\u7edf\u9664\u4e86\u4fe1\u606f\u7684\u5b58\u50a8\u8fd8\u9700\u8981\u4fe1\u606f\u7684\u4f20\u8f93\u548c\u5904\u7406\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7075\u6d3b\u3001\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u9700\u8981\u4fe1\u606f\u4e4b\u95f4\u80fd\u591f\u5e7f\u6cdb\u5730\u4ea4\u4e92\u3002\u5927\u90e8\u5206\u7535\u5b50\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a \u63a7\u5236\u5355\u5143(Control Unit) \u6765\u8d1f\u8d23\u6307\u6325\uff08\u51b3\u5b9a\u6307\u4ee4\u7684\u5e8f\u5217\uff09 \u6570\u636e\u901a\u8def(Datapath) \u8fdb\u884c\u6570\u636e\u5904\u7406\u3002</p> <p>Datapaths are defined by their registers and the operations performed on binary data stored in the registers.</p> <p>\u5bf9\u4e8e\u5bc4\u5b58\u5668\u81ea\u8eab\u800c\u8a00\uff0c\u5b83\u53ef\u80fd\u5b9e\u73b0 \u8f7d\u5165(load)\u3001\u6e05\u7a7a(clear)\u3001\u4f4d\u79fb(shift)\uff08\u5173\u4e8e\u8fd9\u91cc\u7684shift\u7684\u542b\u4e49\u6211\u5b58\u7591\uff09 \u548c \u8ba1\u6570(count) \u7b49\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u79fb\u52a8\u4e86\u7684\u52a0\u5de5\uff0c\u88ab\u79f0\u4e3a \u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c(Register Transfer Operations)\uff0c\u5b83\u4eec\u4e3b\u8981\u5305\u542b\u8fd9\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u7cfb\u7edf\u4e2d\u7684\u5bc4\u5b58\u5668\u96c6\u5408\uff1b</li> <li>\u5bf9\u4e8e\u6570\u636e\u7684\u64cd\u4f5c\uff1b</li> <li>\u76d1\u7763\u64cd\u4f5c\u5e8f\u5217\u7684\u63a7\u5236\uff1b</li> </ol> <p>\u5176\u4e2d\uff0c\u6700\u57fa\u7840\u7684\u90a3\u90e8\u5206\u64cd\u4f5c\u88ab\u79f0\u4e3a \u5fae\u64cd\u4f5c(microoperation)\uff0c\u5b83\u4eec\u662f\u5b9e\u73b0\u590d\u6742\u64cd\u4f5c\u7684\u57fa\u7840\uff0c\u4f8b\u5982\u5c06 R1 \u7684\u6570\u636e\u8f7d\u5165 R2\uff0c\u5c06 R1 \u548c R2 \u76f8\u52a0\uff0c\u6216\u662f\u81ea\u589e R1 \u7b49\u3002\u5b83\u4eec\u901a\u5e38\u4ee5\u6bd4\u7279\u5411\u91cf\u4e3a\u8f7d\u4f53\u5e76\u884c\u5b9e\u73b0\u7684\u3002</p> <p>Note that:</p> <p>the term \u201cmicrooperation,\u201d as used here, does not refer to any particular way of producing the control signals: specifically, it does not imply that the control signals are generated by a control unit based on a technique called microprogramming.</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_4","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c &amp; \u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00","text":"<p>\u5bf9\u4e8e\u7b80\u5355\u7684\u65f6\u5e8f\u903b\u8f91\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u72b6\u6001\u673a\u7b49\u65b9\u5f0f\u6765\u63cf\u8ff0\u5b83\u4eec\u7684\u884c\u4e3a\uff0c\u4f46\u662f\u5bf9\u4e0e\u89c4\u6a21\u66f4\u5927\u7684\u7cfb\u7edf\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4ef6\u5f88\u75db\u82e6\u7684\u4e8b\u60c5\u3002\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u4e13\u6ce8\u4e8e\u884c\u4e3a\u903b\u8f91\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u5bc4\u5b58\u5668\u4f20\u8f93\u4e2d\u7684\u903b\u8f91\u884c\u4e3a\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00(Register Transfer Language)RTL\u3002</p> <p>\u901a\u5e38\u5177\u6709\u7279\u6b8a\u529f\u80fd\u7684\u5bc4\u5b58\u5668\u90fd\u4f1a\u7528\u5176\u540d\u79f0\u7f29\u5199\u5927\u5199\u8868\u793a\uff0c\u4f8b\u5982 AR(Address Register)\uff0cPC(Program Counter)\uff0cIR(Instruction Register) \u6216\u8005\u66f4\u666e\u901a\u7684 R2(Register 2)\u3002</p> <p>Little-endian &amp; Big-endian</p> <p>\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u4f1a\u7528\u8fd9\u4e9b\u5f62\u5f0f\u6765\u56fe\u5f62\u5316\u7684\u8868\u793a\u5bc4\u5b58\u5668\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u5e38\u89c1\u64cd\u4f5c\u7528 RTL \u8868\u793a\u65b9\u6cd5\u548c\u7b26\u53f7\u5982\u4e0b\uff1a</p> <p></p> <p></p> <p>concatenation:\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u4e8b\u60c5\uff1f</p> <p>\u9700\u8981\u989d\u5916\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8868\u8fbe\u6761\u4ef6\u8bed\u53e5\uff0c\u4f8b\u5982\u6211\u4eec\u60f3\u8868\u8fbe\uff1a</p> \\[ if\\, (K_1 = 1) \\,then\\, (R2 \\leftarrow R1) \\] <p>\u5219\u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[ K_1 : R2 \\leftarrow R1 \\]"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_5","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u5b9e\u73b0","text":"<p>\u5f15\u5165</p> <p>\u5982\u4f55\u5b9e\u73b0\u5bc4\u5b58\u5668\u6240\u5b58\u50a8\u7684\u6570\u636e\u4e4b\u95f4\u7684\u5904\u7406\u4e0e\u4ea4\u4e92\u662f\u672c\u7ae0\u8282\u7684\u6838\u5fc3\u547d\u9898\u3002\u5982\u679c\u8bf4 \u5fae\u64cd\u4f5c \u5904\u7406\u7684\u662f\u6570\u636e\u4e4b\u95f4\u7684\u5904\u7406\uff0c\u90a3 \u5bc4\u5b58\u5668\u4f20\u8f93 \u5219\u7740\u773c\u4e8e\u6570\u636e\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</p> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5982\u4f55\u628a\u6570\u636e\u7ed9\u5230\u522b\u7684\u5bc4\u5b58\u5668\u3001\u5982\u4f55\u83b7\u53d6\u522b\u7684\u5bc4\u5b58\u5668\u7ed9\u5230\u7684\u6570\u636e\u3001\u5982\u4f55\u4f20\u8f93\u548c\u9009\u62e9\u8fd9\u4e9b\u6570\u636e\uff0c\u5c31\u662f\u672c\u5c0f\u8282\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>\u7279\u522b\u7684\uff0c\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u5b9e\u73b0\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 \u8f6c\u79fb \u64cd\u4f5c\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#mux","title":"\u57fa\u4e8e MUX \u5b9e\u73b0\u4f20\u8f93","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5355\u4e00\u5bc4\u5b58\u5668\uff0c\u5b83\u7684 \u8f93\u5165 \u53ef\u80fd\u6709\u591a\u79cd\u6765\u6e90\uff0c\u4f8b\u5982\u5176\u5b83\u5bc4\u5b58\u5668\uff0c\u53c8\u6216\u8005\u662f\u5176\u4ed6\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5b83\u7684\u8f93\u5165\u5f88\u53ef\u80fd\u662f\u4e0d\u552f\u4e00\u7684\uff0c\u800c\u540c\u4e00\u65f6\u523b\u6211\u4eec\u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u6765\u6e90\u7684\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 <code>MUX</code> \u6765\u5bf9\u8f93\u5165\u8fdb\u884c\u9009\u62e9\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355 \ud83c\udf30 \u5982\u4e0b\uff1a</p> <p></p> <p>\u7528\u8bed\u8a00\u6765\u63cf\u8ff0\u8fd9\u4e2a\u603b\u4f53\u67b6\u6784\u5c31\u662f\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217 one-hot \u7f16\u7801\uff08\u4e0d\u786e\u5b9a\uff0c\u4e5f\u8bb8\u53ef\u80fd\u90fd\u4e3a\u96f6\uff1f\u6211\u611f\u89c9\u53d6\u51b3\u4e8e \u4fdd\u6301 \u7684\u5b9e\u73b0\u3002\uff09\u6765\u8868\u793a\u9009\u62e9\u54ea\u4e2a\u8f93\u5165\u6e90\uff08\u4e0b\u56fe\u4e2d \\(K_0\\sim K_{n-1}\\)\uff09\uff0c\u518d\u901a\u8fc7 <code>Encoder</code> \u5c06\u5b83\u4eec\u7f16\u7801\u4f5c\u4e3a <code>MUX</code> \u7684\u8f93\u5165\u9009\u62e9\u4fe1\u53f7\uff08\u4e0b\u56fe\u4e2d \\(S_m \\sim S_0\\)\uff09\uff0c\u4ece\u591a\u4e2a\u8f93\u5165\u6e90\uff08\u4e0b\u56fe\u4e2d \\(0 \\sim k \\sim (n-1)\\)\uff09\u4e2d\u9009\u62e9\u5bf9\u5e94\u7684\u6e90\uff0c\u5e76\u8f93\u51fa\uff0c\u7ed9\u5230 R0\uff1b\u6b64\u5916\uff0c\u5c06\u9009\u62e9\u4fe1\u53f7\u90fd\u6216\u8d77\u6765\uff0c\u4f5c\u4e3a R0 \u7684 Load \u4fe1\u53f7\u8f93\u5165\u3002</p> <p></p> <p>\u5176\u4e2d <code>MUX</code> \u7684 \\(k \\sim (n-1)\\) \u5b9e\u73b0\u4e86 \u8f6c\u79fb \u64cd\u4f5c\u3002</p> <p>\u5c0f\u7ed3</p> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c<code>MUX</code> \u5b9e\u73b0\u4e3b\u8981\u7684\u5b9e\u73b0\u4e86 \u591a\u5bf9\u4e00 \u7684\u6570\u636e\u4f20\u8f93\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u5355\u5355\u4f7f\u7528 <code>MUX</code> \u6765\u5b8c\u6210\u5bc4\u5b58\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\uff08\u5047\u8bbe\u6240\u6709\u5bc4\u5b58\u5668\u90fd\u80fd\u76f8\u4e92\u4f20\u8f93\u6570\u636e\uff09\uff0c\u90a3\u5c06\u8fd9\u4e2a\u6a21\u578b\uff08\u56fe\u4f8b\u5728\u4e0b\u4e00\u5c0f\u8282\uff09\u62bd\u8c61\u540e\uff0c\u6211\u4eec\u5f97\u5230\u7684\u5c06\u662f\u4e00\u5f20\u201c\u5b8c\u5168\u56fe\u201d\uff0c\u7136\u800c\u5b83\u8089\u773c\u53ef\u89c1\u7684\u5f00\u9500\u5927\u3002</p> <p>\u800c\u603b\u7ebf\u5219\u975e\u5e38\u5de7\u5999\u5730\u4f18\u5316\u4e86\u8fd9\u4e2a\u95ee\u9898\uff08\u5e76\u4e0d\u662f\u4e0a\u4f4d\u66ff\u4ee3\u5173\u7cfb\uff09\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_6","title":"\u57fa\u4e8e\u603b\u7ebf\u5b9e\u73b0\u4f20\u8f93","text":"<p>\u5728\u4e0a\u4e00\u5c0f\u8282\u7684\u5c0f\u7ed3\u4e2d\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u4e86 <code>MUX</code> \u5b9e\u73b0\u7684\u4f18\u52a3\uff0c\u4e5f\u63d0\u5230\u4e86 \u603b\u7ebf(bus) \u4f20\u8f93\u7684\u4f18\u52bf\uff0c\u90a3\u4e48\u5b83\u5177\u4f53\u6765\u8bf4\u5176\u5b9e\u73b0\u65b9\u6cd5\u6709\u4e24\u79cd\u2014\u2014\u901a\u8fc7\u5171\u6709 <code>MUX</code> \u5b9e\u73b0\uff0c\u6216\u901a\u8fc7\u4e09\u6001\u95e8\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#mux_1","title":"\u5171\u6709 MUX \u5b9e\u73b0","text":"<p>\u8ba9\u6211\u4eec\u4ee5\u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u6a21\u578b\u4e3a\u4f8b\uff0c\u5bf9\u6bd4\u901a\u8fc7\u4e13\u6709 <code>MUX</code> \u5b9e\u73b0\u548c\u901a\u8fc7 \u5355\u4e00\u603b\u7ebf(single bus) \u5b9e\u73b0\u7684\u533a\u522b\uff1a</p> <p></p> <p>\u9996\u5148\u5bf9\u603b\u7ebf\u5b9e\u73b0\u8fdb\u884c\u8bf4\u660e\uff0c\u540c\u6837\u662f\u4f7f\u7528 <code>MUX</code>\uff0c\u4f46\u6b64\u65f6 <code>MUX</code> \u4e0d\u518d\u662f\u67d0\u4e2a\u5bc4\u5b58\u5668\u7684 \u4e13\u6709\u903b\u8f91(dedicated logic)\uff0c\u800c\u662f\u4e09\u4e2a\u5bc4\u5b58\u5668\u5171\u540c\u4f7f\u7528\u7684 \u5171\u6709\u903b\u8f91(shared logic)\u3002\u603b\u7ebf\u4e2d\u7684 <code>MUX</code> \u5728\u6240\u6709\u5bc4\u5b58\u5668\u7684\u8f93\u5165\u4e2d\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\uff0c\u5e76\u5c06\u5b83\u8f93\u51fa\uff0c\u7ed9\u5230\u6240\u6709\u5bc4\u5b58\u5668\uff1b\u800c\u603b\u7ebf\u901a\u8fc7\u63a7\u5236 Load \u4fe1\u53f7\u6765\u9009\u62e9\u8ba9\u54ea\u4e2a\uff08\u6216\u54ea\u4e9b\uff09\u5bc4\u5b58\u5668\u5f97\u5230\u8fd9\u4e2a\u4fe1\u53f7\u3002</p> <p>\u63a5\u4e0b\u6765\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4ee5\u603b\u7ebf\u5b9e\u73b0\u4e3a\u4e3b\u4f53\uff0c\u4e0e <code>MUX</code> \u5b9e\u73b0\u5bf9\u6bd4\uff1a</p> <ul> <li>\u4f18\u52bf\uff1a<ul> <li>\u7535\u8def\u66f4\u7cbe\u7b80\uff0c\u6210\u672c\u66f4\u4f4e\uff0c\u968f\u7740\u5bc4\u5b58\u5668\u589e\u52a0\u8fd9\u4e2a\u7279\u70b9\u66f4\u52a0\u660e\u663e\uff1b</li> </ul> </li> <li>\u52a3\u52bf\uff1a<ul> <li>\u540c\u4e00\u65f6\u523b\u5185\u603b\u7ebf\u53ea\u80fd\u4f20\u8f93\u4e00\u4e2a\u6570\u636e\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u6e90(source)\uff1b<ul> <li>\u540c\u4e00\u65f6\u949f\u5468\u671f\u5185\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u80fd\u4f20\u8f93\u5230\u522b\u7684\u5730\u65b9\uff0c\u4f8b\u5982\u4ea4\u6362\u64cd\u4f5c\u5c31\u9700\u8981\u81f3\u5c11\u4e24\u4e2a bus \u624d\u80fd\u5b9e\u73b0\uff1b</li> </ul> </li> </ul> </li> </ul> <p>\u800c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u70b9\uff0c\u6211\u4eec\u9700\u8981\u8bc4\u4f30\u6211\u4eec\u7684\u9700\u6c42\uff0c\u9009\u62e9\u5408\u9002\u7684\u7ed3\u6784\u6765\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_7","title":"\u4e09\u6001\u95e8\u5b9e\u73b0","text":"<p>\u4e09\u6001\u95e8\u7684\u76f8\u5173\u5185\u5bb9\u5df2\u7ecf\u5728\u524d\u9762\u4ecb\u7ecd\uff0c\u4f20\u8f93\u95e8\uff0c\u5173\u4e8e\u672c\u5c0f\u8282\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u91cd\u70b9\u5173\u6ce8 #\u4e09\u6001\u95e8/\u788e\u788e\u5ff5\u3002</p> <p>\u800c\u5173\u4e8e\u603b\u7ebf\u7684\u5b9e\u73b0\uff0c\u5f15\u7528\u4e00\u53e5\u6211\u5728 #\u4e09\u6001\u95e8/\u788e\u788e\u5ff5 \u91cc\u5199\u7684\u8bdd\uff1a</p> <p>\u53ea\u8981\u6211\u4eec\u8ba9\u5bfc\u7ebf\u7684\u82e5\u5e72\u8f93\u5165\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e09\u6001\u95e8\u4e0d\u5728\u300c\u9ad8\u963b\u6001\u300d\uff0c\u5c31\u80fd\u591f\u4f18\u96c5\u5730\u5b9e\u73b0\u591a\u8def\u8f93\u51fa\u4e92\u8054\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6240\u8c13\u7684\u4e09\u6001\u95e8\u5b9e\u73b0\u539f\u7406\u4e0a\u548c <code>MUX</code> \u5b9e\u73b0\u65e0\u4e8c\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u662f\u901a\u8fc7\u4e09\u6001\u95e8\u6765\u5b9e\u73b0\u300c\u8def\u7531\u300d\u8fd9\u4e2a\u903b\u8f91\u800c\u5df2\uff0c\u4e5f\u5c31\u662f\u4e66\u4e0a\u6240\u8bf4\u7684\uff1a</p> <p>Three-state buffer outputs can be connected together to form a multiplexed output line.</p> <p>\u4e0e <code>MUX</code> \u5b9e\u73b0\u76f8\u5bf9\u6bd4\uff0c\u4e09\u6001\u95e8\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fdb\u884c\u7b80\u5355\u8bf4\u660e\uff0c(c) \u4e2d\u5bf9\u4e09\u6001\u95e8\u7684\u8868\u793a\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u542b\u4e49\u53c2\u8003 (a)\u3002\u5b83\u60f3\u8868\u8fbe\u7684\u4e3b\u8981\u542b\u4e49\u662f\uff0c\u5f53 <code>EN</code> \u4e3a <code>1</code> \u65f6\uff0c\u8868\u793a\u8f93\u51fa\uff1b\u53cd\u4e4b\u8868\u793a\u8f93\u5165\uff08\u5f53\u7136\uff0c\u771f\u6b63\u51b3\u5b9a\u662f\u5426\u8bfb\u5165\u5bc4\u5b58\u5668\u7684\u8fd8\u662f <code>LD</code>\uff09\u3002</p> \u4e2a\u4eba\u7591\u60d1 <p>\u4e66\u4e2d\u7684\u8868\u8ff0\u662f\uff1a</p> <p>If the three-state buffers are enabled, then the lines are outputs; if the three-state buffers are disabled, then the lines can be inputs.</p> <p>\u4f46\u662f\u770b (a) \u7684\u8868\u8fbe\uff0c\u4e0d\u7ba1 <code>EN</code> \u662f\u4ec0\u4e48\uff0c\u5b83\u5e94\u5f53\u90fd\u6709\u8f93\u5165\u624d\u5bf9\uff0c\u771f\u6b63\u51b3\u5b9a\u662f\u5426\u8f93\u5165\u8fdb\u6765\u7684\u5e94\u8be5\u8fd8\u662f <code>LD</code>\uff1f</p> <p>\u5bf9\u6bd4\u6765\u770b\uff0c\u4e09\u6001\u95e8\u7684\u5b9e\u73b0\u5927\u5927\u964d\u4f4e\u4e86\u603b\u7ebf\u7684\u5b9e\u73b0\u6210\u672c\uff0c\u7cbe\u7b80\u4e86\u7535\u8def\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u901a\u5e38\u6765\u8bf4\u66f4\u5e38\u7528\u3002</p> \u4e2a\u4eba\u60f3\u6cd5 <p>\u867d\u7136\u4e66\u4e2d\u8bf4\u4e09\u6001\u95e8\u7684\u63a5\u7ebf\u6bd4 <code>MUX</code> \u7684\u5c11\u4e86\u4e00\u534a\uff0c\u4f46\u6211\u89c9\u7684\u4e09\u6001\u95e8\u53ea\u662f\u628a\u7ebf\u5206\u5c94\u7684\u5730\u65b9\u79fb\u52a8\u5230\u4e86\u5bc4\u5b58\u5668\u9644\u8fd1\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\u4e0d\u5982\u8bf4\u662f\u8282\u7701\u4e86\u5bfc\u7ebf\u7684\u957f\u5ea6\u3002\u4f46\u662f\u968f\u7740\u8f93\u5165\u7684\u589e\u52a0\uff0c<code>MUX</code> \u7684\u7ed3\u6784\u4f1a\u8d8a\u6765\u8d8a\u590d\u6742\u4e14\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\uff0c\u4f46\u4e09\u6001\u95e8\u53ea\u9700\u8981\u91cf\u7684\u589e\u52a0\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u786e\u5b9e\u662f\u66f4\u52a0\u5438\u5f15\u4eba\u3002\uff08\u5f53\u7136\uff0c\u867d\u7136\u4e66\u4e2d\u6ca1\u8bf4\uff0c\u4f46\u662f\u6211\u89c9\u5f97 Enable \u5fc5\u987b at most one-hot\uff0c\u800c\u8fd9\u90e8\u5206\u7684\u903b\u8f91\u5bf9\u4e8e\u4e24\u4e2a\u5b9e\u73b0\u65b9\u6cd5\u6765\u8bf4\u662f\u4e00\u6837\u7684\uff09</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_8","title":"\u5fae\u64cd\u4f5c\u53ca\u5176\u5b9e\u73b0","text":"<p>A microoperation is an elementary operation performed on data stored in registers or in memory.</p> <p>\u5fae\u64cd\u4f5c\u4e00\u822c\u5206\u4e3a\u8fd9\u56db\u79cd\uff1a</p> <ol> <li>\u8f6c\u79fb\uff0ctransfer microoperations\uff0c\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u5bc4\u5b58\u5668\u8f6c\u79fb\u5230\u53e6\u5916\u4e00\u4e2a\u5bc4\u5b58\u5668\uff1b</li> <li>\u7b97\u672f\uff0carithmetic microoperations\uff0c\u5bf9\u6570\u636e\u7684\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\uff1b</li> <li>\u903b\u8f91\uff0clogic microoperations\uff0c\u5bf9\u6570\u636e\u7684\u903b\u8f91\u8fd0\u7b97\u64cd\u4f5c\uff1b</li> <li>\u4f4d\u79fb\uff0cshift microoperations\uff0c\u5bf9\u6570\u636e\u7684\u4f4d\u79fb\u64cd\u4f5c\uff1b</li> </ol> <p>A given microoperation may be of more than one type. For example, a 1s complement operation is both an arithmetic microoperation and a logic microoperation.</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_9","title":"\u8f6c\u79fb","text":"<p>\u4e0d\u6539\u53d8\u6570\u636e\u672c\u8eab\uff0c\u53ea\u662f\u4ece\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\u628a\u6570\u636e\u79fb\u52a8\u5230\u53e6\u5916\u4e00\u4e2a\u5bc4\u5b58\u5668\u3002</p> <p>\u5c06 R0 \u4e2d\u7684\u6570\u636e\u8f6c\u79fb\u5230 R1 \u4e2d\uff0c\u7528 RTL \u8868\u793a\u5c31\u662f \\(R0 \\leftarrow R1\\)\u3002</p> <p>\u8fd9\u4e00\u90e8\u5206\u7684\u5b9e\u73b0\u9014\u5f84\u5728 \u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u5b9e\u73b0 \u5df2\u7ecf\u9610\u8ff0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_10","title":"\u7b97\u672f","text":"<p>Multiplication and division are not listed in Table 6-3. Multiplication can be represented by the symbol * and division by /. These two operations are not included in the basic set of arithmetic microoperations because they are assumed to be implemented by sequences of basic microoperations. However, multiplication can be considered as a microoperation if implemented by a combinational circuit. In such a case, the result is transferred into a destination register at the clock edge after all signals have propagated through the entire combinational circuit</p> <p>\u52a0\u51cf\u6cd5\u5668</p> <p>\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\uff0c\u7528\u52a0\u6cd5\u5668\u5b9e\u73b0\u52a0\u51cf\u6cd5\u5668\uff0c\u5728 RTL \u548c\u6a21\u5757\u903b\u8f91\u7535\u8def\u7684\u7ef4\u5ea6\u4e0b\uff0c\u53ef\u4ee5\u8fd9\u4e48\u8868\u793a\uff1a</p> \\[ \\begin{aligned}     &amp;\\overline{X}K_1:R_1\\leftarrow R_1 + R_2 \\\\     &amp;XK_1:R_1\\leftarrow R_1 + \\overline{R_2} + 1 \\end{aligned} \\] <p></p> <p>\u6ce8\u610f</p> <p>\u5bf9\u4e8e\u5982\u4e0a\u51fa\u73b0\u7684\u5f62\u5f0f\u5982\uff1a\\(condition: reg \\leftarrow options one regs\\) \u7684\u8868\u8fbe\u5f0f\uff0c<code>:</code> \u5de6\u4fa7\u51fa\u73b0\u7684 <code>+</code> \u8868\u793a\u6216\uff0c\u53f3\u4fa7\u7684\u5219\u8868\u793a\u52a0\uff08\u201c\u4e58\u201d\u4e5f\u662f\u8fd9\u6837\uff09\uff01</p> <p>\u76f8\u5bf9\u5e94\u7684\uff0c\u52a0\u51cf\u6cd5\u7684\u5b9e\u73b0\u53ef\u4ee5\u901a\u8fc7\u52a0\u51cf\u6cd5\u5668\u5b9e\u73b0\uff0c\u4e58\u6cd5\u53ef\u4ee5\u7528 \u4f4d\u79fb \u64cd\u4f5c\u5b9e\u73b0\uff0c\u800c\u9664\u6cd5\u76f8\u5bf9\u590d\u6742\u3002</p> <p>\u4e58\u6cd5\u5b9e\u73b0\u7684\u5927\u81f4\u601d\u8def</p> <p>\u5047\u8bbe\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(a \\cdot b\\)\uff0c\u4e14 \\(a\\)\uff0c\\(b\\) \u90fd\u662f\u6574\u6570\uff0c\u5219\u53ef\u4ee5\u5c06 \\(b\\) \u5199\u6210\u4e8c\u8fdb\u5236\u5f62\u5f0f \\((b_{n-1}b_{n-2}...b_1b_0)_2\\)\uff0c\u4e8e\u662f\uff1a</p> \\[ \\begin{aligned}     a \\cdot b &amp;= a \\cdot (b_{n-1}b_{n-2}...b_1b_0)_2 \\\\               &amp;= a \\cdot \\left[ (b_{n-1}0...00)_2 + \\cdot (0b_{n-2}...00)_2 + ... + \\cdot (00...b_10)_2 + \\cdot(00...0b_0)_2 \\right]\\\\               &amp;= a \\cdot \\sum_{i = 0} ^{n-1} b_i \\cdot 2^{i} \\\\               &amp;= \\left(a \\cdot \\sum_{i = 0} ^{n-1} b_i\\right) \\;\\mathrm{&lt;&lt;}\\; i \\;\\;\\; \\text{where \"&lt;&lt;\" means \"Shift Left\"} \\end{aligned} \\] <p>\u4e8e\u662f\u5c31\u53ef\u4ee5\u901a\u8fc7 \u4f4d\u79fb \u7684\u76f8\u5173\u77e5\u8bc6\u6765\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_11","title":"\u903b\u8f91","text":"<p>\u903b\u8f91\u8fd0\u7b97\u7684\u5b9e\u73b0\u76f8\u6bd4\u7b97\u672f\u66f4\u52a0\u76f4\u63a5\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u903b\u8f91\u90fd\u53ef\u4ee5\u901a\u8fc7\u903b\u8f91\u95e8\u6765\u5b9e\u73b0\u3002</p> <p>tips</p> <p>\u800c\u627f\u62c5\u903b\u8f91\u548c\u7b97\u672f\u8fd0\u7b97\u7684\u786c\u4ef6\u6a21\u5757\uff0c\u4e00\u822c\u88ab\u79f0\u4e3a ALU\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_12","title":"\u4f4d\u79fb","text":"<p>\u4f4d\u79fb\u7684\u5b9e\u73b0\u901a\u8fc7 \u4f4d\u79fb\u5bc4\u5b58\u5668(Shift Register)SHR \u5b9e\u73b0\u3002</p> <p>\u5f15\u5165</p> <p>\u4f4d\u79fb\u64cd\u4f5c\u4ece\u672c\u8d28\u4e0a\u6765\u8bb2\uff0c\u662f\u901a\u8fc7 \u89e6\u53d1\u5668\u968f\u7740\u65f6\u949f\u8109\u51b2\uff0c\u5c06\u4e32\u884c\u6570\u636e\u4e00\u4f4d\u4e00\u4f4d\u5730\u79fb\u52a8 \u5b9e\u73b0\u7684\u3002\u4f46\u662f\u5982\u679c\u8bfb\u8005\u5c1a\u672a\u7406\u89e3\u5176\u5b9e\u73b0\u539f\u7406\uff0c\u9605\u8bfb\u4ee5\u4e0b\u5185\u5bb9\u521a\u5f00\u59cb\u53ef\u80fd\u4f1a\u89c9\u5f97\u6709\u4e9b\u83ab\u540d\u5176\u5999\uff0c\u4f46\u662f\u8bf7\u5148\u9605\u8bfb \u4e32\u884c\u5b9e\u73b0 \u548c \u5e76\u884c\u5316 \u7684\u5185\u5bb9\uff0c\u77e5\u9053\u5b83\u4eec\u7684\u884c\u4e3a\u540e\uff0c\u53ef\u4ee5\u5148\u6682\u65f6\u8df3\u8fc7 \u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668\uff0c\u518d\u6765\u770b\u672c\u8282\u672b\u5c3e\u7684\u603b\u7ed3\uff0c\u4e5f\u8bb8\u80fd\u591f\u8ba9\u60a8\u660e\u767d\u5b83\u7a76\u7adf\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_13","title":"\u4e32\u884c\u5b9e\u73b0","text":"<p>\u4f4d\u79fb\u64cd\u4f5c\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u53ea\u9700\u8981\u4e0e\u8f93\u5165\u6570\u76f8\u540c\u4f4d\u6570\u7684\u89e6\u53d1\u5668\u5b9e\u73b0\u3002\u5b83\u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u56db\u4e2a\u89e6\u53d1\u5668\u9996\u5c3e\u76f8\u8fde\uff0c\u6700\u524d\u9762 \u4e32\u884c\u8f93\u5165(Serial Input)SI \u6570\u636e\uff0c\u672b\u7aef\u5f97\u5230 \u4e32\u884c\u8f93\u51fa(Serial Output)SO\uff0c\u5728\u4e0d\u540c\u65f6\u949f\u5468\u671f\u7684\u504f\u5dee\u4e0b\uff0c\u8fde\u7eed\u8bfb\u5165\u7684 n bits \u5373\u4e3a\u4e0d\u540c\u4f4d\u6570\u4f4d\u79fb\u7684\u7ed3\u679c\u3002</p> <p>\u4e32\u884c\u4f4d\u79fb\u64cd\u4f5c\u5b9e\u73b0\u7684\u6a21\u62df\u89e3\u91ca</p> <p>\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u6709 4 \u4e2a <code>FF</code> \u9996\u5c3e\u76f8\u8fde\uff0c\u73b0\u5728\u4e32\u884c\u8f93\u5165 <code>1001</code> \u8fd9 4bits \u7684\u6570\u636e\uff08\u5f53\u7136\uff0c\u5b8c\u5168\u8f93\u5165\u9700\u8981 4 \u4e2a\u65f6\u949f\u5468\u671f\uff09\u3002</p> <p>\u5047\u8bbe\u7b2c 1 \u4e2a\u5468\u671f\u7ed3\u675f\u540e\uff0c<code>1001</code> \u6700\u53f3\u4fa7\u7684 <code>1</code> \u88ab\u5b58\u5728\u4e86\u7b2c\u4e00\u4e2a FF\uff0c\u5219\uff1a</p> \u5468\u671f \u5f85\u8f93\u5165 FF1 FF2 FF3 FF4 SO 1 <code>100</code> <code>1</code> ? ? ? <code>1???</code> 2 <code>10</code> <code>0</code> <code>1</code> ? ? <code>01??</code> 3 <code>1</code> <code>0</code> <code>0</code> <code>1</code> ? <code>001?</code> 4 <code>1</code> <code>0</code> <code>0</code> <code>1</code> <code>1001</code> 5 ? <code>1</code> <code>0</code> <code>0</code> <code>?100</code> 6 ? ? <code>1</code> <code>0</code> <code>??10</code> 7 ? ? ? <code>1</code> <code>???1</code> <p>\u8fd9\u91cc\u7684 SO \u6307\u7684\u662f\u4ece\u5f53\u524d\u8f6e\u6b21\u5f00\u59cb\uff0c\u8bfb\u5165 4bits \u6570\u636e\u5f97\u5230\u7684\u4e32\u884c\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd9\u91cc\u7684 4bits \u5f53\u7136\u662f\u5bf9\u5e94\u8f93\u5165\u7684 4bits\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u7b2c\u56db\u8f6e\u524d\u540e\u7684\u7ed3\u679c\u5206\u522b\u662f\u5de6\u79fb\u548c\u53f3\u79fb\u7684\u7ed3\u679c\uff0c\u5f53\u7136\uff0c\u5982\u679c\u662f\u8981\u8003\u8651\u5177\u6709\u5b9e\u9645\u8ba1\u7b97\u4ef7\u503c\u7684\u4f4d\u79fb\uff0c\u6211\u4eec\u5f53\u7136\u9700\u8981\u586b\u5145 <code>?</code> \u7684\u503c\uff0c\u4e0d\u8fc7\u8fd9\u90fd\u662f\u5c0f\u4e8b\u60c5\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_14","title":"\u5e76\u884c\u5316","text":"<p>\u5e76\u884c\u5316\u4e3b\u8981\u6709\u4e24\u4e2a\u65b9\u9762\uff0c\u5373 \u5e76\u884c\u8f93\u51fa(parallel output) \u548c \u5e76\u884c\u8f7d\u5165(parallel load)\uff0c\u5206\u522b\u5bf9\u5e94\u7740 \u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u5468\u671f\u5185 \u5f97\u5230\u6bcf\u4e00\u4e2a <code>FF</code> \u7684\u7ed3\u679c \u548c \u5bf9\u6bcf\u4e00\u4e2a <code>FF</code> \u8f7d\u5165\u6570\u636e\u3002</p> <p>\u5e76\u884c\u8f93\u51fa\u7684\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7ed9\u6bcf\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u5f15\u51fa\u4e00\u6761\u7ebf\u5c31\u884c\u4e86\uff0c\u5b83\u4e0e\u4e32\u884c\u8f93\u51fa\u53ef\u4ee5\u76f4\u63a5\u540c\u65f6\u5b58\u5728\uff1b\u800c\u5e76\u884c\u8f93\u5165\u5219\u4e0e\u4e32\u884c\u8f93\u5165\u51b2\u7a81\uff0c\u4e00\u6b21\u53ea\u80fd\u5b9e\u73b0\u5176\u4e2d\u4e00\u4e2a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e9b\u63a7\u5236\u7535\u8def\uff1a</p> <p></p> <p>\u770b\u8d77\u6765\u6709\u70b9\u590d\u6742\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u903b\u8f91\u8fd8\u662f\u5f88\u6e05\u6670\u7684\u3002</p> <ul> <li>\u7eb5\u5411\u89c2\u5bdf\u53f3\u4fa7\u7684\u56db\u4e2a <code>FF</code>\uff0c\u53ef\u4ee5\u53d1\u73b0\u57fa\u672c\u4e0a\u5c31\u662f\u4e32\u884c\u4f4d\u79fb\u5b9e\u73b0\uff0c\u53ea\u4e0d\u8fc7\u5176\u8f93\u5165\u4e0d\u518d\u662f\u76f4\u63a5\u4ece\u4e0a\u4e00\u4e2a <code>FF</code> \u90a3\u8fb9\u62ff\u6765\u7684\uff1b</li> <li>\u56db\u4e2a <code>FF</code> \u7684\u8f93\u5165\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u5173\u6ce8\u6700\u4e0a\u9762\u7684\u90a3\u4e09\u4e2a\u4e0e\u95e8\u548c\u4e00\u4e2a\u6216\u95e8\uff0c\u8868\u793a\u6570\u636e\u8f93\u5165\u6709\u4e09\u4e2a\u53ef\u80fd\u7684\u6765\u6e90\uff1b<ol> <li>\u7b2c\u4e00\u4e2a\u4e0e\u95e8\uff0c\\(F_i=Shift \\cdot SI\\)\uff08\u5bf9\u4e8e\u540e\u9762\u51e0\u4e2a <code>FF</code>\uff0c\u5219\u662f \\(F_i=Shift \\cdot FF_{i-1}\\)\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u7535\u8def\u7684\u884c\u4e3a\u4e0e \u4e32\u884c\u4f4d\u79fb\u5b9e\u73b0 \u4e00\u81f4\uff1b<ul> <li>\u5373 \\(Shift\\) \u4e3a <code>1</code> \u65f6\uff0c<code>SHR</code> \u8868\u73b0\u4e3a\u300c\u6bcf\u4e2a\u5468\u671f\u6267\u884c\u4e00\u6b21\u4f4d\u79fb\u300d\uff1b</li> </ul> </li> <li>\u7b2c\u4e8c\u4e2a\u4e0e\u95e8\uff0c\\(F_i=\\overline{Shift} \\cdot Load \\cdot D_i\\)\uff0c\u6b64\u65f6\u7535\u8def\u7684\u884c\u4e3a\u662f\u4f7f\u7528\u6bd4\u7279\u5411\u91cf\u5bf9\u6bcf\u4e00\u4e2a <code>FF</code> \u8d4b\u503c\uff0c\u5373 \u5e76\u884c\u8f7d\u5165\uff1b<ul> <li>\u5373 \\(\\overline{Shift} \\cdot Load\\) \u4e3a <code>1</code> \u65f6\uff0c<code>SHR</code> \u8868\u73b0\u4e3a\u300c\u5e76\u884c\u8f7d\u5165\u300d\uff1b</li> </ul> </li> <li>\u7b2c\u4e09\u4e2a\u4e0e\u95e8\uff0c\\(F_i=\\overline{Shift} \\cdot \\overline{Load} \\cdot Q_i\\)\uff0c\u6b64\u65f6\u7535\u8def\u7684\u884c\u4e3a\u662f\u4fdd\u6301\u4e0a\u4e00\u5468\u671f\u7684\u7ed3\u679c\uff1b<ul> <li>\u5373 \\(\\overline{Shift} \\cdot \\overline{Load}\\) \u4e3a <code>1</code> \u65f6\uff0c<code>SHR</code> \u8868\u73b0\u4e3a\u300c\u4fdd\u6301\u300d\uff1b</li> </ul> </li> </ol> </li> </ul> <p>\u603b\u548c\u6765\u8bf4\uff0c\u5c31\u662f\uff1a</p> \\[ \\begin{aligned}       Shift :&amp; Q\\leftarrow \\mathrm{sl}\\; Q \\\\          \\overline{Shift}\\cdot Load :&amp; Q\\leftarrow D \\\\          \\overline{Shift}\\cdot \\overline{Load} :&amp; Q\\leftarrow Q \\end{aligned} \\] <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_15","title":"\u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668","text":"<p>\u4e0a\u9762\u4ecb\u7ecd\u7684\u4f4d\u79fb\u5bc4\u5b58\u5668\u968f\u7740\u65f6\u949f\u5468\u671f\u7684\u4f9b\u7ed9\uff0c\u53ea\u80fd\u4e0d\u53ef\u9006\u3001\u5355\u5411\u5730\u8fdb\u884c\u4f4d\u79fb\uff0c\u8fd9\u79cd\u4f4d\u79fb\u5bc4\u5b58\u5668\u79f0\u4e3a \u65e0\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668(Unidirectional SHR)\uff1b\u5bf9\u5e94\u7684\uff0c\u5982\u679c\u80fd\u591f\u652f\u6301\u53ef\u63a7\u5236\u7684\u5de6\u79fb\u53f3\u79fb\uff0c\u5219\u88ab\u79f0\u4e3a \u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668(Bidirectional SHR)\u3002</p> <p>\u5176\u884c\u4e3a\u5982\u4e0b\uff1a</p> \\[ \\begin{aligned}     \\overline{S_0} \\cdot \\overline{S_1} :&amp; Q \\leftarrow Q\\\\     S_0 \\cdot \\overline{S_1} :&amp; Q\\leftarrow\\mathrm{Sl}\\; Q \\\\     \\overline{S_0} \\cdot S_1 :&amp; Q\\leftarrow\\mathrm{Sr}\\; Q \\\\     S_0 \\cdot S_1:&amp; Q\\leftarrow D \\end{aligned} \\] <p>\u5176\u5355\u5143\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u672c\u8d28\u4e0a\u5c31\u662f\u6dfb\u52a0\u4e86\u4e00\u4e2a <code>MUX</code> \u6765\u9009\u62e9\u4e0b\u4e00\u4e2a\u65f6\u949f\u662f\u7ee7\u627f \\((i+1)\\)\u3001\\((i-1)\\)\u3001\\(D_i\\) \u8fd8\u662f \\(Q\\)\u3002</p> <p>\u7efc\u5408\u9610\u8ff0</p> <p>\u4ee3\u7801\u610f\u4e49\u4e0a\u7684\u4f4d\u79fb\u4e00\u822c\u6307\u7684\u662f\u4e00\u4e2a\u53cc\u76ee\u64cd\u4f5c\uff0c\u5373\u53ef\u4ee5\u6307\u5b9a\u4f4d\u79fb\u591a\u5c11\u4f4d\uff0c\u8fd9\u4e2a\u53c2\u6570\u88ab\u79f0\u4e3a \u4f4d\u79fb\u91cf(Shift Amount)\u3002</p> <p>\u4f46\u5728\u786c\u4ef6\u5c42\u9762\u7684\u5b9e\u73b0\u4e0a\uff0c\u8fd9\u4e2a\u591a\u5c11\u201c\u4f4d\u201d\u53ea\u80fd\u901a\u8fc7\u5faa\u73af\u548c\u5df2\u7ecf\u5b9e\u73b0\u7684\u3001\u6709\u9650\u79cd \u786e\u5b9a\u4f4d\u79fb\u91cf\u7684\u4f4d\u79fb\u5b9e\u73b0\uff0c\u5728\u6211\u4eec\u63d0\u5230\u7684\u5b9e\u73b0\u4e2d\uff0c\u6307\u7684\u5c31\u662f\u6211\u4eec\u786c\u4ef6\u53ea\u5b9e\u73b0\u300c\u4e00\u4f4d\u4f4d\u79fb\u300d\uff0c\u5e76\u901a\u8fc7\u5faa\u73af\u5b9e\u73b0\u300c\u4efb\u610f\u4f4d\u4f4d\u79fb\u300d\uff0c\u800c\u8fd9\u4e2a\u201c\u5faa\u73af\u201d\uff0c\u5c31\u662f\u5728\u65f6\u949f\u5468\u671f\u4e0b\uff0c<code>FF</code> \u4e0d\u65ad\u7ee7\u627f\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u503c\u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u800c\u5e76\u884c\u4e0e\u4e32\u884c\u5b9e\u73b0\u65e0\u975e\u662f\u4f53\u73b0\u8fd9\u4e2a\u7279\u5f81\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\u800c\u5df2\u3002</p> \u5173\u4e8e\u5e76\u884c\u548c\u4e32\u884c <p>\u8fd9\u662f\u4e00\u4e2a\u9898\u5916\u8bdd\uff0c\u6211\u6682\u65f6\u4e0d\u77e5\u9053\u653e\u54ea\u91cc\uff0c\u521a\u597d\u8fd9\u91cc\u63d0\u5230\u4e86\u5c31\u5728\u8fd9\u91cc\u8bf4\u4e86\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u867d\u7136\u770b\u8d77\u6765\u5e76\u884c\u7684\u6548\u7387\u4f1a\u6bd4\u4e32\u884c\u9ad8\u5f88\u591a\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5f88\u591a\u9ad8\u901f\u4f20\u8f93\u8bbe\u5907\u6216\u534f\u8bae\u7528\u7684\u90fd\u662f\u4e32\u884c\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u5e76\u884c\u5355\u6b21\u4f20\u8f93\u7ebf\u8def\u591a\uff0c\u7ebf\u8def\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\uff0c\u5e72\u6270\u5927\uff0c\u6240\u4ee5\u76f8\u5bf9\u6765\u8bf4\u6b63\u5e38\u5de5\u4f5c\u6240\u4e0b\u5bf9\u9891\u7387\u7684\u8981\u6c42\u66f4\u9ad8\uff1b\u800c\u4e32\u884c\u7531\u4e8e\u53ef\u4ee5\u4f7f\u7528\u66f4\u9ad8\u7684\u9891\u7387\u5de5\u4f5c\uff0c\u6240\u4ee5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6548\u7387\u66f4\u9ad8\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_16","title":"\u8ba1\u6570\u5668","text":"<p>\u8ba1\u6570\u5668(counter) \u662f\u4ec0\u4e48\uff0c\u5df2\u7ecf\u5728 #\u5bc4\u5b58\u5668 \u4e2d\u89e3\u91ca\u4e86\uff0c\u6839\u636e\u5b9e\u73b0\u539f\u7406\uff0c\u4e3b\u8981\u5206\u4e3a \u884c\u6ce2\u8ba1\u6570\u5668(Ripple Counter) \u548c \u540c\u6b65\u8ba1\u6570\u5668(Synchronous Counter) \u4e24\u79cd\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_17","title":"\u884c\u6ce2\u8ba1\u6570\u5668","text":"<p>\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u5c06\u4e00\u4e2a\u4e0d\u65ad\u81ea\u53cd\u7684 <code>FF</code> \u7684\u8f93\u51fa\u76f4\u63a5\u6216\u95f4\u63a5\u4f5c\u4e3a\u4e0b\u4e00\u4e2a <code>FF</code> \u7684\u65f6\u949f\u8109\u51b2\u3002\u7531\u4e8e\u5f62\u6210\u4e00\u6b21\u8109\u51b2\u9700\u8981\u4e00\u5bf9 <code>0</code>&amp;<code>1</code>\uff0c\u6240\u4ee5\u524d\u4e00\u4e2a <code>FF</code> \u53d6\u53cd\u4e24\u6b21\u624d\u80fd\u5f15\u8d77\u4e0b\u4e00\u4e2a <code>FF</code> \u53d6\u53cd\u4e00\u6b21\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a <code>FF</code> \u662f\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u4ece <code>1</code> \u53d8 <code>0</code> \u65f6\u89e6\u53d1\uff0c\u90a3\u4e24\u4e2a <code>FF</code> \u7684\u53d8\u5316\u521a\u597d\u5bf9\u5e94\u4e8e\u4e8c\u8fdb\u5236\u81ea\u589e\u7684\u8fdb\u4f4d\u89c4\u5f8b\uff1a<code>(0,0)</code>\uff0c<code>(0,1)</code>\uff0c<code>(1,0)</code>\uff0c<code>(1,1)</code>\uff0c<code>0,0</code>\uff0c...</p> <p>\u4e8e\u662f\uff0c\u4e00\u4e2a 4-Bit \u884c\u6ce2\u8ba1\u6570\u5668\u7684\u903b\u8f91\u56fe\u5c31\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>\u4e0a\u56fe\u4e2d\uff0c\u4e0b\u4e00\u4e2a <code>FF</code> \u7684\u65f6\u949f\u6765\u81ea\u4e8e\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u53d6\u53cd\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684 <code>FF</code> \u6765\u8bf4\uff0c\u4e0b\u4e00\u4e2a <code>FF</code> \u4f1a\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u4ece <code>1</code> \u5230 <code>0</code> \u65f6\u81ea\u53cd\uff0c\u6240\u4ee5\u662f \u6b63\u5411\u8ba1\u65f6(Upward Counting)\uff1b</li> <li>\u53cd\u4e4b\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a <code>FF</code> \u7684\u65f6\u949f\u6765\u81ea\u4e8e\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u76f4\u63a5\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684 <code>FF</code> \u6765\u8bf4\uff0c\u4e0b\u4e00\u4e2a <code>FF</code> \u4f1a\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u4ece <code>0</code> \u5230 <code>1</code> \u65f6\u81ea\u53cd\uff0c\u6240\u4ee5\u662f \u9006\u5411\u8f93\u51fa(Downward Counting)\uff1b</li> </ul> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u4f18\u70b9\u662f\u7535\u8def\u7b80\u5355\uff0c\u6210\u672c\u4f4e\uff1b\u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u65e2\u7136\u5b83\u4e0e\u540c\u6b65\u8ba1\u6570\u5668\u76f8\u533a\u5206\uff0c\u5c31\u8bf4\u660e\u5b83\u4e0d\u662f\u540c\u6b65\u7535\u8def\uff0c\u6bcf\u4e00\u4e2a <code>FF</code> \u90fd\u4f1a\u6709\u4f20\u64ad\u5ef6\u65f6\uff0c\u968f\u7740\u8ba1\u6570\u8303\u56f4\u589e\u5927\uff0c\u603b\u4f20\u64ad\u5ef6\u65f6\u4e5f\u4f1a\u589e\u52a0\uff0c\u800c\u4e3a\u4e86\u8ba9\u7535\u8def\u6b63\u5e38\u5de5\u4f5c\uff0c\u65f6\u949f\u9891\u7387\u4e5f\u8981\u56e0\u6b64\u4e0b\u964d\u3002</p> <p>\u7531\u4e8e\u8fd9\u4e9b\uff0c\u4e66\u4e0a\u5bf9\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u8bc4\u4ef7\u662f\u591a\u6570\u60c5\u51b5\u4e0b\u884c\u6ce2\u52a0\u6cd5\u5668\u53ea\u4f1a\u5728\u4f4e\u529f\u8017\u7535\u8def\u4e2d\u88ab\u91c7\u7528\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_18","title":"\u540c\u6b65\u8ba1\u6570\u5668","text":"<p>\u540c\u6b65\u8ba1\u6570\u5668\u4ece\u5b9e\u73b0\u81ea\u589e\u7684\u539f\u7406\u4e0a\u6765\u8bf4\uff0c\u548c\u884c\u6ce2\u8ba1\u6570\u5668\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u540c\u6837\u662f\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u5b8c\u6210\u4e00\u6b21\u7ffb\u8f6c\u7684\u65f6\u5019\u8ba9\u4e0b\u4e00\u4e2a <code>FF</code> \u53d8\u5316\u3002\u53ea\u4e0d\u8fc7\u540c\u6b65\u8ba1\u6570\u5668\u4e0d\u662f\u63a7\u5236\u65f6\u949f\uff0c\u800c\u662f\u63a7\u5236\u300c<code>FF</code> \u5185\u7684\u503c\u662f\u5426\u53d6\u53cd\u300d\u6765\u5b9e\u73b0\uff0c\u800c\u5b83\u662f\u901a\u8fc7\u5f02\u6216\u95e8\u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\\(0 \\;\\mathrm{XOR}\\; X = X\\)\uff0c\u800c \\(1 \\;\\mathrm{XOR}\\; X = \\overline{X}\\)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236 <code>XOR</code> \u7684\u67d0\u4e2a\u8f93\u5165\u662f <code>0</code> \u8fd8\u662f <code>1</code> \u6765\u5b9e\u73b0\u53d6\u53cd\u8fd8\u662f\u4fdd\u6301\u7684\u5207\u6362\u3002</p> <p>\u4e0d\u8fc7\u9700\u8981\u533a\u5206\u7684\u662f\uff0c\u884c\u6ce2\u8ba1\u6570\u5668\u662f\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u53d8\u5316\u5b8c\u624d\u5f71\u54cd\u4e0b\u4e00\u4e2a\u7684\uff0c\u6240\u4ee5\u662f <code>1</code> \u53d8 <code>0</code> \u65f6\u9700\u8981\u8fdb\u4f4d\uff1b\u800c\u540c\u6b65\u8ba1\u6570\u5668\u7684\u6240\u6709 <code>FF</code> \u662f\u4e00\u8d77\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u53ea\u6709\u5728\u524d\u9762\u90fd\u662f <code>1</code> \u65f6\u5019\uff0c\u8868\u793a\u4e0b\u4e00\u523b\u5b83\u4eec\u90fd\u8981\u8fdb\u4f4d\u4e86\uff0c\u5f53\u524d <code>FF</code> \u624d\u8fdb\u4f4d\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u884c\u6ce2\u8ba1\u6570\u5668\u662f\u5efa\u7acb\u5728\u524d\u4e00\u4e2a <code>FF</code> \u7684\u7ed3\u679c\u8fdb\u884c\u53d8\u5316\uff1b\u800c\u5e76\u884c\u52a0\u6cd5\u5668\u662f\u5efa\u7acb\u5728\u4e0a\u4e00\u523b\u6240\u6709\u5173\u8054 <code>FF</code> \u7684\u72b6\u6001\uff0c\u5bf9\u4e0b\u4e00\u72b6\u6001\u7684\u9884\u5224\u3002</p> <p>\u5728\u8fd9\u57fa\u7840\u4e0a\uff0c\u540c\u6b65\u8ba1\u6570\u5668\u7684 \u81ea\u589e\u5668(incrementer) \u6709\u4e24\u79cd\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <p></p> <p>(b) \u7684\u84dd\u8272\u90e8\u5206\u66ff\u6362 (a) \u7684\u84dd\u6846\u90e8\u5206\u4e3a\u7b2c\u4e8c\u79cd\u3002\u4e24\u79cd\u5206\u522b\u4e3a \u95e8\u4e32\u884c\u5b9e\u73b0 \u548c \u95e8\u5e76\u884c\u5b9e\u73b0\u3002</p> <p>\u4e24\u79cd\u5b9e\u73b0\u5176\u5b9e\u539f\u7406\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u95e8\u4e32\u884c\u727a\u7272\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u6548\u7387\uff0c\u8282\u7ea6\u4e86\u95e8\u6210\u672c\uff1b\u800c\u95e8\u5e76\u884c\u63d0\u9ad8x\u4e86\u95e8\u6210\u672c\uff0c\u51cf\u5c11\u4e86\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u95e8\u5ef6\u8fdf\u3002</p> <p>\u5f53\u7136\uff0c\u65e2\u7136\u4f7f\u7528\u7684\u662f\u81ea\u589e\u5668\uff0c\u90a3\u4e48\u5b9e\u73b0\u7684\u81ea\u7136\u5c31\u662f\u6b63\u5411\u8ba1\u6570\u5668\u3002\u4e3a\u4e86\u5b9e\u73b0\u9006\u5411\u8ba1\u6570\u5668\uff0c\u6211\u4eec\u5219\u9700\u8981\u5c06\u81ea\u589e\u5668\u6362\u4e3a\u81ea\u51cf\u5668\u3002\u505a\u6cd5\u53ea\u4e0d\u8fc7\u662f\u5c06\u5f02\u6216\u95e8\u7684\u63a7\u5236\u4fe1\u53f7\u53d6\u53cd\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u8f93\u5165\u51fd\u6570\u53d8\u4e3a\uff1a</p> \\[ \\begin{aligned}     D_{A0} = &amp; Q_0 \\oplus EN \\\\     D_{A1} = &amp; Q_1 \\oplus \\left(         (Q_0 \\cdot \\overline{S} + \\overline{Q_0} \\cdot S) \\cdot EN     \\right) \\\\     D_{A2} = &amp; Q_2 \\oplus \\left(         (Q_0 \\cdot Q_1 \\cdot \\overline{S} + \\overline{Q_0} \\cdot \\overline{Q_1} \\cdot S) \\cdot EN     \\right) \\\\     D_{A3} = &amp; Q_3 \\oplus \\left(         (Q_0 \\cdot Q_1 \\cdot Q_2 \\cdot \\overline{S} + \\overline{Q_0} \\cdot \\overline{Q_1} \\cdot \\overline{Q_2} \\cdot S) \\cdot EN     \\right) \\end{aligned} \\] <p>\u4ece\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u7565\u5fae\u611f\u53d7\u5230\u95e8\u4e32\u884c\u548c\u95e8\u5e76\u884c\u7684\u533a\u522b\u7a76\u7adf\u5728\u54ea\u91cc\uff0c\u5b83\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u591a\u4f4d <code>AND</code> \u8fd0\u7b97\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_19","title":"\u540c\u6b65\u8f7d\u5165","text":"<p>\u8fd9\u91cc\u540c\u6b65\u8f7d\u5165\u7684\u542b\u4e49\u53ef\u4ee5\u540c \u4f4d\u79fb\u5bc4\u5b58\u5668\u7684\u5e76\u884c\u8f7d\u5165 \u7c7b\u6bd4\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u5c06\u8ba1\u6570\u5668\u7684\u5f53\u524d\u503c\u8bbe\u4e3a\u4e00\u4e2a\u6211\u4eec\u9700\u8981\u7684\u6570\u5b57\u3002</p> <p>\u4ee5\u95e8\u4e32\u884c\u5b9e\u73b0\u4e3a\u4f8b\uff0c\u6dfb\u52a0\u529f\u80fd\u63a7\u5236\u903b\u8f91\u540e\u7684\u8bbe\u8ba1\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_20","title":"\u4efb\u610f\u8ba1\u6570\u5e8f\u5217","text":"<p>\u73b0\u5728\u8ba9\u6211\u4eec\u56de\u5f52\u8ba1\u6570\u5668\u7684\u884c\u4e3a\uff1a\u968f\u7740\u65f6\u949f\u5468\u671f\u4e0d\u65ad\u5728\u56fa\u5b9a\u7684\u72b6\u6001\u5e8f\u5217\u4e2d\u5faa\u73af\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u5e8f\u5217\u672a\u5fc5\u9700\u8981\u662f\u6574\u6570\u81ea\u589e\u81ea\u51cf\u5e8f\u5217\u3002\u800c\u5b9e\u73b0\u67d0\u4e00\u5e8f\u5217\u7684\u8ba1\u6570\u884c\u4e3a\uff0c\u5b9e\u9645\u4e0a\u53ea\u8981\u8bbe\u8ba1\u597d\u6709\u9650\u72b6\u6001\u548c\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u4e2a\u8bdd\u9898\u592a\u8fc7\u5bbd\u6cdb\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5177\u4f53\u8ba8\u8bba\u7684\u8fd8\u662f\u6574\u6570\u81ea\u589e\u5e8f\u5217\uff0c\u53ea\u4e0d\u8fc7\u9650\u5236\u4e86\u4e0a\u4e0b\u754c\u3002\u4e66\u4e0a\u63d0\u4f9b\u7684\u6848\u4f8b\u662f BCD \u7801\u7684\u5faa\u73af\u8ba1\u6570\uff0c\u90a3\u6211\u4eec\u4e5f\u8ddf\u7740\u8fd9\u4e2a\u6848\u4f8b\u6765\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#bcd","title":"BCD \u7801\u5faa\u73af\u8ba1\u6570","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u6839\u636e\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1\u89c4\u5219\uff0c\u641e\u6e05\u695a\u72b6\u6001\u5e8f\u5217\uff0c\u663e\u7136\uff0c\u6839\u636e BCD \u7801\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u6bdb\u6bdb\u5730\u8ba4\u4e3a\u5b83\u662f\u4e0b\u786e\u754c\u4e3a <code>0</code>\uff0c\u4e0a\u786e\u754c\u4e3a <code>9</code> \u7684 4 \u6bd4\u7279\u6574\u6570\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u8ba1\u6570\u5230 <code>9</code> \u540e\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f <code>0</code> \u7684 4 \u6bd4\u7279\u8ba1\u6570\u5668\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f53\u8ba1\u6570\u5668\u7684\u8f93\u51fa\u4e3a <code>9</code> \u65f6\uff0c\u4e0b\u4e00\u5468\u671f\u8ba9\u8ba1\u6570\u5668\u8f7d\u5165 <code>0</code>\uff1a</p> <p></p> <p>\u6309\u7406\u6765\u8bf4\u8fd9\u91cc\u5e94\u8be5\u662f \\(Load = Q_0\\cdot\\overline{Q_1}\\cdot\\overline{Q_2}\\cdot Q_3\\)\uff0c\u4ee5\u5bf9\u5e94 <code>9D=1001B</code>\uff0c\u4f46\u662f\u7531\u4e8e\u81ea\u589e\u8fc7\u7a0b\u4e2d\uff0c<code>1001</code> \u662f\u7b2c\u4e00\u4e2a\u6ee1\u8db3 <code>1??1</code> \u7684\u7ec4\u5408\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7b80\u5316\u4e3a \\(Load = Q_0\\cdot Q_3\\)\u3002</p> <p>\u5982\u4e0a\u662f\u4fee\u6539\u4e0a\u786e\u754c\u7684\u65b9\u6cd5\uff0c\u800c\u4fee\u6539\u4e0b\u786e\u754c\u7684\u65b9\u6cd5\u5219\u662f\u4fee\u6539 \\(D_i\\) \u5e8f\u5217\uff0c\u4f8b\u5982\u4e0a\u56fe\u4e2d \\(D\\) \u63a5\u5730\uff0c\u6240\u4ee5\u4e0b\u786e\u754c\u662f <code>0000B</code>\u3002</p> <p>Mod N \u8ba1\u6570\u5668</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a BCD \u7801\u5faa\u73af\u8ba1\u6570\u5668\u770b\u4f5c\u662f\u7279\u6b8a\u7684 Mod N \u8ba1\u6570\u5668\uff0c\u5373 N = 10 \u7684 Mod N \u8ba1\u6570\u5668\u3002</p> <p>\u6216\u8bb8\u4f60\u4f1a\u60f3\uff0c\u5b9e\u73b0 Mod N \u8ba1\u6570\u5668\u80fd\u4e0d\u80fd\u5728\u6ee1\u8db3\u8f93\u51fa\u6761\u4ef6\u540e\u76f4\u63a5\u4f7f\u7528 <code>Clear</code> \u8f93\u5165\u3002\u4f46\u662f\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u4e86\uff0c<code>Clear</code> \u4e5f\u597d\uff0c<code>Set</code> \u4e5f\u7f62\uff0c\u5b83\u4eec\u90fd\u662f\u5f02\u6b65\u64cd\u4f5c\u3002\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u4e5f\u4e0d\u5e94\u8be5\u4f7f\u7528\u5f02\u6b65\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u597d\u7684\u505a\u6cd5\u8fd8\u662f\u4f7f\u7528 <code>Load</code>\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_21","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u63a7\u5236","text":"<p>\u672a\u5b8c\u6210</p> <p>Control Unit</p> <ul> <li>Programmable sys<ul> <li>instructions (usually stored in memory RAM/ROM)</li> <li>program counter</li> </ul> </li> <li>Nonprogrammable sys<ul> <li>focus on this</li> <li>State machine diagrams for Control Unit design.</li> </ul> </li> </ul> <ol> <li>Write a detailed system specification.</li> <li>Define all external data and control input signals, all external data, control, and status output signals, and the registers of the datapath and control unit.</li> <li>Find a state machine diagram for the system including the register transfers in the datapath and in the control unit.</li> <li>Define internal control and status signals. Use these signals to separate output conditions and actions, including register transfers, from the state diagram flow and represent them in tabular form.</li> <li>Draw a block diagram of the datapath including all control and status inputs and outputs. Draw a block diagram of the control unit if it includes register transfer hardware.</li> <li>Design any specialized register transfer logic in both the control and datapath.</li> <li>Design the control unit logic.</li> <li>Verify the correct operation of the combined datapath and control logic. If verification fails, debug the system and reverify it.</li> </ol> <p>\u91cd\u70b9\u770b\u4e66\u4e0a\u7684\u4f8b\u5b50\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/","title":"Chap 7 Memory Basics","text":"<p>\u6846\u67b6</p> <ul> <li>Two types: RAM &amp; ROM<ul> <li>RAM ship consists of an array of RAM cells, decoders, write circuits, read circuits, output circuits</li> <li>RAM bit slice</li> <li>DRAM</li> <li>Error-detection and correction codes, often based on Hamming codes</li> </ul> </li> <li>R&amp;W operations have specific steps and associated timing parameters: access time &amp; write cycle time</li> <li>static(SRAM) or dynamic(DRAM), volatile or nonvolatile</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#7-1_memory","title":"7-1 Memory","text":"<p>Defination: Two types of memories are used in various parts of a computer: random-access memory (RAM) and read-only memory (ROM). RAM accepts new information for storage to be available later for use. The process of storing new information in memory is referred to as a memory write operation. The process of transferring the stored information out of memory is referred to as a memory read operation. RAM can perform both the write and the read operations, whereas ROM, as introduced in Section 6-8, performs only read operations. RAM sizes may range from hundreds to billions of bits.</p> <p>Memory is a collection of binary storage cells together with associated circuits needed to transfer information into and out of the cells.</p> word\u76f8\u5173 <ol> <li>A word is an entity of bits that moves in and out of memory as a unit\u2014a group of 1s and 0s that represents a number, an instruction, one or more alphanumeric characters, or other binary-coded information.</li> <li>A group of eight bits is called a byte. </li> <li>Most computer memories use words that are multiples of eight bits in length. Thus, a 16-bit word contains two bytes, and a 32-bit word is made up of four bytes. The capacity of a memory unit is usually stated as the total number of bytes that it can store.</li> <li>Communication between a memory and its environment is achieved through data input and output lines, address selection lines, and control lines that specify the direction of transfer of information.</li> <li>Computer memory varies greatly in size. It is customary to refer to the number of words (or bytes) in memory with one of the letters K (kilo), M (mega), or G (giga). K is equal to 2^10, M to 2^20, and G to 2^30.</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#memory_organization","title":"Memory Organization","text":"<p>The memory is organized as an array of storage cells, each of which is capable of storing one bit of information. The cells are arranged in rows and columns. The intersection of a row and a column is called a memory address. The number of rows and columns determines the capacity of the memory.  </p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#memory_operations","title":"Memory Operations","text":"<p>The memory is accessed by specifying the address of the desired word. The address is applied to the memory address input lines. The memory then selects the addressed word and transfers it to the memory output lines. The memory is also capable of accepting a word from the memory input lines and storing it in the addressed word location. The memory is controlled by a set of control lines that specify the direction of transfer of information.</p> <p>Pay attention to the order of reading and writing</p> <p>Read: - \u5c06\u6709\u6548\u7684\u5730\u5740\u653e\u5230address input lines\u4e0a\u3002 - \u5c06read control line\u7f6e\u4e3a1\u3002 - \u7b49\u5f85\u8bfb\u51fa\u7684\u6570\u636e\u7a33\u5b9a\uff0c\u5c06\u6570\u636e\u4ecememory output lines\u8bfb\u51fa\u3002 </p> <p>Write: - \u5c06\u6709\u6548\u7684\u5730\u5740\u653e\u5230address input lines\u4e0a\u3002\u5c06\u5199\u5165\u7684\u6570\u636e\u653e\u5230data input lines\u4e0a\u3002 - \u6fc0\u6d3b\u5199\u5165\u63a7\u5236\u3002 </p> <p>Data\u2f00\u5b9a\u8981\u57280-1\u524d\u4fdd\u6301\u2f00\u6bb5\u65f6\u95f4\u6765\u5efa\u2f74\u5e76\u4e140-1\u540e\u7ef4\u6301\u2f00\u6bb5\u65f6\u95f4\u624d\u80fd\u6b63\u786e\u5199\u2f0a.</p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#random-access_memory_ram","title":"random-access memory (RAM)","text":"<p>RAM\u5206\u4e3a\u4e24\u79cd\uff1astatic RAM (SRAM) and dynamic RAM (DRAM)\u3002SRAM\u662f\u9759\u6001\u7684\uff0cDRAM\u662f\u52a8\u6001\u7684\u3002SRAM\u7684\u901f\u5ea6\u6bd4DRAM\u5feb\uff0c\u4f46\u662fDRAM\u7684\u5bb9\u91cf\u6bd4SRAM\u5927\u3002SRAM\u7684\u5355\u5143\u662f\u7531flip-flop\u6784\u6210\u7684\uff0cDRAM\u7684\u5355\u5143\u662f\u7531capacitor\u548ctransistor\u6784\u6210\u7684\u3002\uff08\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u9700\u8981refresh\uff09</p> <p>\u8fd8\u5206\u6325\u53d1\u4e0e\u975e\u6325\u53d1</p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#sram","title":"SRAM","text":"<p> - SRAM\u7684\u5355\u5143\u662f\u7531flip-flop\u6784\u6210\u7684\uff0c\u6bcf\u4e2a\u5355\u5143\u9700\u89816\u4e2atransistor\u3002\u56e0\u6b64SRAM\u7684\u9762\u79ef\u6bd4DRAM\u5927\uff0c\u4f46\u662f\u901f\u5ea6\u5feb\uff0c\u4e0d\u9700\u8981refresh\u3002 - Logic diagram\u5982\u4e0b\uff1a</p>"},{"location":"ZJU_CS/DigitalDesign/exam/","title":"\u5386\u5e74\u5377\u68b3\u7406","text":""},{"location":"ZJU_CS/DigitalDesign/exam/#18-19","title":"18-19","text":"<ol> <li>\u4e8c\u8fdb\u5236\u7684\u8865\u7801\uff08Complement\uff09\u548c\u53cd\u7801\uff08Inverse Code\uff09\u7684\u6982\u5ff5\u53ca\u5176\u8ba1\u7b97\u65b9\u6cd5\u3002(1's complement, 2's complement)</li> <li>The setup time of a flip-flop is the minimum amount of time that an input must remain stable before an active clock transition.</li> <li>The complement of a flip-flop.</li> <li>The gate input cost.</li> <li>The dual of function.</li> <li>LUT(look up table): FPGA used it.</li> <li>\u4f1a\u8003JK\u89e6\u53d1\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002</li> <li>The steps of RAM</li> <li>\u6e05\u695a\u4e0b\u5217\u51fd\u6570\u7684\u542b\u4e49 <pre><code>or(x, B, C, D);\n</code></pre></li> <li>\u719f\u6089\u884c\u6ce2\u8ba1\u6570\u5668\u548c\u540c\u6b65\u8ba1\u6570\u5668\u7684\u5de5\u4f5c\u539f\u7406\u3002</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/glossary/","title":"\u8bcd\u6c47\u8868","text":"<p>\ud83d\ude4f</p> <p>\u8bcd\u6c47\u8868\u662f cm \u8001\u5e08\u6574\u7406\u7684\uff0c\u8ba9\u6211\u4eec\u8bf4 \u8c22\u8c22 cm \uff01</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#1_ch11-7","title":"1)   Ch1.1-7","text":"<p>odometer\uff1a\u91cc\u7a0b\u8868\uff0c\u8ba1\u7a0b\u5668</p> <p>signal conditioning: \u4fe1\u53f7\u8c03\u7406\u3001\u4fe1\u53f7\u5904\u7406</p> <p>capacitor\uff1a\u7535\u5bb9\u5668\uff0ce.g., capacitor charge\uff0c\u7535\u5bb9\u5668\u5145\u7535</p> <p>radix\uff1a\u57fa\u6570(= base)</p> <p>radix point\uff1a\u5c0f\u6570\u70b9</p> <p>number = integer portion(\u6574\u6570\u90e8\u5206) + fraction portion(\u5c0f\u6570\u90e8\u5206)</p> <p>power series\uff1a\u5e42\u7ea7\u6570</p> <p>binary\uff1a\u4e8c\u8fdb\u5236\uff0coctal\uff1a\u516b\u8fdb\u5236\uff0cdecimal\uff1a\u5341\u8fdb\u5236\uff1bhexadecimal\uff1a\u5341\u516d\u8fdb\u5236</p> <p>augend\uff1a\u88ab\u52a0\u6570</p> <p>addend\uff1a\u52a0\u6570</p> <p>minuend: \u88ab\u51cf\u6570</p> <p>subtrahend\uff1a\u51cf\u6570</p> <p>padding\uff1a\u586b\u5145</p> <p>weighted code\uff1a\u6709\u6743\u7801</p> <p>arithmetic\uff1a\u7b97\u672f\u3001\u56db\u5219\u8fd0\u7b97</p> <p>significant digit\uff1a\u6709\u6548\u4f4d</p> <p>punched paper\uff1a\u6253\u5b54\u7eb8\u5e26</p> <p>parity\uff1a\u5947\u5076\u6821\u9a8c</p> <p>even\uff1a\u5076\u6570</p> <p>odd\uff1a\u5947\u6570</p> <p>source coding\uff1a\u4fe1\u6e90\u7f16\u7801</p> <p>channel coding\uff1a\u4fe1\u9053\u7f16\u7801</p> <p>optical Shaft Encoder\uff1a\u5149\u8f74\u7f16\u7801\u5668</p> <p>positional number system\uff1a\u6309\u4f4d\u8bb0\u6570\u5236</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#2_ch21-3","title":"2)   Ch2.1-3","text":"<p>notation: \u6807\u8bb0\u6cd5</p> <p>operator\uff1a\u8fd0\u7b97\u7b26\u3001\u7b97\u5b50\uff0ce.g., logical operator \u903b\u8f91\u8fd0\u7b97\u7b26</p> <p>operand\uff1a\u64cd\u4f5c\u6570</p> <p>identifier\uff1a\u6807\u8bc6\u7b26=designator\uff0ce.g., variable identifier\uff1a\u53d8\u91cf\u6807\u8bc6\u7b26</p> <p>overbar: ( \u00af )\u4e0a\u6a2a\u7ebf</p> <p>single quote mark (')\uff1a\u5355\u5f15\u53f7</p> <p>normally-closed switch\uff1a\u5e38\u95ed\u5f00\u5173,e.g. Normally-Open(NO), Normally-Closed(NC)</p> <p>magnetic field\uff1a\u78c1\u573a</p> <p>energizing coil\uff1a\u6fc0\u52b1\u7ebf\u5708</p> <p>relay\uff1a\u7ee7\u7535\u5668</p> <p>transistor: \u6676\u4f53\u7ba1\u3001\u4e09\u6781\u7ba1</p> <p>precedence\uff1a\u4f18\u5148\u6743\uff0ce.g., Boolean Operator Precedence</p> <p>parenthesis\uff1a\u62ec\u53f7\uff08\u5355\u6570\u5f62\u5f0fparenthesis\uff09</p> <p>leave out\uff1a\u9057\u6f0f, e.g., If the meaning is unambiguous, we leave out the symbol  \u201c\u00b7\u201d.</p> <p>idempotence: \u5e42\u7b49\u6027</p> <p>involution: \u4e58\u65b9</p> <p>dual\uff1a\u5bf9\u5076= duality\uff0ce.g., The dual of an algebraic expression is obtained by interchanging +  and \u00b7 and interchanging 0\u2019s and 1\u2019s.</p> <p>dual function\uff1a\u5bf9\u5076\u51fd\u6570</p> <p>complement function: \u8865\u51fd\u6570</p> <p>canonical form\uff1a\u89c4\u8303\u5f62\u5f0f</p> <p>standard form\uff1a\u6807\u51c6\u5f62\u5f0f</p> <p>designator\uff1a\u6807\u8bc6\u7b26= identifier\uff0ce.g., We drop the \u201cm\u201d designators\uff1a\u6211\u4eec\u5220\u9664\u4e86m\u53d8\u91cf\u6807\u8bc6\u7b26</p> <p>identity: \u540c\u4e00\u6027\uff1b\u4e00\u81f4\uff1b\u76f8\u7b49\uff1be.g., Prove the identity of each of the following Boolean  equations, using algebraic manipulation.</p> <p>indices\uff1aindex\u7684\u590d\u6570(=indexes) \u4e00\u822c\u5728\u6570\u5b66\uff0c\u91d1\u878d\u548c\u76f8\u5173\u9886\u57df\u4f7f\u7528</p> <p>subscript\uff1a\u4e0b\u6807</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#3_ch24-7","title":"3)   Ch2.4-7","text":"<p>Venn diagram\uff1a\u7ef4\u6069\u56fe</p> <p>Implicant\uff1a\u8574\u6db5\u9879\uff1b\u8574\u542b\u9879\uff1b\u9690\u542b\u6570</p> <p>Prime implicant: \u4e3b\u8574\u542b\u9879</p> <p>essential prime implicant\uff1a\u57fa\u672c\u7d20\u8574\u6db5; \u5b9e\u8d28\u672c\u539f\u8574\u6db5</p> <p>Don't cares: \u65e0\u5173\u6700\u5c0f\u9879</p> <p>degenerate: \u9000\u5316, e.g., A NAND gate with one input degenerates to an inverter.</p> <p>Hi-Impedance Outputs: \u9ad8\u963b\u6001\u8f93\u51fa</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#4_ch3_1-2","title":"4)   ch3. 1-2","text":"<p>rudimentary:\u57fa\u7840\u7684\uff1b\u57fa\u672c\u7684\uff1b\u672a\u5145\u5206\u53d1\u5c55\u7684\uff1b\u539f\u59cb\u7684</p> <p>die: \u88f8\u7247\u3001\u82af\u7247</p> <p>wafer\uff1a\u6676\u5706</p> <p>margin: \u8fb9\u7f18\u3001\u5dee\u989d\uff0ce.g., noise margin\uff0c\u566a\u58f0\u5bb9\u9650</p> <p>superimpose: v.\u4f7f\uff08\u7532\uff09\u53e0\u6620\u5728\uff08\u4e59\uff09\u4e0a\uff1b\u4f7f\u91cd\u53e0, e.g., Noise margin refers to the maximum external  noise voltage superimposed on a normal input value that will not cause an undesirable change  in the circuit output</p> <p>dissipation: n.\u6d88\u8017\uff1b\u653e\u8361\uff1b\u6d6a\u8d39\uff1be.g., power dissipation = power consumption</p> <p>propagation delay\uff1a\u4f20\u64ad\u5ef6\u8fdf</p> <p>transition time\uff1a\u8f6c\u6362\u65f6\u95f4</p> <p>transport delay\uff1a\u4f20\u8f93\u5ef6\u8fdf</p> <p>inertial delay\uff1a\u60ef\u6027\u5ef6\u8fdf</p> <p>full custom: \u5b8c\u5168\u5b9a\u5236</p> <p>fabrication: \u5236\u9020\u3001\u5236\u4f5c</p> <p>cell library\uff1a\u5143\u4ef6\u5e93</p> <p>schematic\uff1a\u539f\u7406\u56fe\uff0c\u7b80\u56fe</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#5_ch3_3-9","title":"5)   ch3. 3-9","text":"<p>decoder\uff1a\u8bd1\u7801\u5668</p> <p>encoder\uff1a\u7f16\u7801\u5668</p> <p>multiplexer\uff1a\u591a\u8def\u590d\u7528\u5668\uff0cMultiplexer means many into one.</p> <p>demultiplexer\uff1a\u4fe1\u53f7\u5206\u79bb\u5668\u3001\u591a\u8def\u5206\u914d\u5668\uff0cThe demultiplexer means one into many.</p> <p>anode: \u9633\u6781\uff0c\u6b63\u6781</p> <p>cathode: \u9634\u6781\uff0c\u8d1f\u6781</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#6_ch3_8-10","title":"6)   Ch3. 8-10","text":"<p>Iterative array\uff1a\u8fed\u4ee3\u9635\u5217</p> <p>Ripple Carry Adder\uff1a\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668</p> <p>Carry Look-ahead Adder: \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668</p> <p>bit-wise: \u4ee5\u4f4d\u4e3a\u64cd\u4f5c\u5bf9\u8c61\u7684(wise\u662f\u65b9\u5f0f\u4e4b\u610f),\u5982bit-wise operators(\u4f4d\u8fd0\u7b97\u7b26), 2-input bit-wise  addition functional block</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#7_ch311-12","title":"7)   Ch3.11-12","text":"<p>1's Complement\uff1a\u53cd\u7801</p> <p>2's Complement\uff1a\u8865\u7801</p> <p>magnitude\uff1a\u6570\u503c</p> <p>Signed-Magnitude\uff1a\u7b26\u53f7\u2014\u6570\u503c\u8868\u793a\u6cd5</p> <p>Signed-Complement\uff1a\u7b26\u53f7\u2014\u8865\u7801\u8868\u793a\u6cd5</p> <p>contraction\uff1a(n.) \u6536\u7f29\u3001\u7d27\u7f29\uff1bcontract\uff1a(v.) \u6536\u7f29</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#8_ch5_2","title":"8)   Ch5. 2","text":"<p>fuse intact\uff1a\u7194\u4e1d\u4fdd\u7559</p> <p>fuse blown\uff1a\u7194\u4e1d\u7194\u65ad</p> <p>volatile\uff1a\u6613\u5931\u6027\u7684</p> <p>non-volatile\uff1a\u975e\u6613\u5931\u6027\u7684</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#9_ch4_1-4","title":"9)   Ch4. 1-4","text":"<p>tractable: (adj.) \u6613\u5904\u7406\u7684\uff1b\u6613\u9a7e\u9a6d\u7684</p> <p>oscillator: (n.) \u632f\u8361\u5668</p> <p>capacitors: (n.) \u7535\u5bb9\u5668</p> <p>inductor: (n.) \u7535\u611f\u5668</p> <p>latch\uff1a\u9501\u5b58\u5668</p> <p>flip-flop\uff1a\u89e6\u53d1\u5668</p> <p>metastable state\uff1a\u4e9a\u7a33\u6001</p> <p>alternating clock\uff1a\u4ea4\u66ff\u65f6\u949f</p> <p>disposable sampling = 1s catching\uff1a\u4e00\u6b21\u91c7\u6837</p> <p>setup time\uff1a\u5efa\u7acb\u65f6\u95f4</p> <p>hold time\uff1a\u4fdd\u6301\u65f6\u95f4</p> <p>pulse-triggering\uff1a\u8109\u51b2\u89e6\u53d1</p> <p>level triggering\uff1a\u7535\u5e73\u89e6\u53d1</p> <p>edge triggering\uff1a\u8fb9\u6cbf\u89e6\u53d1</p> <p>self-recovery capability\uff1a\u81ea\u6062\u590d\u80fd\u529b</p> <p>equivalent state\uff1a\u7b49\u4ef7\u72b6\u6001</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#10_ch6_1-5","title":"10)  Ch6. 1-5","text":"<p>register\uff1a\u5bc4\u5b58\u5668</p> <p>register transfer operation\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c</p> <p>microoperation\uff1a\u5fae\u64cd\u4f5c</p> <p>register transfer structure\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93\u7ed3\u6784</p> <p>bus\uff1a\u603b\u7ebf</p> <p>lateral: (adj.) \u4fa7\u9762\u7684\uff1b\u6a2a\u5411\u7684\uff1b\u5411\u4fa7\u9762\u79fb\u52a8\u7684</p> <p>laterally: (adv.) \u4fa7\u9762\u5730\uff1b\u6a2a\u5411\u5730\uff1b\u5411\u4fa7\u9762\u79fb\u52a8\u5730</p> <p>serial gating\uff1a\u4e32\u884c\u95e8\u63a7</p> <p>parallel gating\uff1a\u5e76\u884c\u95e8\u63a7</p> <p>counter\uff1a\u8ba1\u6570\u5668</p> <p>data path\uff1a\u6570\u636e\u901a\u9053</p> <p>control unit\uff1a\u63a7\u5236\u5355\u5143</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#11_ch7_1-7","title":"11)  Ch7. 1-7","text":"<p>strobe\uff1a\u9009\u901a\uff1b\u9009\u901a\u8109\u51b2\uff1b\u95f8\u95e8</p> <p>SRAM\uff1a\u9759\u6001\u5185\u5b58</p> <p>DRAM\uff1a\u52a8\u6001\u5185\u5b58</p> <p>coincident selection\uff1a\u91cd\u5408\u9009\u62e9</p> <p>word extension\uff1a\u5b57\u6269\u5c55</p> <p>bit extension\uff1a\u4f4d\u6269\u5c55</p> <p>address multiplexing\uff1a\u5730\u5740\u590d\u7528\uff08\u6307DRAM\uff09</p> <p>refresh\uff1a\u5237\u65b0</p> <p>synchronous DRAM(SDRAM)\uff1a\u540c\u6b65DRAM</p> <p>burst read\uff1a\u7206\u53d1\u6a21\u5f0f\u8bfb\u53d6\u6570\u636e</p> <p>burst length\uff1a\u7206\u53d1\u6a21\u5f0f\u7684\u6570\u636e\u8bfb/\u5199\u957f\u5ea6</p> <p>memory bandwidth\uff1a\u5185\u5b58\u5e26\u5bbd</p>"},{"location":"ZJU_CS/DigitalDesign/learnskill/","title":"\u5b66\u4e60\u601d\u8def\u4ee5\u53ca\u8d44\u6e90","text":"<p>Guahao\u7684\u590d\u4e60\u7b14\u8bb0 Xiulao\u7684\u539f\u7f51\u7ad9 verilog \u5b9e\u9a8c\u7ec3\u4e60 \u5386\u5e74\u5377</p> <p>\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u50cf\u6211\u8fd9\u6837\u72fc\u72c8\uff0c\u800c\u662f\u80fd\u591f\u5408\u7406\u5229\u7528\u8d44\u6e90\u5b66\u4e60\u3002</p> <p>\u5f53\u7136\u6211\u4eec\u4e0d\u5f97\u4e0d\u627f\u8ba4\u6570\u903b\u8fd9\u4e2a\u8bfe\u662f\u53ef\u4ee510\u5929\u5de6\u53f3\u901f\u6210\u7684?\u8fd8\u671b\u5927\u5bb6\u53c2\u8003\u3002</p>"},{"location":"ZJU_CS/Discrete%20math/","title":"\u79bb\u6563\u6570\u5b66","text":"<p>\u8bfe\u7a0b\u4fe1\u606f</p> <p>\u672c\u8bfe\u7a0b\u662f\u7afa\u9662\u6df7\u5408\u73ed\u6570\u5b66\u6a21\u5757\u8bfe\u300a\u79bb\u6563\u6570\u5b66H\u300b\u8bfe\u7a0b\u7684\u7b14\u8bb0\u8bb0\u5f55\u3002 \u8bfe\u7a0b\u662f\u7531\u8ba1\u7b97\u673a\u5b66\u9662\u7684\u91d1\u5c0f\u521a\u8001\u5e08\u6388\u8bfe\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5efa\u8bae\u5927\u5bb6\u542c\u667a\u4e91\u5b66\u4e60\u4e86\uff0c\u4f46\u8bb2\u771f\u8001\u5e08\u7684PPT\u8d28\u91cf\u975e\u5e38\u9ad8\uff01\u76f8\u6bd4\u4e8e\u8bfb\u539a\u539a\u7684\u5927\u4e66\u53ef\u80fd\u66f4\u5bb9\u6613\u5b66\u4e60\u4e9b\u3002</p> <p>\u672c\u7b14\u8bb0\u6574\u4f53\u76f8\u5bf9\u7c97\u7cd9\uff0c\u7b97\u662f\u8003\u524d\u7684\u8865\u5929\u6323\u624e\u5427hhh\u3001</p>"},{"location":"ZJU_CS/Discrete%20math/exam/","title":"\u8003\u70b9\u8bb0\u5f55","text":""},{"location":"ZJU_CS/Discrete%20math/exam/#_2","title":"\u903b\u8f91\u8868\u8fbe\u5f0f","text":"<ol> <li>\\(p \\rightarrow q \\equiv \\neg p \\lor q\\)</li> <li>Think reason: \\[ (p \\land \\neg r) \\lor (q \\land \\neg r) \\lor p \\\\ \\Leftrightarrow p \\lor(q \\land \\neg r)\\] </li> <li></li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/","title":"\u79bb\u6563\u77e5\u8bc6\u70b9\u68b3\u7406","text":"<p>\u76ee\u5f55</p> <p>=== \"info\"       \u5982\u82e5latex\u516c\u5f0f\u65e0\u6cd5\u663e\u793a\uff0c\u8bf7\u91cd\u65b0\u5237\u65b0\u754c\u9762\u5373\u53ef\u3002</p> <p>=== \"index\"       [TOC]</p>"},{"location":"ZJU_CS/Discrete%20math/note/#chapter_1_logic_and_proofs","title":"Chapter 1 Logic and Proofs","text":"<p>\u6458\u8981</p> \u672c\u7ae0\u8981\u70b9 <p>\u672c\u7ae0\u4e3b\u8981\u662f\u903b\u8f91\u8868\u8fbe\u5f0f\u4ee5\u53caquantifier\u7684\u4e00\u4e9b\u6982\u5ff5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8bc1\u660e\u65b9\u6cd5\u7684\u4ecb\u7ecd\u3002</p> <p>=== \"glossary\"       |\u82f1\u6587|\u4e2d\u6587|\u6570\u5b66\u7b26\u53f7\u6216\u542b\u4e49|       |:--:|:--:|----|       |proposition|\u547d\u9898| \\(p,q,r\\)|       |negation|\u5426\uff08\u547d\u9898\uff09| \\(\\neg\\)|       |disjunction|\u5e76|\\(\\vee\\)|       |conjunction | \u4ea4 | \\(\\wedge\\) |       |implication | \u8574\u542b | \\(\\rightarrow\\) |       |equivalence | \u7b49\u4ef7 | \\(\\Leftrightarrow\\) |       |tautology | \u6052\u771f\u5f0f |  |       |contradiction | \u77db\u76fe\u5f0f |  |       |contingence | \u53ef\u80fd\u5f0f |  |       |axiom | \u516c\u7406 | true without proof |       |theorem | \u5b9a\u7406 | can be shown to be true |       |lemma | \u5f15\u7406 | small theorem |       |corollary | \u63a8\u8bba |  |       |conjecture | \u731c\u60f3 |  |\u8fbe\u4ee5\u53ca\u63a8\u5bfc\uff08\u6ce8\u610fquantifier\uff09</p>"},{"location":"ZJU_CS/Discrete%20math/note/#propositional_logic","title":"Propositional Logic","text":"<ol> <li>Proposition must be statements.</li> <li>Disjunction and conjunction.</li> <li>Implication:\\(p \\rightarrow q\\) means that: <ul> <li>if p then q</li> <li>p implies q</li> <li>p only if q</li> <li>q is necessary for p</li> <li>p is sufficient for q</li> <li>if q whenever p <p>Truth table \uff08Notice: \\(p \\rightarrow q\\) is false only when \\(p\\) is true and \\(q\\) is false.\uff09 p - hypothesis or premise q - conclusion or consequence |p|q|\\(p \\rightarrow q\\)| |:--:|:--:|:--:| |T|T|T| |T|F|F| |F|T|T| |F|F|T| </p> </li> </ul> </li> </ol> \u9898\u76ee <p>sentence\uff1a\"You can not ride the roller coaster if you are under 4 feet tall unless you are older than 16 years old.\"</p> <ul> <li>p: you can ride the roller coaster</li> <li>q: you are under 4 feet tall</li> <li>r: you are older than 16 years old</li> <li>\\((q\\wedge \\neg r) \\rightarrow \\neg q\\)</li> </ul> <ol> <li>Biconditional: \\(p \\leftrightarrow q\\) means that:</li> <li>p if and only if q</li> <li>p is necessary and sufficient for q</li> <li> <p>p implies q and q implies p</p> <p>Truth table(same to XOR) |p|q|\\(p \\leftrightarrow q\\)| |:--:|:--:|:--:| |T|T|T| |T|F|F| |F|T|F| |F|F|T|</p> </li> <li> <p>We need to notice the priority of the operators.</p> </li> <li>\\(\\neg\\) has the highest priority.</li> <li>\\(\\wedge\\) has higher priority than \\(\\vee\\).</li> <li>\\(\\vee\\) has higher priority than \\(\\rightarrow\\) and \\(\\leftrightarrow\\).</li> <li>\\(\\rightarrow\\) and \\(\\leftrightarrow\\) have the lowest priority.</li> </ol> \u5c0f\u6d4b <p>\u53ef\u80fd\u4f1a\u8003\u4f60 another logical operators, such as Sheffer stroke, Peirce arrow, NAND, NOR, XOR, XNOR.</p> <p>Sheffer stroke: \\(p \\uparrow q \\equiv \\neg (p \\wedge q)\\)    Peirce arrow: \\(p \\downarrow q \\equiv \\neg (p \\vee q)\\)    Must be functionally complete, which means that any logical expression can be expressed by using only the operator.</p> <ol> <li>Tautology, Contradiction and Contingency.</li> <li>Logical equivalence: Formulae A and B are called logical equivalence if \\(A \\leftrightarrow B\\) is a tautology.    - Example: \\(\\neg p \\vee q\\) and \\(p \\rightarrow q\\) are logically equivalent.    - Example: \\(p \\rightarrow q\\) and \\(\\neg q \\rightarrow \\neg p\\) are logically equivalent.    - Example: \\(p \\leftrightarrow q\\) and \\((p \\rightarrow q) \\wedge (q \\rightarrow p)\\) are \\((\\neg p \\vee q) \\wedge (\\neg q \\vee p)\\) are logically equivalent.</li> </ol> <p>\u8fd9\u91cc\u51e0\u4e4e\u540c\u6982\u7edf\u548c\u6570\u903b</p> <ol> <li>There are two types of normal forms in proposition calculus.</li> <li>disjunctive normal form(DNF):\\(p \\vee q \\vee \\neg r\\)</li> <li> <p>conjunctive normal form(CNF):\\((p \\vee q \\vee \\neg r) \\wedge (p \\vee \\neg q \\vee r)\\)</p> </li> <li> <p>Deductive reasoning: A conclusion is deduced from a set of premises by means of logical steps.</p> </li> </ol> How to solve <ol> <li>if conclusion in form of \\(p \\rightarrow q\\), then we can convert the original proposition into \\(p_1 \\wedge p_2 \\wedge \\dots \\wedge p_n \\Rightarrow q\\).</li> <li>Another important proof technique is proof by contradiction. We assume that the conclusion is false and then show that this assumption leads to a contradiction.</li> <li>To construct proofs using resolution as the only rule of inference, the hypothesis and the conclusion must be expressed as clauses.</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#predicate_and_quantifier","title":"Predicate and Quantifier","text":"<ol> <li>Predicate: A predicate is a statement involving one or more variables that becomes a proposition when values are substituted for the variables. <p>Example: \\(P(x): x^2 - 5x + 6 = 0\\) is a predicate. Example: \\(Q(x): x^2 - 5x + 6 &gt; 0\\) is a predicate. Example: \\(R(x,y): x + y = 0\\) is a predicate.</p> </li> <li>Quantifier: A quantifier is a symbol that indicates the generality of the open sentence.</li> <li>Universal quantifier: \\(\\forall\\) means \"for all\" or \"for every\".</li> <li>Existential quantifier: \\(\\exists\\) means \"there exists\" or \"there is at least one\".</li> <li>Example: \\(\\forall x P(x)\\) is a proposition.</li> <li> <p>Example: \\(\\exists x P(x)\\) is a proposition.</p> </li> <li> <p>Banding variables</p> <p>Remark: The order of the quantifiers is important. \\(\\forall x (P(x) \\rightarrow \\exists y Q(x,y))\\) is not logically equivalent to \\(\\exists y (\\forall x (P(x) \\rightarrow Q(x,y)))\\).</p> </li> </ol> <p>some important equivalent predicate Formula</p> <ul> <li>De Morgan's laws:<ul> <li>\\(\\neg (\\forall x P(x)) \\equiv \\exists x (\\neg P(x))\\)</li> <li>\\(\\neg (\\exists x P(x)) \\equiv \\forall x (\\neg P(x))\\)</li> </ul> </li> <li>Quantifier -- handle with care! <ul> <li>\\(\\forall x (p(x) \\wedge q(x)) \\equiv (\\forall x p(x)) \\wedge (\\forall x q(x))\\)</li> <li>\\(\\exists x (p(x) \\vee q(x)) \\equiv (\\exists x p(x)) \\vee (\\exists x q(x))\\)</li> </ul> </li> <li>But:<ul> <li>\\(\\forall x (p(x) \\vee q(x)) \\Leftarrow (\\forall x p(x)) \\vee (\\forall x q(x))\\)</li> <li>\\(\\exists x (p(x) \\wedge q(x)) \\Rightarrow (\\exists x p(x)) \\wedge (\\exists x q(x))\\)</li> </ul> </li> </ul>"},{"location":"ZJU_CS/Discrete%20math/note/#chapter_2_basic_structures_sets_functions","title":"Chapter 2 Basic Structures: Sets &amp; Functions","text":"<ol> <li>\u533a\u5206\\(\\in\\) &amp; \\(\\subset\\)</li> <li>Set operation: union:\\(\\cup\\) Intersection\\(\\cap\\) <p>If \\(A \\cap B = \\emptyset\\), then \\(A\\) and \\(B\\) are disjoint.</p> </li> <li>Difference: \\(A - B = \\{x | x \\in A \\wedge x \\notin B\\}\\)</li> <li>Complement: \\(\\bar{A} = U - A\\)</li> <li>Symmetric Difference: \\(A \\oplus B = (A - B) \\cup (B - A)\\) </li> </ol> <p>The power Set</p> <p>Definition: The power set of a set \\(A\\), denoted by \\(P(A)\\) or \\(2^S\\), is the set of all subsets of \\(A\\). \\(\\(2^S = \\{T | T \\subseteq S\\}\\)\\)</p>"},{"location":"ZJU_CS/Discrete%20math/note/#chapter_7_relations","title":"Chapter 7 Relations","text":""},{"location":"ZJU_CS/Discrete%20math/note/#71_relations_and_their_properties","title":"7.1 Relations and their properties","text":"<ol> <li>We write  \\(aRb\\)  for \\((a,b) \\in R\\)</li> </ol> <p>Definition: A binary relation R between A and B is a subset of Cartesian product \\(A \\times B\\) : \\(R \\subseteq A \\times B\\)</p> <p>When \\(A=B\\), \\(R\\) is called a relation on set \\(A\\).</p> <ol> <li> <p>Distinguish domain and range. (just like function)</p> </li> <li> <p>n-ary relation: n is called its degree.</p> </li> <li> <p>The composite of R and S is the relation: \\(S \\circ R = \\{(a,c)|a \\in A, c \\in C \\quad \\exists b \\in B\\}\\) such that  \\((a,b)\\in R\\) and \\((b,c)\\in S\\)</p> </li> <li> <p>Power: \\(R^{n+1} = R^n \\circ R\\)</p> </li> <li> <p>Inverse:\\(R^{-1} = \\{(y,x)|(x,y) \\in R\\}\\)</p> </li> <li> <p>Reflexive / Irreflexive: R is reflexive \\(\\Leftrightarrow \\forall x \\in A, (x,x) \\in R\\) </p> </li> <li> <p>symmetric / antisymmetric: </p> </li> </ol> <p>R is symmetric \\(\\Leftrightarrow \\forall x, y \\in A, (x,y)\\in R \\Rightarrow (y,x)\\in R \\Leftrightarrow R^{-1} = R\\)</p> <p>R is antisymmetric: \\(\\Leftrightarrow \\forall x, y \\in A, (x,y)\\in R \\quad and \\quad (y,x)\\in R \\Rightarrow x = y \\Leftrightarrow R \\cap R^{-1} \\subseteq R_=\\)</p> <p>Non-symmetric \\(\\not\\Leftrightarrow\\) antisymmetric (eg. \\(R_=\\))</p> <ol> <li>R is transitive \\(\\Leftrightarrow \\forall x, y, z \\in A((x,y)\\in R \\wedge(y,z) \\in R) \\Rightarrow (x,z)\\in R\\)</li> </ol> <p>Theorem:R on a set A is transitive if and only if \\(R^n \\subseteq R\\) for \\(n = 2, 3, \\dots\\)</p> <p>Inductive step: \\(R^{n+1}\\) is also a subset of \\(R\\)</p>"},{"location":"ZJU_CS/Discrete%20math/note/#72_representing_relations","title":"7.2 Representing Relations","text":"<ol> <li>Matrices representation.</li> </ol> <ul> <li>reflexive \\(\\Leftrightarrow\\) All terms \\(m_{ii}\\) in the main diagonal of \\(M_R\\) are 1</li> <li>symmetric \\(\\Leftrightarrow m_{ij} = m_{ji}\\) for all \\(i,j\\).</li> <li>anti-symmetric \\(\\Leftrightarrow\\) if $m_{ij} = 1 $ and \\(i\\not= j\\) then \\(m_{ij} = 0\\)</li> <li>Transitive \\(\\Leftrightarrow\\)  whenever \\(c_{ij}\\) in \\(C=M_R^2\\) is nonzero then entry \\(m_{ij}\\) in \\(M_R\\) is also nonzero</li> </ul> <ol> <li>Digraphs representation.</li> </ol> <ul> <li>A edge \\((a,b)\\), a isiInitial vertx and b is terminal vertex</li> <li>A edge of form \\((a,a)\\), called loop</li> <li>reflexible \\(\\Leftrightarrow\\) There are loops at every vertex of digraph.</li> <li>symmetric \\(\\Leftrightarrow\\) Every edge between distinct vertices is accompanied by a edge in the opposite direction.</li> </ul>"},{"location":"ZJU_CS/Discrete%20math/note/#73_closures_of_relations","title":"7.3 Closures of Relations","text":"<ol> <li>Definition: \\(R \\&amp; S\\) are relation,while S satisfy:</li> </ol> <ul> <li>S with property P and \\(R \\subseteq S\\)</li> <li>\\(\\forall S'\\) with property P and \\(R \\subseteq S'\\) , then \\(S \\subseteq S'\\)</li> </ul> <ol> <li>Theorem: R be a relation on set A.</li> </ol> <ul> <li>The reflexive closure of relation R:     $$    r(R) =R \\cup \\Delta    $$    , where \\(\\Delta = \\{(a,a)|a \\in A\\}\\)</li> <li>The symmmetric closure of relation R:     $$    S(R) = R \\cup R^{-1}    $$</li> </ul> <ol> <li>Definition: Path is a sequence of one or more edges in graph G.</li> </ol> <p>Theorem:  Let R be a relation on set \\(A\\). There is a path of length n from a to b \\(\\Leftrightarrow (a,b) \\in R^n\\)</p> <ol> <li>Definition: The connectivity relation \\(R^* = \\{(a,b)|\\text{there is a path from a to b}\\}\\).     $$    R^* = \\cup^{\\infin}_{n=1} R^n    $$</li> </ol> <p>Theorem: The transitive closure of R :    $$    t(R) = R^*    $$</p> <ol> <li>WARSHALL'S algorithm!</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#74_equivalence_relations","title":"7.4 Equivalence Relations","text":"<ol> <li> <p>Definition: Relation \\(R\\)~ : \\(A \\leftrightarrow A\\) is an equivalence relation, if it reflexive, symmetric and transitive.</p> </li> <li> <p>Definition: Let \\(R: A \\leftrightarrow A\\) is an equivalence relation. For any \\(a \\in A\\), the equivalence class of a is the set of the elements related to a.     $$    [a]_R = {x\\in A|(x,a) \\in R}    $$ .     If \\(b\\in [a]_R\\). b is called a representative of this equivalence class.</p> <p>The properties of equivalence classes are: 1. \\(\\forall a \\in A, a[R] \\not ={\\emptyset}\\)( by reflexive, \\(a \\in [a]_R\\) ) 2. \\(\\forall a,b \\in A, [a]_R = [b]_R\\) or \\([a]_R \\cap [b]_R = \\emptyset\\) (by symmetric and transitive)  3. $ \\cup_{a\\in A}[a]_R = A$ (\\(A \\subseteq \\cup_{a\\in A}, [a]_R \\subseteq A\\)) 4. \\([a]_R \\cap [b]_R \\not = \\emptyset \\Rightarrow [a]_R = [b]_R\\) (by symmetric and transitive)</p> </li> <li> <p>Definition: The set of all equivalence classes of R is called the quotient set of A by R.     $$    A/R = {[a]_R|a \\in A}    $$</p> <p>Remark: 1. If A is finite, then $|A/R| $ is also finite. 2. If A has n elements, and if every \\([a]_R\\) has m elements, then \\(|A/R| = n/m\\)</p> </li> <li> <p>Definition: A partition \\(\\pi\\) on a set \\(S\\) is a family of nonempty subsets of \\(S\\) such that every element of \\(S\\) is in exactly one of these subsets.  $$    \\pi = {A_1, A_2, \\dots, A_n}\\</p> </li> <li>\\cup_{k=1}^n A_k =S \\ </li> <li>A_j \\cap A_k = \\emptyset \\text{ for every j,k with }j \\not= k, 1 &lt; j, k &lt; n $$ <p>Theorem: Let \\(R\\) be an equivalence relation on a set \\(S\\). Then the equivalence of classes of \\(R\\) form a partition of \\(X\\). Conversely, given a partition \\(\\{A_i|i \\in I\\}\\) of \\(S\\), there is an equivalence relation \\(R\\) on \\(S\\) such that the equivalence classes of \\(R\\) are the sets \\(A_i\\).</p> </li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#75_partial_orderings","title":"7.5 Partial Orderings","text":"<ol> <li> <p>Definition: A relation \\(R_{\\preceq}\\) on a set \\(S\\) (\\(S \\leftrightarrow S\\)) is a partial ordering if it is reflexive, antisymmetric and transitive.</p> </li> <li> <p>Definition: The element a and b of s poset \\(S\\) are comparable if either \\(a \\preceq b\\) or \\(b \\preceq a\\). Otherwise, a and b are incomparable.</p> </li> <li>Definition: A poset \\(S\\) is a total ordering or linear ordering if every pair of elements of \\(S\\) is comparable. A totaly ordered set is also called a chain.</li> <li>Lexicograpic order: Construct a poset \\(S\\) by taking the Cartesian product of two posets \\(S_1\\) and \\(S_2\\). The relation \\(\\preceq\\) on \\(S\\) is defined by     $$    (a_1, a_2) \\preceq (b_1, b_2) \\Leftrightarrow a_1 \\preceq_1 b_1 \\text{ and } a_2 \\preceq_2 b_2    $$</li> <li> <p>hasse diagram: A hasse diagram of a poset \\(S\\) is a diagram that represents the poset \\(S\\) using points and line segments. The points of the diagram are the elements of \\(S\\), and there is a line segment between \\(a\\) and \\(b\\) if \\(a \\prec b\\) and there is no element \\(c\\) such that \\(a \\prec c \\prec b\\).</p> <ol> <li>Start with the directed graph for the relation.</li> <li>Remove all loops.</li> <li>Remove all edges that must be present because of the transitive property.</li> <li>Finally, arrange each edges so that its initial vertex is below its terminal vertex, Remove all arrows.</li> </ol> </li> <li> <p>Definition: Let \\((A, \\preceq)\\) be a partial ordered set, \\(B\\subseteq A\\).</p> <ol> <li>a is a maximal element of B if there is no element \\(b \\in B\\) such that \\(a \\prec b\\).</li> <li>b is a minimal element of B if there is no element \\(b \\in B\\) such that \\(b \\prec a\\).</li> <li>a is a greatest element of B if \\(a \\preceq b\\) for every \\(b \\in B\\).</li> <li>b is a least element of B if \\(b \\preceq a\\) for every \\(b \\in B\\). </li> <li>a is an upper bound of B if \\(b \\preceq a\\) for every \\(b \\in B\\).</li> <li>b is a lower bound of B if \\(a \\preceq b\\) for every \\(b \\in B\\).</li> <li>a is the least upper bound of B if a is an upper bound of B and if \\(a \\preceq c\\) for every upper bound c of B.</li> <li>b is the greatest lower bound of B if b is a lower bound of B and if \\(c \\preceq b\\) for every lower bound c of B.</li> </ol> <p>Remark: Can have many minimal/maximal elements, but only one least/greatest element.</p> </li> <li> <p>Definition: A poset \\(S\\) is a lattice if every pair of elements of \\(S\\) has a least upper bound and a greatest lower bound.</p> </li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#chapter_8_graph","title":"Chapter 8 Graph","text":""},{"location":"ZJU_CS/Discrete%20math/note/#81_basic_introduction","title":"8.1 Basic introduction","text":"<ol> <li> <p>Definition: A graph \\(G\\) is an ordered pair \\((V,E)\\), where \\(V\\) is a finite nonempty set and \\(E\\) is a set of two-element subsets of \\(V\\) which is called edges.</p> <p>Definition: A multigraph is a graph that is permitted to have multiple edges with the same endpoints.(don't have loops)</p> <p>Definition: A pseudograph is a graph that is permitted to have loops. Sum table: </p> </li> <li> <p>Terminology:    - Two vertices u and v are adjacent or neighbors if {u,v} is an edge of G.    - If {u,v} is an edge of G, then u and v are incident with the edge {u,v}.    - The degree of a vertex v, denoted by deg(v), is the number of edges incident with v, with loops counted twice.(Pendant vertex: deg(v) = 1)</p> </li> <li> <p>Theorem: Let \\(G = (V,E)\\) be a graph with \\(n\\) vertices and \\(m\\) edges. Then    $$    \\sum_{v \\in V} deg(v) = 2m    $$</p> <p>Corollary(\u7ed3\u8bba): The number of vertices of odd degree in any graph is even. Corollary:  $$ \\sum_{i=1}^{n}{deg^{-}{v_i}} = \\sum_{i=1}^{n}{deg^{+}{v_i}} = |E|$$</p> </li> <li> <p>Some simple graph:</p> </li> </ol> <ul> <li>complete graph: \\(K_n\\) is a simple graph with n vertices and exactly one edge between each pair of distinct vertices.(\\(|E| = \\frac{n(n-1)}{2}\\))</li> <li>cycles: \\(C_n\\) is a simple graph with n vertices \\(v_1, v_2, \\dots, v_n\\) and edges \\(\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\dots, \\{v_{n-1}, v_n\\}, \\{v_n, v_1\\}\\)</li> <li>wheels: \\(W_n\\) is a simple graph with n vertices \\(v_1, v_2, \\dots, v_n\\) and edges \\(\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\dots, \\{v_{n-1}, v_n\\}, \\{v_n, v_1\\}, \\{v_1, v_3\\}, \\{v_1, v_4\\}, \\dots, \\{v_1, v_n\\}\\) </li> <li>n-cubes: \\(Q_n\\) is a simple graph with \\(2^n\\) vertices \\(v_1, v_2, \\dots, v_{2^n}\\) and edges \\(\\{v_i, v_j\\}\\) if and only if \\(v_i\\) and \\(v_j\\) differ in exactly one bit position.</li> <li>bipartite graph: A graph \\(G = (V,E)\\) is bipartite if $$ V = V_1 \\cup V_2 \\ V_1 \\cap V_2 = \\emptyset$$ such that no edge has both endpoints in the same subset.</li> <li>complete bipartite graph: \\(K_{m,n}\\) is a bipartite graph with \\(m+n\\) vertices \\(v_1, v_2, \\dots, v_m\\) and \\(u_1, u_2, \\dots, u_n\\) and edges \\(\\{v_i, u_j\\}\\) for all \\(i = 1, 2, \\dots, m\\) and \\(j = 1, 2, \\dots, n\\).</li> </ul> <ol> <li>New graphs from old:</li> </ol> <ul> <li>subgraph: \\(G' = (V', E')\\) is a subgraph of \\(G = (V,E)\\) if \\(V' \\subseteq V\\) and \\(E' \\subseteq E\\).</li> <li>complement: \\(G' = (V, E')\\) is the complement of \\(G = (V,E)\\) if \\(E' = \\{ \\{u,v\\} | u,v \\in V, u \\not= v, \\{u,v\\} \\not\\in E\\}\\)</li> <li>union: \\(G_1 = (V_1, E_1)\\) and \\(G_2 = (V_2, E_2)\\), then \\(G_1 \\cup G_2 = (V_1 \\cup V_2, E_1 \\cup E_2)\\)</li> <li>join: \\(G_1 = (V_1, E_1)\\) and \\(G_2 = (V_2, E_2)\\), then \\(G_1 \\vee G_2 = (V_1 \\cup V_2, E_1 \\cup E_2 \\cup \\{ \\{u,v\\} | u \\in V_1, v \\in V_2\\})\\)</li> </ul>"},{"location":"ZJU_CS/Discrete%20math/note/#82_representing_graphs","title":"8.2 Representing graphs:","text":"<ol> <li>adjacency matrix: \\(A = (a_{ij})\\) is a \\(n \\times n\\) matrix such that \\(a_{ij} = 1\\) if \\(\\{v_i, v_j\\} \\in E\\) and \\(a_{ij} = 0\\) otherwise.</li> <li>incidence matrix: \\(B = (b_{ij})\\) is a \\(n \\times m\\) matrix such that \\(b_{ij} = 1\\) if \\(v_i\\) is incident with \\(e_j\\) and \\(b_{ij} = 0\\) otherwise. </li> <li>adjacency list: For each vertex \\(v_i\\), we have a list of all vertices adjacent to \\(v_i\\). (for directed graph, we have two lists for each vertex, one for the vertices adjacent to \\(v_i\\) and one for the vertices from which there is an edge to \\(v_i\\))</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#83_connection","title":"8.3 Connection","text":"<ol> <li>A path or circuit is simple if it does not contain a repeated edge.</li> <li></li> <li>Counting paths between vertices: The number of paths of length n from vertex \\(v_i\\) to vertex \\(v_j\\) in a graph G is the \\((i,j)\\) entry of the matrix \\(A^n\\).</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#84_euler_and_hamilton_paths","title":"8.4 Euler and Hamilton Paths","text":"<ol> <li>Definition: A Euler path in a graph G is a simple path that contains every edge of G. A Euler circuit is a simple circuit that contains every edge of G.</li> <li></li> <li> <p>Euler path judge. </p> </li> <li> <p>Definition: A Hamilton path in a graph G is a simple path that contains every vertex of G.\\(V = \\{v_1, v_2, \\dots, v_n\\}\\), then \\(v_1, v_2, \\dots, v_n\\) is a Hamilton path if and only if \\(\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\dots, \\{v_{n-1}, v_n\\}\\) are edges of G.</p> <p>Remark: A Hamilton circuit in a graph G is a simple circuit that contains every vertex of G.</p> </li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#85_planar_graphs","title":"8.5 Planar Graphs","text":"<ol> <li>Definition: A graph is planar if it can be drawn in the plane without any edges crossing.</li> <li>Theorem: Euler Formula -&gt; Let \\(G = (V,E)\\) be a connected planar graph with \\(n\\) vertices, \\(m\\) edges and \\(r\\) regions. Then \\(n - m + r = 2\\). </li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#86_coloring_graphs","title":"8.6 Coloring Graphs","text":""},{"location":"ZJU_CS/Discrete%20math/note/#chapter_9_trees","title":"Chapter 9 Trees","text":"<p>\u672c\u7ae0\u548cfds\u5b66\u4e60\u7684\u5185\u5bb9\u57fa\u672c\u76f8\u4f3c\u3002</p> glosssary \u82f1\u6587 \u4e2d\u6587 \u6570\u5b66\u7b26\u53f7\u6216\u542b\u4e49 ancestor \u7956\u5148 descendant \u540e\u4ee3 siblings \u5144\u5f1f"},{"location":"ZJU_CS/Discrete%20math/note/#91_introduction_to_trees","title":"9.1 Introduction to Trees","text":"<ol> <li>Definition: A tree is a connected undirected graph with no cycles.(simple circuit)</li> <li>Definition: A forest is a undirected graph with no cycles.</li> <li>m-ary tree: A tree in which every internal vertex has no more than m children.</li> <li>full m-ary tree: A m-ary tree in which every internal vertex has exactly m children.(which has i internal vertices) <p>Attributes: 1. contains \\(n = mi + 1\\) vertices 2. contains \\(l = [(m-1)n +1]/m\\) leaves. 3. height \\(h \\ge [log_m^l]\\), if full and balanced, \\(h = [log_m^l]\\)</p> </li> <li>ordered rooted tree: A rooted tree in which the children of each internal vertex are ordered.</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#92_applications_of_trees","title":"9.2 applications of trees","text":"<ol> <li>balanced tree: A tree is balanced if all its leaves are at h or h-1 level.</li> <li>prefix code: can be represented using a binary tree in which no codeword is a prefix of another codeword.(Huffman code)</li> <li>decision tree: A decision tree is a rooted tree in which each internal vertex corresponds to a decision, with a subtree for each possible outcome of the decision.</li> <li>tree traversal: preorder, inorder, postorder.</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#93_spanning_trees","title":"9.3 Spanning Trees","text":"<ol> <li>Definition: A spanning tree of a connected graph \\(G\\) is a subgraph of \\(G\\) that is a tree containing every vertex of \\(G\\).</li> <li>minimum spanning tree: A spanning tree of a weighted graph \\(G\\) with weight function \\(w\\) is a spanning tree with minimum weight. <p>Kruskal's algorithm: 1. Sort the edges of \\(G\\) in increasing order of weight. 2. Add the edges to \\(T\\) in increasing order of weight, unless doing so would create a cycle. Prim's algorithm: 1. Choose a vertex \\(v\\) to start the tree. 2. Add the edge of least weight incident with \\(v\\) to the tree. 3. Repeat step 2 until all vertices are in the tree.</p> </li> </ol>"},{"location":"ZJU_CS/FDS/","title":"Index","text":""},{"location":"ZJU_CS/FDS/#fds","title":"FDS","text":"<p>\u8fd9\u91cc\u662f\u6d59\u6c5f\u5927\u5b6623-24Fall\u9648\u8d8a\u8001\u5e08\u6570\u636e\u7ed3\u6784\u57fa\u7840\u7684\u7b14\u8bb0\u3002\u4ec5\u4f9b\u53c2\u8003\uff01</p> <p>\u6458\u8981</p> \u5fc3\u5f97\u5b66\u4e60\u8d44\u6e90 <ol> <li>\u672c\u4eba\u5b66\u4e60\u4ece\u672a\u542c\u8fc7\u8bfeor\u770b\u8fc7\u4e66\uff0c\u5168\u4e3a\u81ea\u5b66\u5b8c\u6210\u3002\u57fa\u672c\u4e0a\u8ddf\u7740\u6559\u5b66\u8fdb\u5ea6\u6bcf\u5468\u8fdb\u884c\u5b66\u4e60\u4e0d\u4f1a\u6709\u592a\u5927\u96be\u5ea6\u7684\u3002</li> <li>\u6b64\u5916\u4fbf\u662f\u8001\u751f\u5e38\u8c08\u7684\u201c\u5e94\u8bd5\u6559\u80b2\u201d\uff0c\u5bf9\u4e8efds\u8fd9\u95e8\u8bfe\u7a0b\uff0c\u5237\u9898\u662f\u5341\u5206\u6709\u5fc5\u8981\u7684\u3002</li> </ol> <ol> <li>\u8fd9\u91cc\u63a8\u8350\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5f00\u6e90\u7b97\u6cd5\u4e66hello-algo\u3002\u5b66\u671f\u518580%\u7684\u5185\u5bb9\u6211\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u7f51\u7ad9\u5b66\u4e60\uff0c\u7136\u540e\u901a\u8fc7\u4f5c\u4e1a\u67e5\u6f0f\u8865\u7f3a</li> </ol>"},{"location":"ZJU_CS/FDS/algorithm/","title":"\u7b97\u6cd5\u5206\u6790","text":"<p>\u4e00\u4e2a\u7b97\u6cd5(algorithm) \u662f\u4e3a\u4e86\u5b9e\u73b0\u7279\u5b9a\u4efb\u52a1\u7684\u4e00\u4e2a\u6709\u9650\u6761\u6307\u4ee4\u7684\u96c6\u5408</p> <p>\u7b97\u6cd5\u6ee1\u8db3\u8fd9\u4e9b\u6027\u8d28\uff1a </p> <ul> <li>Input</li> <li>Output</li> <li>Definiteness</li> <li>Finiteness</li> <li>Effectiveness</li> </ul> <p>Note: program \u53ef\u4ee5\u4e0d finite(e.g. \u64cd\u4f5c\u7cfb\u7edf)</p>"},{"location":"ZJU_CS/FDS/algorithm/#_2","title":"\u5206\u6790\u5185\u5bb9","text":"<ul> <li>\u8fd0\u884c\u65f6\u95f4\uff1a\u4e0e\u673a\u5668\u3001\u7f16\u8bd1\u5668\u6709\u5173</li> <li>\u65f6\u95f4 &amp; \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u4e0e\u673a\u5668\u3001\u7f16\u8bd1\u5668\u65e0\u5173</li> </ul> <p>\u5047\u8bbe\uff1a</p> <ul> <li>\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c</li> <li>\u6bcf\u6761\u6307\u4ee4\u662f\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u6267\u884c</li> <li>\u6570\u636e\u89c4\u6a21\u662f\u7ed9\u5b9a\u7684\uff0c\u800c\u7a7a\u95f4\u662f\u65e0\u9650\u7684</li> </ul> <p>\u901a\u5e38\u6211\u4eec\u9700\u8981\u5206\u6790 \\(T_{avg}(N) \\&amp; T_{worst}(N)\\), \\(N\\) \u662f\u8f93\u5165\u89c4\u6a21\uff08\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\uff09</p>"},{"location":"ZJU_CS/FDS/algorithm/#_3","title":"\u6e10\u8fdb\u7b26\u53f7","text":""},{"location":"ZJU_CS/FDS/algorithm/#_4","title":"\u5b9a\u4e49","text":"<p>\u5927 \\(O\\) \u8868\u793a\u6cd5 \\(T(N) = O(f(N))\\)\uff0c\u5982\u679c\u5b58\u5728\u5e38\u6570 \\(c\\) \u548c \\(n_0\\)\u200b\u4f7f\u5f97\u5f53 \\(N\\geq n_0\\) \u65f6 \\(T(N)\\leq c\\cdot f(N)\\) \u6e10\u8fdb\u4e0a\u754c\uff0c\u5373 \\(T(N)\\) \u7684\u9636\u4e0d\u4f1a\u9ad8\u4e8e \\(f(N)\\)\uff08\u589e\u957f\u6bd4 \\(f(N)\\) \u6162\u6216\u76f8\u540c\uff0c\\(\\leq\\)\uff09</p> <p>\u5927 \\(\\Omega\\) \u8868\u793a\u6cd5 \\(T(N) = \\Omega(g(N))\\)\uff0c\u5982\u679c\u5b58\u5728\u5e38\u6570 \\(c\\) \u548c \\(n_0\\)\u200b\u4f7f\u5f97\u5f53 \\(N\\geq n_0\\) \u65f6 \\(T(N)\\geq c\\cdot f(N)\\) \u6e10\u8fdb\u4e0b\u754c\uff0c\u5373 \\(T(N)\\) \u7684\u9636\u4e0d\u4f1a\u4f4e\u4e8e \\(f(N)\\)\uff08\u589e\u957f\u6bd4 \\(f(N)\\) \u5feb\u6216\u76f8\u540c\uff0c\\(\\geq\\)\uff09</p> <p>\u5927 \\(\\Theta\\) \u8868\u793a\u6cd5 \\(T(N) = \\Theta(h(N))\\)\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(T(N) = O(h(N))\\) \u4e14 \\(T(N) = \\Omega(h(N))\\) \u6e10\u8fdb\u7d27\u786e\u754c\uff0c\u5373 \\(T(N)\\) \u4e0e \\(h(N)\\) \u540c\u9636\uff08\u589e\u957f\u901f\u5ea6\u76f8\u540c\uff0c\\(=\\))</p> <p>\u5c0f \\(o\\) \u8868\u793a\u6cd5 \\(T(N) = o(p(N))\\)\uff0c\u5f53 \\(T(N)=O(p(N))\\) \u4e14 \\(T(N)\\neq \\Theta(p(N))\\) \u65f6\u6210\u7acb \u975e\u6e10\u8fdb\u7d27\u786e\u4e0a\u754c\uff0c\uff08\u5373 \\(T(N)\\) \u589e\u957f\u6bd4 \\(p(N)\\)\u6162\uff0c\\(&lt;\\)\uff09</p> <p>\u5c0f \\(w\\) \u8868\u793a\u6cd5 \\(T(N) = w(p(N))\\)\uff0c\u5f53 \\(T(N)=\\Omega(p(N))\\) \u4e14 \\(T(N)\\neq \\Theta(p(N))\\) \u65f6\u6210\u7acb \u975e\u6e10\u8fdb\u7d27\u786e\u4e0b\u754c\uff0c\uff08\u5373 \\(T(N)\\) \u589e\u957f\u6bd4 \\(p(N)\\)\u5feb\uff0c\\(&gt;\\)\uff09</p>"},{"location":"ZJU_CS/FDS/algorithm/#_5","title":"\u8fd0\u7b97\u89c4\u5219","text":"<ul> <li>\u82e5 \\(T_1(N)=O(f(N)), T_2(N)=O(g(N))\\) <ul> <li>\\(T_1(N)+T_2(N)=\\max(O(f(N)), O(g(N))\\)</li> <li>\\(T_1(N)\\cdot T_2(N)=O(f(N)\\cdot g(N))\\)</li> </ul> </li> <li>\u82e5 \\(T(N)\\) \u662f\u6700\u9ad8\u6b21\u6570\u4e3a k \u6b21\u7684\u591a\u9879\u5f0f\uff0c\u90a3\u4e48 \\(T(N)=\\Theta ((N^k))\\) </li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570 \\(k\\), \u90fd\u6709 \\(\\log^kN=O(N)\\)\uff0c\u8fd9\u8bf4\u660e\u5bf9\u589e\u957f\u975e\u5e38\u7f13\u6162\u3002</li> <li>\u5206\u6790\u65f6\u7684\u89c4\u5219<ul> <li>for loop \u8fd0\u884c\u65f6\u95f4\u662f\u5faa\u73af\u5185\u90e8\u8bed\u53e5\u7684\u6700\u957f\u65f6\u95f4\uff08\u5305\u62ec for \u8fb9\u754c\u5224\u65ad\uff09\u4e58\u5faa\u73af\u7684\u6b21\u6570</li> <li>\u5d4c\u5957 for loop \u8fd0\u884c\u65f6\u95f4\u662f\u5404\u4e2a for loop \u7684\u8fd0\u884c\u65f6\u95f4\u9010\u6b21\u76f8\u4e58</li> <li>\u8fde\u7eed\u6267\u884c\u7684\u8bed\u53e5 \u76f8\u52a0</li> <li>if else \u8fd0\u884c\u65f6\u95f4\u4e0d\u4f1a\u8d85\u8fc7\u5224\u65ad\u65f6\u95f4\u52a0\u4e0a\u7528\u65f6\u6700\u591a\u7684\u8bed\u53e5\u5757\u7684\u65f6\u95f4</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/exam/","title":"Exam","text":""},{"location":"ZJU_CS/FDS/exam/#_1","title":"\u5386\u5e74\u5377","text":""},{"location":"ZJU_CS/FDS/exam/#_2","title":"\u5224\u65ad\u9898","text":"<ol> <li>In a graph G, if we have to do BFS twice to visit every one of its vertices, then there must be a cycle in G. (F) \uff08\u53cd\u4f8b\uff1a\u4e8c\u5206\u56fe\uff09 \uff08However\uff0cDFS is true\uff09</li> </ol>"},{"location":"ZJU_CS/FDS/exam/#_3","title":"\u9009\u62e9\u9898","text":"<ol> <li>\u7528\u6808\u6765\u6a21\u62df\u4e2d\u5e8f\u5386\u904d</li> </ol>"},{"location":"ZJU_CS/FDS/exam/#_4","title":"\u7a0b\u5e8f\u586b\u7a7a\u9898","text":""},{"location":"ZJU_CS/FDS/exam/#quiz_4","title":"Quiz 4","text":"<ol> <li>\u5806\u7684\u7efc\u5408\u8003\u5bdf\uff1a     </li> </ol> \u5927\u9876\u5806\u8f6c\u5c0f\u9876\u5806\u7684\u7ebf\u6027\u65b9\u6cd5 <p>\u5c06\u4e00\u4e2a\u5927\u9876\u5806\u8f6c\u6362\u4e3a\u5c0f\u9876\u5806\u7684\u7ebf\u6027\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u79f0\u4e3a\"Heapify\"\u7684\u8fc7\u7a0b\u6765\u5b9e\u73b0\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a - \u4ece\u5927\u9876\u5806\u7684\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u4f9d\u6b21\u5411\u524d\u904d\u5386\u6bcf\u4e2a\u8282\u70b9\u3002 - \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6bd4\u8f83\u5b83\u4e0e\u5176\u5b50\u8282\u70b9\u7684\u503c\uff0c\u627e\u5230\u5176\u4e2d\u6700\u5c0f\u7684\u503c\u3002 - \u5982\u679c\u5b50\u8282\u70b9\u7684\u503c\u66f4\u5c0f\uff0c\u5c31\u4ea4\u6362\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u503c\u3002 - \u7ee7\u7eed\u5411\u524d\u904d\u5386\uff0c\u76f4\u5230\u5806\u9876\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u5c06\u6574\u4e2a\u5927\u9876\u5806\u8f6c\u6362\u4e3a\u5c0f\u9876\u5806\u3002</p>"},{"location":"ZJU_CS/FDS/exam/#mid-term","title":"Mid-term","text":"<ol> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u5728N\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\\(O(N^2)\\)\u7684\u7b97\u6cd5\uff0c\u800c\u5728N\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\\(O(NlogN)\\)\u7684\u7b97\u6cd5\u3002\u56e0\u6b64\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u60c5\u51b5\u4e0b\\(O(N^2)\\)\u7684\u7b97\u6cd5\u90fd\u6bd4\\(O(NlogN)\\)\u7684\u7b97\u6cd5\u5feb.</li> <li>The answer is true. Because the depth of the set must be less than \\(O(logN)\\).    </li> <li></li> <li>Partial order is a precedence relation which is both transitive and irreflexive.</li> </ol>"},{"location":"ZJU_CS/FDS/graph/","title":"\u56fe\u8bba","text":""},{"location":"ZJU_CS/FDS/graph/#_2","title":"\u5b9a\u4e49","text":"<ul> <li> <p>\u4e00\u4e2a\u56fe \\(G=(V,E)\\) \u5176\u4e2d \\(V\\) \u662f\u8282\u70b9\u7684\u6709\u9650\u975e\u7a7a\u96c6\u5408, \\(E\\) \u662f\u8fb9\u7684\u6709\u9650\u975e\u7a7a\u96c6\u5408. \u6bcf\u4e00\u6761\u8fb9\u5c31\u662f\u4e00\u4e2a\u70b9\u5bf9 \\((v,w)\\).  </p> <ul> <li>\u65e0\u5411\u56fe: \\((v_i,v_j)=(v_j,v_i)\\) \u8868\u793a\u540c\u4e00\u6761\u8fb9</li> <li>\u6709\u5411\u56fe: \\((v_i,v_j)\\neq (v_j,v_i)\\) \u5176\u4e2d \\((v_i,v_j)\\) \u8868\u793a\u7531 \\(v_i\\) (tail) \u6307\u5411 \\(v_j\\) (head) \u7684\u4e00\u6761\u8fb9\u3002</li> <li>\u9650\u5236\uff1a\u81ea\u73af\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u540c\u65f6\u6211\u4eec\u4e0d\u8003\u8651\u591a\u91cd\u56fe </li> <li>\u5bf9\u4e8e \\((v_i,v_j)\\) \u8fd9\u6761\u8fb9\uff0c\u6211\u4eec\u79f0 \\(v_i,v_j\\) \u662f\u90bb\u63a5\u7684(adjacent), \u79f0 \\((v_i,v_j)\\) \u9644\u5c5e\u4e8e(incident) \\(v_i/v_j\\)</li> <li>\u5b8c\u5168\u56fe: \u6bcf\u4e00\u5bf9\u8282\u70b9\u95f4\u90fd\u5b58\u5728\u4e00\u6761\u8fb9\u7684\u56fe  </li> <li>\u5b50\u56fe: \\(G'\\sub G\\) \u5373 \\(G'\\) \u4e2d\u7684\u70b9\u548c\u8fb9\u90fd\u5305\u542b\u5728 G \u4e2d(\\(V(G')\\sube V(G)\\quad E(G')\\sube E(G)\\))  </li> <li>\u8def\u5f84: \\(\\{v_p,v_{i1},v_{i2},\\ldots, v_{in},v_q\\}((v_i,v_i)\\in E)\\) \u79f0\u4e3a\u4ece \\(v_p\\) \u5230 \\(v_q\\) \u7684\u4e00\u6761\u8def\u5f84</li> <li>\u8def\u5f84\u7684\u957f\u5ea6\uff1a\u8def\u5f84\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf</li> <li>\u7b80\u5355\u8def\u5f84: \\(v_{i1},v_{i2}...\\) \u5404\u4e0d\u76f8\u540c(\u6ce8\u610f\u7b2c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u76f8\u540c)</li> <li>\u5708: \\(v_p=v_q\\) \u7684\u7b80\u5355\u8def\u5f84</li> <li>\u5982\u679c\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u9876\u70b9\u5230\u53e6\u4e00\u4e2a\u5176\u4ed6\u9876\u70b9\u90fd\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684\u3002\u5177\u6709\u8fd9\u6837\u6027\u8d28\u7684\u6709\u5411\u56fe\u79f0\u4e3a\u5f3a\u8fde\u901a\u3002\u5982\u679c\u6709\u5411\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\uff0c\u4f46\u4ed6\u7684\u57fa\u7840\u56fe\uff08\u8fb9\u53bb\u6389\u65b9\u5411\u6240\u5f62\u6210\u7684\u56fe\uff09\u662f\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u79f0\u4e3a\u5f31\u8054\u901a\u3002</li> <li>DAG: Directed Acyclic Graph(\u6709\u5411\u65e0\u73af\u56fe)\uff0c\u6811\u662f\u8fde\u901a\u7684\u6709\u5411\u65e0\u73af\u56fe  </li> <li>\u5ea6\u6570: \u9644\u5c5e\u4e8e \\(v\\) \u7684\u8fb9\u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8fd8\u5206\u4e3a\u51fa\u5ea6\u548c\u5165\u5ea6\u3002\u7ed9\u4e00\u4e2a \\(n\\) \u4e2a\u8282\u70b9\u7684\u56fe \\(G\\), \u6211\u4eec\u6709 \\(e=\\dfrac{\\sum\\limits_{i=0}^{n-1}d_i}{2}\\) \uff08\u5176\u4e2d \\(d_i=degree(v_i)\\)</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/graph/#_3","title":"\u56fe\u7684\u8868\u793a","text":""},{"location":"ZJU_CS/FDS/graph/#_4","title":"\u90bb\u63a5\u77e9\u9635","text":"\\[ adj\\_mat[i][j]=\\left\\{ \\begin{matrix} 1\\quad if\\ (v_i,v_j)\\ or\\ &lt;v_i,v_j&gt;\\in E(G)\\\\ 0\\quad \\quad \\quad \\quad \\quad \\quad  \\quad \\quad \\quad \\ \\ \\ otherwise \\end{matrix} \\right. \\] <p>\u5982\u679c \\(G\\) \u662f\u65e0\u5411\u56fe\uff0c\u90a3\u4e48\u90bb\u63a5\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53ea\u5b58\u4e00\u534a\u7684\u6570\u636e\u3002</p> <p>\\(deg(i)=\\sum\\limits_{j=0}^{n-1}adj\\_mat[i][j]+\\sum\\limits_{j=0}^{n-1}adj\\_mat[j][i]\\)</p> <p>\u4f46\u8fd9\u6837\u7684\u7a7a\u95f4\u9700\u6c42\u662f \\(\\Theta(|V|^2)\\), \u5bf9\u4e8e\u975e\u7a20\u5bc6\u56fe\u5f00\u9500\u592a\u5927\u3002</p>"},{"location":"ZJU_CS/FDS/graph/#_5","title":"\u90bb\u63a5\u8868","text":"<p>\u5bf9\u6bcf\u4e00\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u94fe\u8868\u5b58\u653e\u5176\u6240\u6709\u90bb\u63a5\u7684\u9876\u70b9\uff0c\u6b64\u65f6\u7684\u7a7a\u95f4\u9700\u6c42\u4e3a \\(O(|E|+|V|)\\)</p> <p>\u5728\u65e0\u5411\u56fe\u4e0a\uff0c\u6bcf\u6761\u8fb9 \\((u,v)\\) \u51fa\u73b0\u5728\u4e24\u4e2a\u8868\u4e2d\uff0c\u56e0\u6b64\u7a7a\u95f4\u7684\u4f7f\u7528\u662f\u53cc\u500d\u7684\uff0c$S=n heads + 2e edges $</p> <p>\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\\(v\\) \u7684\u5ea6\u6570\u5c31\u662f \\(graph[v]\\) \u4e2d\u7684\u8282\u70b9\u4e2a\u6570\u3002\u5982\u679c \\(G\\) \u662f \u6709\u5411\u56fe\uff0c\u8fd9\u6837\u53ea\u80fd\u627e\u5230\u51fa\u5ea6\uff0c\u5bf9\u4e8e\u5165\u5ea6\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5:</p> <ul> <li>\u589e\u52a0\u4e00\u4e2a\u94fe\u8868\uff0c\u5c06\u8fb9\u53cd\u5411\u5e76\u5b58\u5165 </li> <li>\u4f7f\u7528\u591a\u91cd\u8868</li> </ul>"},{"location":"ZJU_CS/FDS/graph/#_6","title":"\u90bb\u63a5\u591a\u91cd\u8868\u5217","text":""},{"location":"ZJU_CS/FDS/graph/#_7","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>AOV \u7f51\u7edc\uff1a\u6709\u5411\u56fe\u4e2d\uff0c\u7528\u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u7528\u5f27\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb</li> <li>\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u6211\u4eec\u79f0 \\(i\\) \u662f \\(j\\) \u7684\u524d\u9a71\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece \\(i\\) \u5230 \\(j\\) \u7684\u8def\u5f84  </li> <li>\u6211\u4eec\u79f0 \\(i\\) \u662f \\(j\\) \u7684\u76f4\u63a5\u524d\u9a71\uff0c\u5982\u679c \\(&lt;i,j&gt;\\in E(G)\\). \u540c\u65f6 \\(j\\) \u79f0\u4e3a \\(i\\) \u7684\u76f4\u63a5\u540e\u7ee7</li> </ul> <p>\u53ef\u5b9e\u73b0\u7684 AOV \u7f51\u7edc\u4e00\u5b9a\u662f DAG.  </p> <p>\u62d3\u6251\u6392\u5e8f\u662f\u5bf9\u6709\u5411\u65e0\u73af\u56fe\u7684\u9876\u70b9\u7684\u4e00\u79cd\u6392\u5e8f\uff0c\u5b83\u4f7f\u5f97\u5982\u679c \\(i\\) \u662f \\(j\\) \u7684\u524d\u9a71\uff0c\u90a3\u4e48\u5728\u62d3\u6251\u5e8f\u5217\u4e2d \\(i\\) \u4e00\u5b9a\u51fa\u73b0\u5728 \\(j\\) \u7684\u524d\u9762\u3002</p> <p>\u5b9e\u73b0\u601d\u8def\uff1a\u5728\u5bb9\u5668\u4e2d\uff08\u961f\u5217/\u6808\uff09\u653e\u672a\u88ab\u6392\u5e8f\u4e14\u5ea6\u6570\u4e3a 0 \u7684\u8282\u70b9</p> <pre><code>void Topsort( Graph G )\n{   Queue  Q;\n    int  Counter = 0;\n    Vertex  V, W;\n    Q = CreateQueue( NumVertex );  MakeEmpty( Q );\n    for ( each vertex V )\n    if ( Indegree[ V ] == 0 )   Enqueue( V, Q );\n    while ( !IsEmpty( Q ) ) {\n    V = Dequeue( Q );\n    TopNum[ V ] = ++ Counter; /* assign next */\n    for ( each W adjacent to V )\n        if ( \u2013 \u2013 Indegree[ W ] == 0 )  Enqueue( W, Q );\n    }  /* end-while */\n    if ( Counter != NumVertex )\n    Error( \u201cGraph has a cycle\u201d );\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>Note</p> <p>\u62d3\u6251\u6392\u5e8f\u53ef\u80fd\u4e0d\u662f\u552f\u4e00\u7684</p>"},{"location":"ZJU_CS/FDS/graph/#_8","title":"\u6700\u77ed\u8def","text":"<p>\u7ed9\u5b9a\u6709\u5411\u56fe \\(G=(V,E)\\) \u4ee5\u53ca\u4e00\u4e2a\u82b1\u8d39\u51fd\u6570 \\(c(e), e\\in E(G)\\). \u4ece\u6e90\u70b9\u5230\u7ec8\u70b9\u7684\u4e00\u6761\u8def\u5f84 \\(P\\) \u7684\u957f\u5ea6\u5b9a\u4e49\u4e3a \\(\\sum\\limits_{e_i\\sub P}c(e_i)\\) \uff08\u4e5f\u79f0\u4e3a\u5e26\u6743\u8def\u5f84\u957f\uff09 </p>"},{"location":"ZJU_CS/FDS/graph/#_9","title":"\u5355\u6e90\u6700\u77ed\u8def\u5f84","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8d4b\u6743\u56fe\u548c\u4e00\u4e2a\u7279\u5b9a\u9876\u70b9 \\(s\\) \u4f5c\u4e3a\u8f93\u5165\uff0c\u627e\u51fa\u4ece \\(s\\) \u5230 \\(G\\) \u4e2d\u6bcf\u4e00\u4e2a\u5176\u4ed6\u9876\u70b9\u7684\u6700\u77ed\u5e26\u6743\u8def\u5f84\u3002 \u6ce8\u610f: \u5982\u679c\u8fd9\u91cc\u6709\u8d1f\u73af\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u5f84\u5b9a\u4e49\u4e3a 0. </p>"},{"location":"ZJU_CS/FDS/graph/#_10","title":"\u65e0\u6743\u6700\u77ed\u8def\u5f84","text":"<p>\u91c7\u7528 BFS(Breadth-First Search) \u7684\u65b9\u5f0f\uff0c\u4ece \\(s\\) \u51fa\u53d1\u5bfb\u627e\u6240\u6709\u8ddd\u79bb\u4e3a 1 \u7684\u9876\u70b9(\u5373\u4e0e \\(s\\) \u90bb\u63a5)\u968f\u540e\u5bfb\u627e\u4e0e \\(s\\) \u8ddd\u79bb\u4e3a 2 \u7684\u9876\u70b9\uff0c\u5373\u4e0e\u521a\u521a\u90a3\u4e9b\u9876\u70b9\u90bb\u63a5\u7684\u9876\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <pre><code>void Unweighted( Table T )\n{   /* T is initialized with the source vertex S given */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) {\n        V = Dequeue( Q );\n        T[ V ].Known = true; /* not really necessary */\n        for ( each W adjacent to V )\n    if ( T[ W ].Dist == Infinity ) {\n        T[ W ].Dist = T[ V ].Dist + 1;\n        T[ W ].Path = V;\n        Enqueue( W, Q );\n    } /* end-if Dist == Infinity */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/graph/#dijkstra","title":"Dijkstra \u7b97\u6cd5","text":"<p>\u4ee4 S \u8868\u793a\u6e90\u70b9 s \u4ee5\u53ca\u5176\u4ed6\u5df2\u7ecf\u627e\u5230\u6700\u77ed\u8def\u7684\u8282\u70b9\u7684\u96c6\u5408\uff0c\u5bf9\u4e8e\u4e0d\u5728 S \u96c6\u5408\u4e2d\u7684\u8282\u70b9 u, \u6211\u4eec\u5b9a\u4e49 \\(dist[u]\\) \u8868\u793a\u6700\u77ed\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u5176\u4e2d\u8def\u5f84\u662f\u4ece \\(s\\rightarrow v_i\\rightarrow u(v_i\\in S)\\). \u5982\u679c\u8def\u5f84\u662f\u975e\u964d\u5e8f\u751f\u6210\u7684\uff0c\u90a3\u4e48</p> <ul> <li>\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u662f\u4ece \\(S\\) \u4e2d\u7684\u67d0\u4e2a\u70b9 \\(v_i\\) \u5230 \\(u\\).  </li> <li>\\(dist[u]=\\min\\{w\\notin S\\ |\\ dist[w]\\}\\). \u5373\u6211\u4eec\u4ece \\(S\\) \u4e4b\u5916\u7684\u8282\u70b9\u4e2d\u9009\u62e9 \\(dist[u]\\) \u6700\u5c0f\u7684\u4f5c\u4e3a\u4e0b\u4e00\u4e2a \\(u\\).  </li> <li>\u5982\u679c \\(dist[u_1]&lt;dist[u_2]\\) \u540c\u65f6\u6211\u4eec\u5c06 \\(u_1\\) \u52a0\u5165\u4e86 \\(S\\), \u90a3\u4e48 \\(dist[u_2]\\) \u53ef\u80fd\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u6539\u53d8\u4e86\uff0c\u90a3\u4e48 \\(dist[u_2]=dist[u_1]+length&lt;u_1,u_2&gt;\\).  </li> </ul> <pre><code>void Dijkstra( Table T )\n{   /* T is initialized by Figure 9.30 on p.303 */\n    Vertex  V, W;\n    for ( ; ; ) { /* O( |V| ) */\n        V = smallest unknown distance vertex;\n        if ( V == NotAVertex )\n    break; \n        T[ V ].Known = true;\n        for ( each W adjacent to V )\n    if ( !T[ W ].Known ) \n        if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) {\n            Decrease( T[ W ].Dist  to\n             T[ V ].Dist + Cvw );\n        T[ W ].Path = V;\n        } /* end-if update W */\n    } /* end-for( ; ; ) */\n}\n/* not work for edge with negative cost  */\n</code></pre> <p>\u603b\u7684\u8fd0\u884c\u65f6\u95f4 \\(O(|E|+|V|^2)\\) </p> <p>\u5177\u4f53\u5b9e\u73b0:</p> <ul> <li>\u901a\u8fc7\u626b\u63cf\u6574\u4e2a\u8868\u6765\u627e\u5230 smallest unknown distance vertex - \\(O(|V|^2+|E|)\\) \uff08\u5f53\u56fe\u662f\u7a20\u5bc6\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u597d\u7684\uff09</li> <li>\u4f7f\u7528\u5806\u3002\u9996\u5148\u6211\u4eec <code>DeleteMin</code>, \u968f\u540e\u53ef\u4ee5 <code>DecreaseKey</code> \u6765\u8fdb\u884c\u66f4\u65b0\uff0c\u8fd9\u6837\u6211\u4eec\u9700\u8981\u8bb0\u5f55 \\(d_i\\) \u7684\u503c\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5f53\u5806\u53d1\u751f\u53d8\u5316\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u66f4\u65b0\uff1b\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u5728\u6bcf\u6b21\u66f4\u65b0\u540e\u5c06 \\(w\\) \u548c\u65b0\u503c \\(d_w\\) \u63d2\u5165\u5806\uff0c\u8fd9\u6837\u5806\u4e2d\u53ef\u80fd\u6709\u540c\u4e00\u9876\u70b9\u7684\u591a\u4e2a\u4ee3\u8868\u3002\u5f53\u5220\u9664\u6700\u5c0f\u503c\u7684\u65f6\u5019\u9700\u8981\u68c0\u67e5\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u5df2\u7ecf\u77e5\u9053\u7684\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/graph/#_11","title":"\u8d1f\u6743\u8fb9\u7684\u56fe","text":"<pre><code>void  WeightedNegative( Table T )\n{   /* T is initialized by Figure 9.30 on p.303 */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) { /* each vertex can dequeue at most |V| times */\n        V = Dequeue( Q );\n        for ( each W adjacent to V )\n    if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) {\n        T[ W ].Dist = T[ V ].Dist + Cvw;\n        T[ W ].Path = V;\n        if ( W is not already in Q )\n            Enqueue( W, Q );\n    } /* end-if update */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n/* negative-cost cycle will cause indefinite loop */\n</code></pre>"},{"location":"ZJU_CS/FDS/graph/#_12","title":"\u65e0\u5708\u56fe","text":"<p>\u5982\u679c\u56fe\u662f\u65e0\u5708\u7684\uff0c\u6211\u4eec\u4ee5\u62d3\u6251\u5e8f\u9009\u62e9\u8282\u70b9\u6765\u6539\u8fdb\u7b97\u6cd5\u3002\u5f53\u9009\u62e9\u4e00\u4e2a\u9876\u70b9\u540e\uff0c\u6309\u7167\u62d3\u6251\u5e8f\u4ed6\u6ca1\u6709\u4ece\u672a\u77e5\u9876\u70b9\u53d1\u51fa\u7684\u8fdb\u5165\u8fb9\uff0c\u56e0\u6b64\u4ed6\u7684\u8ddd\u79bb\u4e0d\u53ef\u80fd\u518d\u964d\u4f4e\uff0c\u7b97\u6cd5\u5f97\u4ee5\u4e00\u6b21\u5b8c\u6210\u3002</p> <p>\\(T=O(|V|+|E|)\\) \u800c\u4e14\u4e0d\u9700\u8981\u5806</p> <p>\u5e94\u7528\uff1aAOE (Activity On Edge) \u7f51\u7edc</p> <p>Info</p> <p>digraph: \u6709\u5411\u56fe Multigraph: \u591a\u91cd\u56fe\uff0c\u5373\u6709\u91cd\u8fb9\u7684\u56fe  cycle: \u5708  underlying graph: \u57fa\u7840\u56fe   Adjacency Matrix: \u90bb\u63a5\u77e9\u9635   Adjacency Lists: \u90bb\u63a5\u8868 Adjacency Multilists: \u90bb\u63a5\u591a\u91cd\u8868\u5217  </p>"},{"location":"ZJU_CS/FDS/graph/#_13","title":"\u6700\u5927\u6d41","text":""},{"location":"ZJU_CS/FDS/graph/#_14","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u6700\u5c0f\u751f\u6210\u6811\uff08\u82f1\u8bed\uff1aMinimum spanning tree\uff0c\u7b80\u79f0MST\uff09\u662f\u6700\u5c0f\u6743\u91cd\u751f\u6210\u6811\uff08\u82f1\u8bed\uff1aMinimum weight spanning tree\uff09\u7684\u7b80\u79f0\uff0c\u662f\u4e00\u526f\u8fde\u901a\u52a0\u6743\u65e0\u5411\u56fe\u4e2d\u4e00\u68f5\u6743\u503c\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002</p> <p>\u5728\u4e00\u7ed9\u5b9a\u7684\u65e0\u5411\u56fe \\(G=(V,E)\\) \u4e2d, \\((u,v)\\) \u4ee3\u8868\u8fde\u63a5\u9876\u70b9 u \u4e0e\u9876\u70b9 v \u7684\u8fb9, \u800c \\(w(u,v)\\) \u4ee3\u8868\u6b64\u8fb9\u7684\u6743\u91cd\uff0c\u82e5\u5b58\u5728 T \u4e3a E \u7684\u5b50\u96c6\uff08\u5373 \\(T \\subseteq  E\\) ) \u4e14 (V, T) \u4e3a\u6811\uff0c\u4f7f\u5f97\uff1a $$ w(T) = \\sum_{(u,v) \\in T}{w(u,v)} $$ \u7684 w(T) \u6700\u5c0f\uff0c\u5219\u6b64 T \u4e3a G \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p>"},{"location":"ZJU_CS/FDS/graph/#prim","title":"Prim\u7b97\u6cd5","text":"<p>\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e2a\u7b97\u6cd5\u548c<code>dijkstra</code>\u6709\u975e\u5e38\u76f8\u4f3c\u7684\u5730\u65b9\uff0c\u5018\u82e5\u4f60\u5df2\u7ecf\u5f7b\u5e95\u7406\u89e3<code>dijkstra</code>\u7b97\u6cd5\u7684\u8bdd\uff0c\u76f8\u4fe1\u4f60\u4e00\u5b9a\u80fd\u5f88\u5feb\u6d1e\u6089\u5176\u4e2d\u7684\u9053\u7406\u3002</p>"},{"location":"ZJU_CS/FDS/graph/#kruskal","title":"Kruskal\u7b97\u6cd5","text":"<p>\u4e0ePrim\u7b97\u6cd5\u5c06\u70b9\u8bbe\u4e3a\u5bf9\u8c61\u4e0d\u540c\uff0cKruskal\u7b97\u6cd5\u662f\u5c06\u8fb9\u8bbe\u4e3a\u5bf9\u8c61 \u2014\u2014 \u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\u5230\u751f\u6210\u6811\u5f53\u4e2d\u3002</p>"},{"location":"ZJU_CS/FDS/hash/","title":"\u6563\u5217","text":""},{"location":"ZJU_CS/FDS/hash/#_2","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u7406\u60f3\u7684\u6563\u5217\u8868\u662f\u4e00\u4e2a\u542b\u6709\u5173\u952e\u5b57\u7684\u5177\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u3002</p> <p>ADT \u6a21\u578b</p> <ul> <li>\u5bf9\u8c61\uff1a\u4e00\u7ec4 \u540d\u79f0-\u5c5e\u6027 \u5bf9\uff0c\u5176\u4e2d\u540d\u79f0\u662f\u552f\u4e00\u7684\u3002</li> <li>\u64cd\u4f5c<ul> <li>\u521b\u5efa\u6563\u5217\u8868</li> <li>\u67e5\u8be2\u5173\u952e\u5b57\u662f\u5426\u5728\u6563\u5217\u8868\u4e2d</li> <li>\u67e5\u8be2\u5173\u952e\u5b57</li> <li>\u63d2\u5165\u5173\u952e\u5b57</li> <li>\u5220\u9664\u5173\u952e\u5b57</li> </ul> </li> </ul> <p>\u5bf9\u6bcf\u4e2a\u6807\u8bc6\u7b26 <code>x</code>, \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6563\u5217\u51fd\u6570 <code>f(x)=</code>position of <code>x</code> in <code>ht[ ]</code> (i.e. the index of the bucket that contains <code>x</code>)  </p> <p>\u8fd9\u91cc\u6211\u4eec\u7528 \\(T\\) \u8868\u793a <code>x</code> \u53ef\u80fd\u7684\u4e0d\u540c\u503c; \\(n\\) \u8868\u793a <code>ht[]</code> \u4e2d\u6240\u6709\u4e0d\u540c\u6807\u8bc6\u7b26\u7684\u4e2a\u6570; \u6807\u8bc6\u7b26\u5bc6\u5ea6\u5b9a\u4e49\u4e3a \\(\\dfrac{n}{T}\\); \u88c5\u8f7d\u5bc6\u5ea6\u5b9a\u4e49\u4e3a \\(\\dfrac{n}{sb}\\) </p> <ul> <li>\u5f53\u6211\u4eec\u628a\u4e24\u4e2a\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u6876\u91cc\u65f6\uff0c\u51b2\u7a81\u53d1\u751f\u4e86(i.e. \\(f(i_1)=f(i_2), i_1\\neq i_2\\))</li> <li>\u5f53\u6211\u4eec\u5c06\u4e00\u4e2a\u65b0\u7684\u6807\u8bc6\u7b26\u6620\u5c04\u5230\u4e00\u4e2a\u6ee1\u7684\u6876\u91cc\u65f6\uff0c\u6ea2\u51fa\u53d1\u751f\u4e86  </li> </ul> <p>\u6ca1\u6709\u6ea2\u51fa\u65f6, \\(T_{search} = T_{insert} = T_{delete} = O( 1 )\\)</p>"},{"location":"ZJU_CS/FDS/hash/#_3","title":"\u6563\u5217\u51fd\u6570","text":"<p>\\(f\\) \u8981\u6ee1\u8db3\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u5bb9\u6613\u8ba1\u7b97\uff0c\u6700\u5c0f\u5316\u51b2\u7a81\u7684\u6570\u91cf</li> <li>\\(f\\) \u5e94\u8be5\u662f\u65e0\u504f\u89c1\u7684\uff0c\u5373 \\(\\forall x,i\\) \u6211\u4eec\u6709 \\(P(f(x)=i)=\\dfrac{1}{b}\\). \u8fd9\u6837\u7684\u6563\u5217\u51fd\u6570\u79f0\u4e3a\u5747\u5300\u6563\u5217\u51fd\u6570.  </li> </ul> <p>TableSize \u5e94\u8be5\u662f\u4e00\u4e2a\u7d20\u6570\uff0c\u8fd9\u6837\u5bf9\u968f\u673a\u8f93\u5165\uff0c\u5173\u952e\u5b57\u7684\u5206\u5e03\u6bd4\u8f83\u5747\u5300 \u5982 \\(f(x)=(\\sum x[N-i-1]*32^i)\\%TableSize\\) </p>"},{"location":"ZJU_CS/FDS/hash/#_4","title":"\u5206\u79bb\u94fe\u63a5","text":"<p>\u89e3\u51b3\u51b2\u7a81\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\u53eb\u4f5c\u5206\u79bb\u94fe\u63a5\u6cd5\u3002\u5176\u505a\u6cd5\u662f\u5c06\u6563\u5217\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u503c\u7684\u6240\u6709\u5143\u7d20\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u94fe\u8868\u7684\u65b9\u5f0f\u5b58\u50a8\u3002</p> <ul> <li> <p>\u7ed3\u6784\u4f53\u5b9a\u4e49      <p><pre><code>struct  ListNode; \ntypedef  struct  ListNode  *Position; \nstruct  HashTbl; \ntypedef  struct  HashTbl  *HashTable; \nstruct  ListNode { \n    ElementType  Element; \n    Position  Next; \n}; \ntypedef  Position  List; \n/* List *TheList will be an array of lists, allocated later */ \n/* The lists use headers (for simplicity), */ \n/* though this wastes space */ \nstruct  HashTbl { \n    int  TableSize; \n    List  *TheLists; \n}; \n</code></pre> </p> <li> <p>\u521b\u5efa\u7a7a\u8868      <p><pre><code>HashTable  InitializeTable( int TableSize ) \n{   HashTable  H; \n    int  i; \n    if ( TableSize &lt; MinTableSize ) { \n        Error( \"Table size too small\" );  return NULL;  \n    } \n    H = malloc( sizeof( struct HashTbl ) );  /* Allocate table */\n    if ( H == NULL )    FatalError( \"Out of space!!!\" ); \n    H-&gt;TableSize = NextPrime( TableSize );  /* Better be prime */\n    H-&gt;TheLists = malloc( sizeof( List ) * H-&gt;TableSize );  /*Array of lists*/\n    if ( H-&gt;TheLists == NULL )   FatalError( \"Out of space!!!\" ); \n    for( i = 0; i &lt; H-&gt;TableSize; i++ ) {   /* Allocate list headers */\n    H-&gt;TheLists[ i ] = malloc( sizeof( struct ListNode ) ); /* Slow! */\n    if ( H-&gt;TheLists[ i ] == NULL )  FatalError( \"Out of space!!!\" ); \n    else    H-&gt;TheLists[ i ]-&gt;Next = NULL;\n    } \n    return  H; \n} \n</code></pre> </p> <li> <p>\u67e5\u8be2\u5173\u952e\u5b57      <p><pre><code>Position  Find ( ElementType Key, HashTable H ) \n{ \n    Position P; \n    List L; \n\n    L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; \n\n    P = L-&gt;Next; \n    while( P != NULL &amp;&amp; P-&gt;Element != Key )  /* Probably need strcmp */ \n    P = P-&gt;Next; \n    return P; \n} \n</code></pre> </p> <li> <p>\u63d2\u5165\u5173\u952e\u5b57     \u9996\u5148\u6211\u4eec\u67e5\u627e\u8fd9\u4e2a\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u5df2\u7ecf\u5b58\u5728\u90a3\u4e48\u6211\u4eec\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002      <p><pre><code>void  Insert ( ElementType Key, HashTable H ) \n{ \n    Position   Pos, NewCell; \n    List  L; \n    Pos = Find( Key, H ); \n    if ( Pos == NULL ) {   /* Key is not found, then insert */\n    NewCell = malloc( sizeof( struct ListNode ) ); \n    if ( NewCell == NULL )     FatalError( \"Out of space!!!\" ); \n    else { \n        L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; \n        NewCell-&gt;Next = L-&gt;Next; \n        NewCell-&gt;Element = Key; /* Probably need strcpy! */ \n        L-&gt;Next = NewCell; \n    } \n    } \n} \n</code></pre> </p>"},{"location":"ZJU_CS/FDS/hash/#_5","title":"\u5f00\u653e\u5730\u5740","text":"<p>\u5f00\u653e\u5730\u5740\u6cd5\uff0c\u5f53\u6709\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u5c1d\u8bd5\u9009\u62e9\u5176\u4ed6\u7684\u5355\u5143\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u5355\u5143\u4e3a\u6b62\u3002 \u4e00\u822c\u5730, \\(h_0(X),h_1(X),\\ldots,\\) \u5176\u4e2d $h_i(X)=(Hash(X)+F(i)) mod TableSize $ \u4e00\u822c\u6765\u8bf4 \\(\\lambda&lt;0.5\\) </p> <pre><code>Algorithm: insert key into an array of hash table\n{\n    index = hash(key);\n    initialize i = 0 ------ the counter of probing;\n    while ( collision at index ) {\n    index = ( hash(key) + f(i) ) % TableSize;\n    if ( table is full )    break;\n    else    i ++;\n    }\n    if ( table is full )\n    ERROR (\u201cNo space left\u201d);\n    else\n    insert key at index;\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/hash/#_6","title":"\u7ebf\u6027\u63a2\u6d4b\u6cd5","text":"<p>\u5728\u7ebf\u6027\u63a2\u6d4b\u6cd5\u4e2d\uff0c\u51fd\u6570 \\(F\\) \u662f \\(i\\) \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5178\u578b\u60c5\u5f62\u662f \\(F(i)=i\\). \u8fd9\u76f8\u5f53\u4e8e\u9010\u4e2a\u63a2\u6d4b\u5355\u5143\uff08\u5fc5\u8981\u65f6\u53ef\u4ee5\u7ed5\u56de\u5230\u7b2c\u4e00\u4e2a\u5355\u5143\uff09\u4ee5\u67e5\u627e\u51fa\u4e00\u4e2a\u7a7a\u5355\u5143\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u4f7f\u7528\u7ebf\u6027\u63a2\u6d4b\u7684\u63a2\u6d4b\u6b21\u6570\u5bf9\u4e8e\u63d2\u5165\u548c\u4e0d\u6210\u529f\u7684\u67e5\u627e\u6765\u8bf4\u7ea6\u4e3a \\(\\dfrac{1}{2}(1+\\dfrac{1}{(1-\\lambda)^2})\\) \u6b21; \u5bf9\u4e8e\u6210\u529f\u7684\u67e5\u627e\u6765\u8bf4\u5219\u9700 \\(\\dfrac{1}{2}(1+\\dfrac{1}{1-\\lambda})\\) \u6b21</p>"},{"location":"ZJU_CS/FDS/hash/#_7","title":"\u5e73\u65b9\u63a2\u6d4b\u6cd5","text":"<p>\u5e73\u65b9\u63a2\u6d4b\u6cd5\u662f\u6d88\u9664\u7ebf\u6027\u63a2\u6d4b\u4e2d\u4e00\u6b21\u805a\u96c6\u95ee\u9898\u7684\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u3002\u51b2\u7a81\u51fd\u6570\u4e3a\u4e8c\u6b21\u51fd\u6570\uff0c\u4e00\u822c\u4e3a \\(F(i)=i^2\\) </p> <p>\u5b9a\u7406: \u5982\u679c\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\uff0c\u4e14\u8868\u7684\u5927\u5c0f\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u5f53\u8868\u81f3\u5c11\u6709\u4e00\u534a\u4e3a\u7a7a\u65f6\uff0c\u603b\u80fd\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u3002</p> <p>\u5bf9\u4e8e\u4efb\u610f\u5143\u7d20 \\(x\\), \u5b83\u6709 \\(\\lceil TableSize/2 \\rceil\\) \u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u53ef\u80fd\u653e\u7f6e\u8fd9\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6700\u591a $\\lfloor TableSize/2 \\rfloor $ \u4f4d\u7f6e\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u603b\u80fd\u627e\u5230\u653e \\(x\\) \u7684\u7a7a\u5355\u5143\u3002</p> <ul> <li> <p>\u67e5\u627e\u5143\u7d20 \\(F(i)=F(i-1)+i^2-(i-1)^2=F(i-1)+2i-1\\)     \u8fd9\u91cc <code>while</code> \u8bed\u53e5\u7684\u6d4b\u8bd5\u987a\u5e8f\u4e0d\u80fd\u6539\u53d8\u3002\u5982\u679c\u662f <code>empty</code>\uff0c\u5219 <code>key</code> \u6ca1\u6709\u5b9a\u4e49\uff0c\u5148\u5224\u65ad\u4f1a\u51fa\u9519\u3002     \u5047\u8bbe\u63a2\u6d4b\u6b65\u6570 i \u4e0d\u8d85\u8fc7 \\(\\dfrac{TS}{2}+1\\) \u6b65\uff0c\u5373\u5047\u8bbe\u8868 \\(&lt;50\\%\\)\u3002\u8fd9\u65f6 <code>CurrentPos+2i-1 &lt;= 2TS-1</code>\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u51cf\u6cd5\u3002</p> <p><pre><code>Position  Find ( ElementType Key, HashTable H ) \n{   Position  CurrentPos; \n    int  CollisionNum; \n    CollisionNum = 0; \n    CurrentPos = Hash( Key, H-&gt;TableSize ); \n    while( H-&gt;TheCells[ CurrentPos ].Info != Empty &amp;&amp; \n    H-&gt;TheCells[ CurrentPos ].Element != Key ) { \n    CurrentPos += 2 * ++CollisionNum \uf02d 1; \n    if ( CurrentPos &gt;= H-&gt;TableSize )  CurrentPos \uf02d = H-&gt;TableSize; \n    } \n    return CurrentPos; \n} \n</code></pre> </p> <li> <p>\u63d2\u5165\u5143\u7d20      <p><pre><code>void  Insert ( ElementType Key, HashTable H ) \n{ \n    Position  Pos; \n    Pos = Find( Key, H ); \n    if ( H-&gt;TheCells[ Pos ].Info != Legitimate ) { /* OK to insert here */ \n    H-&gt;TheCells[ Pos ].Info = Legitimate; \n    H-&gt;TheCells[ Pos ].Element = Key; /* Probably need strcpy */ \n    } \n} \n</code></pre> </p> <p>\u6563\u5217\u5230\u540c\u4e00\u4f4d\u7f6e\u4e0a\u7684\u90a3\u4e9b\u5143\u7d20\u5c06\u63a2\u6d4b\u76f8\u540c\u7684\u5907\u9009\u5355\u5143\uff0c\u8fd9\u79f0\u4e3a\u4e8c\u6b21\u805a\u96c6\u3002</p>"},{"location":"ZJU_CS/FDS/hash/#_8","title":"\u53cc\u6563\u5217","text":"<p>\\(f(i)=i*hash_2(X)\\)  \u6211\u4eec\u5728 \\(X\\) \u8ddd\u79bb \\(hash_2(X),2hash_2(X),\\ldots\\) \u7b49\u4f4d\u7f6e\u8fdb\u884c\u63a2\u6d4b\u3002 \u5e38\u7528 \\(hash_2(X)=R-(X mod R)\\), \u5176\u4e2d \\(R\\) \u662f\u4e00\u4e2a\u6bd4 \\(TableSize\\) \u5c0f\u7684\u7d20\u6570\u3002</p> <ul> <li>\u5982\u679c\u6b63\u786e\u5b9e\u73b0\u4e86\u53cc\u91cd\u54c8\u5e0c\uff0c\u6a21\u62df\u8868\u660e\u9884\u671f\u7684\u63a2\u6d4b\u6570\u91cf\u51e0\u4e4e\u4e0e\u968f\u673a\u51b2\u7a81\u89e3\u51b3\u7b56\u7565\u76f8\u540c\u3002</li> <li>\u4e8c\u6b21\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u5b9e\u8df5\u4e2d\u53ef\u80fd\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/hash/#_9","title":"\u518d\u6563\u5217","text":"<p>\u5bf9\u4e8e\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\u7684\u5f00\u653e\u5730\u5740\u6563\u5217\u6cd5\uff0c\u5982\u679c\u8868\u7684\u5143\u7d20\u8fc7\u591a\uff0c\u90a3\u4e48\u64cd\u4f5c\u7684\u8fd0\u884c\u65f6\u95f4\u5c06\u5f00\u59cb\u6d88\u8017\u8fc7\u957f\u3002  </p> <ul> <li>\u5efa\u7acb\u4e00\u4e2a\u4e24\u500d\u5927\u7684\u8868</li> <li>\u626b\u63cf\u539f\u59cb\u6563\u5217\u8868</li> <li>\u5229\u7528\u65b0\u7684\u6563\u5217\u51fd\u6570\u5c06\u5143\u7d20\u6620\u5c04\u5230\u65b0\u7684\u6563\u5217\u503c\uff0c\u5e76\u63d2\u5165</li> </ul> <p>\\(T(N)=O(N)\\) </p> <p>\u4ec0\u4e48\u65f6\u5019\u518d\u6563\u5217\uff1f</p> <ul> <li>\u8868\u586b\u6ee1\u4e00\u534a\u5c31\u518d\u6563\u5217</li> <li>\u5f53\u63d2\u5165\u5931\u8d25\u65f6</li> <li>\u5f53\u8868\u8fbe\u5230\u67d0\u4e00\u4e2a\u88c5\u586b\u56e0\u5b50\u65f6\u8fdb\u884c\u518d\u6563\u5217\u3002  </li> </ul> <p>\u901a\u5e38\u5728\u91cd\u54c8\u5e0c\u4e4b\u524d\u5e94\u8be5\u6709 \\(N/2\\) \u4e2a\u63d2\u5165\uff0c\u6240\u4ee5 \\(O(N)\\) \u91cd\u54c8\u5e0c\u53ea\u4f1a\u7ed9\u6bcf\u4e2a\u63d2\u5165\u589e\u52a0\u4e00\u4e2a\u6052\u5b9a\u7684\u4ee3\u4ef7\u3002 \u7136\u800c\uff0c\u5728\u4ea4\u4e92\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u5e78\u7684\u7528\u6237\u7684\u63d2\u5165\u5bfc\u81f4\u91cd\u65b0\u6563\u5217\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u901f\u5ea6\u51cf\u6162\u3002</p>"},{"location":"ZJU_CS/FDS/heap/","title":"\u4f18\u5148\u961f\u5217\uff08\u5806\uff09","text":""},{"location":"ZJU_CS/FDS/heap/#adt","title":"ADT \u6a21\u578b","text":"<ul> <li>\u5bf9\u8c61\uff1a\u4e00\u4e2a\u6709\u9650\u7684\u6709\u5e8f\u96c6</li> <li>\u64cd\u4f5c\uff1a<ul> <li>\u521d\u59cb\u5316</li> <li>\u63d2\u5165</li> <li>\u5220\u9664\u6700\u5c0f\u7684\u5143\u7d20</li> <li>\u5bfb\u627e\u6700\u5c0f\u7684\u5143\u7d20</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/heap/#_2","title":"\u7b80\u5355\u7684\u5b9e\u73b0","text":"<ul> <li>\u6570\u7ec4\uff1a<ul> <li>\u63d2\u5165\u5143\u7d20\u5230\u672b\u5c3e \\(\\Theta(1)\\) </li> <li>\u627e\u5230\u6700\u5927/\u6700\u5c0f\u5143\u7d20 \\(\\Theta(n)\\), \u5220\u9664\u5143\u7d20\u79fb\u52a8\u6570\u7ec4 \\(O(n)\\)</li> </ul> </li> <li>\u94fe\u8868\uff1a<ul> <li>\u63d2\u5165\u5143\u7d20\u5230\u94fe\u8868\u5f00\u5934 \\(\\Theta(1)\\)</li> <li>\u627e\u5230\u6700\u5927/\u6700\u5c0f\u5143\u7d20 \\(\\Theta(n)\\), \u5220\u9664\u5143\u7d20 \\(\\Theta(1)\\) </li> </ul> </li> <li>\u6709\u5e8f\u6570\u7ec4\uff1a<ul> <li>\u63d2\u5165 \u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e \\(O(n)\\), \u79fb\u52a8\u6570\u7ec4\u5e76\u63d2\u5165\u5143\u7d20 \\(O(n)\\)</li> <li>\u5220\u9664\u5f00\u5934/\u672b\u5c3e\u5143\u7d20 \\(\\Theta(1)\\)</li> </ul> </li> <li>\u6709\u5e8f\u94fe\u8868\uff1a<ul> <li>\u63d2\u5165 \u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e \\(O(n)\\), \u63d2\u5165\u5143\u7d20 \\(\\Theta(1)\\)</li> <li>\u5220\u9664\u5f00\u5934/\u672b\u5c3e\u5143\u7d20 \\(\\Theta(1)\\)</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/heap/#_3","title":"\u4e8c\u53c9\u5806","text":""},{"location":"ZJU_CS/FDS/heap/#_4","title":"\u7ed3\u6784\u6027\u8d28","text":"<p>\u5806\u662f\u4e00\u68f5\u88ab\u5b8c\u5168\u586b\u6ee1\u7684\u4e8c\u53c9\u6811\uff0c\u6709\u53ef\u80fd\u7684\u4f8b\u5916\u662f\u5728\u5e95\u5c42\uff1a\u5e95\u5c42\u4e0a\u7684\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u586b\u5165\u3002\u8fd9\u6837\u7684\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p>\u4e00\u68f5\u9ad8 h \u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u4ecb\u4e8e \\(2^h\\) \u5230 \\(2^{h+1}-1\\) \u4e4b\u95f4\uff0c\u5373\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f \\(\\lfloor \\log N\\rfloor\\)</p> <p>\u5bf9\u4e8e\u4e0b\u6807\u4e3a \\(i\\) \u7684\u5143\u7d20\uff0c\u5176\u5de6\u513f\u5b50\u4f4d\u4e8e \\(2i\\) \u4e0a\uff0c\u53f3\u513f\u5b50\u4f4d\u4e8e \\(2i+1\\) \u4e0a\uff0c\u4ed6\u7684\u7236\u4eb2\u4f4d\u4e8e \\(\\lfloor i/2 \\rfloor\\) \u4e0a\u3002</p>"},{"location":"ZJU_CS/FDS/heap/#_5","title":"\u5806\u5e8f\u6027\u8d28","text":"<p>\u5982\u679c\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u4e0d\u5927\u4e8e\u5176\u513f\u5b50\u8282\u70b9\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u68f5\u5c0f\u6839\u6811\u3002\u5c0f\u6839\u5806\u5c31\u662f\u6ee1\u8db3\u5c0f\u6839\u6811\u6027\u8d28\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p>"},{"location":"ZJU_CS/FDS/heap/#_6","title":"\u57fa\u672c\u7684\u5806\u64cd\u4f5c","text":""},{"location":"ZJU_CS/FDS/heap/#_7","title":"\u63d2\u5165","text":"<p>\u5bf9\u4e8e\u65b0\u7684\u8282\u70b9\uff0c\u552f\u4e00\u53ef\u4ee5\u653e\u7684\u4f4d\u7f6e\u5c31\u662f\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e\uff0c\u5426\u5219\u5806\u5c06\u4e0d\u518d\u662f\u5b8c\u5168\u6811\uff0c\u4f46\u8fd9\u6837\u53ef\u80fd\u7834\u574f\u5806\u7684\u5e8f\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u4e0a\u6d6e\u7684\u7b56\u7565\u3002</p> <pre><code>/* H-&gt;Element[ 0 ] is a sentinel */ \nvoid  Insert( ElementType  X,  PriorityQueue  H ) \n{ \n     int  i; \n\n     if ( IsFull( H ) ) { \n    Error( \"Priority queue is full\" ); \n    return; \n     } \n\n     for ( i = ++H-&gt;Size; H-&gt;Elements[ i / 2 ] &gt; X; i /= 2 ) \n    H-&gt;Elements[ i ] = H-&gt;Elements[ i / 2 ]; \n\n     H-&gt;Elements[ i ] = X; \n}\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cc\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u4ea4\u6362\u64cd\u4f5c\uff0c\u56e0\u4e3a\u4ea4\u6362\u64cd\u4f5c\u7684\u65f6\u95f4\u6210\u672c\u66f4\u9ad8\u3002</p>"},{"location":"ZJU_CS/FDS/heap/#_8","title":"\u5220\u9664\u6700\u5c0f\u5143","text":"<p>\u6211\u4eec\u4e00\u822c\u91c7\u7528\u4e0b\u6ee4\u7684\u7b56\u7565\u3002\u5220\u9664\u6700\u5c0f\u5143\u540e\uff0c\u5728\u6839\u8282\u70b9\u4ea7\u751f\u4e00\u4e2a\u7a7a\u7a74\u3002\u540c\u65f6\u5806\u5c11\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u5806\u6700\u540e\u4e00\u4e2a\u5143\u7d20 X \u79fb\u52a8\u5230\u5806\u7684\u67d0\u4e2a\u5730\u65b9\u3002\u4ece\u6839\u8282\u70b9\u7684\u7a7a\u7a74\u5f00\u59cb\u6211\u4eec\u5c06\u7a7a\u7a74\u7684\u4e24\u4e2a\u513f\u5b50\u4e2d\u7684\u8f83\u5c0f\u8005\u79fb\u5165\u7a7a\u7a74\uff0c\u8fd9\u6837\u5c31\u628a\u7a7a\u7a74\u5f80\u4e0b\u63a8\u4e86\u4e00\u5c42\u3002\u91cd\u590d\u6b65\u9aa4\u76f4\u5230 X \u53ef\u4ee5\u653e\u5165\u7a7a\u7a74\u3002</p> <pre><code>ElementType  DeleteMin( PriorityQueue  H ) \n{ \n    int  i, Child; \n    ElementType  MinElement, LastElement; \n    if ( IsEmpty( H ) ) { \n         Error( \"Priority queue is empty\" ); \n         return  H-&gt;Elements[ 0 ];   } \n    MinElement = H-&gt;Elements[ 1 ];  /* save the min element */\n    LastElement = H-&gt;Elements[ H-&gt;Size-- ];  /* take last and reset size */\n    for ( i = 1; i * 2 &lt;= H-&gt;Size; i = Child ) {  /* Find smaller child */ \n         Child = i * 2; \n         if (Child != H-&gt;Size &amp;&amp; H-&gt;Elements[Child+1] &lt; H-&gt;Elements[Child]) \n           Child++;     \n         if ( LastElement &gt; H-&gt;Elements[ Child ] )   /* Percolate one level */ \n           H-&gt;Elements[ i ] = H-&gt;Elements[ Child ]; \n         else     break;   /* find the proper position */\n    } \n    H-&gt;Elements[ i ] = LastElement; \n    return  MinElement; \n}\n</code></pre>"},{"location":"ZJU_CS/FDS/heap/#_9","title":"\u5176\u4ed6\u7684\u5806\u64cd\u4f5c","text":"<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u5c0f\u6839\u5806\uff0c\u627e\u9664\u4e86\u6700\u5c0f\u5143\u4ee5\u5916\u7684\u5143\u7d20\u90fd\u9700\u8981\u7ebf\u6027\u641c\u7d22\u6574\u4e2a\u5806\u3002</p> <ul> <li><code>DecreaseKey</code> DecreaseKey(P,\\(\\Delta\\),H) \u64cd\u4f5c\u964d\u4f4e\u5728\u4f4d\u7f6e P \u5904\u7684\u5173\u952e\u5b57\u7684\u503c\u3002\u6211\u4eec\u9700\u8981\u4e0a\u6ee4\u64cd\u4f5c\u5bf9\u5806\u8fdb\u884c\u8c03\u6574\u3002</li> <li><code>IncreaseKey</code> IncreaseKey(P,\\(\\Delta\\),H) \u64cd\u4f5c\u589e\u52a0\u5728\u4f4d\u7f6e P \u5904\u7684\u5173\u952e\u5b57\u7684\u503c\u3002\u6211\u4eec\u9700\u8981\u4e0b\u6ee4\u64cd\u4f5c\u5bf9\u5806\u8fdb\u884c\u8c03\u6574\u3002</li> <li><code>Delete</code> Delete(P,H) \u64cd\u4f5c\u5220\u9664\u5806\u4e2d\u4f4d\u7f6e P \u4e0a\u7684\u8282\u70b9\u3002\u8fd9\u4e2a\u64cd\u4f5c\u9996\u5148\u6267\u884c DecreaseKey(P,\\(\\infty\\),H) \u518d\u6267\u884c DeleteMin \u5373\u53ef\u3002</li> <li><code>BuildHeap</code> BuildHeap(H) \u64cd\u4f5c\u628a N \u4e2a\u5173\u952e\u5b57\u4f5c\u4e3a\u8f93\u51fa\u5e76\u628a\u5b83\u4eec\u653e\u5728\u7a7a\u961f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 N \u4e2a\u76f8\u7ee7\u7684 Insert \u64cd\u4f5c\u5b8c\u6210\u3002 \u4e5f\u53ef\u4ee5\u5c06 N \u4e2a\u5173\u952e\u5b57\u4ee5\u4efb\u610f\u987a\u5e8f\u653e\u5165\u6811\u4e2d\u6784\u6210\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u4f9d\u6b21 percolate down. \u53ef\u4ee5\u8bc1\u660e\u8fd9\u65f6\u53ea\u9700\u8981\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u5b8c\u6210\u6811\u7684\u6784\u5efa\u3002</li> </ul> <p>\u5b9a\u7406\uff1a\u5305\u542b \\(2^{h+1}-1\\) \u4e2a\u8282\u70b9\uff0c\u9ad8\u5ea6\u4e3a \\(h\\) \u7684\u7406\u60f3\u4e8c\u53c9\u6811\uff0c\u5176\u8282\u70b9\u7684\u9ad8\u5ea6\u548c\u4e3a \\(2^{h+1}-1-(h+1)\\) \u8bc1\u660e\uff1a\\(S=\\sum\\limits_{i=0}^h 2^i(h-i)\\) \u56e0\u6b64 BuildHeap \u7684\u64cd\u4f5c\u662f\u7ebf\u6027\u7684</p>"},{"location":"ZJU_CS/FDS/heap/#d-heaps","title":"d-Heaps","text":"<p>d-\u5806\u662f\u4e8c\u53c9\u5806\u7684\u63a8\u5e7f\uff0c\u6240\u6709\u7684\u8282\u70b9\u90fd\u6709 d \u4e2a\u513f\u5b50\uff08\u56e0\u6b64\u4e8c\u53c9\u5806\u662f 2-\u5806\uff09 d-\u5806\u6bd4\u4e8c\u53c9\u5806\u6d45\uff0c\u56e0\u6b64 Insert \u64cd\u4f5c\u6539\u8fdb\u4e3a \\(O(\\log_dN)\\) \u4f46\u5bf9\u4e8e\u5927\u7684 d, DeleteMin \u4f1a\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u5c42\u90fd\u8981\u627e\u51fa d \u4e2a\u513f\u5b50\u4e2d\u7684\u6700\u5c0f\u8005\u3002\u8fd9\u6837\u64cd\u4f5c\u7684\u7528\u65f6\u5c31\u662f \\(O(d\\log_dN)\\)\u3002\u800c\u4e14\u5f53 d \u4e0d\u662f 2 \u7684\u5e42\u6b21\u65f6\uff0c\u627e\u51fa\u513f\u5b50\u548c\u7236\u4eb2\u4f1a\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u3002</p> <p>Info</p> <p>Priority queue: \u4f18\u5148\u961f\u5217  Binary heap: \u4e8c\u53c9\u5806 \u5806\u5e8f: heap order \u4e0a\u6d6e\uff1apercolate up \u4e0b\u6ee4\uff1apercolate down  </p>"},{"location":"ZJU_CS/FDS/homework/","title":"\u4f5c\u4e1a\u8981\u70b9","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u7740\u6240\u6709homework\u4e2d\u7684\u8981\u70b9\uff0c\u4fbf\u4e8e\u590d\u4e60\uff01\uff08\u9884\u4e60</p> <p>\u76ee\u5f55</p> infoindex <p>\u5982\u82e5latex\u516c\u5f0f\u65e0\u6cd5\u663e\u793a\uff0c\u8bf7\u91cd\u65b0\u5237\u65b0\u754c\u9762\u5373\u53ef\u3002</p> <ul> <li>\u4f5c\u4e1a\u8981\u70b9<ul> <li>HW1 Algorithm</li> <li>HW2 linked-list</li> <li>HW3 Stack &amp; Queue</li> <li>HW4 Binary tree</li> <li>HW5 search tree</li> <li>HW6 Heap</li> <li>HW7 Union/Find set</li> <li>HW8 Graph</li> <li>HW9 Shortest_Path</li> <li>HW10 MST &amp; Maxstream</li> <li>HW11 DFS &amp; InsertionSort</li> <li>HW12 shellsort &amp; Heapsort &amp; Mergesort</li> <li>HW13 QuickSort &amp; RadixSort</li> <li>HW14&amp;15 Hash</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/homework/#hw1_algorithm","title":"HW1 Algorithm","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u5b66\u4f1a\u57fa\u7840\u7684\u7b97\u6cd5\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u3002</p> \u82f1\u6587 \u4e2d\u6587 complexity \u590d\u6742\u5ea6 <ol> <li>The Fibonacci number sequence \\({F_N}\\) is defined as: \\(F_0 = 0\\), \\(F_1=1\\),\\(F_N=F_{N\u22121}+F_{N\u22122}, N=2, 3, ....\\) The time complexity of the function which calculates \\(F_N\\) recursively is \u0398(N!).</li> </ol> Tips <p>F</p> <p>\u5728\u9012\u5f52\u6811\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\uff0c\u800c\u6811\u7684\u6df1\u5ea6\u8868\u793a\u9012\u5f52\u7684\u5c42\u6570\u3002\u5bf9\u4e8e\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u6bcf\u4e2a\u8282\u70b9\u4f1a\u751f\u6210\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u90fd\u4f9d\u8d56\u4e8e\u524d\u4e24\u4e2a\u6570\u7684\u548c\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u8ba1\u7b97\u7b2cn\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u5c06\u662fn\u3002\u6bcf\u4e2a\u8282\u70b9\u7684\u8ba1\u7b97\u65f6\u95f4\u662f\u5e38\u6570\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b83\u53ea\u6d89\u53ca\u5230\u7b80\u5355\u7684\u52a0\u6cd5\u64cd\u4f5c\u3002</p> <p>\u56e0\u6b64\uff0c\u9012\u5f52\u65b9\u6cd5\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3aO(2^n)\u3002\u8fd9\u662f\u56e0\u4e3a\u9012\u5f52\u6811\u7684\u8282\u70b9\u6570\u662f\u6307\u6570\u7ea7\u589e\u957f\u7684\u3002</p> <ol> <li> \\[ P_1:T(1) = 1, T(N) = T(N/3)+1\\\\P_2:T(1) = 1, T(N) = 3T(N/3) \\] </li> </ol> <p>\u6c42 \\(P_1, P_2\\) \u7684\u590d\u6742\u5ea6</p> Tips <p>\\(O(logN)\\) for P1, \\(O(N)\\) for P2</p>"},{"location":"ZJU_CS/FDS/homework/#hw2_linked-list","title":"HW2 linked-list","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u6e29\u4e60\u5728\u4e4b\u524dC\u8bed\u8a00\u8bfe\u7a0b\u4e2d\u5bf9\u57fa\u7840ADT\u7684\u4f7f\u7528\u3002\u719f\u7ec3\u638c\u63e1\u94fe\u8868\u7684\u64cd\u4f5c\u4ee5\u53ca\u57fa\u672c\u6982\u5ff5\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002</p> \u82f1\u6587 \u4e2d\u6587 complexity \u590d\u6742\u5ea6 <ol> <li>Attention\uff1a Linear List\uff08\u7ebf\u6027\u8868\uff09\u7684\u521d\u59cb\u5b9a\u4e49\u662f\u6570\u7ec4\u3002</li> <li>insertNode \u51fd\u6570\u53ef\u4ee5\u80cc\u4e0b\u6765</li> </ol> code <pre><code>void insertNode(struct Node* head, int Element) {\n    // \u521b\u5efa\u65b0\u8282\u70b9\n    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));\n    newNode-&gt;Element = Element;\n\n    newNode-&gt;Next = (head)-&gt;Next;\n    (head)-&gt;Next = newNode;\n}\n</code></pre> <ol> <li>\u6e29\u4e60<code>`Mergesort</code>\u4e2dmerge\u7684\u601d\u60f3</li> </ol> code <pre><code>#define type int\nvoid Mergesort(type num[], int start, int end) {\n    if (start &gt;= end) return;\n    int mid = start + (end-start)/2;\n    Mergesort(num, start, mid);\n    Mergesort(num, mid+1, end);\n\n    Merge(num, start, mid, end);\n}\n\nvoid Merge(int num[], int start, int mid, int end) {\n    int* temp = (int*)malloc((end-start+1)*sizeof(type));\n    int i = start;\n    int j = mid + 1;\n    int k = 0;\n    while (i &lt;= mid &amp;&amp; j &lt;= end) {\n        if (num[i] &lt;= num[j]){\n            temp[k++] = num[i++];\n        } else {\n            temp[k++] = num[j++];\n        }\n    }\n    while (i &lt;= mid) {\n        temp[k++] = num[i++];\n    }\n    while (j &lt;= end) {\n        temp[k++] = num[j++];\n    }\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/homework/#hw3_stack_queue","title":"HW3 Stack &amp; Queue","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u6e29\u4e60\u5728\u4e4b\u524dC\u8bed\u8a00\u8bfe\u7a0b\u4e2d\u5bf9\u57fa\u7840ADT\u7684\u4f7f\u7528\u3002\u719f\u7ec3\u638c\u63e1\u961f\u5217\u548c\u6808\u3002\u5305\u62ec\u53ef\u4ee5\u91c7\u7528structue\u5d4c\u5957\u6570\u7ec4\u7684\u65b9\u5f0f\u6765\u96c6\u6210\u5b9e\u73b0</p> <p>\u7f16\u7a0b\u9898\uff1aOI\u91cc\u5c06\u8fd9\u79cd\u601d\u60f3\u5f52\u7eb3\u4e3a\u201c\u6a21\u62df\u201d</p> \u82f1\u6587 \u4e2d\u6587 front \u524d rare \u540e <ol> <li>stack pop <code>ooops</code>\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\uff1f   </li> </ol> Tips <p>5 \u7b14\u8005\u7b2c\u4e00\u6b21\u505a\u65f6\u7c97\u7cd9\u7684\u8ba4\u4e3a\u662f4\u79cd\u3002\u6700\u540e\u5206\u6790\u8ba4\u4e3a\u8fd8\u662f\u753b\u7c7b\u4f3c\u6811\u5f62\u6d41\u7a0b\u56fe\u6700\u4e3a\u9760\u8c31</p> <ol> <li>stack\u7684\u4e00\u79cd\u96c6\u6210\u65b9\u6cd5</li> </ol> <pre><code>//\u521d\u59cb\u5316\u65f6\u5c06top\u8d4b\u503c\u4e3a-1\ntypedef struct {\n    int stack[MAX_SIZE];\n    int top;\n} Stack;\n\nvoid push(Stack *s, int num) {\n    s-&gt;stack[++s-&gt;top] = num;\n}\n\nint pop(Stack *s) {\n    return s-&gt;stack[s-&gt;top--];\n}\n</code></pre> <ol> <li>Suppose that an array of size 6 is used to store a circular queue, and the values of front and rear are 0 and 4, respectively. Now after 2 dequeues and 2 enqueues, what will the values of front and rear be?</li> </ol> Tips <p>[] Unfinished! 2 0</p>"},{"location":"ZJU_CS/FDS/homework/#hw4_binary_tree","title":"HW4 Binary tree","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u5b66\u4e60\u4e8c\u53c9\u6811\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002</p> <p>\u51fd\u6570\u9898\u5145\u5206\u5c55\u73b0\u4e86\u9012\u5f52\u601d\u60f3\uff0c\u7f16\u7a0b\u9898\u662f\u5bf9\u4e4b\u524d\u77e5\u8bc6\u7684\u7efc\u5408\u4f7f\u7528</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5 \u6811 tree A tree is a connected acyclic undirected graph\uff08DAG not\uff09 \u6839\u8282\u70b9 root node \u4f4d\u4e8e\u4e8c\u53c9\u6811\u9876\u5c42\u7684\u8282\u70b9\uff0c\u6ca1\u6709\u7236\u8282\u70b9 \u53f6\u8282\u70b9 leaf node \u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u5176\u4e24\u4e2a\u6307\u9488\u5747\u6307\u5411 \u8fb9 edge \u8fde\u63a5\u4e24\u4e2a\u8282\u70b9\u7684\u7ebf\u6bb5\uff0c\u5373\u8282\u70b9\u5f15\u7528\uff08\u6307\u9488\uff09 \u5c42 level \u4ece\u9876\u81f3\u5e95\u9012\u589e\uff0c\u6839\u8282\u70b9\u6240\u5728\u5c42\u4e3a 1 \u5ea6 degree \u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\u5728\u4e8c\u53c9\u6811\u4e2d\uff0c\u5ea6\u7684\u53d6\u503c\u8303\u56f4\u662f 0\u30011\u30012 \u9ad8\u5ea6 height \u4ece\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf \u6df1\u5ea6 depth \u4ece\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf \u9ad8\u5ea6 height \u4ece\u8ddd\u79bb\u8be5\u8282\u70b9\u6700\u8fdc\u7684\u53f6\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf \u904d\u5386 traversal <p>\u4e0b\u9762\u5148\u8ba9\u6211\u4eec\u770b\u770b\u57fa\u672c\u6982\u5ff5\u5427\uff08From hello-algo\uff09</p> <p>\u4e8c\u53c9\u6811\u57fa\u672c\u6982\u5ff5</p> \u5b8c\u7f8e\u4e8c\u53c9\u6811 perfect BT\u5e73\u8861\u4e8c\u53c9\u6811 balance BT\u5b8c\u5168\u4e8c\u53c9\u6811 complete BT\u5b8c\u6ee1\u4e8c\u53c9\u6811 full BT <p></p> <p></p> <p></p> <p></p> <ol> <li>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</li> </ol> Tips <p>F \u672c\u9898\u662f\u4e2a\u8111\u7ecf\u6025\u8f6c\u5f2f\u9898\u76ee</p> <ol> <li>Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be ____.</li> </ol> <p>\u505a\u9898\u6280\u5de7</p> <p>8</p> <p>\u901a\u89e3\uff1a 1. \u7b97\u513f\u5b50\uff0c $ 3n_3+2n_2+n_1+1=N $ 2. \u7b97\u6240\u6709\uff0c $ n_3+n_2+n_1+n_0=N $</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u6982\u5ff5\uff1a \u7ed3\u70b9\u7684\u5ea6\uff08Degree\uff09\uff1a\u7ed3\u70b9\u7684\u5b50\u6811\u4e2a\u6570 \u6811\u7684\u5ea6\uff1a\u6811\u7684\u6240\u6709\u7ed3\u70b9\u4e2d\u6700\u5927\u7684degree</p> <ol> <li>If a general tree T is converted into a binary tree BT, then which of the following BT traversals gives the same sequence as that of the post-order traversal of T?</li> </ol> Tips <p>\u666e\u901a\u6811\u8f6c\u4e8c\u53c9\u6811</p> <p>\u53ef\u4ee5\u8fd9\u6837\u6d45\u663e\u7684\u7406\u89e3\uff1a 1. \u5728\u6240\u6709\u5144\u5f1f\u8282\u70b9\u95f4\u6dfb\u52a0\u4e00\u6761\u8fde\u7ebf 2. \u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u9664\u4e86\u4fdd\u7559\u4e0e\u7b2c\u4e00\u4e2a\u513f\u5b50\u7684\u8fde\u7ebf\u5916\uff0c\u5220\u9664\u522b\u7684\u8fde\u7ebf\u3002 </p> <p>conclusion</p> <p>T\u7684preorder = BT\u7684preorder T\u7684postorder = BT\u7684inorder</p> <ol> <li>Threaded Binary Trees(\u4e00\u79cd\u5bf9\u4e8c\u53c9\u6811\u7684\u4f18\u5316\uff0c\u8001\u5e08\u4e0d\u8bb2\u4f46\u8981\u638c\u63e1) </li> </ol> <p>Note</p> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811</p> <p>\u4e00\u4e2a\u76f4\u89c2\u7684\u5feb\u901f\u89e3\u9898\u7684\u65b9\u6cd5\u4fbf\u662f\u5199\u51fa\u539f\u672c\u6811\u7684\u904d\u5386\u7ed3\u679c\uff0c\u7136\u540e\u7528\u4f7f\u7528\u5de6\u53f3\u6307\u9488\u4e0e\u5b83\u7684\u524d\u540e\u503c\u63a5\u8d77\u6765\u5373\u53ef\uff01</p>"},{"location":"ZJU_CS/FDS/homework/#hw5_search_tree","title":"HW5 search tree","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u5b66\u4e60\u4e8c\u53c9\u6811\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002</p> <p>\u51fd\u6570\u9898\u5145\u5206\u5c55\u73b0\u4e86\u9012\u5f52\u601d\u60f3\uff0c\u7f16\u7a0b\u9898\u662f\u5bf9\u4e4b\u524d\u77e5\u8bc6\u7684\u7efc\u5408\u4f7f\u7528</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5 <ol> <li>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</li> </ol> Tips <p>F </p> <p>5 could be their grandparents</p> <ol> <li>2-3</li> <li></li> </ol> <p>\u8003\u5bdf\u4e8c\u53c9\u6811\u5220\u9664\u7ed3\u70b9</p> <p></p> <ol> <li>\u4ec0\u4e48\u662fdecision tree?</li> <li>A binary search tree if ood nodes, \u5982\u679c\u6211\u4eec\u9009<code>i/2</code>\uff0c\u4e4b\u540e\u6bcf\u6b21\u90fd\u9009<code>i/2</code>\uff1b\u9009<code>i/2+1</code>\u5219\u90fd\u9009<code>i/2+1</code>\u3002</li> <li>\u7ea2\u9ed1\u6811</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw6_heap","title":"HW6 Heap","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u5b66\u4e60\u5806\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002\u4e2a\u4eba\u8ba4\u4e3a\u672c\u8282\u5728hello-algo\u4e2d\u89e3\u91ca\u7684\u662f\u975e\u5e38\u5b8c\u5168\u7684\u3002</p> <p>Notice\uff1a\u7f16\u7a0b\u9898\u6709\u5e8f\u6570\u5b57\u4e32\u5efa\u5b8c\u5168\u4e8c\u53c9\u6811\u53ef\u4ee5\u5229\u7528\u4e2d\u5e8f\u5386\u904d\u7684\u601d\u60f3\u6765\u5efa\u6811\u3002</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5"},{"location":"ZJU_CS/FDS/homework/#hw7_unionfind_set","title":"HW7 Union/Find set","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u5b66\u4e60\u5e76\u67e5\u96c6\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002</p> <p>\u51fd\u6570\u9898\u5145\u5206\u5c55\u73b0\u4e86\u9012\u5f52\u601d\u60f3\uff0c\u7f16\u7a0b\u9898\u662f\u5bf9\u4e4b\u524d\u77e5\u8bc6\u7684\u7efc\u5408\u4f7f\u7528</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5 \u4e0d\u76f8\u4ea4\u96c6\u5408 disjoint set \u5e76\u67e5\u96c6 union-find set <ol> <li>In Union/Find algorithm, if Unions are done by size, the depth of any node must be no more than \\(N/2\\) , but not \\(O(logN)\\).</li> </ol> Tips <p>F \u5047\u8bbe\u6700\u521d\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u4e3a0\uff0c\u90a3\u4e48\u5728\u8fdb\u884cN-1\u6b21\u6309\u5927\u5c0f\u5408\u5e76\u540e\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u6700\u591a\u4e3a1\u3002\u56e0\u6b64\uff0c\u4efb\u610f\u8282\u70b9\u7684\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7N/2\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u662f\u5728\u6309\u5927\u5c0f\u5408\u5e76\u7684\u60c5\u51b5\u4e0b\u6210\u7acb\u7684\u3002\u5982\u679c\u4f7f\u7528\u5176\u4ed6\u5408\u5e76\u7b56\u7565\uff0c\u4f8b\u5982\u6309\u79e9\u5408\u5e76\uff08\u5c06\u6df1\u5ea6\u8f83\u5c0f\u7684\u6811\u5408\u5e76\u5230\u6df1\u5ea6\u8f83\u5927\u7684\u6811\u4e2d\uff09\uff0c\u90a3\u4e48\u8282\u70b9\u7684\u6df1\u5ea6\u53ef\u80fd\u4f1a\u66f4\u5c0f\uff0c\u751a\u81f3\u53ef\u80fd\u8fbe\u5230O(logN)\u3002</p> <ol> <li>The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are:</li> </ol> Tips <p>4 -5</p> <ol> <li>Let T be a tree created by union-by-size with N nodes, then the height of T can be .</li> </ol> Tips <p>at most \\(log(N) + 1\\)</p> <ol> <li>A relation R is defined on a set S. If for every element e in S, \"e R e\" is always true, then R is said to be reflexive over S.</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw8_graph","title":"HW8 Graph","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u5b66\u4e60\u56fe\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u6982\u5ff5\uff1a\u56fe\u8bba\u4e2d\u7684degree\u662f\u6307\u4e0e\u8be5\u8282\u70b9\u6240\u8fde\u63a5\u7684\u8fb9\u7684\u4e2a\u6570\uff0cBy contrast\uff0c \u6811\u4e2d\u7684degree\u662f\u6307\u5b50\u8282\u70b9\u7684\u4e2a\u6570</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5 \u8fde\u901a\u56fe connected graph \u8fde\u901a\u5206\u91cf connected component \u8fd9\u4e2a\u6982\u5ff5\u5f88\u91cd\u8981\uff0c\u5bb9\u6613\u8bef\u89e3 \u62d3\u6251\u5e8f\u5217 topological order <ol> <li> <p>In a connected graph, the number of edges must be equal or greater than the number of vertices minus 1.</p> </li> <li> <p>A graph with 90 vertices and 20 edges must have at least __ connected component(s)</p> </li> </ol> Tips <p>70</p>"},{"location":"ZJU_CS/FDS/homework/#hw9_shortest_path","title":"HW9 Shortest_Path","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u9700\u8981\u638c\u63e1Dijkstra\u7b97\u6cd5\u4ee5\u53caFloyd\u7b97\u6cd5\u7684\u601d\u60f3\u4e0e\u5b9e\u73b0\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u6982\u5ff5\uff1a\u56fe\u8bba\u4e2d\u7684degree\u662f\u6307\u4e0e\u8be5\u8282\u70b9\u6240\u8fde\u63a5\u7684\u8fb9\u7684\u4e2a\u6570\uff0cBy contrast\uff0c \u6811\u4e2d\u7684degree\u662f\u6307\u5b50\u8282\u70b9\u7684\u4e2a\u6570</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5 <ol> <li>Let P be the shortest path from S to T. If the weight of every edge in the graph is incremented by 2, P will still be the shortest path from S to T.</li> </ol> <p>key</p> <p>F</p> <p>Because if shortest road has 6 nodes with 12 while 2<sup>nd</sup>-shortest road has 4 nodes with 13. After every edge incremented by 2. The last shortest road is 24 while last 2<sup>nd</sup>-shortest road is 21 which means it is the current shortest road!</p> <ol> <li>Use Dijkstra algorithm to find the shortest paths from 1 to every other vertices. In which order that the destinations must be obtained?</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw10_mst_maxstream","title":"HW10 MST &amp; Maxstream","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u6b21\u4f5c\u4e1a\uff0c\u4f60\u9700\u8981\u5bf9\u6700\u5c0f\u751f\u6210\u6811\uff08minimum spanning tree\uff09\u7684\u4e24\u4e2a\u7b97\u6cd5\u6e05\u6670\u7684\u8bb0\u5fc6\uff0c\u5173\u4e8e\u6700\u5927\u6d41\u5e94\u5f53\u5b66\u4f1a\u8ba1\u7b97\u3002</p> \u4e2d\u6587 \u82f1\u6587 \u6982\u5ff5 <ol> <li>The minimum spanning tree of any weighted graph ____</li> </ol> Tips <p>May not exits. Exit if it is connected.</p> <ol> <li>An example question about max stream.</li> </ol> Question <p></p>"},{"location":"ZJU_CS/FDS/homework/#hw11_dfs_insertionsort","title":"HW11 DFS &amp; InsertionSort","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>[] finshed? 1. \u672c\u8282\u9700\u8981\u638c\u63e1'biconnected\"(\u91cd\u8fde\u63a5)\u76f8\u5173\u7684\u77e5\u8bc6 2. u is an articulation point if</p> <p>(1)  u is the root and has at least 2 children;  or (2)  u is not the root, and has at least 1 child such that  \\(Low(child) \\ge Num(u)\\) 3. Euler circuit: \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u201c\u4e00\u7b14\u753b\u201d\u95ee\u9898\uff0c\u53ef\u770bEular path 4. \u4ee5\u53ca\u4f60\u9700\u8981\u5bf9dfs\u4ee5\u53ca\u6392\u5e8f\u6709\u719f\u7ec3\u638c\u63e1\uff08\u76f8\u4fe1\u5b66\u5230\u8fd9\u91cc\u5e94\u8be5\u6ca1\u6709\u4e0d\u719f\u7ec3\u7684\u4e86\u5427hhhh</p> \u82f1\u6587 \u4e2d\u6587 articulation point \u5173\u8282\u70b9 biconnected \u91cd\u8054\u901a acyclic graph \u65e0\u73af\u56fe <ol> <li>For a graph, if each vertex has an even degree or only two vertexes have odd degree, we can find a cycle that visits every edge exactly once</li> </ol> Tips <p>F</p> <p>It has to be a Euler Cycle, thus only if each vertex has even degrees\uff1bEuler Circuit -&gt; exact 2 vertices have odd degrees / all vertices have even degrees</p> <ol> <li>Apply DFS to a directed acyclic graph, and output the vertex before the end of each recursion. The output sequence will be:</li> </ol> Tips <p>reversely topologically sorted</p> <ol> <li>Graph G is an undirected completed graph of 20 nodes. Is there an Euler circuit in G? If not, in order to have an Euler circuit, what is the minimum number of edges which should be removed from G?</li> </ol> Tips <p>Each Node has exactly 19 degrees</p> <ul> <li> <p>Euler Circuit (Strong Form) requires every node to be even degrees</p> </li> <li> <p>Euler Tour (Weak Form) requires 0 or 2 odd degrees</p> </li> </ul> <p>Remove 1 edge, every 2 nodes will lose 1 degrees, so we lose 10 edges</p>"},{"location":"ZJU_CS/FDS/homework/#hw12_shellsort_heapsort_mergesort","title":"HW12 shellsort &amp; Heapsort &amp; Mergesort","text":"<p>\u6458\u8981</p> Knowledge <p>\u672c\u8282\u4f60\u5c06\u5b66\u4e60\u5230\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u601d\u60f3\u4ee5\u53ca\u5b9e\u73b0\u3002\u5e76\u4e14\u9700\u8981\u638c\u63e1\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ee5\u53ca\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u5176\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u662fshell sort\u548cheap sort\u7684\u5b9e\u73b0\uff0c\u4ee5\u53ca\u5bf9\u4e8equick sort\u7684\u7406\u89e3\u3002</p> <ol> <li>Shellsort\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</li> </ol> Shellsort <pre><code>// Shellsort\nvoid Shellsort( ElementType A[ ], int N ) \n{ \n    int  i, j, Increment; \n    ElementType  Tmp; \n    for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n    /*h sequence */\n    for ( i = Increment; i &lt; N; i++ ) { /* insertion sort */\n        Tmp = A[ i ]; \n        for ( j = i; j &gt;= Increment; j - = Increment ) \n        if( Tmp &lt; A[ j - Increment ] ) \n            A[ j ] = A[ j - Increment ]; \n        else \n            break; \n        A[ j ] = Tmp; \n    } /* end for-I and for-Increment loops */\n}\n</code></pre> <ol> <li>Heapsort\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</li> </ol> Heapsort <pre><code>void PercDown( ElementType A[ ], int i, int N ) \n{ \n    int  Child; \n    ElementType  Tmp; \n    for ( Tmp = A[ i ]; LeftChild( i ) &lt; N; i = Child ) { \n        Child = LeftChild( i ); \n        if( Child != N - 1 &amp;&amp; A[ Child + 1 ] &gt; A[ Child ] ) \n            Child++; \n        if( Tmp &lt; A[ Child ] ) \n            A[ i ] = A[ Child ]; \n        else \n            break; \n    } \n    A[ i ] = Tmp; \n} \n\nvoid Heapsort( ElementType A[ ], int N ) \n{ \n    int  i; \n    for ( i = N / 2; i &gt;= 0; i-- ) /* BuildHeap */\n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i-- ) { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */\n        PercDown( A, 0, i ); \n    } \n}\n</code></pre>"},{"location":"ZJU_CS/FDS/homework/#hw13_quicksort_radixsort","title":"HW13 QuickSort &amp; RadixSort","text":"<p>\u6458\u8981</p> Knowledgeglossary <p></p> \u82f1\u6587 \u4e2d\u6587 inversion \u9006\u5e8f\u5bf9 <ol> <li>If there are less than 20 inversions in an integer array, the Quick Sort will be the best method among Quick Sort, Heap Sort and Insertion Sort.</li> </ol> Tips <p>F</p> <p>\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u8d8a\u5c11\uff0c\u5feb\u6392\u7684\u6548\u7387\u8d8a\u9ad8\u3002\u5f53\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e3a0\u65f6\uff0c\u5feb\u6392\u7684\u6548\u7387\u6700\u9ad8\uff0c\u6b64\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(NlogN)\u3002\u5f53\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e3aN(N-1)/2\u65f6\uff0c\u5feb\u6392\u7684\u6548\u7387\u6700\u4f4e\uff0c\u6b64\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N^2)\u3002</p>"},{"location":"ZJU_CS/FDS/homework/#hw1415_hash","title":"HW14&amp;15 Hash","text":"<p>\u6458\u8981</p> Knowledgeglossary <p>\u672c\u8282\u4f60\u5c06\u5b66\u4e60hash\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002\u4e2a\u4eba\u8ba4\u4e3ahello-algo\u5b8c\u5168\u6db5\u76d6\u4e86\u4f60\u9700\u8981\u7406\u89e3\u7684\u5185\u5bb9\u3002</p> \u82f1\u6587 \u4e2d\u6587 <ol> <li> <p>\u8fd9\u4e2a\u9898\u6709\u70b9\u4e89\u8bae\uff0c\u6309\u7167\u9053\u7406\u6765\u8bb2\u5e73\u5747\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(1),\u5982\u679c\u6709\u51b2\u7a81\u7684\u8bdd\u53ef\u80fd\u4f1a\u9000\u5316\u5230O(N) </p> </li> <li> <p>Which of the following statements about HASH is true?</p> </li> </ol> The answer is D <p>A.the expected number of probes for insertions is greater than that for successful searches in linear probing method</p> <p>B.if the table size is prime and the table is at least half empty, a new element can always be inserted with quadratic probing</p> <p>C.in separate chaining method, if duplicate elements are allowed in the list, insertions are generally quicker than deletions</p> <p>D. all of the above</p> <ol> <li>Hash quadratic probing \u4f1a\u5728index\u7684\\(\\pm pow(i,2)\\)\u7684\u4f4d\u7f6e\u68c0\u67e5\u3002</li> <li>\u7b54\u6848\u662fB    </li> <li>\u7b54\u6848\u662fC    </li> </ol>"},{"location":"ZJU_CS/FDS/set/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"ZJU_CS/FDS/set/#_2","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p>\u4e00\u4e2a\u5173\u7cfb R \u5b9a\u4e49\u5728\u96c6\u5408 S \u4e0a, \u8868\u793a\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u5bf9 \\((a,b),a,b\\in S\\), \\(aRb\\) \u8981\u4e48\u4e3a\u771f\u8981\u4e48\u4e3a\u5047. \u5982\u679c \\(aRb\\) \u4e3a\u771f\uff0c\u90a3\u4e48\u6211\u4eec\u79f0 \\(a\\) \u548c \\(b\\) \u6709\u5173\u7cfb\u3002</p> <p>\u7b49\u4ef7\u5173\u7cfb\u662f\u6ee1\u8db3\u81ea\u53cd\u6027(\\(\\forall a\\in S, aRa\\))\uff0c\u5bf9\u79f0\u6027(\\(aRb\\Leftrightarrow bRa\\))\uff0c\u4f20\u9012\u6027(\\(aRb, bRc \\Rightarrow aRc\\))\u7684\u5173\u7cfb\uff0c\u4e00\u822c\u7528 ~ \u8868\u793a\u7b49\u4ef7\u5173\u7cfb\u3002</p> <p>S \u4e2d\u7684\u4e24\u4e2a\u5143\u7d20 \\(x\\) \\(y\\) \u5728\u540c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u5f53\u4e14\u4ec5\u5f53 \\(a\\) ~ \\(b\\)</p>"},{"location":"ZJU_CS/FDS/set/#_3","title":"\u52a8\u6001\u7b49\u4ef7\u6027\u95ee\u9898","text":"<ul> <li>\u96c6\u5408\u7684\u5143\u7d20: \\(1,2,3\\ldots,N\\)</li> <li>\u96c6\u5408: \\(S_1,S_2,\\ldots\\) \u4e14 \\(S_i\\cap S_j=\\empty\\) (\u82e5 \\(i\\neq j\\)), \u5373\u96c6\u5408\u4e4b\u95f4\u4e0d\u76f8\u4ea4</li> <li>\u64cd\u4f5c:<ul> <li><code>Find(i)</code> \u8fd4\u56de\u7ed9\u5b9a\u5143\u7d20\u7684\u6240\u5728\u7684\u96c6\u5408\uff08\u7b49\u4ef7\u7c7b\uff09</li> <li><code>Union(i,j)</code> \u6c42\u5e76\u8fd0\u7b97\uff0c\u5c06\u542b\u6709 a \u548c b \u7684\u4e24\u4e2a\u7b49\u4ef7\u7c7b\u5408\u5e76\u4e3a\u4e00\u4e2a\u7b49\u4ef7\u7c7b  </li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/set/#_4","title":"\u57fa\u672c\u6570\u636e\u7ed3\u6784","text":"<p>\u6211\u4eec\u7528\u6811\u6765\u8868\u793a\u6bcf\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u7684\u6839\u547d\u540d\u8fd9\u4e2a\u96c6\u5408\uff08\u4ee3\u8868\u5143\uff09\uff0c\u6811\u7684\u96c6\u5408\u6784\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\u3002 \u521d\u59cb\u65f6\uff0c\u6bcf\u68f5\u6811\u90fd\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u3002\u5f53\u9700\u8981\u6267\u884c <code>Union</code> \u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u8282\u70b9\u7684\u6839\u6307\u9488\u6307\u5411\u53e6\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u3002\u5f53\u9700\u8981\u6267\u884c <code>Find</code> \u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u5143\u7d20 X \u4e00\u76f4\u5411\u4e0a\u76f4\u5230\u6839\u4e3a\u6b62\u3002</p> <pre><code>void SetUnion ( DisjSet S, SetType Rt1, SetType Rt2 )\n{    \n    S [ Rt2 ] = Rt1 ;     \n}\nSetType Find ( ElementType X, DisjSet S )\n{   \n    for ( ; S[X] &gt; 0; X = S[X] );\n    return  X ;\n}\n</code></pre> <p>\u5b9e\u9645\u8fd0\u7528\u4e2d\uff0c<code>Union</code> \u548c <code>Find</code> \u64cd\u4f5c\u901a\u5e38\u6210\u5bf9\u51fa\u73b0:</p> <pre><code>/* Algorithm using union-find operations */\n{  Initialize  Si = { i }  for  i = 1, ..., 12 ;\n   for  ( k = 1; k &lt;= 9; k++ )  {  /* for each pair  i \uf0ba j */\n      if  ( Find( i ) != Find( j ) )\n          SetUnion( Find( i ), Find( j ) );\n   }\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/set/#_5","title":"\u7075\u5de7\u6c42\u5e76\u7b97\u6cd5","text":"<ul> <li>\u6309\u5927\u5c0f\u6c42\u5e76 \u5373\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u6211\u4eec\u6539\u53d8\u8f83\u5c0f\u7684\u6811 \u8bbe \\(T\\) \u662f\u6309\u5927\u5c0f\u5408\u5e76\u7684 \\(N\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u90a3\u4e48 \\(height(T)\\leq\\lfloor \\log_2N\\rfloor +1\\) (\u53ef\u7528\u5f52\u7eb3\u6cd5\u8bc1\u660e)  \u56e0\u6b64\u5bf9\u4e8e \\(N\\) \u4e2a <code>Union</code> \u64cd\u4f5c \\(M\\) \u4e2a <code>Find</code> \u64cd\u4f5c\uff0c\u6240\u7528\u65f6\u95f4\u4e3a \\(O(N+M\\log_2N)\\)</li> <li>\u6309\u9ad8\u5ea6\u6c42\u5e76 \u5373\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u6211\u4eec\u6539\u53d8\u8f83\u77ee\u7684\u6811</li> </ul>"},{"location":"ZJU_CS/FDS/set/#_6","title":"\u8def\u5f84\u538b\u7f29","text":"<pre><code>SetType  Find ( ElementType  X, DisjSet  S )\n{   ElementType  root,  trail,  lead;\n    for ( root = X; S[ root ] &gt; 0; root = S[ root ] )\n        ;  /* find the root */\n    for ( trail = X; trail != root; trail = lead ) {\n       lead = S[ trail ] ;   \n       S[ trail ] = root ;   \n    }  /* collapsing */\n    return  root ;\n}\n</code></pre> <p>\u8def\u5f84\u538b\u7f29\u7684\u6548\u679c\u662f\uff0c\u4ece X \u5230\u6839\u7684\u8def\u5f84\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f7f\u5b83\u7684\u7236\u8282\u70b9\u53d8\u6210\u6839\u3002 \u8def\u5f84\u538b\u7f29\u4e0e\u6309\u5927\u5c0f\u6c42\u5e76\u5b8c\u5168\u517c\u5bb9\uff0c\u53ef\u4ee5\u540c\u65f6\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u4e0e\u6309\u9ad8\u5ea6\u6c42\u5e76\uff08\u6709\u65f6\u79f0\u4e3a\u79e9\uff09</p>"},{"location":"ZJU_CS/FDS/set/#_7","title":"\u6309\u79e9\u6c42\u5e76\u548c\u8def\u5f84\u538b\u7f29\u7684\u6700\u574f\u60c5\u5f62","text":"<p>\u4ee4 \\(T(M,N)\\) \u6267\u884c \\(M\\geq N\\) \u6b21 <code>Find</code> \u548c \\(N-1\\) \u6b21 <code>Union</code> \u64cd\u4f5c\u7684\u6700\u574f\u7528\u65f6\u3002\u90a3\u4e48 \\(k_1M\\alpha(M,N)\\leq T(M,N)\\leq k_2 M\\alpha(M,N)\\) \u5bf9\u4e8e\u67d0\u4e2a\u6b63\u5e38\u6570 \\(k_1,k_2\\). \u5176\u4e2d \\(\\alpha(M,N)\\) \u662f Ackermann \u51fd\u6570.  </p> \\[ \\begin{align*} A(i,j)=\\left\\{ \\begin{matrix}2^j\\quad    &amp; i=1\\ and\\ j\\geq 1\\\\ A(i-1,2)\\quad &amp; i\\geq 2\\ and\\ j=1\\\\ A(i-1,A(i,j-1))\\ &amp; i\\geq 2\\ and\\ j\\geq 2 \\end{matrix}\\right. \\end{align*} \\] <p>Info</p> <p>\u5e76\u67e5\u96c6: the disjoint set  \u7b49\u4ef7\u5173\u7cfb: equivalence relations \u6309\u5927\u5c0f\u6c42\u5e76: union by size \u8def\u5f84\u538b\u7f29: path compression  </p>"},{"location":"ZJU_CS/FDS/sort/","title":"\u6392\u5e8f","text":"<p>\u6211\u4eec\u5047\u8bbe \"&lt;\" \"&gt;\" \u8fd0\u7b97\u7b26\u5b58\u5728\uff0c\u8fd9\u4e24\u79cd\u8fd0\u7b97\u662f\u4ec5\u6709\u7684\u5141\u8bb8\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u8fd9\u79f0\u4e3a\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f. \u6211\u4eec\u5047\u5b9a N \u4e3a\u8981\u6392\u5e8f\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u636e\u4ece\u4f4d\u7f6e 0 \u5f00\u59cb\u3002</p>"},{"location":"ZJU_CS/FDS/sort/#_2","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\u63d2\u5165\u6392\u5e8f\u6709 N-1 \u8d9f(pass), \u5bf9\u4e8e \\(P=1\\) \u5230 \\(P=N-1\\) \u8d9f\u6211\u4eec\u4fdd\u8bc1\u4f4d\u7f6e 0 \u5230\u4f4d\u7f6e \\(P-1\\) \u4e0a\u7684\u5143\u7d20\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\uff0c\u800c\u7b2c \\(P\\) \u8d9f\u8981\u505a\u7684\u5c31\u662f\u5c06\u4f4d\u7f6e \\(P\\) \u7684\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u5230\u5b83\u5728\u524d \\(P+1\\) \u4e2a\u5143\u7d20\u4e2d\u7684\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002  </p> <pre><code>void InsertionSort ( ElementType A[ ], int N ) \n{ \n    int j, P; \n    ElementType  Tmp; \n\n    for ( P = 1; P &lt; N; P++ ) { \n    Tmp = A[ P ];  /* the next coming card */\n    for ( j = P; j &gt; 0 &amp;&amp; A[ j - 1 ] &gt; Tmp; j-- ) \n          A[ j ] = A[ j - 1 ]; \n          /* shift sorted cards to provide a position \n                       for the new coming card */\n    A[ j ] = Tmp;  /* place the new card at the proper position */\n      }  /* end for-P-loop */\n}\n</code></pre> <ul> <li>\u6700\u4f73\u60c5\u51b5 - \u8f93\u5165\u6570\u636e\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(N)\\) </li> <li>\u6700\u574f\u60c5\u51b5 - \u8f93\u5165\u6570\u636e\u662f\u9006\u5e8f\u7684\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(N^2)\\)</li> </ul>"},{"location":"ZJU_CS/FDS/sort/#_3","title":"\u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c","text":"<p>\u4e00\u4e2a\u9006\u5e8f\u662f\u6307\u6570\u7ec4\u4e2d \\(i&lt;j\\) \u4f46 \\(A[i]&gt;A[j]\\) \u7684\u5e8f\u5076 \\((A[i],A[j])\\) </p> <p>\u4ea4\u6362\u4e0d\u6309\u539f\u5e8f\u6392\u5217\u7684\u76f8\u90bb\u5143\u7d20\u4f1a\u6070\u597d\u6d88\u9664\u4e00\u4e2a\u9006\u5e8f\uff0c\u56e0\u6b64\u63d2\u5165\u6392\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(I+N)\\). \u5176\u4e2d \\(I\\) \u4e3a\u539f\u59cb\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u6570\uff0c\u5f53\u9006\u5e8f\u6570\u8f83\u5c11\u65f6\u63d2\u5165\u6392\u5e8f\u4ee5\u7ebf\u6027\u65f6\u95f4\u8fd0\u884c\u3002</p> <p>\\(N\\) \u4e2a\u4e92\u5f02\u6570\u7684\u6570\u7ec4\u7684\u5e73\u5747\u9006\u5e8f\u6570\u4e3a \\(\\dfrac{N(N-1)}{4}\\) </p> <p>\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u7684\u4efb\u4f55\u7b97\u6cd5\u5e73\u5747\u9700\u8981 \\(\\Omega(N^2)\\) \u65f6\u95f4</p>"},{"location":"ZJU_CS/FDS/sort/#_4","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u4f7f\u7528\u4e00\u4e2a \\(h_1,h_2,\\ldots,h_t\\) \u7684\u589e\u91cf\u5e8f\u5217(\\(h_1=1\\)). \\(h_k\\)-sort \u7684\u4e00\u822c\u505a\u6cd5\u662f\uff0c\u5bf9\u4e8e \\(h_k,h_k+1,\\ldots,N-1\\) \u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e \\(i\\), \u5c06\u5176\u5143\u7d20\u653e\u5230 \\(i,i-h_k,i-2h_k,\\ldots\\) \u4e2d\u95f4\u7684\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002\u76f8\u5f53\u4e8e\u5bf9 \\(h_k\\) \u4e2a\u72ec\u7acb\u7684\u5b50\u6570\u7ec4\u5404\u8fdb\u884c\u4e00\u6b21\u63d2\u5165\u6392\u5e8f\u3002\\(h_k\\)-sort \u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i\\) \u6211\u4eec\u90fd\u6709 \\(a_i\\leq a_{i+h_k}\\), \u6b64\u65f6\u6210\u79f0\u4e3a \\(h_k\\)-sorted. </p> <p>\u5e0c\u5c14\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28: \u4e00\u4e2a \\(h_k\\)-sorted \u7684\u6587\u4ef6\uff08\u6b64\u540e\u5c06\u662f \\(h_{k-1}\\)-sorted\uff09\u4fdd\u6301\u4ed6\u7684 \\(h_k\\)-sorted \u6027\u8d28\u3002  </p>"},{"location":"ZJU_CS/FDS/sort/#_5","title":"\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217","text":"<p>\\(h_t=\\lfloor N/2 \\rfloor, h_k=\\lfloor h_{k+1}/2 \\rfloor\\)(\u53ef\u4ee5\u6709\u66f4\u597d\u7684\u589e\u91cf\u5e8f\u5217)</p> <pre><code>void Shellsort( ElementType A[ ], int N ) \n{ \n      int  i, j, Increment; \n      ElementType  Tmp; \n      for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n    /*h sequence */\n    for ( i = Increment; i &lt; N; i++ ) { /* insertion sort */\n          Tmp = A[ i ]; \n          for ( j = i; j &gt;= Increment; j - = Increment ) \n        if( Tmp &lt; A[ j - Increment ] ) \n              A[ j ] = A[ j - Increment ]; \n        else \n              break; \n        A[ j ] = Tmp; \n    } /* end for-I and for-Increment loops */\n}\n</code></pre> <ul> <li> <p>\u6700\u574f\u60c5\u5f62\u5206\u6790  </p> <p>\u4f7f\u7528\u5e0c\u5c14\u589e\u91cf\u65f6\u7684\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u574f\u60c5\u5f62\u8fd0\u884c\u65f6\u95f4\u4e3a \\(\\Theta(N^2)\\) </p> </li> <li> <p>Hibbard \u589e\u91cf\u5e8f\u5217 \\(h_k= 2^k-1\\), \u4e14\u5176\u6700\u574f\u60c5\u5f62\u4e0b\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(N^{3/2})\\)</p> </li> </ul>"},{"location":"ZJU_CS/FDS/sort/#_6","title":"\u5806\u6392\u5e8f","text":"<p>\u5982\u679c\u6211\u4eec\u5148 <code>BuildHeap</code>, \u518d Delete N \u6b21\u6700\u5c0f\u5143\u7d20\uff0c\u8fd9\u6837\u9700\u8981\u591a\u4f7f\u7528\u4e00\u4e2a\u9644\u52a0\u6570\u7ec4\uff0c\u4f7f\u5f97\u5b58\u50a8\u9700\u6c42\u589e\u52a0\u4e00\u500d\u3002  </p> <p>\u6bcf\u6b21 <code>DeleteMin</code> \u540e\uff0c\u5806\u7684\u5927\u5c0f\u7f29\u5c0f\u4e86 1, \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u5806\u4e2d\u6700\u540e\u7684\u5355\u5143\u6765\u5b58\u653e\u521a\u521a\u5220\u53bb\u7684\u5143\u7d20\u3002  </p> <p>\u6574\u4f53\u6d41\u7a0b\uff1a</p> <ul> <li>\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u4e00\u4e2a Max \u5806</li> <li>\u5c06\u5806\u4e2d\u6700\u540e\u5143\u7d20\u4e0e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u7f29\u51cf\u5806\u7684\u5927\u5c0f\u5e76\u8fdb\u884c\u4e0b\u6ee4\u3002\u6267\u884c N-1 \u6b21 <code>DeleteMax</code> \u64cd\u4f5c  </li> <li>\u7b97\u6cd5\u7ec8\u6b62\u65f6\uff0c\u6570\u7ec4\u6309\u987a\u5e8f\u5373\u4e3a\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\u7ed3\u679c</li> </ul> <pre><code>void Heapsort( ElementType A[ ], int N ) \n{  int i; \n    for ( i = N / 2; i &gt;= 0; i - - ) /* BuildHeap */ \n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i - - ) { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */ \n        PercDown( A, 0, i ); \n    } \n}\n</code></pre> <p>\u6ce8\uff1a\u8fd9\u91cc\u7684\u5806\u6211\u4eec\u662f\u4ece 0 \u5f00\u59cb\u8ba1\u6570\u7684\uff0c\u56e0\u6b64\u5de6\u513f\u5b50\u5e94\u8be5\u662f <code>2*i+1</code> </p> <p>\u5bf9 N \u4e2a\u4e92\u5f02\u9879\u7684\u968f\u673a\u6392\u5217\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a \\(2N\\log N-O(N\\log\\log N)\\)</p>"},{"location":"ZJU_CS/FDS/sort/#_7","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u57fa\u672c\u64cd\u4f5c\uff1a\u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u7684\u65b9\u6cd5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5b8c\u6210\u4e24\u4e2a\u8868\u7684\u5408\u5e76\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b</p> <ul> <li>\u53d6\u4e24\u4e2a\u8f93\u5165\u6570\u7ec4 A \u548c B, \u4e00\u4e2a\u8f93\u51fa\u6570\u7ec4 C, \u4ee5\u53ca\u4e09\u4e2a\u8ba1\u6570\u5668 Aptr, Bptr, Cptr, \u5206\u522b\u5bf9\u5e94\u6570\u7ec4\u7684\u5f00\u7aef\u3002</li> <li>\u6bcf\u6b21 <code>A[Aptr]</code> \u548c <code>B[Bptr]</code> \u4e2d\u7684\u8f83\u5c0f\u8005\u4f1a\u88ab\u62f7\u8d1d\u5230 C \u4e2d\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\uff0c\u76f8\u5173\u7684\u8ba1\u6570\u5668\u5411\u524d\u63a8\u8fdb\u4e00\u6b65\u3002</li> <li>\u5f53\u4e24\u4e2a\u8f93\u5165\u8868\u4e2d\u6709\u4e00\u4e2a\u7528\u5b8c\u65f6\uff0c\u5c06\u53e6\u4e00\u4e2a\u8868\u7684\u5269\u4f59\u90e8\u5206\u62f7\u8d1d\u5230 C \u4e2d\u3002</li> <li>\u6211\u4eec\u6700\u591a\u8fdb\u884c \\(N-1\\) \u6b21\u6bd4\u8f83\uff0c\u56e0\u6b64\u5408\u5e76\u65f6\u95f4\u663e\u7136\u662f\u7ebf\u6027\u7684\u3002</li> </ul> <p>\u56e0\u6b64\u5f52\u5e76\u6392\u5e8f\u7684\u6d41\u7a0b\u5c31\u662f\uff0c\u5982\u679c <code>N=1</code> \u90a3\u4e48\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u9700\u8981\u6392\u5e8f\uff0c\u7b54\u6848\u662f\u663e\u7136\u7684\uff1b\u5426\u5219\u9012\u5f52\u5730\u5c06\u524d\u534a\u90e8\u5206\u6570\u636e\u548c\u540e\u534a\u90e8\u5206\u6570\u636e\u5404\u81ea\u5f52\u5e76\u6392\u5e8f\uff0c\u5f97\u5230\u6392\u5e8f\u540e\u7684\u4e24\u90e8\u5206\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528\u521a\u521a\u63cf\u8ff0\u7684\u5408\u5e76\u64cd\u4f5c\u5c06\u8fd9\u4e24\u4e2a\u90e8\u5206\u5408\u5e76\u5230\u4e00\u8d77\u3002  </p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u9012\u5f52\u8c03\u7528 Merge \u90fd\u5c40\u90e8\u58f0\u660e\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\uff0c\u90a3\u4e48\u4efb\u610f\u65f6\u523b\u5c31\u4f1a\u6709 \\(\\log N\\) \u4e2a\u4e34\u65f6\u6570\u7ec4\u5904\u4e8e\u6d3b\u52a8\u671f\uff0c\u8fd9\u5bf9\u4e8e\u5c0f\u5185\u5b58\u7684\u673a\u5668\u662f\u81f4\u547d\u7684\u3002\u6ce8\u610f\u5230 Merge \u53ea\u5728\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u7684\u6700\u540e\u4e00\u884c\uff0c\u56e0\u6b64\u4efb\u4f55\u65f6\u523b\u53ea\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u6d3b\u52a8\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u7528\u8be5\u4e34\u65f6\u6570\u7ec4\u7684\u4efb\u610f\u90e8\u5206\uff0c\u8fd9\u6837\u8282\u7ea6\u4e86\u7a7a\u95f4\u3002</p> <pre><code>void MSort( ElementType A[ ], ElementType TmpArray[ ], \n        int Left, int Right ) \n{   int  Center; \n    if ( Left &lt; Right ) {  /* if there are elements to be sorted */\n    Center = ( Left + Right ) / 2; \n    MSort( A, TmpArray, Left, Center );     /* T( N / 2 ) */\n    MSort( A, TmpArray, Center + 1, Right );    /* T( N / 2 ) */\n    Merge( A, TmpArray, Left, Center + 1, Right );  /* O( N ) */\n    } \n} \n\nvoid Mergesort( ElementType A[ ], int N ) \n{   ElementType  *TmpArray;  /* need O(N) extra space */\n    TmpArray = malloc( N * sizeof( ElementType ) ); \n    if ( TmpArray != NULL ) { \n    MSort( A, TmpArray, 0, N - 1 ); \n    free( TmpArray ); \n    } \n    else  FatalError( \"No space for tmp array!!!\" ); \n}\n/* Lpos = start of left half, Rpos = start of right half */ \nvoid Merge( ElementType A[ ], ElementType TmpArray[ ], \n           int Lpos, int Rpos, int RightEnd ) \n{   int  i, LeftEnd, NumElements, TmpPos; \n    LeftEnd = Rpos - 1; \n    TmpPos = Lpos; \n    NumElements = RightEnd - Lpos + 1; \n    while( Lpos &lt;= LeftEnd &amp;&amp; Rpos &lt;= RightEnd ) /* main loop */ \n        if ( A[ Lpos ] &lt;= A[ Rpos ] ) \n    TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n        else \n    TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    while( Lpos &lt;= LeftEnd ) /* Copy rest of first half */ \n        TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n    while( Rpos &lt;= RightEnd ) /* Copy rest of second half */ \n        TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    for( i = 0; i &lt; NumElements; i++, RightEnd - - ) \n         /* Copy TmpArray back */ \n        A[ RightEnd ] = TmpArray[ RightEnd ]; \n}\n</code></pre> <ul> <li>\u8fd0\u884c\u65f6\u95f4\u5206\u6790  </li> </ul> \\[ \\begin{align*} T(1) &amp; = 1\\\\ T(N) &amp; = 2T(N/2)+O(N) \\\\     &amp; = 2^kT(N/2^k) + k*O(N)\\\\     &amp; = N *T(1) +\\log N *O(N)\\\\     &amp; = O(N+N\\log N) \\end{align*} \\] <p>\u6ce8\uff1aMergesort \u9700\u8981\u7ebf\u6027\u5916\u90e8\u5185\u5b58\uff0c\u590d\u5236\u6570\u7ec4\u7f13\u6162\uff0c\u56e0\u6b64\u4e0d\u9002\u5408\u7528\u4e8e\u5185\u90e8\u6392\u5e8f\uff0c\u4f46\u5bf9\u4e8e\u5916\u90e8\u6392\u5e8f\u662f\u6709\u7528\u7684\u3002</p>"},{"location":"ZJU_CS/FDS/sort/#_8","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5feb\u901f\u6392\u5e8f\u662f\u5728\u5b9e\u8df5\u4e2d\u5df2\u77e5\u7684\u6700\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u662f \\(O(N\\log N)\\) \u5feb\u901f\u6392\u5e8f\u7684\u7b97\u6cd5\u6d41\u7a0b\uff1a\uff08\u5c06\u6570\u7ec4 S \u6392\u5e8f\uff09</p> <ul> <li>\u5982\u679c S \u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u662f 0 \u6216\u8005 1 \u5219\u8fd4\u56de</li> <li>\u4ece S \u4e2d\u53d6\u4efb\u610f\u5143\u7d20\u4e3a\u4e3b\u5143</li> <li>\u5c06 \\(S-\\{v\\}\\) \u5206\u4e3a\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408 \\(S_1=\\{x\\in S-\\{v\\}|x\\leq v\\}, S_2=\\{x\\in S-\\{v\\}|x\\geq v\\}\\) </li> <li>\u8fd4\u56de \\(quicksort(S_1), v, quicksort(S_2)\\) </li> </ul> <p>\u5bf9\u4e8e\u4e0d\u540c\u4e3b\u5143\u7684\u9009\u53d6\uff0c\u5206\u5272\u7684\u63cf\u8ff0\u4e0d\u662f\u552f\u4e00\u7684\u3002</p>"},{"location":"ZJU_CS/FDS/sort/#_9","title":"\u9009\u53d6\u4e3b\u5143","text":"<ul> <li>\u9519\u8bef\u7684\u65b9\u6cd5 <code>Pivot=A[0]</code> \u8fd9\u6837\u5982\u679c\u8f93\u5165\u662f\u987a\u5e8f\u6216\u8005\u53cd\u5e8f\u7684\uff0c\u90a3\u4e48\u6bcf\u6b21\u5212\u5206\u6240\u6709\u5143\u7d20\u5168\u90e8\u843d\u5165 \\(S_1\\) \u6216\u8005 \\(S_2\\), \u9009\u53d6\u4e3b\u5143\u5e76\u6ca1\u6709\u5e26\u6765\u4efb\u4f55\u5e2e\u52a9\uff0c\u5b8c\u6210\u6392\u5e8f\u9700\u8981 \\(O(N^2)\\) \u7684\u65f6\u95f4\u3002  </li> <li>\u5b89\u5168\u505a\u6cd5 <code>Pivot = random select from A[]</code> \u4f46\u968f\u673a\u6570\u7684\u4ea7\u751f\u662f\u6602\u8d35\u7684  </li> <li>\u4e09\u6570\u4e2d\u503c\u5206\u5272\u6cd5 <code>Pivot = median(left, center, right)</code> \u4e00\u7ec4 N \u4e2a\u6570\u7684\u4e2d\u503c\u662f\u7b2c \\(\\lceil N/2 \\rceil\\) \u5927\u7684\u6570\uff0c\u4e3b\u5143\u6700\u597d\u662f\u9009\u62e9\u4e2d\u503c\uff0c\u4f46\u8fd9\u5f88\u96be\u7b97\u51fa\uff0c\u800c\u4e14\u4f1a\u660e\u663e\u51cf\u6162\u6392\u5e8f\u7684\u901f\u5ea6\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5de6\u7aef\u3001\u53f3\u7aef\u548c\u4e2d\u5fc3\u4f4d\u7f6e\u4e0a\u7684\u4e09\u4e2a\u5143\u7d20\u7684\u4e2d\u503c\u4f5c\u4e3a\u4e3b\u5143\u3002 \u8fd9\u6837\u6d88\u9664\u4e86\u9519\u8bef\u65b9\u6cd5\u4e2d\u7684\u6700\u574f\u60c5\u5f62\uff0c\u51cf\u5c11\u4e86\u5feb\u901f\u6392\u5e8f\u5927\u6982 5% \u7684\u8fd0\u884c\u65f6\u95f4\u3002  </li> </ul>"},{"location":"ZJU_CS/FDS/sort/#_10","title":"\u5212\u5206\u7b56\u7565","text":"<p>\u9996\u5148\u6211\u4eec\u5c06\u4e3b\u5143\u548c\u6700\u540e\u7684\u5143\u7d20\u4ea4\u6362\uff0c\u4f7f\u5f97\u4e3b\u5143\u79bb\u5f00\u5c06\u8981\u5206\u5272\u7684\u6570\u636e\u6bb5\uff0c\u968f\u540e i \u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0cj \u4ece\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u3002\uff08\u5047\u8bbe\u6240\u6709\u5143\u7d20\u4e92\u5f02\uff09  </p> <ul> <li>\u5f53 i \u5728 j \u7684\u5de6\u8fb9\u65f6\uff0c\u6211\u4eec\u5c06 i \u53f3\u79fb\uff0c\u79fb\u8fc7\u90a3\u4e9b\u5c0f\u4e8e\u4e3b\u5143\u7684\u5143\u7d20\uff0c\u5e76\u5c06 j \u5de6\u79fb\uff0c\u79fb\u8fc7\u90a3\u4e9b\u5927\u4e8e\u4e3b\u5143\u7684\u5143\u7d20\u3002</li> <li>\u5f53 i \u548c j \u505c\u6b62\u65f6\uff0ci \u6307\u5411\u4e00\u4e2a\u5927\u5143\u7d20\u800c j \u6307\u5411\u4e00\u4e2a\u5c0f\u5143\u7d20\uff0c\u5982\u679c i \u5728 j \u7684\u5de6\u8fb9\u90a3\u4e48\u5c06\u8fd9\u4e24\u4e2a\u5143\u7d20\u4e92\u6362\u3002</li> <li>\u76f4\u5230 i \u548c j \u5f7c\u6b64\u4ea4\u9519\u65f6\uff0c\u505c\u6b62\u4ea4\u6362</li> <li>\u5c06 i \u548c\u4e3b\u5143\u4ea4\u6362</li> </ul> <p>\u5bf9\u4e8e\u90a3\u4e9b\u7b49\u4e8e\u4e3b\u5143\u7684\u5173\u952e\u5b57\uff0c\u6211\u4eec\u91c7\u7528\u505c\u6b62 i j \u5e76\u4ea4\u6362\u7684\u7b56\u7565\u3002\u56e0\u4e3a\u82e5 i j \u4e0d\u505c\u6b62\uff0c\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u6240\u6709\u5173\u952e\u5b57\u90fd\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u6709\u7a0b\u5e8f\u9632\u6b62 i j \u8d85\u51fa\u6570\u7ec4\u7684\u754c\u9650\u3002\u6700\u540e\u6211\u4eec\u4f1a\u628a\u4e3b\u5143\u4ea4\u6362\u5230 i \u7684\u6700\u540e\u4f4d\u7f6e\u4e0a\uff0c\u4e5f\u5c31\u662f\u5012\u6570\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u53c8\u9677\u5165\u4e86\u6700\u574f\u60c5\u51b5\u3002</p>"},{"location":"ZJU_CS/FDS/sort/#_11","title":"\u5c0f\u6570\u7ec4","text":"<p>\u5bf9\u4e8e\u5f88\u5c0f\u7684\u6570\u7ec4(\\(N\\leq 20\\))\u5feb\u901f\u6392\u5e8f\u4e0d\u5982\u63d2\u5165\u6392\u5e8f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u622a\u6b62\u8303\u56f4 Cutoff(e.g. 10). \u5f53 N \u5c0f\u4e8e\u9608\u503c\u7684\u65f6\u5019\u91c7\u7528\u63d2\u5165\u6392\u5e8f.  </p>"},{"location":"ZJU_CS/FDS/sort/#_12","title":"\u5b9e\u73b0","text":"<pre><code>void  Quicksort( ElementType A[ ], int N ) \n{ \n    Qsort( A, 0, N - 1 ); \n    /* A:   the array   */\n    /* 0:   Left index  */\n    /* N \u2013 1: Right index   */\n}\n/* Return median of Left, Center, and Right */ \n/* Order these and hide the pivot */ \n\nElementType Median3( ElementType A[ ], int Left, int Right ) \n{ \n    int  Center = ( Left + Right ) / 2; \n    if ( A[ Left ] &gt; A[ Center ] ) \n        Swap( &amp;A[ Left ], &amp;A[ Center ] ); \n    if ( A[ Left ] &gt; A[ Right ] ) \n        Swap( &amp;A[ Left ], &amp;A[ Right ] ); \n    if ( A[ Center ] &gt; A[ Right ] ) \n        Swap( &amp;A[ Center ], &amp;A[ Right ] ); \n    /* Invariant: A[ Left ] &lt;= A[ Center ] &lt;= A[ Right ] */ \n    Swap( &amp;A[ Center ], &amp;A[ Right - 1 ] ); /* Hide pivot */ \n    /* only need to sort A[ Left + 1 ] \u2026 A[ Right \u2013 2 ] */\n    return  A[ Right - 1 ];  /* Return pivot */ \n}\nvoid  Qsort( ElementType A[ ], int Left, int Right ) \n{   int  i,  j; \n    ElementType  Pivot; \n    if ( Left + Cutoff &lt;= Right ) {  /* if the sequence is not too short */\n        Pivot = Median3( A, Left, Right );  /* select pivot */\n        i = Left;     j = Right \u2013 1;  /* why not set Left+1 and Right-2? */\n        for( ; ; ) { \n     while ( A[ + +i ] &lt; Pivot ) { }  /* scan from left */\n     while ( A[ \u2013 \u2013j ] &gt; Pivot ) { }  /* scan from right */\n     if ( i &lt; j ) \n        Swap( &amp;A[ i ], &amp;A[ j ] );  /* adjust partition */\n     else     break;  /* partition done */\n        } \n        Swap( &amp;A[ i ], &amp;A[ Right - 1 ] ); /* restore pivot */ \n        Qsort( A, Left, i - 1 );      /* recursively sort left part */\n        Qsort( A, i + 1, Right );   /* recursively sort right part */\n    }  /* end if - the sequence is long */\n    else /* do an insertion sort on the short subarray */ \n        InsertionSort( A + Left, Right - Left + 1 );\n}\n</code></pre> <ul> <li>\u5728\u6700\u5f00\u59cb\u9009\u53d6\u4e3b\u5143\u65f6\uff0c\u6211\u4eec\u5c06 <code>A[left],A[mid],A[Right]</code> \u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c06\u8f83\u5c0f\u503c\u653e\u5728\u4e86\u6700\u5de6\u8fb9\uff0c\u8f83\u5927\u503c\u653e\u5728\u4e86\u6700\u53f3\u8fb9\uff0c\u8fd9\u7b26\u5408\u5206\u5272\u7684\u8981\u6c42\u3002\u6b64\u5916\u7531\u4e8e <code>A[left]</code> \u6bd4\u4e3b\u5143\u5c0f\uff0c\u6211\u4eec\u4e0d\u7528\u62c5\u5fc3 j \u8d8a\u754c\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/sort/#_13","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\\(T(N)=T(i)+T(N-i-1+)+cN\\) \u5176\u4e2d \\(i=|S_1|\\) </p> <ul> <li>\u6700\u574f\u60c5\u5f62\uff1a\u4e3b\u5143\u59cb\u7ec8\u662f\u6700\u5c0f\u5143\u7d20\uff0c\u6b64\u65f6 \\(i=0\\) \u5219\u9012\u63a8\u5173\u7cfb\u4e3a \\(T(N)=T(N-1)+cN,N&gt;1\\) \u90a3\u4e48 \\(T(N)=T(1)+d\\sum\\limits_{i=2}^N i=O(N^2)\\) </li> <li>\u6700\u597d\u60c5\u5f62\uff1a\u4e3b\u5143\u6b63\u597d\u4f4d\u4e8e\u4e2d\u95f4 \\(T(N)=2T(N/2)+cN\\Rightarrow T(N)=O(N\\log N)\\) </li> <li>\u5e73\u5747\u60c5\u5f62\uff1a\\(T(N)=\\dfrac{2}{N}\\sum\\limits_{j=0}^{N-1}T(j)+cN\\Rightarrow T(N)=O(N\\log N)\\)</li> </ul>"},{"location":"ZJU_CS/FDS/sort/#_14","title":"\u5927\u578b\u7ed3\u6784\u7684\u6392\u5e8f","text":"<p>\u4ea4\u6362\u4e24\u4e2a\u5927\u578b\u7684\u7ed3\u6784\u53ef\u80fd\u662f\u975e\u5e38\u6602\u8d35\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8ba9\u8f93\u5165\u6570\u7ec4\u5305\u542b\u6307\u5411\u7ed3\u6784\u7684\u6307\u9488\uff0c\u901a\u8fc7\u6bd4\u8f83\u6307\u9488\u6307\u5411\u7684\u5173\u952e\u5b57\uff0c\u5fc5\u8981\u65f6\u4ea4\u6362\u6307\u9488\u6765\u8fdb\u884c\u6392\u5e8f\u3002</p>"},{"location":"ZJU_CS/FDS/sort/#_15","title":"\u6392\u5e8f\u7684\u4e00\u822c\u4e0b\u754c","text":"<p>\u53ea\u4f7f\u7528\u6bd4\u8f83\u7684\u4efb\u610f\u6392\u5e8f\u7b97\u6cd5\u6700\u574f\u60c5\u5f62\u4e0b\u90fd\u9700\u8981 \\(\\Omega(N\\log  N)\\) </p> <p>\u4f7f\u7528\u51b3\u7b56\u6811\u8bc1\u660e\uff1a\u5171 \\(N!\\) \u79cd\u6392\u5e8f\u53ef\u80fd\uff0c\u56e0\u6b64\u51b3\u7b56\u4e8c\u53c9\u6811\u6709 \\(N!\\) \u7247\u53f6\u5b50\uff0c\u5219\u6811\u7684\u6df1\u5ea6\u81f3\u5c11\u4e3a \\(\\log(N!)=\\Omega(N\\log N)\\) </p>"},{"location":"ZJU_CS/FDS/sort/#_16","title":"\u6876\u6392\u5e8f","text":"<p>\u82e5\u8f93\u5165\u6570\u636e \\(A_1,A_2,\\ldots,A_N\\) \u90fd\u5c0f\u4e8e \\(M\\), \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(M\\) \u7684 <code>Count</code> \u6570\u7ec4\uff0c\u521d\u59cb\u5316\u4e3a\u5168 0. \u4e8e\u662f <code>Count</code> \u6709 \\(M\\) \u4e2a\u6876\uff0c\u8bfb\u5165\u5230 \\(A_i\\) \u65f6 <code>Count[Ai]</code> \u81ea\u589e\u4e00\u3002\u6240\u6709\u6570\u636e\u8bfb\u5b8c\u540e\u626b\u63cf\u6570\u7ec4 <code>Count</code> \u6253\u5370\u6392\u5e8f\u540e\u7684\u8868\u3002  </p> <pre><code>{\n    initialize count[ ];\n    while (read in a student\u2019s record)\n        insert to list count[stdnt.grade];\n    for (i=0; i&lt;M; i++) {\n        if (count[i])\n            output list count[i];\n    }\n}\n</code></pre> <p>\\(O(M+N)\\)</p> <p>LSB MSB</p>"},{"location":"ZJU_CS/FDS/tree/","title":"\u6811","text":""},{"location":"ZJU_CS/FDS/tree/#_2","title":"\u9884\u5907\u77e5\u8bc6","text":""},{"location":"ZJU_CS/FDS/tree/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u6811\u662f\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u3002\u5f53\u96c6\u5408\u975e\u7a7a\u65f6\uff0c\u6811\u5305\u62ec<ul> <li>\u6839</li> <li>0 \u6216\u591a\u4e2a\u975e\u7a7a\u7684\u5b50\u6811 \\(T_1,T_2,\\ldots,T_k\\)\uff0c\u8fd9\u4e9b\u5b50\u6811\u4e2d\u6bcf\u4e00\u68f5\u5b50\u6811\u90fd\u88ab\u6765\u81ea\u6839 r \u7684\u4e00\u6761\u6709\u5411\u7684\u8fb9\u6240\u8fde\u63a5\u3002</li> </ul> </li> <li>\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6839\u53eb\u505a\u6839 r \u7684\u513f\u5b50\uff0c\u800c r \u662f\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6839\u7684\u7236\u4eb2\u3002</li> <li>\u4e00\u68f5\u6811\u662f \\(N\\) \u4e2a\u8282\u70b9\u548c \\(N-1\\) \u6761\u8fb9\u7684\u96c6\u5408\u3002</li> <li>\u6ca1\u6709\u513f\u5b50\u7684\u8282\u70b9\u79f0\u4e3a\u6811\u53f6</li> <li>\u5177\u6709\u76f8\u540c\u7236\u4eb2\u7684\u8282\u70b9\u79f0\u4e3a\u5144\u5f1f</li> <li>\u4e00\u4e2a\u70b9\u7684\u5ea6\uff0c\u662f\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u6570\u91cf</li> <li>\u4e00\u68f5\u6811\u7684\u5ea6\uff0c\u662f\u8fd9\u68f5\u6811\u91cc\u70b9\u7684\u5ea6\u6570\u7684\u6700\u5927\u503c\uff0c\u5373 \\(\\max\\limits_{node\\in tree}\\{deg(node)\\}\\) </li> <li>\u4ece\u8282\u70b9 \\(n_1\\) \u5230 \\(n_k\\) \u7684\u8def\u5f84\u5b9a\u4e49\u4e3a \\(n_1,n_2,\\ldots,n_k\\) \u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f7f\u5f97\u5bf9\u4e8e \\(1\\leq i &lt; k\\) \u8282\u70b9 \\(n_i\\) \u662f \\(n_{i+1}\\) \u7684\u7236\u4eb2\u3002\u8fd9\u6761\u8def\u5f84\u662f\u552f\u4e00\u7684\u3002</li> <li>\u8def\u5f84\u7684\u957f\u5ea6\u5c31\u662f\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u6570\u91cf</li> <li>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 \\(n_i\\), \\(n_i\\) \u7684\u6df1\u5ea6\u4e3a\u4ece\u6839\u5230 \\(n_i\\) \u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6\u3002</li> <li>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 \\(n_i\\), \\(n_i\\) \u7684\u9ad8\u5ea6\u4e3a\u4ece \\(n_i\\) \u5230\u4e00\u7247\u6811\u53f6\u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\u3002</li> <li>\u4e00\u68f5\u6811\u7684\u9ad8\u5ea6/\u6df1\u5ea6\uff1a\u6839\u7684\u9ad8\u5ea6</li> <li>\u5982\u679c\u5b58\u5728\u4ece \\(n_1\\) \u5230 \\(n_2\\) \u7684\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48 \\(n_1\\) \u662f \\(n_2\\) \u7684\u4e00\u4f4d\u7956\u5148\uff0c\u800c \\(n_2\\) \u662f \\(n_1\\) \u7684\u4e00\u4e2a\u540e\u88d4\uff0c\u5982\u679c \\(n_1\\neq n_2\\) \u79f0\u4e3a\u771f\u7956\u5148\u548c\u771f\u540e\u88d4\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/tree/#_4","title":"\u5b9e\u73b0","text":"<p>\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 FirstChild-NextSibling Representation, \u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u653e\u5728\u6811\u8282\u70b9\u7684\u94fe\u8868\u4e2d</p> <pre><code>typedef struct TreeNode *PrtToNode;\n\nstruct Tree Node {\n    ElementType Element;\n    PtrToNode FirstChild;\n    PtrToNode NextSibling;\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_5","title":"\u4e8c\u53c9\u6811","text":"<p>\u4e8c\u53c9\u6811\u662f\u4e00\u68f5\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u4e0d\u80fd\u591a\u4e8e\u4e24\u4e2a\u3002</p>"},{"location":"ZJU_CS/FDS/tree/#_6","title":"\u8868\u8fbe\u5f0f\u6811","text":"<p>\u8868\u8fbe\u5f0f\u6811\u7684\u6811\u53f6\u662f\u64cd\u4f5c\u6570\uff0c\u6bd4\u5982\u5e38\u6570\u6216\u53d8\u91cf\uff0c\u800c\u5176\u4ed6\u7684\u8282\u70b9\u4e3a\u64cd\u4f5c\u7b26\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u64cd\u4f5c\u7b26\u4e00\u822c\u662f\u4e8c\u5143\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\u5982\u679c\u6709\u5355\u76ee\u64cd\u4f5c\u7b26\uff0c\u90a3\u4e48\u8282\u70b9\u5c31\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u3002</p> Example <p>\\(A+B*C/D\\) \u8868\u793a\u5982\u4e0b\uff1a  </p>"},{"location":"ZJU_CS/FDS/tree/#_7","title":"\u6811\u7684\u904d\u5386","text":"<p>\u6811\u7684\u904d\u5386\u5373\u6bcf\u4e2a\u8282\u70b9\u8bbf\u95ee\u4e00\u6b21</p> <ul> <li>\u524d\u5e8f\u904d\u5386  </li> </ul> <pre><code>void  preorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        visit ( tree );\n        for (each child C of tree )\n            preorder ( C );\n    }\n}\n</code></pre> <ul> <li>\u540e\u5e8f\u904d\u5386  </li> </ul> <pre><code>void  postorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        for (each child C of tree )\n            postorder ( C );\n        visit ( tree );\n    }\n}\n</code></pre> <ul> <li>\u5c42\u5e8f\u904d\u5386  </li> </ul> <pre><code>void  levelorder ( tree_ptr  tree )\n{   enqueue ( tree );\n    while (queue is not empty) {\n        visit ( T = dequeue ( ) );\n        for (each child C of T )\n            enqueue ( C );\n    }\n}\n</code></pre> <ul> <li>\u4e2d\u5e8f\u904d\u5386  </li> </ul> <pre><code>void  inorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        inorder ( tree-&gt;Left );\n        visit ( tree-&gt;Element );\n        inorder ( tree-&gt;Right );\n   }\n}\n</code></pre> Example <p>  \u4e2d\u5e8f\u904d\u5386: \\(A+B*C/D\\)  \u524d\u5e8f\u904d\u5386: \\(+A/*BCD\\) * \u540e\u5e8f\u904d\u5386: \\(ABC*D/+\\)</p>"},{"location":"ZJU_CS/FDS/tree/#_8","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<p>\u89c4\u5219: </p> <ul> <li>\u5982\u679c <code>Tree-&gt;Left</code> \u4e3a\u7a7a\uff0c\u7528\u4e00\u4e2a\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u4e2d\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71\u7684\u6307\u9488\u4ee3\u66ff\u5b83</li> <li>\u5982\u679c <code>Tree-&gt;Right</code> \u4e3a\u7a7a\uff0c\u7528\u4e00\u4e2a\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u4e2d\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u7684\u6307\u9488\u4ee3\u66ff\u5b83 </li> <li>\u8fd9\u91cc\u6ca1\u6709\u7a7a\u95f2\u7684\u6307\u9488\uff0c\u56e0\u6b64\u4e00\u68f5\u7ebf\u7d22\u4e8c\u53c9\u6811\u9700\u8981\u6709\u4e00\u4e2a\u5de6\u513f\u5b50\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u5934\u8282\u70b9\u3002</li> </ul> <pre><code>typedef  struct  ThreadedTreeNode  *PtrTo  ThreadedNode;\ntypedef  struct  PtrToThreadedNode  ThreadedTree;\ntypedef  struct  ThreadedTreeNode {\n       int                  LeftThread;   /* if it is TRUE, then Left */\n       ThreadedTree     Left;      /* is a thread, not a child ptr.   */\n       ElementType  Element;\n       int                  RightThread; /* if it is TRUE, then Right */\n       ThreadedTree     Right;    /* is a thread, not a child ptr.   */\n}\n</code></pre> Example <p>  \u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u7ebf\u7d22\u4e8c\u53c9\u6811\u5982\u4e0b:   </p> <p>Note</p> <p>\u5728\u6811\u91cc\u9762\uff0c\u513f\u5b50\u7684\u6b21\u5e8f\u6ca1\u6709\u5f71\u54cd\u3002\u4f46\u5bf9\u4e8e\u4e8c\u53c9\u6811\u800c\u8a00\uff0c\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u5b8c\u5168\u4e8c\u53c9\u6811</p> <p>\u6240\u6709\u53f6\u8282\u70b9\u90fd\u4f4d\u4e8e\u76f8\u90bb\u7684\u4e24\u4e2a\u5c42\u4e0a</p>"},{"location":"ZJU_CS/FDS/tree/#_9","title":"\u4e8c\u53c9\u6811\u7684\u6027\u8d28","text":"<ul> <li>\u7b2c i \u5c42\u8282\u70b9\u4e2a\u6570\u6700\u591a\u4e3a \\(2^{i-1},i\\geq 1\\). \u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 \\(2^k-1\\) \u4e2a\u8282\u70b9\u3002</li> <li> <p>\u5bf9\u4e8e\u4efb\u4f55\u975e\u7a7a\u4e8c\u53c9\u6811\u90fd\u6709 \\(n_0=n_2+1\\). \u5176\u4e2d \\(n_0\\) \u662f\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\uff0c\\(n_2\\) \u662f\u5ea6\u6570\u4e3a 2 \u7684\u8282\u70b9\u4e2a\u6570\u3002</p> Proof <p>\u4ee4 \\(n_1\\) \u8868\u793a\u5ea6\u6570\u4e3a 1 \u7684\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u6709 \\(n=n_0+n_1+n_2\\). \u4ee4 \\(B\\) \u8868\u793a\u6240\u6709\u7684\u8fb9\uff0c\u90a3\u4e48 \\(B=n-1\\)\uff0c\u540c\u65f6\u53c8\u6709 \\(B=n_1+2n_2\\). \u8054\u7acb\u53ef\u5f97\u5230 \\(n_0=n_2+1\\).  </p> </li> </ul>"},{"location":"ZJU_CS/FDS/tree/#adt","title":"\u67e5\u627e\u6811ADT\u2014\u2014\u4e8c\u53c9\u67e5\u627e\u6811","text":""},{"location":"ZJU_CS/FDS/tree/#_10","title":"\u5b9a\u4e49","text":"<p>\u4e00\u68f5\u4e8c\u53c9\u67e5\u627e\u6811\u662f\u4e8c\u53c9\u7684\uff0c\u5982\u679c\u975e\u7a7a\uff0c\u90a3\u4e48\u6ee1\u8db3\u4e0b\u5217\u6027\u8d28:</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u662f\u5404\u4e0d\u76f8\u540c\u7684\u6574\u6570</li> <li>\u5982\u679c\u5de6\u5b50\u6811\u975e\u7a7a\uff0c\u90a3\u4e48\u5de6\u5b50\u6811\u6240\u6709\u5173\u952e\u5b57\u7684\u503c\u5fc5\u987b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u5173\u952e\u5b57</li> <li>\u5982\u679c\u53f3\u5b50\u6811\u975e\u7a7a\uff0c\u90a3\u4e48\u53f3\u5b50\u6811\u6240\u6709\u5173\u952e\u5b57\u7684\u503c\u5fc5\u987b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u5173\u952e\u5b57</li> <li>\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4ecd\u662f\u4e8c\u53c9\u67e5\u627e\u6811</li> </ul>"},{"location":"ZJU_CS/FDS/tree/#adt_1","title":"ADT \u6a21\u578b","text":"<ul> <li>\u5bf9\u8c61: \u4e00\u4e2a\u6709\u9650\u7684\u6709\u5e8f\u96c6</li> <li>\u64cd\u4f5c:<ul> <li>\u521d\u59cb\u5316</li> <li>\u67e5\u627e\u5173\u952e\u5b57</li> <li>\u67e5\u627e\u6700\u5927/\u6700\u5c0f\u7684\u5173\u952e\u5b57</li> <li>\u63d2\u5165\u5173\u952e\u5b57</li> <li>\u5220\u9664\u5173\u952e\u5b57</li> <li>\u68c0\u7d22\u4f4d\u7f6e</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/tree/#_11","title":"\u5b9e\u73b0","text":"<ul> <li>\u67e5\u627e\u5173\u952e\u5b57 \u8fd4\u56de\u6811 T \u4e2d\u5177\u6709\u5173\u952e\u5b57 X \u8282\u70b9\u7684\u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6811 T \u7684\u5de6\u5b50\u6811\u6216\u8005\u53f3\u5b50\u6811\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u67e5\u627e\u54ea\u4e2a\u5b50\u6811\u53d6\u51b3\u4e8e X \u4e0e\u5f53\u524d\u6839\u8282\u70b9\u5173\u952e\u5b57\u7684\u5927\u5c0f\u5173\u7cfb\u3002 \\(T(N)=S(N)=O(d)\\), \u8fd9\u91cc d \u662f\u6811\u7684\u6df1\u5ea6  </li> </ul> <pre><code>Position  Find( ElementType X,  SearchTree T ) \n{ \n      if ( T == NULL ) \n          return  NULL;  /* not found in an empty tree */\n      if ( X &lt; T-&gt;Element )  /* if smaller than root */\n          return  Find( X, T-&gt;Left );  /* search left subtree */\n      else \n          if ( X &gt; T-&gt;Element )  /* if larger than root */\n      return  Find( X, T-&gt;Right );  /* search right subtree */\n          else   /* if X == root */\n      return  T;  /* found */\n} \n</code></pre> <p>\u6ce8\u610f\u5230\u8fd9\u662f\u4e00\u4e2a\u5c3e\u9012\u5f52\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u4e3a\u8fed\u4ee3\u7248\u672c</p> <pre><code>Position  Iter_Find( ElementType X,  SearchTree T ) \n{ \n      /* iterative version of Find */\n      while  ( T )   {\n          if  ( X == T-&gt;Element )  \n    return T ;  /* found */\n          if  ( X &lt; T-&gt;Element )\n             T = T-&gt;Left ; /*move down along left path */\n          else\n    T = T-&gt; Right ; /* move down along right path */\n      }  /* end while-loop */\n      return  NULL ;   /* not found */\n} \n</code></pre> <ul> <li>\u67e5\u627e\u6700\u5c0f/\u6700\u5927\u5173\u952e\u5b57 \u67e5\u627e\u6700\u5c0f\u5143\u7d20\uff0c\u53ea\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u53ea\u8981\u6709\u5de6\u513f\u5b50\u5c31\u5411\u5de6\u8fdb\u884c\uff0c\u7ec8\u6b62\u70b9\u5c31\u662f\u6700\u5c0f\u7684\u5143\u7d20\u4e86\u3002\u67e5\u627e\u6700\u5927\u5143\u7d20\u7c7b\u4f3c\u3002 \\(T(N)=O(d)\\)</li> </ul> <pre><code>Position  FindMin( SearchTree T ) \n{ \n      if ( T == NULL )   \n          return  NULL; /* not found in an empty tree */\n      else \n          if ( T-&gt;Left == NULL )   return  T;  /* found left most */\n          else   return  FindMin( T-&gt;Left );   /* keep moving to left */\n} \nPosition  FindMax( SearchTree T ) \n{ \n      if ( T != NULL ) \n          while ( T-&gt;Right != NULL )   \n    T = T-&gt;Right;   /* keep moving to find right most */\n      return T;  /* return NULL or the right most */\n} \n</code></pre> <ul> <li>\u63d2\u5165 \u63d2\u5165\u53ef\u4ee5\u7528\u67e5\u627e\u7684\u601d\u8def\uff0c\u5982\u679c\u627e\u5230 X \u90a3\u4e48\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff08\u6216\u8005\u505a\u4e00\u4e9b\u66f4\u65b0\uff09\uff0c\u5426\u5219\u5c31\u5c06 X \u63d2\u5165\u5230\u904d\u5386\u8def\u5f84\u4e0a\u7684\u6700\u540e\u4e00\u70b9\u4e0a\u3002 \\(T(N)=O(d)\\) </li> </ul> <pre><code>SearchTree  Insert( ElementType X, SearchTree T ) \n{ \n    if ( T == NULL ) { /* Create and return a one-node tree */ \n    T = malloc( sizeof( struct TreeNode ) ); \n    if ( T == NULL ) \n       FatalError( \"Out of space!!!\" ); \n    else { \n       T-&gt;Element = X; \n       T-&gt;Left = T-&gt;Right = NULL; } \n      }  /* End creating a one-node tree */\n     else  /* If there is a tree */\n    if ( X &lt; T-&gt;Element ) \n       T-&gt;Left = Insert( X, T-&gt;Left ); \n    else \n       if ( X &gt; T-&gt;Element ) \n          T-&gt;Right = Insert( X, T-&gt;Right ); \n       /* Else X is in the tree already; we'll do nothing */ \n    return  T;   /* Do not forget this line!! */ \n}\n</code></pre> <ul> <li>\u5220\u9664 \u5982\u679c\u8981\u5220\u9664\u7684\u8282\u70b9\u662f\u6811\u53f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5220\u9664\uff0c\u5982\u679c\u8282\u70b9\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u53ef\u4ee5\u5728\u7236\u8282\u70b9\u8c03\u6574\u6307\u9488\u540e\u7ed5\u8fc7\u8be5\u8282\u70b9\u5e76\u5220\u9664\u3002 \u4f46\u5982\u679c\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u4e00\u822c\u7684\u5220\u9664\u7b56\u7565\u662f\u7528\u5176\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u5143\uff08\u6216\u8005\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u5143\uff09\u4ee3\u66ff\u8be5\u8282\u70b9\u7684\u6570\u636e\u5e76\u9012\u5f52\u5730\u5220\u9664\u90a3\u4e2a\u8282\u70b9\u3002 \\(T(N)=O(h)\\), \u5176\u4e2d h \u662f\u6811\u7684\u9ad8\u5ea6\u3002   </li> </ul> <pre><code>SearchTree  Delete( ElementType X, SearchTree T ) \n{    Position  TmpCell; \n      if ( T == NULL )   Error( \"Element not found\" ); \n      else  if ( X &lt; T-&gt;Element )  /* Go left */ \n        T-&gt;Left = Delete( X, T-&gt;Left ); \n               else  if ( X &gt; T-&gt;Element )  /* Go right */ \n               T-&gt;Right = Delete( X, T-&gt;Right ); \n             else  /* Found element to be deleted */ \n               if ( T-&gt;Left &amp;&amp; T-&gt;Right ) {  /* Two children */ \n                   /* Replace with smallest in right subtree */ \n                   TmpCell = FindMin( T-&gt;Right ); \n                   T-&gt;Element = TmpCell-&gt;Element; \n                   T-&gt;Right = Delete( T-&gt;Element, T-&gt;Right );  } /* End if */\n               else {  /* One or zero child */ \n                   TmpCell = T; \n                   if ( T-&gt;Left == NULL ) /* Also handles 0 child */ \n                 T = T-&gt;Right; \n                   else  if ( T-&gt;Right == NULL )  T = T-&gt;Left; \n                   free( TmpCell );  }  /* End else 1 or 0 child */\n      return  T; \n</code></pre> <p>Note</p> <p>\u5982\u679c\u8fd9\u91cc\u6ca1\u6709\u5f88\u591a\u5220\u9664\u64cd\u4f5c\uff0c\u901a\u5e38\u4f7f\u7528\u61d2\u60f0\u64cd\u4f5c\u7684\u7b56\u7565\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u88ab\u5220\u9664\u65f6\uff0c\u6211\u4eec\u4e0d\u5220\u9664\u5b83\uff0c\u505a\u4e00\u4e2a\u5220\u9664\u7684\u8bb0\u53f7\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u5728\u6709\u91cd\u590d\u5173\u952e\u5b57\u65f6\u53ef\u4ee5\u76f4\u63a5\u5728\u9891\u7387\u4e0a\u52a0\u51cf\u3002  </p>"},{"location":"ZJU_CS/FDS/tree/#_12","title":"\u5e73\u5747\u60c5\u5f62\u5206\u6790","text":"<p>Q. \u628a n \u4e2a\u5143\u7d20\u653e\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\uff0c\u8fd9\u68f5\u6811\u53ef\u4ee5\u6709\u591a\u9ad8\uff1f A. \u9ad8\u5ea6\u53d6\u51b3\u4e8e\u63d2\u5165\u7684\u987a\u5e8f\u3002\u6700\u574f\u53ef\u4ee5\u8fbe\u5230 \\(N\\)</p> Example <ul> <li>\u63d2\u5165\u987a\u5e8f 4, 2, 1, 3, 6, 5, 7 </li> </ul> <p> </p> <ul> <li>\u63d2\u5165\u987a\u5e8f 1, 2, 3, 4, 5, 6, 7</li> </ul> <p> </p> <p>Info</p> <p>\u5144\u5f1f: sibling \u64cd\u4f5c\u6570: operand \u524d\u5e8f\u904d\u5386: preorder traversal \u540e\u5e8f\u904d\u5386: postorder traversal \u5c42\u5e8f\u904d\u5386: levelorder traversal \u4e2d\u5e8f\u904d\u5386: inorder traversal \u7ebf\u7d22\u4e8c\u53c9\u6811: Threaded Binary Trees</p>"},{"location":"ZJU_CS/HPC/","title":"ZJUSCT","text":"<p>\u8fd9\u91cc\u662fZJUCS\u5927\u4e00\u6691\u5047\u77ed\u5b66\u671f\u8d85\u7b97\u8bfe\u7a0b\uff0c\u6211\u5c06\u4f1a\u628a\u6211\u7684\u7b14\u8bb0\u3001lab\u3001\u4ee5\u53ca\u5b66\u4e60\u8fc7\u7a0b\u8bb0\u5f55\u5728\u8fd9\u91cc\u3002</p>"},{"location":"ZJU_CS/HPC/AIPP/","title":"\u5e76\u884c\u8ba1\u7b97\u8bbe\u8ba1\u5bfc\u8bba","text":""},{"location":"ZJU_CS/HPC/AIPP/#chapter_2","title":"Chapter 2  \u5e76\u884c\u8ba1\u7b97\u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\u4ee5\u53ca\u786c\u4ef6","text":""},{"location":"ZJU_CS/HPC/AIPP/#chapter_3_mpi","title":"Chapter 3 \u7528MPI\u8fdb\u884c\u5206\u5e03\u5f0f\u5185\u5b58\u7f16\u7a0b","text":"<p>MPI is designed to work in a heterogeneous\uff08\u5f02\u6784\uff09 environment.</p> <p>fairly heavily\uff08\u76f8\u5f53\uff09dispatch\uff08\u5206\u53d1\uff0c\u8c03\u5ea6\uff09</p> <p>\u8ba1\u7b97\u673a\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a\uff1a\u5206\u5e03\u5f0f\u5185\u5b58\u7cfb\u7edf\u548c\u5171\u4eab\u5185\u5b58\u7cfb\u7edf\u3002\u672c\u7ae0\u4e3b\u8981\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u6d88\u606f\u4f20\u9012\u6765\u5bf9\u5206\u5e03\u5f0f\u5185\u5b58\u7cfb\u7edf\u8fdb\u884c\u7f16\u7a0b\u3002</p> <p>\u6ce8\uff1a\u672c\u7ae0\u5185\u5bb9\u53ef\u4ee5\u7ed3\u5408\u8bfe\u672c\u4ee5\u53ca<code>CMU 15-418 Recitation 6</code> \u5171\u540c\u5b66\u4e60\u3002\uff08Recitation 6 \u7684\u5185\u5bb9\u540e\u534a\u90e8\u5206\u662f\u4e00\u4e9b\u77e9\u9635\u4f18\u5316\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u4e0d\u60f3\u770b\u53ef\u4ee5\u4e0d\u770b\uff09</p>"},{"location":"ZJU_CS/HPC/AIPP/#hello_world","title":"\u7b2c\u4e00\u4e2a\u7c7b\u4f3c\u4e8eHello world \u7684\u7a0b\u5e8f","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;mpi.h&gt;\n\nconst int MAX_STRING = 100;\n\nint main (void){\n    char greeting[MAX_STRING];\n    int comm_sz;\n    int my_rank;\n\n    MPI_Init( NULL , NULL);\n    MPI_Comm_size( MPI_COMM_WORLD , &amp;comm_sz);\n    MPI_Comm_rank( MPI_COMM_WORLD, &amp;my_rank);\n\n    if (my_rank != 0) {\n        sprintf(greeting, \"Greetings from process %d of %d!\\n\", my_rank, comm_sz);\n        MPI_Send(greeting, strlen(greeting)+1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n    } else {\n        printf(\"Greetings from process %d of %d!\\n\", my_rank, comm_sz);\n        for(int i = 1; i &lt; comm_sz; i++)\n        {\n            MPI_Recv(greeting, MAX_STRING, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n            printf(\"%s\", greeting);\n        }\n    }\n\n    MPI_Finalize();\n    return 0;\n}\n</code></pre> <p>\u7528<code>mpicc -g -Wall -o hello hello.c</code>\u6765\u7f16\u8bd1</p> <p>\u7528<code>mpiexec -n 1 ./hello</code>\u6765\u8fd0\u884c</p>"},{"location":"ZJU_CS/HPC/AIPP/#mpi","title":"\u4e00\u70b9\u70b9MPI\u7a0b\u5e8f\u7684\u4ee3\u7801\u8981\u70b9","text":"<ol> <li>\u6bcf\u4e2a\u7a0b\u5e8f\u662f\u7531MPI_Init\u548cMPI_Finalize\u8fdb\u884c\u5fc5\u8981\u7684\u521d\u59cb\u5316\u548c\u7ed3\u675f\u3002\u4e0eMPI\u6709\u5173\u7684\u51fd\u6570\u90fd\u8981\u5728\u8fd9\u91cc\u9762\u8fdb\u884c\uff08\u5176\u4e2d\uff0cMPI_Init\u4f20\u5165\u7684\u662fargc\u548cargv\u7684\u6307\u9488\u3002</li> <li>\u901a\u4fe1\u5b50\uff08communicator\uff09\u3001MPI_Comm_size \u548c MPI_Comm_rank \uff08\u4e00\u822c\u6765\u8bf4\uff0ccomm_sz\u8868\u793a\u8fdb\u7a0b\u7684\u6570\u91cf\uff0cmy_rank\u8868\u793a\u8fdb\u7a0b\u53f7\uff09\uff08\u5e76\u4e14\u8981\u521d\u59cb\u5316\uff01\uff01\uff01\uff09</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#spmd","title":"SPMD\u7f16\u7a0b","text":"<p>Single Program and Multiple Data\uff1a\u6211\u4eec\u79f0\u4e3a\u5355\u7a0b\u5e8f\u591a\u6570\u636e\u3002\u7406\u8bba\u4e0a\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u7f16\u8bd1\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002\u4f46\u662f\u6211\u4eec\u5e38\u7528\u7684\u624b\u6bb5\u662f\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u4e0d\u540c\u7684\u8fdb\u7a0b\u53f7\u6765\u5206\u914d\u8fdb\u7a0b\u3002</p>"},{"location":"ZJU_CS/HPC/AIPP/#_2","title":"\u901a\u4fe1","text":"<p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5c06\u4fe1\u606f\u901a\u8fc7<code>printf &amp; sprintf</code>\u6765\u4f20\u9012\u3002\u901a\u8fc7MPI_Send\u6765\u53d1\u9001MPI_Recv\u6765\u63a5\u53d7\u3002</p> <p></p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662fsize\u8981\u52a0\u4e0a'\\0'\u3002Data type could make the program portable.</p> <p>\uff08\u8fd8\u6709\u4e24\u4e2a\u51fd\u6570\u662fMPI_Isend\u548cMPI_IRecv\uff09</p> <p></p> <p>\u6ce8\u610f\uff1a</p> <ol> <li> <p>\u6d88\u606f\u7684\u5927\u5c0f\u4e0d\u8981\u8d85\u8fc7\u6211\u4eec\u6240\u5206\u914d\u7684\u7f13\u51b2\u533a\u3002</p> </li> <li> <p><code>c    recv_comm = send_comm    recv_tag = send_tag    dest = r    src = q    \u4e14\u524d\u4e09\u4e2a\u4fe1\u606f\u517c\u5bb9</code></p> </li> </ol> <p>\u200b   \u8fd9\u610f\u5473\u7740q\u53f7\u8fdb\u7a0b\u7684\u4fe1\u606f\u53ef\u4ee5\u88abr\u53f7\u8fdb\u7a0b\u6536\u5230</p> <ol> <li>MPI\u4f7f\u7528\u7684\u662f\u201c\u63a8\u201d\u901a\u4fe1\u673a\u5236</li> <li>MPI\u6d88\u606f\u4e0d\u53ef\u8d85\u8d8a\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#_3","title":"\u6f5c\u5728\u7684\u4e00\u4e9b\u9677\u9631","text":"<ul> <li>\u6211\u4eec\u9700\u8981\u6bcf\u6761\u63a5\u53d7\u8bed\u53e5\u6709\u76f8\u5e94\u7684\u53d1\u9001\u8bed\u53e5\u5339\u914d\uff0c\u9632\u6b62\u8fdb\u7a0b\u60ac\u6302\u3002</li> </ul> <ul> <li> <p>also have a function <code>MPI_Probe</code>is like a mpi receive.</p> </li> <li> <p>unblocking IO \u4f1a\u4f7f\u7f16\u7a0b\u53d8\u590d\u6742\u3002</p> </li> </ul> <p></p>"},{"location":"ZJU_CS/HPC/AIPP/#io","title":"I/O\u5904\u7406","text":"<p>\u4e66\u4e2d\u4e3e\u7684\u4f8b\u5b50\u662f\u5e76\u884c\u79ef\u5206\u65b9\u6cd5\u3002</p> <p>\u5176\u4e2d\u7684\u4e00\u4e9b\u8981\u70b9\u5982\u4e0b\uff1a</p> <ol> <li>MPI\u5141\u8bb8\u591a\u4e2a\u8f93\u51fa\uff0c\u4f46\u8f93\u51fa\u7684\u987a\u5e8f\u5e76\u4e0d\u4e00\u5b9a\u8ddf<code>my_rank</code>\u6709\u5173\uff0c\u53ef\u80fd\u662f\u4e71\u5e8f\u7684\u3002</li> <li>\u4f46\u8f93\u5165\u7684\u8bdd\u6211\u4eec\u4e00\u822c\u53ea\u89c4\u5b9a0\u53f7\u8fdb\u7a0b\u8d1f\u8d23\u8bfb\u53d6\uff0c\u518d\u5c06\u4fe1\u606f\u5206\u53d1\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u3002</li> <li>\u96c6\u5408\u901a\u4fe1\uff08collective communication\uff09\uff0c\u53ef\u4ee5\u7528\u6765\u63d0\u9ad8\u6548\u7387\u3002\u4e66\u4e2d\u7684\u4e3e\u4f8b\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\u5f62\u7ed3\u6784\u6765\u901a\u4fe1</li> <li>MPI_Reduce\uff1a\u7528\u6765\u4f18\u5316\u5168\u5c40\u6c42\u548c\u51fd\u6570</li> </ol> <pre><code>double local_x[N], sum[N]\nMPI_Reduce(local _x, sum, N, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD)\n//\u524d\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u5730\u5740\u4f20\u53c2\n</code></pre> <p></p> <p>\u5c0f\u7ed3\uff1a\u6211\u4eec\u4e0d\u96be\u6ce8\u610f\u5230\u70b9\u5bf9\u70b9\u901a\u4fe1\u548c\u96c6\u5408\u901a\u4fe1\u7684\u4e0d\u540c\u3002\u4ed6\u4eec\u90fd\u6709\u4e9b\u7279\u70b9\uff1a\u5fc5\u987b\u6709\u5339\u914d\u7684\u96c6\u5408\u901a\u4fe1\u51fd\u6570\uff1b\u4f20\u9012\u7684\u53c2\u6570\u5fc5\u987b\u201c\u76f8\u5bb9\uff1f\u201d\uff1b\u5fe0\u544a\u5c31\u662f\u4e0d\u5efa\u8bae\u5c06\u540c\u4e00\u5757\u7f13\u51b2\u533a\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u540c\u65f6\u8c03\u7528\uff01</p>"},{"location":"ZJU_CS/HPC/AIPP/#_4","title":"\u5411\u91cf\u5904\u7406\u7684\u6280\u5de7","text":"<p>\u8fd9\u91cc\u4f1a\u6d89\u53ca\u5230CMU\u8bfe\u7a0b\u540e\u534a\u90e8\u5206\u4ee5\u53ca\u4e66\u4e0a\u7684\u4e00\u4e9b\u77e5\u8bc6\u70b9\uff1a</p> <ol> <li>\u6570\u636e\u5206\u53d1\uff1a\u5757\u5212\u5206\u3001\u5faa\u73af\u5212\u5206\u3001\u5757-\u5faa\u73af\u5212\u5206</li> <li>\u6563\u5c04:<code>MPI_Scatter</code>; \u805a\u96c6\uff1a<code>MPI_Gather</code>\uff1bMPI_ALLgather:\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u7684send_buf_p\u5185\u5bb9\u4e32\u8054\u8d77\u6765\u3002</li> <li>\u4e66\u4e2d\u6709\u77e9\u9635\u4e58\u6cd5\u548c\u52a0\u6cd5\u7684\u793a\u4f8b\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#mpi_1","title":"MPI\u6027\u80fd","text":"<ol> <li>\u8ba1\u65f6\uff1a<code>MPI_Wtime</code>\u7528double\u7c7b\u578b\u7684\u53d8\u91cf\u8bb0\u5f55\u8fd4\u56de\u503c\u53ca\u53ef\u3002</li> <li><code>MPI_Barrier</code>\u7528\u6765\u540c\u6b65\u8fdb\u7a0b\u3002\u5728\u540c\u4e00\u901a\u4fe1\u5b50\u7684\u6240\u6709\u8fdb\u7a0b\u8c03\u7528\u8be5\u51fd\u6570\u4e4b\u524d\u6240\u6709\u8c03\u7528MPI_Barrier \u7684\u8fdb\u7a0b\u90fd\u4e0d\u80fd\u8fd4\u56de\u3002</li> <li>\u6392\u5e8f\u7b97\u6cd5\u7684\u5e76\u884c\u4f18\u5316\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#chapter_5_openmp","title":"Chapter 5 \u7528OpenMP\u8fdb\u884c\u5171\u4eab\u5185\u5b58\u7f16\u7a0b","text":"<p>OpenMP\u4e2d\u7684MP\u4ee3\u8868\u7740\u201c\u591a\u5904\u7406\u201d\uff0c\u662f\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u5e76\u884c\u7f16\u7a0b\u540c\u4e00\u7684\u672f\u8bed\u3002</p>"},{"location":"ZJU_CS/HPC/class/","title":"note of class","text":"<p>\u8fd9\u91cc\u662f\u6d59\u6c5f\u5927\u5b66\u5927\u4e00\u8d85\u7b97\u77ed\u5b66\u671f\u7684\u8bfe\u5802\u7b14\u8bb0  </p>"},{"location":"ZJU_CS/HPC/class/#_1","title":"\u5173\u4e8e\u672c\u8bfe\u7684\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5927\u5bb6\u53ef\u4ee5\u5148\u50a8\u5907\u4e00\u4e9b\u6570\u903b\u548c\u796d\u7956\u7684\u77e5\u8bc6\u3002\u6bd4\u5982\u901a\u8fc7cs\u901f\u6210\u8bfe\uff0c\u4ee5\u53caDRAM\u6765\u8865\u5145\u4e00\u4e9b\u77e5\u8bc6\uff0c\u4fbf\u4e8e\u4f60\u7406\u89e3\u3002</p> <p>Table</p> Date Target 7\u67083\u65e5 \u4e00\u4e9b\u4e9b\u4ecb\u7ecd\u4e0e\u7f51\u7edc\u77e5\u8bc6 7\u67084\u65e5 \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u9ad8\u6027\u80fd\u8ba1\u7b97\u57fa\u7840 7\u67085\u65e5 \u9ad8\u6027\u80fd\u8ba1\u7b97\u65b9\u6cd5\u8bba\uff08HPC\uff09 7\u67086\u65e5 \u96c6\u7fa4\u8f6f\u786c\u4ef6\u53ca\u8fd0\u7ef4\u57fa\u7840"},{"location":"ZJU_CS/HPC/class/L1/","title":"7\u67084\u65e5 \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u9ad8\u6027\u80fd\u8ba1\u7b97\u57fa\u7840","text":""},{"location":"ZJU_CS/HPC/class/L1/#overview","title":"Overview","text":"<ul> <li>ISA and x86 Instructions</li> <li>Processor Architecture</li> <li>Memory Hierarchy</li> <li>Concurrency Basic</li> </ul>"},{"location":"ZJU_CS/HPC/class/L1/#prerequisite_checklist","title":"Prerequisite Checklist","text":"<ul> <li>Digital representation of values</li> <li>Memory &amp; Address</li> <li>C code</li> </ul>"},{"location":"ZJU_CS/HPC/class/L1/#isa_x86_instruction","title":"ISA &amp; x86 instruction","text":"<ol> <li>ISA: instruction ser architecture.</li> <li>Assembly Language</li> </ol>"},{"location":"ZJU_CS/HPC/class/L1/#processor_architecture","title":"Processor Architecture","text":"<ol> <li>Microarchitecture is implementation.(could make faster)</li> <li>thread\uff08\u7ebf\u7a0b\uff09</li> <li>fetch -&gt; Decode -&gt; Execute -&gt; Commit </li> <li>Data hazards: You haven't already written but the next process need to call the data.</li> <li>control hazard: parallel processing could make a fault.</li> <li>structure hazard : like fetch and execute could make conflict.</li> <li>SRAM &amp; DRAM\uff1aSRAM = cache\uff08\u9ad8\u7f13\u51b2\uff09.</li> </ol>"},{"location":"ZJU_CS/HPC/class/L1/#memory_layout","title":"Memory Layout","text":"<ol> <li>Stack: Runtime stack (8MB limit) local variables.</li> <li>Heap: Dynamically allocated as needed.</li> <li>Data: statically allocated data.</li> <li>virtual memory: OS utilizes virtual memory to isolate address space of different processes and provide each process the same linear address space(\u7ebf\u6027\u6620\u5c04\uff0c\u7c7b\u4f3c\u4e8e\u54c8\u5e0c)</li> <li>Translation Lookaside buffer\uff08TLB\uff09 -&gt; could accelerate the virtual memory and physical memory interactive.</li> <li>NVM: between SSD and SRAM.</li> <li>Cache Organization(valid bit; dirty bit ; Tag: check if matching)</li> <li>Cache usage : Read hit ; Read miss ; Write hit(write-back); Write miss(write-allocate)</li> <li>Multiple Cache Hierarchy\u3002\uff08L1 L2 L3)</li> <li>Processes vs. Threads.</li> </ol> <p>differences: Threads in one process share memory but processes not.</p> <pre><code>//\u5f53\u4e24\u4e2a\u7ebf\u7a0b\u4e00\u5757\u8fdb\u884c\u8fd9\u4e2a\u4ee3\u7801\u65f6\uff0c\u6700\u5c0f\u7684\u8ba1\u7b97\u7ed3\u679c\u662f2\uff0c\u601d\u8003\u4e3a\u4ec0\u4e48\uff1f\nfor(int i=1; i &lt; 10000; i++)\n{\n    counter++;\n}\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L1/#x86_microarchitecture","title":"x86 microarchitecture","text":""},{"location":"ZJU_CS/HPC/class/L2/","title":"7\u67085\u65e5 \u9ad8\u6027\u80fd\u8ba1\u7b97\u65b9\u6cd5\u8bba\uff08HPC\uff09","text":""},{"location":"ZJU_CS/HPC/class/L2/#overview","title":"Overview","text":"<ul> <li>Basic Theories for HPC</li> <li>Performance Analysis and Optimization Methodology</li> <li>Practical Optimization Strategies</li> <li>HPC Skill Tree</li> <li>How to Learn HPC/CS</li> </ul>"},{"location":"ZJU_CS/HPC/class/L2/#basic_theories_for_hpc","title":"Basic Theories for HPC","text":"<p>Factor affecting performance:</p> <ol> <li>Algorithms</li> <li>Models </li> <li>Software</li> <li>Hardware</li> <li>Physics</li> </ol> <p>Example: Large Matrix Multiplication(\u8be6\u60c5\u53ef\u770bAIPP\u4e2d\u7684MPI\u4f18\u5316\u548cBLAS\u77e9\u9635\u8ba1\u7b97\uff0cGPU\u901f\u5ea6\u4f1a\u6bd4CPU\u8dd1\u5f97\u5feb)</p>"},{"location":"ZJU_CS/HPC/class/L2/#performance_analysis_and_optimization_methodology","title":"Performance Analysis and Optimization Methodology","text":"<ol> <li>\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8ba1\u7b97\uff0c\u7f16\u8bd1\u5668\u4f1a\u6709\u4f18\u5316\uff08O2\u3001O3\uff09\u3002\u53ef\u4ee5\u901a\u8fc7IDA\u53cd\u7f16\u8bd1\u770b\u770b\u5b9e\u9645\u8fd0\u7b97\u7684\u4ee3\u7801\u3002</li> <li>Maximize performance\uff1a Speed\u3001Throughout\u3001Latency\uff08\u5ef6\u8fdf\uff09or Resource is limited\uff08quota\u914d\u989d\uff09</li> <li>black box  Dominant component</li> </ol> <p>Roofline Performance Mode:</p> <p>Arithmetic Intensity(AI) = FLOP's/Bytes (this could judge the performance of program)</p> <p>\u5c4b\u9876\u7ebf\u53ef\u4ee5\u5224\u65ad CPU \u548c\u7f13\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u6211\u4eec\u662f\u7684\u6700\u7ec8\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u5b83\u8fbe\u5230\u62d0\u70b9\uff01</p> <p>\u800c2020\u540e\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u6765\u8bad\u7ec3\u9ed1\u7bb1\u6d4b\u6574\u4f53\u6027\u80fd</p> <ol> <li>Amadal\u2019s law\uff08\u6c34\u6876\u6548\u5e94\uff0c\u8865\u5168\u6700\u77ed\u7684\uff09</li> <li>Methods \uff1a Analysis in math\uff1b Hardware simulator\uff1b Profile: sampling some usage of a resource; Trace: collecting highly detailed data about the execution of a system.</li> <li>General Optimization Pipeline</li> </ol>"},{"location":"ZJU_CS/HPC/class/L2/#practical_optimization_strategies","title":"Practical Optimization Strategies","text":"<ol> <li>Algorithm Optimization - Prefetch &amp; Prediction</li> <li>Caching \uff1astores results from previous executions ; Limited cache size.</li> <li>Lock - Free: Use atomic primitives(CAS Atomic_add)</li> </ol> <p>Negative example: GIL in Python</p> <ol> <li>Load Balancing(make or cores to work)</li> <li>Reduce Precision(\u7cbe\u5ea6)</li> <li>Reduce Branching(skip list or like binary tree of branch)</li> <li>Vectorization(High-level: vectorized computation graph ; Instruction-level: SIMD instructions)</li> </ol> <p>See in your lab2</p> <ol> <li>Optimize Memory Access Locality</li> </ol> <ul> <li>GEMM</li> <li>Blocking</li> <li>Loop Permutation(\u6392\u5217)</li> <li>Array Packing</li> </ul> <p>See in your lab3</p> <ol> <li>Instruction / Data Alignment</li> </ol> <p>eg: compiler could auto optimize.\uff08\u4f8b\u5982\u7ed3\u6784\u4f53\u4f1a\u5185\u5b58\u81ea\u52a8\u5bf9\u9f50\uff09</p>"},{"location":"ZJU_CS/HPC/class/L2/#discussion","title":"Discussion","text":"<ul> <li>Domain Specific Language </li> <li>Manual Optimization is indispensable</li> <li>Core Affinity\uff08\u4eb2\u548c\u529b\uff09\uff08NUMA non-uniform memory access\uff09</li> <li>Adapts general code to local machine</li> <li>Auto - learning eg. black-box method : TVM</li> <li>You can learn something about TPU and DPU and FPGA.</li> </ul>"},{"location":"ZJU_CS/HPC/class/L2/#hpc_skill_tree","title":"HPC skill tree","text":"<ul> <li>Linux:  \u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u77e5\u8bc6\u3001Linux\u57fa\u672c\u7ed3\u6784\u3001 Shell\u4f7f\u7528</li> <li>\u96c6\u7fa4\u8fd0\u7ef4\u548c\u7f51\u7edc\u7ba1\u7406\uff08\u5206\u5e03\u5f0f\uff09\uff1aNFS\uff1b</li> <li>\u534f\u4f5c\u5f00\u53d1\u4e0e\u7248\u672c\u63a7\u5236</li> <li>\u811a\u672c\u81ea\u52a8\u5316\uff08Linux shell \u6216\u8005 Python\uff09</li> <li>\u5e26\u4f9d\u8d56\u7a0b\u5e8f\u7684\u624b\u52a8\u7f16\u8bd1\u94fe\u63a5</li> <li>\u5e76\u884c\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u6d4b\u8bd5\u548c\u4f18\u5316</li> <li>\u529f\u8017\u63a7\u5236\u4e0e\u8c03\u53c2</li> </ul>"},{"location":"ZJU_CS/HPC/class/L2/#_1","title":"\u5982\u4f55\u5b66\u4e60","text":""},{"location":"ZJU_CS/HPC/class/L3/","title":"7\u67086\u65e5 \u96c6\u7fa4\u8f6f\u786c\u4ef6\u4ee5\u53ca\u8fd0\u7ef4\u57fa\u7840","text":"<ul> <li>7\u67086\u65e5 \u96c6\u7fa4\u8f6f\u786c\u4ef6\u4ee5\u53ca\u8fd0\u7ef4\u57fa\u7840<ul> <li>Linux\u57fa\u7840\u64cd\u4f5c</li> <li>\u96c6\u7fa4</li> <li>\u5e94\u7528\u548c\u529f\u8017</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/class/L3/#linux","title":"Linux\u57fa\u7840\u64cd\u4f5c","text":"<p>\u672c\u8bb2\u6709\u90e8\u5206\u5185\u5bb9\u6211\u653e\u5230/missing semester/Linux \u4e2d\u53bb\u4e86</p> <ol> <li> <p>\u5b66\u4e60\u5efa\u8bae\uff1aChatGPT \uff1b-- help\uff1b man</p> </li> <li> <p>Linux\u4f1a\u6709\u5f88\u591a\u53d1\u884c\u7248\uff0cUbuntu\u7b14\u8bb0\u5bb9\u6613\u4e0a\u624b\uff0c\u5927\u591a\u96c6\u7fa4\u4f7f\u7528\u7684\u662fDebian\u3002</p> </li> <li> <p>\u7528\u6237\u7ba1\u7406\uff1a<code>/etc/passwd</code>(\u7528\u6237\u540d\uff1a\u5bc6\u7801\u8868\u793a\uff1aUID\uff1aGID\u7ec4\u522b\uff1a\u63cf\u8ff0\u6027\u5185\u5bb9\uff1a\u4e3b\u76ee\u5f55\uff1a\u9ed8\u8ba4shell)</p> </li> </ol> <p>\u5bc6\u7801\u5728<code>/etc/shadow</code></p> <ol> <li> <p><code>passwd [user]</code>(\u96c6\u7fa4\u4e0b\u5982\u679c\u5f00\u4e86NIS\u5219\u8981\u7528<code>yppasswd</code>)</p> </li> <li> <p>\u6587\u4ef6\u7cfb\u7edf</p> </li> </ol> <p></p> <p>\u6ce8\uff1a/opt\u4e2d\u4f1a\u6709\u4e00\u4e9b\u53ef\u9009\u7684\u4e1c\u897f\uff1b/mnt\u4e00\u822c\u7528\u6765\u6302\u5728\u786c\u76d8</p> <ol> <li><code>lsblk</code>\u7528\u6765\u663e\u793a\u5206\u533a ; <code>df</code>\u53ef\u4ee5\u770b\u5230\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5</li> <li><code>mount</code>(need the su authority)</li> <li><code>umount -l(lazy) -f(forced)</code> </li> <li>git\u7684\u4f7f\u7528\uff01\uff01\uff01\uff08\u667a\u4e91\u8bfe\u580242\uff1a34\u5de6\u53f3\u5f00\u59cb\uff09\uff08\u53ef\u4ee5\u4e0b\u8f7dgit line\u63d2\u4ef6\uff09</li> <li><code>make &amp;&amp; make install</code></li> <li><code>ps</code>\u8fdb\u7a0b\u7ba1\u7406\uff0c<code>kill</code>\u6740\u6b7b\u8fdb\u7a0b\uff0c<code>htop</code>\u5728\u7ebf\u76d1\u7ba1</li> <li>\u7ec8\u7aef\u5206\u5757\uff1a<code>tmux</code></li> </ol> <pre><code>$ tmux new -s &lt;name&gt;\n\n# \u5206\u79bb\u5bf9\u8bdd\n$ tmux detach \n\u6216\u8005 ctrl+B \u518d\u6309 D\n# \u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\n$ tmux attach -t &lt;name&gt; \n# \u4f7f\u7528\u4f1a\u8bdd\u540d\u79f0\n$ tmux switch -t &lt;session-name&gt;\n# rename\n$ tmux rename-session -t 0 &lt;new-name&gt;\n\n\u62c6\u6210\u5de6\u53f3\u4e24\u8fb9\nctrl+B+%\n\u770b\u6240\u6709section\nctrl+S\n\n# \u5217\u51fa\u6240\u6709\u5feb\u6377\u952e\uff0c\u53ca\u5176\u5bf9\u5e94\u7684 Tmux \u547d\u4ee4\n$ tmux list-keys\n# \u5217\u51fa\u6240\u6709 Tmux \u547d\u4ee4\u53ca\u5176\u53c2\u6570\n$ tmux list-commands\n# \u5217\u51fa\u5f53\u524d\u6240\u6709 Tmux \u4f1a\u8bdd\u7684\u4fe1\u606f\n$ tmux info\n# \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u7684 Tmux \u914d\u7f6e\n$ tmux source-file ~/.tmux.conf\n</code></pre> <ol> <li>ctrl+B \u518d\u6309 '['\u5c31\u53ef\u4ee5\u4e0a\u4e0b\u6d3b\u52a8\u5149\u6807</li> <li>\u7f51\u7edc\uff1a\u4f1a\u6709\u7aef\u53e3</li> </ol> <pre><code>netstat -a   # \u5217\u51fa\u6240\u6709\u7aef\u53e3\nnetstat -pt  # \u663e\u793a\u6240\u6709PID\u548c\u8fdb\u7a0b\u7684\u540d\u5b57\niptables -L -n   # \u67e5\u770b\u7aef\u53e3\u662f\u5426\u5f00\u653e\n</code></pre> <p></p> <p>NAS00 \u8d77\u5230\u8df3\u677f\u673a\u7684\u4f5c\u7528</p> <ol> <li>\u4f20\u8f93\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7<code>scp</code>\u6216\u8005<code>xftp/xshell</code></li> </ol>"},{"location":"ZJU_CS/HPC/class/L3/#_1","title":"\u96c6\u7fa4","text":"<ol> <li>HPC\u96c6\u7fa4\uff0cnode\u8282\u70b9</li> <li>\u670d\u52a1\u5668\uff08\u4e3b\u6d41\u9ad8\u6027\u80fdNVlink AI\u670d\u52a1\u5668\uff1b\u5f00\u653e\u52a0\u901f\u751f\u6001OAM AI\u670d\u52a1\u5668\uff1b\u9ad8\u9002\u5e94\u6027PCLeAI\u670d\u52a1\u5668\uff09</li> <li>FLOPS\uff08\u6bcf\u79d2\u6d6e\u70b9\u8fd0\u7b97\u6b21\u6570\uff09\uff1b Latency\uff08\u5ef6\u8fdf\uff09\uff1b Bandwidth or throughout\uff08\u541e\u5410\u91cf\uff09</li> <li>PCLe(Peripheral Component Interconnect Express): \u9ad8\u901f\u4e32\u884c\u8ba1\u7b97\u673a\u6269\u5c55\u603b\u7ebf\u6807\u51c6</li> <li>\u5b58\u50a8\u534f\u8bae\uff1aSATA\uff1bNVMe</li> <li>M.2\u662f\u4e00\u79cd\u63a5\u53e3</li> <li>NVLinke\u670d\u52a1\u5668\u662fNVIDIA\u7684\u663e\u5361\u4ea4\u4e92\u7684\u901a\u4fe1\u534f\u8bae</li> <li>IPMI\uff08intelligentPlatform Management Interfere\uff09\u667a\u80fd\u5e73\u53f0\u7ba1\u7406\u63a5\u53e3</li> <li>BMC\u7f51\u7edc\u7ba1\u7406\u5e73\u53f0</li> <li>\u73af\u5883\u7ba1\u7406\u53ef\u4ee5\u770b\u770b\uff1aenvironment Module</li> <li>Slurm\u96c6\u7fa4\u7ba1\u7406\u548c\u4f18\u5316\u7528</li> </ol> <ol> <li>sbatch:\u7528\u4e8e\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u5230\u961f\u5217</li> <li>srun\uff1a\u76f4\u63a5\u518dSlurm\u96c6\u7fa4\u8fd0\u884c\u547d\u4ee4\u6216\u8005\u7a0b\u5e8f</li> <li>squeue\uff1a\u67e5\u770b\u5728\u961f\u5217\u4e2d\u7684\u4f5c\u4e1a</li> <li>sinfo\uff1a\u7528\u4e8e\u67e5\u770bSlurm\u7ba1\u7406\u7684\u8282\u70b9\u548c\u5206\u533a\u7684\u60c5\u51b5</li> <li>Scancel\uff1a\u7528\u4e8e\u53d6\u6d88\u5df2\u7ecf\u63d0\u4ea4\u7684\u4f5c\u4e1a</li> <li>Salloc\uff1a\u4ea4\u4e92\u5f0f\u4f5c\u4e1a\u8bf7\u6c42\u8d44\u6e90</li> </ol> <ol> <li>NVIDIA\u548cIntel\u90fd\u6709\u76f8\u5173HPC\u7684\u5957\u4ef6</li> </ol>"},{"location":"ZJU_CS/HPC/class/L3/#_2","title":"\u5e94\u7528\u548c\u529f\u8017","text":""},{"location":"ZJU_CS/HPC/class/L4/","title":"7\u67088\u65e5 \u5411\u91cf\u5316\u5e76\u884c\u8ba1\u7b97\u57fa\u7840","text":"<ul> <li> <p>python\u3001numpy \u3001\u5411\u91cf\u5316\u8ba1\u7b97\u2026\u2026</p> </li> <li> <p>\u5411\u91cf\u5316\u8ba1\u7b97\u662f\u4ec0\u4e48\uff1f</p> </li> <li> <p>Array Programming \u5bf9\u6570\u7ec4\u76f4\u63a5\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c</p> </li> <li>Automatic/Manual vectorization</li> </ul>"},{"location":"ZJU_CS/HPC/class/L4/#what_is_array_programming","title":"What is array programming","text":"<ol> <li>c\u8bed\u8a00\u5b8c\u6210\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u662f\u4ece\u57fa\u672c\u4e58\u6cd5\u4e00\u4e2a\u4e2a\u89c4\u5b9a\u5143\u7d20\u7684\u8ba1\u7b97\u3002</li> </ol> <p>\u5b9e\u73b0\u6548\u7387\u4f4e\uff1b\u4ee3\u7801\u8026\u5408\uff1b\u4ee3\u7801\u590d\u7528\u56f0\u96be</p> <ol> <li>\u9ad8\u5c42\u6b21\u5411\u91cf\u5316\u7684\u6838\u5fc3\uff1a\u8ba1\u7b97\u8bed\u610f\u4e0e\u8c03\u5ea6\u5206\u79bb\u3002</li> </ol> <ol> <li>\u7f16\u5199\u7a0b\u5e8f\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u8ba1\u7b97\u8bed\u4e49\u672c\u8eab\uff0c\u4e0d\u9700\u8981\u5206\u5fc3\u5982\u4f55\u9ad8\u6548\u5b9e\u73b0\u7b97\u5b50</li> <li>\u7075\u6d3b\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u63d0\u4f9b\u7684\u9ad8\u6027\u80fd\u5b9e\u73b0\u5927\u5e45\u8282\u7ea6\u5f00\u53d1\u6210\u672c</li> <li>\u4ee3\u7801\u5177\u6709\u66f4\u9ad8\u7684\u53ef\u79fb\u690d\u6027\uff0c\u540c\u4e00\u4efd\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u540e\u7aef\u5b9e\u73b0\u52a0\u901f</li> </ol> graph LR a[Numpy API] --&gt; b[Numpy] a --&gt; c[Jax Numpy] a --&gt; d[Cupy]"},{"location":"ZJU_CS/HPC/class/L4/#numpy","title":"Numpy","text":"<p>NumPy \u662f Python \u4e2d\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002\u5b83\u662f\u4e00\u4e2a Python \u5e93\uff0c\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5404\u79cd\u6d3e\u751f\u5bf9\u8c61\uff08\u5982\u63a9\u7801\u6570\u7ec4\u548c\u77e9\u9635\uff09\uff0c\u4ee5\u53ca\u7528\u4e8e\u6570\u7ec4\u5feb\u901f\u64cd\u4f5c\u7684\u5404\u79cd API\uff0c\u6709\u5305\u62ec\u6570\u5b66\u3001\u903b\u8f91\u3001\u5f62\u72b6\u64cd\u4f5c\u3001\u6392\u5e8f\u3001\u9009\u62e9\u3001\u8f93\u5165\u8f93\u51fa\u3001\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u3001\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\uff0c\u57fa\u672c\u7edf\u8ba1\u8fd0\u7b97\u548c\u968f\u673a\u6a21\u62df\u7b49\u7b49\u3002</p> <p>Numpy \u4ee3\u7801\u4e00\u822c\u91c7\u7528\u5411\u91cf\u5316\uff08\u77e2\u91cf\u5316\uff09\u63cf\u8ff0\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u4e2d\u6ca1\u6709\u4efb\u4f55\u663e\u5f0f\u7684\u5faa\u73af\uff0c\u7d22\u5f15\u7b49\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6709\u4ee5\u4e0b\u597d\u5904\uff1a</p> <ul> <li>\u5411\u91cf\u5316\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u4e8e\u9605\u8bfb</li> <li>\u66f4\u5c11\u7684\u4ee3\u7801\u884c\u901a\u5e38\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef</li> <li>\u4ee3\u7801\u66f4\u63a5\u8fd1\u4e8e\u6807\u51c6\u7684\u6570\u5b66\u7b26\u53f7</li> </ul> <p>\u53e6\u5916\uff0c\u5411\u91cf\u5316\u7684\u4ee3\u7801\u80fd\u591f\u89c4\u907f\u6389 Python \u4e2d\u7f13\u6162\u7684\u8fed\u4ee3\u5faa\u73af\uff0c\u88ab\u5e95\u5c42\u7684\u5b9e\u73b0\u66f4\u597d\u7684\u8c03\u5ea6\uff0c\u5982\u63a5\u5165 BLAS \u77e9\u9635\u8fd0\u7b97\u5e93\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002</p>"},{"location":"ZJU_CS/HPC/class/L4/#numpy_api","title":"NumPy API","text":"<p>\u7531\u4e8e\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 NumPy \u7684\u6587\u6863\uff08\u771f\u7684\u4e00\u5b9a\u4e00\u5b9a\u8981\u597d\u597d\u67e5\u6587\u6863\uff0c\u5f88\u591a\u4eba\u53ef\u80fd\u4f1a\u8bf4\u901f\u901a\u600e\u4e48\u6837\uff0c\u4f46\u6211\u89c9\u5f97\u8fd8\u662f\u8981\u6253\u597dpython\u7684\u57fa\u7840\u3002\uff09</p>"},{"location":"ZJU_CS/HPC/class/L4/#_1","title":"\u53ef\u80fd\u7684\u8c03\u5ea6\u4f18\u5316","text":"<p>\u5e76\u884c\uff1a\u591a\u4e2a\u6838\u5fc3\u4e00\u8d77\u8ba1\u7b97</p> <p>SIMD\uff1a\u4f7f\u7528\u5904\u7406\u5668\u7684SIMD\u6307\u4ee4\u52a0\u901f</p> <p>Trade Off \u662f\u95e8\u827a\u672f\uff01\uff01\uff01</p>"},{"location":"ZJU_CS/HPC/class/L4/#numpy_1","title":"NumPy\u4f7f\u7528","text":"<p>\uff08ps\uff1a\u8fd9\u91cc\u63a8\u8350\u4e00\u4e2ab\u7ad9up\u4e3b\u201c\u5947\u4e50\u7f16\u7a0b\u5b66\u9662\u201d\uff0c\u4ed6\u7684\u89c6\u9891\u7684\u51dd\u805a\u5ea6\u5f88\u9ad8\uff0c\u9002\u5408\u901f\u901a\uff09</p> <pre><code>import numpy as np\n&gt;&gt;&gt; a = np.zeros((3,2)) # initialize the matrix\n&gt;&gt;&gt; a.shape # got the size\n(3,2)\n\n&gt;&gt;&gt; a = np.ones((2,4))\na = array([[1,1,1,1],\n           [1,1,1,1]])\n\n&gt;&gt;&gt; np.arange(3,7)\narray([3, 4, 5, 6])\n\n# random elements\n&gt;&gt;&gt; np.random.rand(2,4)\narray([[0.26649161, 0.92231931, 0.9729259 , 0.4400486 ],\n       [0.80943781, 0.53395907, 0.16488674, 0.33438204]])\n\n&gt;&gt;&gt; np.linspace(0,1,5) # notice the spell\narray([0.  , 0.25, 0.5 , 0.75, 1.  ])\n\n# numpy\u4e2d\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u662f64\u4f4d\u6d6e\u70b9\u6570\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u6307\u5b9a\uff0c\u5982\u4e0b\uff1a\n&gt;&gt;&gt; a = np.zeros((4,2), dtype = np.int32)\n\n&gt;&gt;&gt; a\narray([[0., 0.],\n       [0., 0.],\n       [0., 0.],\n       [0., 0.]])\n&gt;&gt;&gt; a.dtype\ndtype('float64')\n&gt;&gt;&gt; a = a.astype(int)\n&gt;&gt;&gt; a.dtype\ndtype('int64')\n\n# \u4e24\u4e2a\u76f8\u540c\u4f4d\u7f6e\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u56db\u5219\u8fd0\u7b97\u3002\u5b83\u4f1a\u5c06\u6570\u7ec4\u540c\u4f4d\u7f6e\u7684\u5143\u7d20\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\n# \u70b9\u4e58\u662f\u4f7f\u7528dot\u51fd\u6570\n# @\u662f\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\n&gt;&gt;&gt;a = np.array([1,2,3])\n&gt;&gt;&gt;b = np.array([4,5,6])\n&gt;&gt;&gt;np.dot(a,b)\n32\n\n#\u6c42\u5e73\u65b9\u6839/sin/cos/log/power\n&gt;&gt;&gt; a\narray([1, 2, 3])\n&gt;&gt;&gt; np.sqrt(a)\narray([1.        , 1.41421356, 1.73205081])\n&gt;&gt;&gt; np.sin(a)\narray([0.84147098, 0.90929743, 0.14112001])\n\n# \u5e7f\u64ad\n&gt;&gt;&gt; a\narray([1, 2, 3])\n&gt;&gt;&gt; a*5\narray([ 5, 10, 15])\n&gt;&gt;&gt; b\narray([[1],\n       [2],\n       [3]])\n&gt;&gt;&gt; a+b\narray([[2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n\n# min \u6216\u8005 max\uff0c\u8fd4\u56de\u6570\u7ec4\u6700\u5c0f\u6216\u6700\u5927\n# argmin \u6216\u8005 argmax\u4f1a\u8fd4\u56de\u6700\u5c0f\u6216\u6700\u5927\u7684\u7d22\u5f15\n# sum\u4f1a\u8fd4\u56de\u6240\u6709\u6570\u636e\u7684\u603b\u548c\n# mean\u6216\u8005median\u4f1a\u8fd4\u56de\u6570\u636e\u7684\u5e73\u5747\u503c\n# var\u662f\u65b9\u5dee\uff0cstd\u662f\u6807\u51c6\u65b9\u5dee\u7b49\n# \u4ee5\u4e0a\u53ef\u4ee5\u6307\u5b9aaxis\uff0caxis=0\u4ee3\u8868\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u884c\uff0c=1\u4ee3\u8868\u5217\n&gt;&gt;&gt; c\narray([[2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n&gt;&gt;&gt; c.sum(axis=0)\narray([ 9, 12, 15])\n&gt;&gt;&gt; c.min(axis=0)\narray([2, 3, 4])\n&gt;&gt;&gt; c.mean(axis=0)\narray([3., 4., 5.])\n&gt;&gt;&gt; c.var(axis=0)\narray([0.66666667, 0.66666667, 0.66666667])\n\n# \u4e0epython list\u76f8\u540c\uff0c\u53ef\u4ee5\u6709\u8bb8\u591a\u65b0\u5947\u7684\u64cd\u4f5c\u5982\u4e0b\n&gt;&gt;&gt; c\narray([[2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n&gt;&gt;&gt; c[0,1]\n3\n# \u6ce8\u610f\uff1a\u4e0ec\u4e0d\u540c\uff0c\u4e0e\u548c\u6216\u53ea\u6253\u4e00\u4e2a\u7b26\u53f7\n&gt;&gt;&gt; c[(c&gt;3) &amp; (c%2 == 0)]\narray([4, 4, 4, 6])\n&gt;&gt;&gt; c[0,0:2]\narray([2, 3])\n&gt;&gt;&gt; a[0:] || a[0]\narray([1, 2, 3])\n&gt;&gt;&gt; a[0:3:2]\narray([1, 3])\n&gt;&gt;&gt; a[::-1]\narray([3, 2, 1])\n</code></pre> <p>\u66f4\u6df1\u5165\u7684\u5b66\u4e60\u53ef\u4ee5\u53c2\u52a0From python to numpy</p>"},{"location":"ZJU_CS/HPC/class/L4/#_2","title":"\u4f7f\u7528\u6280\u5de7","text":"<ul> <li>\u5411\u91cf\u5316\u9664\u4e86\u5355\u4e2a\u7b97\u5b50\u5185\u90e8\u7684\u8c03\u5ea6\u4f18\u5316\u5916\uff0c\u53ef\u4ee5\u4e0d\u4e00\u4e2a\u7b97\u5b50\u4e00\u4e2a\u7b97\u5b50\u7684\u6267\u884c\uff0c\u6240\u6709\u9700\u8981\u6267\u884c\u7684\u7b97\u5b50\u53ef\u4ee5\u6784\u6210\u8ba1\u7b97\u56fe</li> <li>\u5728\u8ba1\u7b97\u56fe\u4e0a\u7684\u8c03\u5ea6\u4f18\u5316\u4e0d\u518d\u5c40\u9650\u4e8e\u7b97\u5b50\u5185\u90e8\uff0c\u800c\u53ef\u4ee5\u8de8\u7b97\u5b50\u6d88\u9664\u5197\u4f59\uff0c\u589e\u5f3a\u7f13\u5b58\u53cb\u597d\u578b\u51cf\u5c11\u8bbf\u5b58\uff0c\u5e76\u884c\u6267\u884c\u591a\u4e2a\u7b97\u5b50\u7b49\u7b49\u66f4\u7075\u6d3b\u7684\u4f18\u5316\u3002</li> </ul>"},{"location":"ZJU_CS/HPC/class/L4/#automaticmanual_vectorization","title":"Automatic/Manual vectorization","text":""},{"location":"ZJU_CS/HPC/class/L4/#automatic_vectorization","title":"Automatic vectorization","text":"<p>\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8bc6\u522b\u5e76\u5c06\u4f60\u7684\u4ee3\u7801\u5411\u91cf\u5316</p> <p>Single Instruction Multiple Data. Generally speaking, SIMD is combined with SSE and AVX.</p>"},{"location":"ZJU_CS/HPC/class/L5/","title":"7\u67089\u65e5 GPU (Graphic Processing Unit)","text":"<p>\u672c\u8282\u8bfe\u4e3b\u8981\u7531\u5219\u53ef\u8001\u5e08\u8fdb\u884c\u4e00\u4e2a\u5f15\u5bfc\uff0c\u4e4b\u540e\u4fbf\u662f\u901a\u8fc7\u5b98\u7f51\u5bf9CUDA\u7684\u5b66\u4e60\uff0c\u4ee5\u53cappt\u4e0a\u6709\u4e00\u4e9b\u6ca1\u8bb2\u5230\u7684\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003\u5b66\u4e60\u3002\u5f53\u7136\u6211\u4e5f\u5efa\u8bae\u5927\u5bb6\u53ef\u4ee5\u53bb\u770bCMU 15-418.\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u77e5\u8bc6\u4e0a\u7684\u8865\u5145\u3002\uff08\u8fd9\u91cc\u5219\u53ef\u8001\u5e08\u5bf9\u6574\u4e2a\u8ba1\u7b97\u673a\u786c\u4ef6\u6709\u4e00\u5f20\u975e\u5e38\u597d\u7684\u6846\u67b6\u56fe\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/class/L5/#why_gpu","title":"Why GPU","text":"<ol> <li> <p>\u7b97\u529b\u7684\u9700\u6c42</p> </li> <li> <p>Von Neumann Model has two key properties:</p> </li> </ol> <ol> <li>Stored program (Instruction stored in a linear memory array; the interpretation of a stored  )</li> <li>Sequential instruction processing(fixed output; one instruction processed at a time; )</li> </ol> <ol> <li>Each instruction takes a single clock cycle to execute.</li> </ol> <p>AS: Architecture state</p> <ol> <li>Multi-Cycle Microarchitecture</li> </ol> <p>\u5355\u5468\u671f\uff0c\u4e2d\u95f4\u6267\u884c\u591a\u4e2a\u547d\u4ee4\u7684\u72b6\u6001</p> <ol> <li>Pipeline CPU</li> <li>GPU\u4f1a\u66f4\u504f\u5411\u8dd1\u5e76\u884c\u7684\u3002</li> <li>distinguish between Programming Model and Executing Model\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/class/L5/#cuda","title":"CUDA\u67b6\u6784\u4ee5\u53ca\u57fa\u7840\u77e5\u8bc6","text":"<p>\u82f1\u4f1f\u8fbe\u6709\u81ea\u5df1\u7684GPU\u67b6\u6784\u4ee5\u53ca\u7f16\u7a0b\u8bed\u8a00\u3002</p> <p></p> <p></p> <p>\u4ee5\u4e0a\u4e24\u4e2a\u56fe\u7247\u89e3\u91ca\u4e86GPU\u7684\u7ed3\u6784\u8bbe\u8ba1\u3002\uff08Global Memory and shared memory\uff09\uff08Kernel\u3001 threads\u3001 block\u3001 grid \u3001 warp\u7b49\u6982\u5ff5\u8981\u6e05\u6670\uff09</p> <p></p> <p>SM is a division of a block created within the sm to assign the work.</p> <p></p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u793a\u4f8b\u7684GPU\u5411\u91cf\u8ba1\u7b97\u7684\u4f8b\u5b50\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u3002\uff08\u5c24\u5176\u662f\u4ece\u67b6\u6784\u7684\u89d2\u5ea6\u51fa\u53d1\u7406\u89e3\u7b97\u6cd5\u8bbe\u8ba1\u5c24\u5176\u662f\u201c\u6d41\u201d\u7684\u4f7f\u7528\u3002\uff09</p> <p></p> <p>\u4e00\u4e9b\u7f16\u7a0b\u5efa\u8bae\u5982\u4e0b\uff1a</p> <p></p> <p>\u9605\u8bfb\u5b8c\u4ee5\u4e0a\u57fa\u672c\u5185\u5bb9\uff0c\u6b64\u540e\u4fbf\u5f00\u59cbCUDA\u8bed\u6cd5\u7684\u4ecb\u7ecd\u4e86\uff01\uff01\uff01</p>"},{"location":"ZJU_CS/HPC/class/L5/#gpu","title":"GPU \u51fd\u6570\u7684\u7528\u6cd5\u4ee5\u53ca\u540c\u6b65","text":"<pre><code>//'__global__' before GPU function\nvoid CPUFunction()\n{\n  printf(\"This function is defined to run on the CPU.\\n\");\n}\n\n__global__ void GPUFunction()\n{\n  printf(\"This function is defined to run on the GPU.\\n\");\n}\n\nint main()\n{\n  CPUFunction();\n\n  GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;(); // &lt;&lt;&lt;m,n&gt;&gt;&gt; m is the number of blocks,n is the num of threads in one block\n  cudaDeviceSynchronize(); //\u540c\u6b65\n}\n</code></pre> <pre><code>//CUDA \u6838\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u80fd\u591f\u8bc6\u522b\u5982\u4e0b\u4e24\u79cd\u7d22\u5f15\u7684\u7279\u6b8a\u53d8\u91cf\uff1a\u6b63\u5728\u6267\u884c\u6838\u51fd\u6570\u7684\u7ebf\u7a0b\uff08\u4f4d\u4e8e\u7ebf\u7a0b\u5757\u5185\uff09\u7d22\u5f15\u548c\u7ebf\u7a0b\u6240\u5728\u7684\u7ebf\u7a0b\u5757\uff08\u4f4d\u4e8e\u7f51\u683c\u5185\uff09\u7d22\u5f15\u3002\u8fd9\u4e24\u79cd\u53d8\u91cf\u5206\u522b\u4e3a threadIdx.x \u548c blockIdx.x\n\n// Note the address of `a` is passed as first argument.\ncudaMallocManaged(&amp;a, size);\n// Use `a` on the CPU and/or on any GPU in the accelerated system.\ncudaFree(a);\n</code></pre> <pre><code>//\u5904\u7406\u5757\u914d\u5236\u4e0e\u6240\u9700\u7ebf\u7a0b\u6570\u4e0d\u5339\u914d\n// Assume `N` is known\nint N = 100000;\n\n// Assume we have a desire to set `threads_per_block` exactly to `256`\nsize_t threads_per_block = 256;\n\n// Ensure there are at least `N` threads in the grid, but only 1 block's worth extra\nsize_t number_of_blocks = (N + threads_per_block - 1) / threads_per_block;\n\nsome_kernel&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;(N);\n</code></pre> <pre><code>//CUDA \u63d0\u4f9b\u4e00\u4e2a\u53ef\u7ed9\u51fa\u7f51\u683c\u4e2d\u7ebf\u7a0b\u5757\u6570\u7684\u7279\u6b8a\u53d8\u91cf\uff1agridDim.x\u3002\u7136\u540e\u8ba1\u7b97\u7f51\u683c\u4e2d\u7684\u603b\u7ebf\u7a0b\u6570\uff0c\u5373\u7f51\u683c\u4e2d\u7684\u7ebf\u7a0b\u5757\u6570\u4e58\u4ee5\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u6570\uff1agridDim.x * blockDim.x\u3002\u5e26\u7740\u8fd9\u6837\u7684\u60f3\u6cd5\u6765\u770b\u770b\u4ee5\u4e0b\u6838\u51fd\u6570\u4e2d\u7f51\u683c\u8de8\u5ea6\u5faa\u73af\u7684\u8be6\u7ec6\u793a\u4f8b\uff1a\n\n__global void kernel(int *a, int N)\n{\n  int indexWithinTheGrid = threadIdx.x + blockIdx.x * blockDim.x;\n  int gridStride = gridDim.x * blockDim.x;\n\n  for (int i = indexWithinTheGrid; i &lt; N; i += gridStride)\n  {\n    // do work on a[i];\n  }\n}\n</code></pre> <pre><code>\u9519\u8bef\u5904\u7406\n\u4e0e\u5728\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e00\u6837\uff0c\u52a0\u901f CUDA \u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u5904\u7406\u540c\u6837\u81f3\u5173\u91cd\u8981\u3002\u5373\u4fbf\u4e0d\u662f\u5927\u591a\u6570\uff0c\u4e5f\u6709\u8bb8\u591a CUDA \u51fd\u6570\uff08\u4f8b\u5982\uff0c\u5185\u5b58\u7ba1\u7406\u51fd\u6570\uff09\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\uff0c\u8be5\u503c\u53ef\u7528\u4e8e\u68c0\u67e5\u8c03\u7528\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\u3002\u4ee5\u4e0b\u662f\u5bf9\u8c03\u7528 cudaMallocManaged \u51fd\u6570\u6267\u884c\u9519\u8bef\u5904\u7406\u7684\u793a\u4f8b\uff1a\n\ncudaError_t err;\nerr = cudaMallocManaged(&amp;a, N)                    // Assume the existence of `a` and `N`.\n\nif (err != cudaSuccess)                           // `cudaSuccess` is provided by CUDA.\n{\n  printf(\"Error: %s\\n\", cudaGetErrorString(err)); // `cudaGetErrorString` is provided by CUDA.\n}\n\u542f\u52a8\u5b9a\u4e49\u4e3a\u8fd4\u56de void \u7684\u6838\u51fd\u6570\u540e\uff0c\u5c06\u4e0d\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\u3002\u4e3a\u68c0\u67e5\u542f\u52a8\u6838\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5982\u679c\u542f\u52a8\u914d\u7f6e\u9519\u8bef\uff09\uff0cCUDA \u63d0\u4f9b cudaGetLastError \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\u3002\n\n/*\n * This launch should cause an error, but the kernel itself\n * cannot return it.\n */\n\nsomeKernel&lt;&lt;&lt;1, -1&gt;&gt;&gt;();  // -1 is not a valid number of threads.\n\ncudaError_t err;\nerr = cudaGetLastError(); // `cudaGetLastError` will return the error from above.\nif (err != cudaSuccess)\n{\n  printf(\"Error: %s\\n\", cudaGetErrorString(err));\n}\n\u6700\u540e\uff0c\u4e3a\u6355\u6349\u5f02\u6b65\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5728\u5f02\u6b65\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff09\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u540e\u7eed\u540c\u6b65 CUDA \u8fd0\u884c\u65f6 API \u8c03\u7528\u6240\u8fd4\u56de\u7684\u72b6\u6001\uff08\u4f8b\u5982 cudaDeviceSynchronize\uff09\uff1b\u5982\u679c\u4e4b\u524d\u542f\u52a8\u7684\u5176\u4e2d\u4e00\u4e2a\u6838\u51fd\u6570\u5931\u8d25\uff0c\u5219\u5c06\u8fd4\u56de\u9519\u8bef\u3002\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#debugging","title":"Debugging","text":"<pre><code>inline cudaError_t checkCuda(cudaError_t result)\n{\n  if (result != cudaSuccess) {\n    fprintf(stderr, \"CUDA Runtime Error: %s\\n\", cudaGetErrorString(result));\n    assert(result == cudaSuccess);\n  }\n  return result;\n}\n</code></pre> <pre><code>const int a = 2&lt;&lt;20; // \u5de6\u79fb20\u4f4d\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#nsys","title":"\u4f7f\u7528nsys\u6027\u80fd\u5206\u6790\u5668\u5e2e\u52a9\u5e94\u7528\u7a0b\u5e8f\u8fed\u4ee3\u5730\u8fdb\u884c\u4f18\u5316","text":"<p>\u5982\u8981\u786e\u4fdd\u4f18\u5316\u52a0\u901f\u4ee3\u7801\u5e93\u7684\u5c1d\u8bd5\u771f\u6b63\u53d6\u5f97\u6210\u529f\uff0c\u552f\u4e00\u65b9\u6cd5\u4fbf\u662f\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u4ee5\u83b7\u53d6\u6709\u5173\u5176\u6027\u80fd\u7684\u5b9a\u91cf\u4fe1\u606f\u3002<code>nsys</code> \u662f\u6307 NVIDIA \u7684Nsight System\u547d\u4ee4\u884c\u5206\u6790\u5668\u3002\u8be5\u5206\u6790\u5668\u9644\u5e26\u4e8eCUDA\u5de5\u5177\u5305\u4e2d\uff0c\u63d0\u4f9b\u5206\u6790\u88ab\u52a0\u901f\u7684\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u7684\u5f3a\u5927\u529f\u80fd\u3002</p> <p><code>nsys</code> \u4f7f\u7528\u8d77\u6765\u5341\u5206\u7b80\u5355\uff0c\u6700\u57fa\u672c\u7528\u6cd5\u662f\u5411\u5176\u4f20\u9012\u4f7f\u7528 <code>nvcc</code> \u7f16\u8bd1\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\u3002\u968f\u540e <code>nsys</code> \u4f1a\u7ee7\u7eed\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u5728\u6b64\u4e4b\u540e\u6253\u5370\u5e94\u7528\u7a0b\u5e8f GPU \u6d3b\u52a8\u7684\u6458\u8981\u8f93\u51fa\u3001CUDA API \u8c03\u7528\u4ee5\u53ca\u7edf\u4e00\u5185\u5b58\u6d3b\u52a8\u7684\u76f8\u5173\u4fe1\u606f\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u5728\u672c\u5b9e\u9a8c\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u4e3b\u9898\u3002</p> <p>\u5728\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u6216\u4f18\u5316\u5df2\u7ecf\u52a0\u901f\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u91c7\u7528\u79d1\u5b66\u7684\u8fed\u4ee3\u65b9\u6cd5\u3002\u4f5c\u51fa\u66f4\u6539\u540e\u9700\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u3001\u505a\u597d\u8bb0\u5f55\u5e76\u8bb0\u5f55\u4efb\u4f55\u91cd\u6784\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u4f55\u79cd\u5f71\u54cd\u3002\u5c3d\u65e9\u4e14\u7ecf\u5e38\u8fdb\u884c\u6b64\u7c7b\u89c2\u5bdf\u901a\u5e38\u4f1a\u8ba9\u60a8\u8f7b\u677e\u83b7\u5f97\u8db3\u591f\u7684\u6027\u80fd\u63d0\u5347\uff0c\u4ee5\u52a9\u60a8\u53d1\u5e03\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5916\uff0c\u7ecf\u5e38\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f7f\u60a8\u4e86\u89e3\u5230\u5bf9 CUDA \u4ee3\u7801\u5e93\u4f5c\u51fa\u7684\u7279\u5b9a\u66f4\u6539\u4f1a\u5bf9\u5176\u5b9e\u9645\u6027\u80fd\u9020\u6210\u4f55\u79cd\u5f71\u54cd\uff1a\u800c\u5f53\u53ea\u5728\u4ee3\u7801\u5e93\u4e2d\u8fdb\u884c\u591a\u79cd\u66f4\u6539\u540e\u518d\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5c06\u5f88\u96be\u5f97\u77e5\u8fd9\u4e00\u70b9\u3002</p> <p><code>nsys profile</code>\u5c06\u751f\u6210\u4e00\u4e2a<code>qdrep</code>\u62a5\u544a\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u4ee5\u591a\u79cd\u65b9\u5f0f\u4f7f\u7528\u3002 \u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528<code>--stats = true</code>\u6807\u5fd7\u8868\u793a\u6211\u4eec\u5e0c\u671b\u6253\u5370\u8f93\u51fa\u6458\u8981\u7edf\u8ba1\u4fe1\u606f\u3002 \u8f93\u51fa\u7684\u4fe1\u606f\u6709\u5f88\u591a.</p> <pre><code>!nsys profile --stats=true ./single-thread-vector-add\n</code></pre> <p>\u53ef\u4ee5\u5411<code>nsys profile</code>\u63d0\u4f9b<code>-f</code>\u6807\u5fd7\u4ee5\u5141\u8bb8\u8986\u76d6\u73b0\u6709\u7684\u62a5\u544a\u6587\u4ef6</p>"},{"location":"ZJU_CS/HPC/class/L5/#streaming_multiprocessorsgpu","title":"\u6d41\u591a\u5904\u7406\u5668\uff08Streaming Multiprocessors\uff09\u53ca\u67e5\u8be2GPU\u7684\u8bbe\u5907\u914d\u7f6e","text":"<p>\u672c\u8282\u5c06\u63a2\u8ba8\u4e86\u89e3 GPU \u786c\u4ef6\u7684\u7279\u5b9a\u529f\u80fd\uff0c\u4ee5\u8fdb\u4e00\u6b65\u4fc3\u8fdb\u4f18\u5316\u3002\u5b66\u4e60\u5b8c\u6d41\u591a\u5904\u7406\u5668\u540e\uff0c\u60a8\u5c06\u5c1d\u8bd5\u8fdb\u4e00\u6b65\u4f18\u5316\u81ea\u5df1\u4e00\u76f4\u6267\u884c\u7684\u52a0\u901f\u5411\u91cf\u52a0\u6cd5\u7a0b\u5e8f\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n  /*\n   * Device ID is required first to query the device.\n   */\n\n  int deviceId;\n  cudaGetDevice(&amp;deviceId);\n\n  cudaDeviceProp props;\n  cudaGetDeviceProperties(&amp;props, deviceId);\n\n  /*\n   * `props` now contains several properties about the current device.\n   */\n\n  int computeCapabilityMajor = props.major;\n  int computeCapabilityMinor = props.minor;\n  int multiProcessorCount = props.multiProcessorCount;\n  int warpSize = props.warpSize;\n\n\n  printf(\"Device ID: %d\\nNumber of SMs: %d\\nCompute Capability Major: %d\\nCompute Capability Minor: %d\\nWarp Size: %d\\n\", deviceId, multiProcessorCount, computeCapabilityMajor, computeCapabilityMinor, warpSize);\n}\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#_1","title":"\u83b7\u5f97\u7edf\u4e00\u5185\u5b58\u7684\u7ec6\u8282","text":"<p>\u60a8\u4e00\u76f4\u4f7f\u7528 <code>cudaMallocManaged</code> \u5206\u914d\u65e8\u5728\u4f9b\u4e3b\u673a\u6216\u8bbe\u5907\u4ee3\u7801\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5e76\u4e14\u73b0\u5728\u4ecd\u5728\u4eab\u53d7\u8fd9\u79cd\u65b9\u6cd5\u7684\u4fbf\u5229\u4e4b\u5904\uff0c\u5373\u5728\u5b9e\u73b0\u81ea\u52a8\u5185\u5b58\u8fc1\u79fb\u4e14\u7b80\u5316\u7f16\u7a0b\u7684\u540c\u65f6\uff0c\u800c\u65e0\u9700\u6df1\u5165\u4e86\u89e3 <code>cudaMallocManaged</code> \u6240\u5206\u914d\u7edf\u4e00\u5185\u5b58 (UM) \u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u7684\u8be6\u7ec6\u4fe1\u606f\u3002<code>nsys profile</code> \u63d0\u4f9b\u6709\u5173\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u4e2d UM \u7ba1\u7406\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u5728\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u7684\u540c\u65f6\u7ed3\u5408\u5bf9 UM \u5de5\u4f5c\u539f\u7406\u7684\u66f4\u6df1\u5165\u7406\u89e3\uff0c\u8fdb\u800c\u4e3a\u4f18\u5316\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u521b\u9020\u66f4\u591a\u673a\u4f1a\u3002</p>"},{"location":"ZJU_CS/HPC/class/L5/#um","title":"\u7edf\u4e00\u5185\u5b58(UM)\u7684\u8fc1\u79fb","text":"<p>\u5206\u914d UM \u65f6\uff0c\u5185\u5b58\u5c1a\u672a\u9a7b\u7559\u5728\u4e3b\u673a\u6216\u8bbe\u5907\u4e0a\u3002\u4e3b\u673a\u6216\u8bbe\u5907\u5c1d\u8bd5\u8bbf\u95ee\u5185\u5b58\u65f6\u4f1a\u53d1\u751f \u9875\u9519\u8bef\uff0c\u6b64\u65f6\u4e3b\u673a\u6216\u8bbe\u5907\u4f1a\u6279\u91cf\u8fc1\u79fb\u6240\u9700\u7684\u6570\u636e\u3002\u540c\u7406\uff0c\u5f53 CPU \u6216\u52a0\u901f\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55 GPU \u5c1d\u8bd5\u8bbf\u95ee\u5c1a\u672a\u9a7b\u7559\u5728\u5176\u4e0a\u7684\u5185\u5b58\u65f6\uff0c\u4f1a\u53d1\u751f\u9875\u9519\u8bef\u5e76\u89e6\u53d1\u8fc1\u79fb\u3002</p> <p>\u80fd\u591f\u6267\u884c\u9875\u9519\u8bef\u5e76\u6309\u9700\u8fc1\u79fb\u5185\u5b58\u5bf9\u4e8e\u5728\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7b80\u5316\u5f00\u53d1\u6d41\u7a0b\u5927\u6709\u52a9\u76ca\u3002\u6b64\u5916\uff0c\u5728\u5904\u7406\u5c55\u793a\u7a00\u758f\u8bbf\u95ee\u6a21\u5f0f\u7684\u6570\u636e\u65f6\uff08\u4f8b\u5982\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u8fd0\u884c\u4e4b\u524d\u65e0\u6cd5\u5f97\u77e5\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u65f6\uff09\uff0c\u4ee5\u53ca\u5728\u5177\u6709\u591a\u4e2a GPU \u7684\u52a0\u901f\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u53ef\u80fd\u7531\u591a\u4e2a GPU \u8bbe\u5907\u8bbf\u95ee\u65f6\uff0c\u6309\u9700\u8fc1\u79fb\u5185\u5b58\u5c06\u4f1a\u5e26\u6765\u663e\u8457\u4f18\u52bf\u3002</p> <p>\u6709\u4e9b\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\uff0c\u5728\u8fd0\u884c\u65f6\u4e4b\u524d\u9700\u8981\u5f97\u77e5\u6570\u636e\uff0c\u4ee5\u53ca\u9700\u8981\u5927\u91cf\u8fde\u7eed\u7684\u5185\u5b58\u5757\u65f6\uff09\uff0c\u6211\u4eec\u8fd8\u80fd\u6709\u6548\u89c4\u907f\u9875\u9519\u8bef\u548c\u6309\u9700\u6570\u636e\u8fc1\u79fb\u6240\u4ea7\u751f\u7684\u5f00\u9500\u3002</p> <p>\u672c\u5b9e\u9a8c\u7684\u540e\u7eed\u5185\u5bb9\u5c06\u4fa7\u91cd\u4e8e\u5bf9\u6309\u9700\u8fc1\u79fb\u7684\u7406\u89e3\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u5206\u6790\u5668\u8f93\u51fa\u4e2d\u8bc6\u522b\u6309\u9700\u8fc1\u79fb\u3002\u8fd9\u4e9b\u77e5\u8bc6\u53ef\u8ba9\u60a8\u5728\u4eab\u53d7\u6309\u9700\u8fc1\u79fb\u4f18\u52bf\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u5176\u4ea7\u751f\u7684\u5f00\u9500\u3002</p>"},{"location":"ZJU_CS/HPC/class/L5/#_2","title":"\u5f02\u6b65\u5185\u5b58\u9884\u53d6","text":"<p>\u5728\u4e3b\u673a\u5230\u8bbe\u5907\u548c\u8bbe\u5907\u5230\u4e3b\u673a\u7684\u5185\u5b58\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u79cd\u6280\u672f\u6765\u51cf\u5c11\u9875\u9519\u8bef\u548c\u6309\u9700\u5185\u5b58\u8fc1\u79fb\u6210\u672c\uff0c\u6b64\u5f3a\u5927\u6280\u672f\u79f0\u4e3a\u5f02\u6b65\u5185\u5b58\u9884\u53d6\u3002\u901a\u8fc7\u6b64\u6280\u672f\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4f7f\u7528\u7edf\u4e00\u5185\u5b58 (UM) \u4e4b\u524d\uff0c\u5728\u540e\u53f0\u5c06\u5176\u5f02\u6b65\u8fc1\u79fb\u81f3\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55 CPU \u6216 GPU \u8bbe\u5907\u3002\u6b64\u4e3e\u53ef\u4ee5\u51cf\u5c11\u9875\u9519\u8bef\u548c\u6309\u9700\u6570\u636e\u8fc1\u79fb\u6240\u5e26\u6765\u7684\u6210\u672c\uff0c\u5e76\u8fdb\u800c\u63d0\u9ad8 GPU \u6838\u51fd\u6570\u548c CPU \u51fd\u6570\u7684\u6027\u80fd\u3002</p> <p>\u6b64\u5916\uff0c\u9884\u53d6\u5f80\u5f80\u4f1a\u4ee5\u66f4\u5927\u7684\u6570\u636e\u5757\u6765\u8fc1\u79fb\u6570\u636e\uff0c\u56e0\u6b64\u5176\u8fc1\u79fb\u6b21\u6570\u8981\u4f4e\u4e8e\u6309\u9700\u8fc1\u79fb\u3002\u6b64\u6280\u672f\u975e\u5e38\u9002\u7528\u4e8e\u4ee5\u4e0b\u60c5\u51b5\uff1a\u5728\u8fd0\u884c\u65f6\u4e4b\u524d\u5df2\u77e5\u6570\u636e\u8bbf\u95ee\u9700\u6c42\u4e14\u6570\u636e\u8bbf\u95ee\u5e76\u672a\u91c7\u7528\u7a00\u758f\u6a21\u5f0f\u3002</p> <p>CUDA \u53ef\u901a\u8fc7 <code>cudaMemPrefetchAsync</code> \u51fd\u6570\uff0c\u8f7b\u677e\u5c06\u6258\u7ba1\u5185\u5b58\u5f02\u6b65\u9884\u53d6\u5230 GPU \u8bbe\u5907\u6216 CPU\u3002\u4ee5\u4e0b\u6240\u793a\u4e3a\u5982\u4f55\u4f7f\u7528\u8be5\u51fd\u6570\u5c06\u6570\u636e\u9884\u53d6\u5230\u5f53\u524d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684 GPU \u8bbe\u5907\uff0c\u7136\u540e\u518d\u9884\u53d6\u5230 CPU\uff1a</p> <pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);                                         // The ID of the currently active GPU device.\n\ncudaMemPrefetchAsync(pointerToSomeUMData, size, deviceId);        // Prefetch to GPU device.\ncudaMemPrefetchAsync(pointerToSomeUMData, size, cudaCpuDeviceId); // Prefetch to host. `cudaCpuDeviceId` is a\n                                                                  // built-in CUDA variable.\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#_3","title":"\u624b\u52a8\u5185\u5b58\u5206\u914d\u548c\u590d\u5236","text":"<p>\u5c3d\u7ba1 <code>cudaMallocManaged</code> \u548c <code>cudaMemPrefetchAsync</code> \u51fd\u6570\u6027\u80fd\u51fa\u4f17\u5e76\u80fd\u5927\u5e45\u7b80\u5316\u5185\u5b58\u8fc1\u79fb\uff0c\u4f46\u6709\u65f6\u4e5f\u6709\u5fc5\u8981\u4f7f\u7528\u66f4\u591a\u624b\u52a8\u5185\u5b58\u5206\u914d\u65b9\u6cd5\u3002\u8fd9\u5728\u5df2\u77e5\u53ea\u9700\u5728\u8bbe\u5907\u6216\u4e3b\u673a\u4e0a\u8bbf\u95ee\u6570\u636e\u65f6\u5c24\u5176\u5982\u6b64\uff0c\u5e76\u4e14\u56e0\u514d\u4e8e\u8fdb\u884c\u81ea\u52a8\u6309\u9700\u8fc1\u79fb\u800c\u80fd\u591f\u6536\u56de\u6570\u636e\u8fc1\u79fb\u6210\u672c\u3002</p> <p>\u6b64\u5916\uff0c\u901a\u8fc7\u624b\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u975e\u9ed8\u8ba4\u6d41\u540c\u65f6\u5f00\u5c55\u6570\u636e\u4f20\u8f93\u4e0e\u8ba1\u7b97\u5de5\u4f5c\u3002\u5728\u672c\u8282\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u4e00\u4e9b\u57fa\u672c\u7684\u624b\u52a8\u5185\u5b58\u5206\u914d\u548c\u62f7\u8d1d\u6280\u672f\uff0c\u4e4b\u540e\u4f1a\u5ef6\u4f38\u5e94\u7528\u8fd9\u4e9b\u6280\u672f\u4ee5\u540c\u65f6\u5f00\u5c55\u6570\u636e\u62f7\u8d1d\u4e0e\u8ba1\u7b97\u5de5\u4f5c\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7528\u4e8e\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u7684 CUDA \u547d\u4ee4\uff1a</p> <ul> <li><code>cudaMalloc</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684 GPU \u5206\u914d\u5185\u5b58\u3002\u8fd9\u53ef\u9632\u6b62\u51fa\u73b0\u6240\u6709 GPU \u5206\u9875\u9519\u8bef\uff0c\u800c\u4ee3\u4ef7\u662f\u4e3b\u673a\u4ee3\u7801\u5c06\u65e0\u6cd5\u8bbf\u95ee\u8be5\u547d\u4ee4\u8fd4\u56de\u7684\u6307\u9488\u3002</li> <li><code>cudaMallocHost</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a CPU \u5206\u914d\u5185\u5b58\u3002\u8be5\u547d\u4ee4\u53ef\u201c\u56fa\u5b9a\u201d\u5185\u5b58(pinned memory)\u6216\u201c\u9875\u9501\u5b9a\u201d\u5185\u5b58(page-locked memory)\uff0c\u6b64\u4e3e\u5141\u8bb8\u5c06\u5185\u5b58\u5f02\u6b65\u62f7\u8d1d\u81f3 GPU \u6216\u4ece GPU \u5f02\u6b65\u62f7\u8d1d\u81f3\u5185\u5b58\u3002\u56fa\u5b9a\u5185\u5b58\u8fc7\u591a\u5219\u4f1a\u5e72\u6270 CPU \u6027\u80fd\uff0c\u56e0\u6b64\u8bf7\u52ff\u65e0\u7aef\u4f7f\u7528\u8be5\u547d\u4ee4\u3002\u91ca\u653e\u56fa\u5b9a\u5185\u5b58\u65f6\u5e94\u4f7f\u7528 <code>cudaFreeHost</code> \u547d\u4ee4\u3002</li> <li>\u65e0\u8bba\u662f\u4ece\u4e3b\u673a\u5230\u8bbe\u5907\u8fd8\u662f\u4ece\u8bbe\u5907\u5230\u4e3b\u673a\uff0c<code>cudaMemcpy</code> \u547d\u4ee4\u5747\u53ef\u62f7\u8d1d\uff08\u800c\u975e\u4f20\u8f93\uff09\u5185\u5b58\u3002</li> </ul>"},{"location":"ZJU_CS/HPC/class/L5/#_4","title":"\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u6bb5\u6f14\u793a\u4f7f\u7528\u4e0a\u8ff0 CUDA API \u8c03\u7528\u7684\u4ee3\u7801\u3002</p> <pre><code>int *host_a, *device_a;        // Define host-specific and device-specific arrays.\ncudaMalloc(&amp;device_a, size);   // `device_a` is immediately available on the GPU.\ncudaMallocHost(&amp;host_a, size); // `host_a` is immediately available on CPU, and is page-locked, or pinned.\n\ninitializeOnHost(host_a, N);   // No CPU page faulting since memory is already allocated on the host.\n\n// `cudaMemcpy` takes the destination, source, size, and a CUDA-provided variable for the direction of the copy.\ncudaMemcpy(device_a, host_a, size, cudaMemcpyHostToDevice);\n\nkernel&lt;&lt;&lt;blocks, threads, 0, someStream&gt;&gt;&gt;(device_a, N);\n\n// `cudaMemcpy` can also copy data from device to host.\ncudaMemcpy(host_a, device_a, size, cudaMemcpyDeviceToHost);\n\nverifyOnHost(host_a, N);\n\ncudaFree(device_a);\ncudaFreeHost(host_a);          // Free pinned memory like this.\n</code></pre> <p>\u9664\u4e86<code>cudaMemcpy</code>\u4e4b\u5916\uff0c\u8fd8\u6709<code>cudaMemcpyAsync</code>\uff0c\u53ea\u8981\u56fa\u5b9a\u4e86\u4e3b\u673a\u5185\u5b58\uff0c\u5b83\u5c31\u53ef\u4ee5\u4ece\u4e3b\u673a\u5230\u8bbe\u5907\u6216\u4ece\u8bbe\u5907\u5230\u4e3b\u673a\u5f02\u6b65\u590d\u5236\u5185\u5b58\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>cudaMallocHost</code>\u5206\u914d\u5b83\u6765\u5b8c\u6210\u3002</p> <p>\u4e0e\u6838\u51fd\u6570\u7684\u6267\u884c\u7c7b\u4f3c\uff0c<code>cudaMemcpyAsync</code>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ec5\u76f8\u5bf9\u4e8e\u4e3b\u673a\u662f\u5f02\u6b65\u7684\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5728\u9ed8\u8ba4\u6d41\u4e2d\u6267\u884c\uff0c\u56e0\u6b64\u5bf9\u4e8eGPU\u4e0a\u53d1\u751f\u7684\u5176\u4ed6CUDA\u64cd\u4f5c\u800c\u8a00\uff0c\u5b83\u662f\u963b\u585e\u64cd\u4f5c\u3002\u4f46\u662f\uff0c<code>cudaMemcpyAsync</code>\u51fd\u6570\u5c06\u975e\u9ed8\u8ba4\u6d41\u4f5c\u4e3a\u53ef\u9009\u7684\u7b2c5\u4e2a\u53c2\u6570\u3002\u901a\u8fc7\u5411\u5176\u4f20\u9012\u975e\u9ed8\u8ba4\u6d41\uff0c\u53ef\u4ee5\u5c06\u5185\u5b58\u4f20\u8f93\u4e0e\u5176\u4ed6\u975e\u9ed8\u8ba4\u6d41\u4e2d\u53d1\u751f\u7684\u5176\u4ed6CUDA\u64cd\u4f5c\u5e76\u53d1\u3002</p> <p>\u4e00\u79cd\u5e38\u89c1\u4e14\u6709\u7528\u7684\u6a21\u5f0f\u662f\u7ed3\u5408\u4f7f\u7528\u56fa\u5b9a\u4e3b\u673a\u5185\u5b58\uff0c\u975e\u9ed8\u8ba4\u6d41\u4e2d\u7684\u5f02\u6b65\u5185\u5b58\u526f\u672c\u548c\u975e\u9ed8\u8ba4\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u6267\u884c\uff0c\u4ee5\u4f7f\u5185\u5b58\u4f20\u8f93\u4e0e\u6838\u51fd\u6570\u7684\u6267\u884c\u91cd\u53e0\u3002</p> <p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5e76\u975e\u5728\u7b49\u5f85\u6574\u4e2a\u5185\u5b58\u62f7\u8d1d\u5b8c\u6210\u4e4b\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u6838\u51fd\u6570\uff0c\u800c\u662f\u62f7\u8d1d\u5e76\u5904\u7406\u6240\u9700\u7684\u6570\u636e\u6bb5\uff0c\u5e76\u8ba9\u6bcf\u4e2a\u62f7\u8d1d/\u5904\u7406\u4e2d\u7684\u6570\u636e\u6bb5\u5747\u5728\u5404\u81ea\u7684\u975e\u9ed8\u8ba4\u6d41\u4e2d\u8fd0\u884c\u3002\u901a\u8fc7\u4f7f\u7528\u6b64\u6280\u672f\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\u90e8\u5206\u6570\u636e\uff0c\u540c\u65f6\u4e3a\u540e\u7eed\u6bb5\u5e76\u53d1\u6267\u884c\u5185\u5b58\u4f20\u8f93\u3002\u4f7f\u7528\u6b64\u6280\u672f\u8ba1\u7b97\u64cd\u4f5c\u6b21\u6570\u7684\u6570\u636e\u6bb5\u7279\u5b9a\u503c\u548c\u6570\u7ec4\u5185\u7684\u504f\u79fb\u4f4d\u7f6e\u65f6\u5fc5\u987b\u683c\u5916\u5c0f\u5fc3\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>int N = 2&lt;&lt;24;\nint size = N * sizeof(int);\n\nint *host_array;\nint *device_array;\n\ncudaMallocHost(&amp;host_array, size);               // Pinned host memory allocation.\ncudaMalloc(&amp;device_array, size);                 // Allocation directly on the active GPU device.\n\ninitializeData(host_array, N);                   // Assume this application needs to initialize on the host.\n\nconst int numberOfSegments = 4;                  // This example demonstrates slicing the work into 4 segments.\nint segmentN = N / numberOfSegments;             // A value for a segment's worth of `N` is needed.\nsize_t segmentSize = size / numberOfSegments;    // A value for a segment's worth of `size` is needed.\n\n// For each of the 4 segments...\nfor (int i = 0; i &lt; numberOfSegments; ++i)\n{\n  // Calculate the index where this particular segment should operate within the larger arrays.\n  segmentOffset = i * segmentN;\n\n  // Create a stream for this segment's worth of copy and work.\n  cudaStream_t stream;\n  cudaStreamCreate(&amp;stream);\n\n  // Asynchronously copy segment's worth of pinned host memory to device over non-default stream.\n  cudaMemcpyAsync(&amp;device_array[segmentOffset],  // Take care to access correct location in array.\n                  &amp;host_array[segmentOffset],    // Take care to access correct location in array.\n                  segmentSize,                   // Only copy a segment's worth of memory.\n                  cudaMemcpyHostToDevice,\n                  stream);                       // Provide optional argument for non-default stream.\n\n  // Execute segment's worth of work over same non-default stream as memory copy.\n  kernel&lt;&lt;&lt;number_of_blocks, threads_per_block, 0, stream&gt;&gt;&gt;(&amp;device_array[segmentOffset], segmentN);\n\n  // `cudaStreamDestroy` will return immediately (is non-blocking), but will not actually destroy stream until\n  // all stream operations are complete.\n  cudaStreamDestroy(stream);\n}\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L6/","title":"7\u670810\u65e5 OpenMP","text":""},{"location":"ZJU_CS/HPC/class/L7/","title":"7\u670811\u53f7 \u673a\u5668\u5b66\u4e60\uff08Machine Learning)","text":""},{"location":"ZJU_CS/HPC/class/L7/#why_ml_in_an_hpc_course","title":"Why ML in an HPC course?","text":"<ul> <li>ML(especially DL) is a special serious of application requiring large computing power.</li> <li>ML can be used to guide system optimization</li> <li>Emerging research topic : MLsys()</li> </ul>"},{"location":"ZJU_CS/HPC/class/L7/#preview","title":"Preview","text":"<ul> <li> <p>Introduction</p> </li> <li> <p>Basic of Machine Learning</p> </li> <li> <p>Typical Network Architectures</p> </li> </ul> <p>CNN</p> <p>Attention</p> <ul> <li>DL Hardware &amp; Software</li> <li>MLSys</li> </ul>"},{"location":"ZJU_CS/HPC/class/L7/#ml","title":"ML","text":"<ol> <li>Machine Learning Problems(classification / Regression / Clustering / Dimensionality reduction)</li> <li>Learning method((un)Supervised learning / transfer learning / reinforcement learning)</li> <li>Gradient Descent, and learning rate (just like \u6b65\u957f) (Stochastic\u968f\u673a)</li> <li>About fit.</li> </ol>"},{"location":"ZJU_CS/HPC/class/L7/#dl","title":"DL","text":"<ol> <li> <p>Multilayer Perceptions(Input  Hidden  Output)</p> </li> <li> <p>Forward / Back Propagation(follow chain rules)</p> </li> </ol> <p></p> <p>Preview</p> <ol> <li> <p>Layers(Activation Function  Loss Function  Regularization  Dropout  Normalization)</p> </li> <li> <p>Optimizers</p> </li> <li> <p>Problems in DL(Gradient Vanishment  Overfitting  Fitting Non\u2010linear Functions )</p> </li> </ol> <ol> <li>Activation Function(sigmoid(\u5bb9\u6613\u68af\u5ea6\u6d88\u5931) / tanh / Rectified Linear Unit\uff08\u53ef\u907f\u514d\u68af\u5ea6\u6d88\u5931\uff09 )</li> </ol> <p></p> <p></p> <ol> <li>Loss Function(\u2022Cross Entropy / Mean Square Error)</li> <li>Regularization(\u6b63\u5219\u5316)</li> <li> <p>Dropout</p> </li> <li> <p>Batch Normalization(skip math)</p> </li> <li>Optimizer(link)</li> </ol> <p>SGD; SGD + Momentum; AdaGrad; Adam</p>"},{"location":"ZJU_CS/HPC/class/L7/#cnn","title":"CNN","text":"<p>\u5b66\u957f\u8bb2\u4e86\u4e0d\u5c11\uff0c\u4f46\u662f\u4e0d\u592a\u60f3\u8bb0\u4e86\u3002\u4e3b\u8981\u542c\u542c\u5c31\u597d</p>"},{"location":"ZJU_CS/HPC/class/L8/","title":"\u9ad8\u6027\u80fd\u8ba1\u7b97\u9ad8\u7ea7\u8bdd\u672f","text":"<ul> <li>\u9ad8\u6027\u80fd\u8ba1\u7b97\u9ad8\u7ea7\u8bdd\u672f<ul> <li>CPU GPU FPGA</li> <li>\u670d\u52a1\u5668</li> <li>RC4ML\u5b9e\u9a8c\u5ba4\u7684\u7cfb\u7edf\u7814\u7a76</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/class/L8/#cpu_gpu_fpga","title":"CPU GPU FPGA","text":"<ol> <li>CPU\u7ecf\u5178\u4e94\u7ea7\u6d41\u6c34</li> <li>CPU\uff1a\u8d85\u6807\u91cfSuperscalar\uff08CISC\u6307\u4ee4\u5185\u90e8RISC\u5316\u3001\u6307\u4ee4\u591a\u5e76\u53d1\uff09</li> </ol>"},{"location":"ZJU_CS/HPC/class/L8/#_2","title":"\u670d\u52a1\u5668","text":"<ol> <li>1U\u30012U\u30014U\u6839\u636e\u5927\u5c0f\u5224\u65ad\u30024U\u4e00\u822c\u80fd\u653e2\u4e2acpu8\u4e2aGPU\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/class/L8/#rc4ml","title":"RC4ML\u5b9e\u9a8c\u5ba4\u7684\u7cfb\u7edf\u7814\u7a76","text":""},{"location":"ZJU_CS/HPC/homework/lab1/","title":"Lab-1","text":"<ul> <li>Lab-1<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)<ul> <li>\u96c6\u7fa4</li> <li>Linux\u547d\u4ee4</li> <li>HPL</li> <li>UFW</li> <li>BLAS</li> <li>MPI</li> <li>SSH</li> <li>Makefile</li> <li>\u5185\u7f51 IP</li> </ul> </li> <li>Lab Design &amp; Test Result<ul> <li>\u865a\u62df\u673a</li> <li>HPL\u73af\u5883\u642d\u5efa<ul> <li>\u865a\u62df\u673a\u73af\u5883\u914d\u5236</li> <li>Openmpi\u5b89\u88c5</li> <li>OpenBLAS\u5b89\u88c5</li> </ul> </li> <li>HPL\u7684\u5b89\u88c5\u4ee5\u53ca\u73af\u5883\u914d\u5236</li> <li>\u514b\u9686\u8282\u70b9</li> <li>\u6d4b\u8bd5\u96c6\u7fa4<ul> <li>ping\u901a</li> <li>\u914d\u5236SSH</li> <li>mpirun\u5c1d\u8bd5</li> </ul> </li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab1/#lab_description","title":"Lab Description","text":"<p>ps\uff1a\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u6d59\u6c5f\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u8ba1\u7b97\u4e13\u4e1a\u5927\u4e00\uff082023\uff09\u77ed\u5b66\u671f\u2014\u2014\u8d85\u7b97\u8bfe\u7a0b\u7684\u5b9e\u9a8c\uff0c\u8be6\u60c5\u8bf7\u70b9\u51fb\u6b64\u5904</p> <p>\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u4f7f\u7528\u56db\u53f0\u865a\u62df\u673a\u642d\u5efa\u4e00\u4e2a\u7b80\u6613\u7684\u96c6\u7fa4\uff0c\u5e76\u5bf9\u8be5\u96c6\u7fa4\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u6700\u540e\u63d0\u4ea4\u6d4b\u8bd5\u7ed3\u679c\u548c\u5b9e\u9a8c\u62a5\u544a\u3002</p> <p>\u96c6\u7fa4\u642d\u5efa\u7684\u4efb\u52a1\u5305\u62ec\u521b\u5efa\u865a\u62df\u673a\u3001\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3001\u914d\u7f6e\u7f51\u7edc\u548c ssh \u901a\u4fe1\u3002</p> <p>\u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7\u4f7f\u7528 OpenMPI \u5c06 HPL \u6d4b\u8bd5\u7a0b\u5e8f\u5206\u914d\u5230\u56db\u4e2a\u865a\u62df\u673a\u8282\u70b9\u4e0a\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e0b\u8f7d\u5e76\u7f16\u8bd1 OpenMPI\u3001BLAS \u548c HPL \u7684\u6e90\u4ee3\u7801\uff0c\u5176\u4e2d OpenMPI\u3001BLAS\u662f HPL \u7684\u4f9d\u8d56\u9879\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#introduction_knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<p>(ps:\u82e5\u4e0d\u60f3\u770b\u53ef\u8df3\u8fc7\uff0c\u540e\u9762\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u770b\u4e0d\u61c2\u4e86\u53ef\u4ee5\u518d\u6765\u5b66\u4e60)</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_1","title":"\u96c6\u7fa4","text":"<p>\u8ba1\u7b97\u673a\u96c6\u7fa4\uff08\u82f1\u8bed\uff1acomputer cluster\uff09\u662f\u4e00\u7ec4\u677e\u6563\u6216\u7d27\u5bc6\u8fde\u63a5\u5728\u4e00\u8d77\u5de5\u4f5c\u7684\u8ba1\u7b97\u673a\u3002\u7531\u4e8e\u8fd9\u4e9b\u8ba1\u7b97\u673a\u534f\u540c\u5de5\u4f5c\uff08\u5e76\u884c\u8ba1\u7b97\uff09\uff0c\u5728\u8bb8\u591a\u65b9\u9762\u5b83\u4eec\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5355\u4e2a\u7cfb\u7edf\u3002\u4e0e\u7f51\u683c\u8ba1\u7b97\u673a\u4e0d\u540c\uff0c\u8ba1\u7b97\u673a\u96c6\u7fa4\u5c06\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7f6e\u4e3a\u6267\u884c\u76f8\u540c\u7684\u4efb\u52a1\uff0c\u7531\u8f6f\u4ef6\u63a7\u5236\u548c\u8c03\u5ea6\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#linux","title":"Linux\u547d\u4ee4","text":"<p>\u8fd9\u4e2a\u611f\u89c9\u7f51\u4e0a\u90fd\u4f1a\u6709\u5f88\u591a\u6559\u7a0b\uff0c\u53ef\u4ee5\u81ea\u5df1\u719f\u6089\u4e00\u4e0b\u5c31\u80fd\u5b66\u4f1a\u3002 \uff08Tips\uff1aman\u5f88\u591a\u65f6\u5019\u662f\u4e2a\u597d\u4e1c\u897f\uff09</p> <pre><code>cd ls clear mkdir rmdir \u2026\u2026\n</code></pre>"},{"location":"ZJU_CS/HPC/homework/lab1/#hpl","title":"HPL","text":"<p>HPL\uff08The High-Performance Linpack Benchmark\uff09\u662f\u6d4b\u8bd5\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u7cfb\u7edf\u6d6e\u70b9\u6027\u80fd\u7684\u57fa\u51c6\u7a0b\u5e8f\u3002HPL\u901a\u8fc7\u5bf9\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u91c7\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u6c42\u89e3\u4e00\u5143N\u6b21\u7a20\u5bc6\u7ebf\u6027\u4ee3\u6570\u65b9\u7a0b\u7ec4\u7684\u6d4b\u8bd5\uff0c\u8bc4\u4ef7\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u7684\u6d6e\u70b9\u8ba1\u7b97\u80fd\u529b\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ufw","title":"UFW","text":"<p>Uncomplicated Firewall[1]\uff0c\u7b80\u79f0UFW\uff0c\u662fUbuntu\u7cfb\u7edf\u4e0a\u9ed8\u8ba4\u7684\u9632\u706b\u5899\u7ec4\u4ef6\u3002UFW\u662f\u4e3a\u8f7b\u91cf\u5316\u914d\u7f6eiptables\u800c\u5f00\u53d1\u7684\u4e00\u6b3e\u5de5\u5177\u3002UFW \u63d0\u4f9b\u4e00\u4e2a\u975e\u5e38\u53cb\u597d\u7684\u754c\u9762\u7528\u4e8e\u521b\u5efa\u57fa\u4e8eIPV4\uff0cIPV6\u7684\u9632\u706b\u5899\u89c4\u5219\u3002UFW \u5728 Ubuntu 8.04 LTS \u540e\u7684\u6240\u6709\u53d1\u884c\u7248\u4e2d\u9ed8\u8ba4\u53ef\u7528[2]\u3002UFW \u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u53ebGufw</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#blas","title":"BLAS","text":"<p>BLAS\uff08\u82f1\u8bed\uff1aBasic Linear Algebra Subprograms\uff0c\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u7a0b\u5e8f\u96c6\uff09\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff08API\uff09\u6807\u51c6\uff0c\u7528\u4ee5\u89c4\u8303\u53d1\u5e03\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u7684\u6570\u503c\u5e93\uff08\u5982\u77e2\u91cf\u6216\u77e9\u9635\u4e58\u6cd5\uff09\u3002\u8be5\u7a0b\u5e8f\u96c6\u6700\u521d\u53d1\u5e03\u4e8e1979\u5e74\uff0c\u5e76\u7528\u4e8e\u521b\u5efa\u66f4\u5927\u7684\u6570\u503c\u7a0b\u5e8f\u5305\uff08\u5982LAPACK\uff09\u3002\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\uff0cBLAS\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4f8b\u5982\uff0cLINPACK\u7684\u8fd0\u7b97\u6210\u7ee9\u5219\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8eBLAS\u4e2d\u5b50\u7a0b\u5e8fDGEMM\u7684\u8868\u73b0\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#mpi","title":"MPI","text":"<p>\u6d88\u606f\u4f20\u9012\u63a5\u53e3\uff08\u82f1\u8bed\uff1aMessage Passing Interface\uff0c\u7f29\u5199MPI\uff09\u662f\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u7684\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff08API\uff09\uff0c\u5e38\u5728\u8d85\u7ea7\u7535\u8111\u3001\u7535\u8111\u96c6\u7fa4\u7b49\u975e\u5171\u4eab\u5185\u5b58\u73af\u5883\u7a0b\u5e8f\u8bbe\u8ba1\u3002</p> <p>\u800c\u672c\u6b21\u5b9e\u9a8c\u7684OpenMPI\u662fMPI\u7684\u4e00\u79cd\uff0c\u5171\u4eab\u5185\u5b58\u7684\u5e76\u884c\u7f16\u7a0b\u7684\u4e00\u4e2aAPI\u3002OpenMPI \u5c06 HPL \u6d4b\u8bd5\u7a0b\u5e8f\u5206\u914d\u5230\u56db\u4e2a\u865a\u62df\u673a\u8282\u70b9\u4e0a\u6267\u884c\u3002MPI\u7684\u6838\u5fc3\u4e3b\u8981\u662f\uff1a\u7aef\u5230\u7aef\u901a\u4fe1\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u548c\u96c6\u5408\u901a\u4fe1\uff08Collective Communication\uff09\u3002\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5\u89c1MPI\u53c2\u8003\u624b\u518c</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ssh","title":"SSH","text":"<p>\u5b89\u5168\u5916\u58f3\u534f\u8bae\uff08Secure Shell Protocol\uff0c\u7b80\u79f0SSH\uff09\u662f\u4e00\u79cd\u52a0\u5bc6\u7684\u7f51\u7edc\u4f20\u8f93\u534f\u8bae\uff0c\u53ef\u5728\u4e0d\u5b89\u5168\u7684\u7f51\u7edc\u4e2d\u4e3a\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5b89\u5168\u7684\u4f20\u8f93\u73af\u5883[1]\u3002SSH\u901a\u8fc7\u5728\u7f51\u7edc\u4e2d\u521b\u5efa\u5b89\u5168\u96a7\u9053\u6765\u5b9e\u73b0SSH\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5[2]\u3002SSH\u6700\u5e38\u89c1\u7684\u7528\u9014\u662f\u8fdc\u7a0b\u767b\u5f55\u7cfb\u7edf\uff0c\u4eba\u4eec\u901a\u5e38\u5229\u7528SSH\u6765\u4f20\u8f93\u547d\u4ee4\u884c\u754c\u9762\u548c\u8fdc\u7a0b\u6267\u884c\u547d\u4ee4\u3002\uff08\u6211\u4eec\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u684c\u9762\u6216\u8005\u670d\u52a1\u5668\uff09</p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u5e38\u7528\u7684Github\u4e5f\u662f\u6bd4\u8f83\u5efa\u8bae\u91c7\u7528SSH\u901a\u4fe1\uff0c\u8fd9\u6837\u8bbf\u95ee\u6bd4\u8f83\u7a33\u5b9a\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#makefile","title":"Makefile","text":"<p>\u6211\u4eec\u5e38\u8bf4\u7684Makefile\u5c31\u662fGNU make.\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b8c\u6210\u7f16\u8bd1\u3002\u4e0a\u8fc7C\u5927\u7684\u540c\u5b66\u5e94\u8be5\u5df2\u7ecf\u6709\u6240\u4e86\u89e3\u4e86\u3002\u6211\u4e5f\u4e0d\u5728\u6b64\u8fc7\u591a\u8bf4\u660e\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u6df1\u5165\u6d45\u51fa\u7684\u624b\u518c\u653e\u5728\u8fd9\u91cc\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ip","title":"\u5185\u7f51 IP","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6\u7684\u662f\u5185\u7f51IP\u4e92\u901a\u3002\u7531\u4e8e\u7f51\u5173\u7684\u5b58\u5728\uff0c\u4e0d\u540c\u5c40\u57df\u7f51\u5185\u7684\u5185\u7f51IP\u662f\u53ef\u4ee5\u91cd\u590d\u7684\u3002</p> <p>\u5185\u7f51IP\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u5c40\u57df\u7f51\u7f51\u7edc\u5730\u5740\uff0c\u5185\u7f51\u7684\u8ba1\u7b97\u673a\u4ee5NAT\uff08\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff09\u534f\u8bae\uff0c\u901a\u8fc7\u4e00\u4e2a\u516c\u5171\u7684\u7f51\u5173\u8bbf\u95eeInternet\u3002\u5185\u7f51\u7684\u8ba1\u7b97\u673a\u53ef\u5411Internet\u4e0a\u7684\u5176\u4ed6\u8ba1\u7b97\u673a\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\uff0c\u4f46Internet\u4e0a\u5176\u4ed6\u7684\u8ba1\u7b97\u673a\u65e0\u6cd5\u5411\u5185\u7f51\u7684\u8ba1\u7b97\u673a\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\u3002</p> <p>NAT\uff08Network Address Translator\uff09\u662f\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff0c\u5b83\u5b9e\u73b0\u5185\u7f51\u7684IP\u5730\u5740\u4e0e\u516c\u7f51\u7684\u5730\u5740\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u5c06\u5927\u91cf\u7684\u5185\u7f51IP\u5730\u5740\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6216\u5c11\u91cf\u7684\u516c\u7f51IP\u5730\u5740\uff0c\u51cf\u5c11\u5bf9\u516c\u7f51IP\u5730\u5740\u7684\u5360\u7528\u3002NAT\u7684\u6700\u5178\u578b\u5e94\u7528\u662f\uff1a\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\uff0c\u53ea\u9700\u8981\u4e00\u53f0\u8ba1\u7b97\u673a\u8fde\u63a5\u4e0aInternet\uff0c\u5c31\u53ef\u4ee5\u5229\u7528NAT\u5171\u4eabInternet\u8fde\u63a5\uff0c\u4f7f\u5c40\u57df\u7f51\u5185\u5176\u4ed6\u8ba1\u7b97\u673a\u4e5f\u53ef\u4ee5\u4e0a\u7f51\u3002</p> <p>\u800c\u672c\u6b21\u5b9e\u9a8c\u7684\u96c6\u7fa4\u53ca\u91c7\u53d6\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u6765\u5efa\u7acb\u96c6\u7fa4\u95f4\u7684\u7f51\u7edc\u8fde\u63a5\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#lab_design_test_result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab1/#_2","title":"\u865a\u62df\u673a","text":"<ol> <li> <p>\u7531\u4e8e\u6211\u4e4b\u524d\u5bd2\u5047\u60f3\u4e0a\u624b\u4e0bLinux\u7cfb\u7edf\uff0c\u6545\u5df2\u7ecf\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u5b89\u88c5\u8fc7<code>VMware</code>\uff0c\u6b64\u524d\u4f7f\u7528\u7684\u662f<code>redhat</code>\u3002\u73b0\u5728\u53ea\u9700\u8981\u4e0b\u8f7dLinux\u7684\u955c\u50cf\u6587\u4ef6\u5373\u53ef\u3002\u7531\u4e8e\u81ea\u5df1\u5df2\u7ecf\u4f7f\u7528\u4e86\u534a\u5e74\u591a\u7684<code>WSL2</code>\uff0c\u6545\u9009\u62e9\u4e0b\u8f7d\u7684\u662fUbuntu\u7cfb\u7edf\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95eeZJU-mirror\u5373\u53ef\u3002\uff08\u6211\u5efa\u8bae\u4f7f\u7528Desktop\u7248\u672c\uff0c\u4f60\u4f1a\u5feb\u4e50\u5f88\u591a\uff0c\u540e\u9762\u4e5f\u4f1a\u65b9\u4fbf\u5f88\u591a\uff09</p> </li> <li> <p>\u5efa\u8bae\u4f7f\u7528\u865a\u62df\u673a\u7684\u8bdd\u53ef\u4ee5\u5355\u72ec\u51fa\u6765\u78c1\u76d8\u4fbf\u4e8e\u7ba1\u7406\u4ee5\u53ca\u5b89\u5168\u3002</p> </li> </ol> <p></p> <ol> <li>VMware\u865a\u62df\u673a\u7684\u5efa\u7acb\uff0c\u7f51\u4e0a\u4e5f\u6709\u5f88\u591a\u6559\u7a0b\uff0c\u6545\u4e0d\u5728\u6b64\u8bf4\u660e\u3002(ps:\u57fa\u672c\u4e0a\u9009\u62e9\u4f60\u521a\u4e0b\u8f7d\u597d\u7684iso\u955c\u50cf\uff0c\u9009\u62e9\u597d\u914d\u7f6e\u540e\u4e00\u8def\u786e\u5b9a\u5373\u53ef)</li> </ol> <ul> <li>\u865a\u62df\u673a\u521b\u5efa\u6210\u529f\uff0c\u5982\u56fe\uff1a</li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab1/#hpl_1","title":"HPL\u73af\u5883\u642d\u5efa","text":"<p>HPL\u662f<code>Linpack</code>\u6d4b\u8bd5\u7684\u4e00\u79cd\uff0c\u9700\u8981\u4f9d\u8d56<code>OpenMPI</code>&amp;<code>OpenBLAS</code>\u6765\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_3","title":"\u865a\u62df\u673a\u73af\u5883\u914d\u5236","text":"<p>\u76ee\u6807\uff1a\u5b89\u88c5\u76f8\u5173\u7f16\u8bd1\u5668\u4ee5\u53camake\u5de5\u5177\u548c\u7f51\u7edc\u5de5\u5177</p> <ol> <li><code>sudo apt install gcc g++ python3 gfortran -y</code></li> </ol> <p>\u68c0\u67e5\u7684\u8bdd\u6709<code>\u2026 --version</code>\u5373\u53ef\uff0c\u6216\u8005<code>apt list --installed</code>(\u4f46\u8fd9\u4e2a\u592a\u8822\u4e86)</p> <ol> <li> <p><code>sudo apt install make net-tools -y</code></p> </li> <li> <p><code>sudo apt install openssh-server -y</code></p> </li> </ol> <p>\u7528<code>sudo systemctl status ssh</code>\u548c<code>ifconfig</code>\u9a8c\u8bc1\u7f51\u7edc\u5de5\u5177\u548cSSH Server</p> <ol> <li>UFW\u6253\u5f00SSH\u7aef\u53e3</li> </ol> <p><code>sudo ufw allow ssh</code></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#openmpi","title":"Openmpi\u5b89\u88c5","text":"<ol> <li>\u4e0b\u8f7d\u5e76\u89e3\u538bOpenMPI</li> </ol> <p>\u7f51\u5740\u4e3a\uff1aOpen MPI: Version 4.1 (open-mpi.org)</p> <p>\u7528\u706b\u72d0\u6d4f\u89c8\u5668\u6253\u5f00\u70b9\u51fb\u4e0b\u8f7d\u540e\uff0c\u4ece\u7ec8\u7aef\u6253\u5f00\u5f53\u524d\u6587\u4ef6\u5939\uff0c\u4f7f\u7528\uff1a <code>tar xvf openmpi-4.1.1.tar.gz</code>(\u5b66\u4f1a\u4f7f\u7528<code>tab</code>\u8865\u5168)</p> <p>\uff08ps\uff1a\u7528\u684c\u9762\u7248\u7684\u597d\u5904\u6765\u5566\uff01\uff09</p> <p>\u975e\u684c\u9762\u7248\u7684\u7528\u6237\u5c31\u6b63\u5e38\u7528<code>wget</code>\u548c<code>curl</code>\u4e0b\u8f7d\u5c31\u884c\u3002</p> <p></p> <ol> <li>\u5b89\u88c5OpenMPI</li> </ol> <pre><code>cd openmpi-4.1.4\n./configure\nsudo make all install\n</code></pre> <p>\u200b    \u5173\u4e8e<code>sudo make all</code>&amp;<code>sudo make install</code>\u7684\u539f\u7406\uff0c\u6709\u4e00\u7bc7\u535a\u4e3b\u5199\u7684\u86ee\u4e0d\u9519\u7684\u3002link</p> <ol> <li>\u6dfb\u52a0\u8def\u5f84</li> </ol> <p><code>sudo vim /etc/profile</code>(\u8fd9\u91cc\u9700\u8981\u4e00\u70b9\u70b9vim\u7684\u77e5\u8bc6)</p> <p>\u5728profile\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0</p> <p></p> <p>\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u4f7f\u914d\u5236\u751f\u6548</p> <p><code>source /etc/profile</code></p> <p>(ps:\u53ef\u80fd\u7528\u6237\u540d\u4f1a\u53d8\u6210\u767d\u8272\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u73af\u5883\u66f4\u65b0)</p> <p>4.\u6d4b\u8bd5\u73af\u5883</p> <pre><code>cd Downloads/openmpi-4.1.4/examples\nmake &amp;&amp; mpirun -np 2 hello_c.c\n</code></pre> <ul> <li> <p>\u6d4b\u8bd5\u7ed3\u679c</p> <p></p> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab1/#openblas","title":"OpenBLAS\u5b89\u88c5","text":"<ul> <li> <p>\u7528<code>sudo apt-get install libopenblas-dev</code>\u547d\u4ee4\u5b89\u88c5</p> </li> <li> <p>\u5b89\u88c5\u8def\u5f84\u5728<code>/usr/lib/x86_64-linux-gnu/openblas-pthread</code></p> </li> </ul> <p>\u60f3\u8981\u6d4b\u8bd5\u81ea\u5df1\u662f\u5426\u5b89\u88c5\u6210\u529f\u53ef\u4ee5\u5728\u672c\u5730\u5199\u4e2a\u7a0b\u5e8f\u6d4b\u8bd5\uff0c\u4ee3\u7801\u89c1link</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#hpl_2","title":"HPL\u7684\u5b89\u88c5\u4ee5\u53ca\u73af\u5883\u914d\u5236","text":"<ul> <li>\u4e0b\u8f7d\u5e76\u89e3\u538b<code>hpl-2.3.tar.gz</code></li> </ul> <p><code>tar xvf hpl-2.3.tar.gz</code></p> <ul> <li>\u590d\u5236\u5e76\u7c98\u8d34Make\u6587\u4ef6\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u56fe\u5f62\u5316\u64cd\u4f5c\u55bd\uff09</li> </ul> <pre><code>cp Downloads/hpl-2.3/setup/Make.Linux_PII_CBLAS Downloads/hpl-2.3/Make.test\nmv hpl-2.3 hpl(\u91cd\u547d\u540d)\n</code></pre> <ul> <li>\u4fee\u6539makefile</li> </ul> <p>\u8fd9\u91cc\u4e0d\u5f97\u4e0d\u5410\u69fd\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u6211\u76ee\u524d\u6765\u8bf4\u8d39\u65f6\u6700\u957f\u7684\u5730\u65b9\uff0c\u57fa\u672c\u4e0a\u81ea\u5df1\u628a\u6574\u4e2aMakefile\u5168\u90e8\u91cd\u65b0\u8bfb\u548c\u5199\u4e86\u4e00\u904d\uff0c\u6a21\u677f\u57fa\u672c\u4e0a\u4e0d\u80fd\u600e\u4e48\u7528\u3002\u7136\u540e\u81ea\u5df1\u770b\u7740make\u7f16\u8bd1\u51fa\u6765\u7684\u62a5\u9519\u4e00\u70b9\u70b9\u6539\u3002\u57fa\u672c\u4e0a\u5c31\u5bf9\u5e94\u81ea\u5df1\u627e\u4e86\u4e00\u904d\u3002\u5982\u679c\u662f\u5b8c\u5168\u6309\u7167\u6211\u4e4b\u524d\u6b65\u9aa4\u6765\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u7167\u6284\u6211\u7684Makefile\u4e86</p> <pre><code>  SHELL        = /bin/sh\n  CD           = cd\n  CP           = cp\n  LN_S         = ln -s\n  MKDIR        = mkdir\n  RM           = /bin/rm -f\n  TOUCH        = touch\n  ARCH = test\n\n  TOPdir       = $(HOME)/Downloads/hpl\n  INCdir       = $(TOPdir)/include\n  BINdir       = $(TOPdir)/bin/$(ARCH)\n  LIBdir       = $(TOPdir)/lib/$(ARCH)\n  HPLlib       = $(LIBdir)/libhpl.a\n\n  MPdir = /usr/local/lib/openmpi\n  MPinc =\n  MPlib = /usr/local/lib/libmpi.so\n\n  LAdir        = /usr/lib/x86_64-linux-gnu/openblas-pthread\n  LAinc        =\n  LAlib        = $(LAdir)/libblas.a $(LAdir)/libblas.so\n\n  F2CDEFS      =\n\n  HPL_INCLUDES = -I$(INCdir) -I$(INCdir)/$(ARCH) $(LAinc) $(MPinc)\n  HPL_LIBS     = $(HPLlib) $(LAlib) $(MPlib)\n\n  HPL_OPTS     =\n\n  HPL_DEFS     = $(F2CDEFS) $(HPL_OPTS) $(HPL_INCLUDES)\n\n  CC           = /usr/local/bin/mpicc\n  CCNOOPT      = $(HPL_DEFS)\n  CCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -O3 -funroll-loops -w -Wall -pthread\n\n  LINKER       = /usr/local/bin/mpif77\n  LINKFLAGS    = $(CCFLAGS)\n\n  ARCHIVER     = ar\n  ARFLAGS      = r\n  RANLIB       = echo\n\n  arch = test\n</code></pre> <ul> <li>\u7f16\u8bd1\u5e76\u68c0\u67e5\u662f\u5426\u6210\u529f</li> </ul> <pre><code>make arch=test(\u4e00\u5b9a\u4e0d\u8981\u56e0\u4e3a\u53d8\u6210\u7684\u4e60\u60ef\u5728\u7b49\u53f7\u4e24\u8fb9\u591a\u6253\u7a7a\u683c)\ncd hpl/bin/test\ndir\nHPL.dat xhpl(\u8bc1\u660e\u5b89\u88c5\u6210\u529f!\u5982\u56fe)\n</code></pre> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_4","title":"\u514b\u9686\u8282\u70b9","text":"<p>\u5728VMware\u4e2d\u514b\u9686\u5df2\u7ecf\u914d\u7f6e\u597d\u7684\u8282\u70b9\uff0c\u6210\u4e3a\u96c6\u7fa4\u7684\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9.</p> <p>\u53ef\u4ee5\u5728\u514b\u9686\u524d\u5728\u4e3b\u673a\u4e0a\u5148\u5b89\u88c5\u597d<code>SSH</code>.\u540e\u9762\u80fd\u8282\u7ea6\u4e00\u70b9\u70b9\u65f6\u95f4\u3002</p> <p>\uff08Tips\uff1a\u4e00\u822c\u5148\u4f1a\u5728\u5de6\u4e0a\u89d2\u7684\u7f16\u8f91\u8fdb\u5165 \u2192\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\uff0c\u5c06\u5b50\u7f51IP\u66f4\u6539\u4e3a\u4e0d\u662f192.168.64\uff08\u53ef\u4ee5\u662f65\u2026\uff09\u3002\u7136\u540e\u518d\u53f3\u952e\u514b\u9686\uff0c\u8bb0\u5f97\u63d0\u524d\u683c\u51fa\u6765\u8fd1100G\u78c1\u76d8\uff0c\u5e76\u5728\u91cc\u9762\u5efa\u56db\u4e2a\u5c0f\u6587\u4ef6\u5939\u6709\u52a9\u4e8e\u7ba1\u7406\u548c\u865a\u62df\u673a\u7684\u7a33\u5b9a\uff09</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_5","title":"\u6d4b\u8bd5\u96c6\u7fa4","text":""},{"location":"ZJU_CS/HPC/homework/lab1/#ping","title":"ping\u901a","text":"<ul> <li>\u83b7\u5f97\u6bcf\u53f0\u865a\u62df\u673a\u7684IP\u5730\u5740</li> </ul> <p><code>ifconfig</code></p> <p></p> <ul> <li>\u83b7\u5f97\u7684\u865a\u62df\u673a\u5730\u5740\u5982\u4e0b\uff1a</li> </ul> <pre><code>192.168.253.129\n192.168.253.130\n192.168.253.131\n192.168.253.132\n</code></pre> <ul> <li>\u786e\u8ba4\u80fd\u76f8\u4e92ping\u901a</li> </ul> <p><code>ping 192.168.253.130 \u2026\u2026</code> </p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ssh_1","title":"\u914d\u5236SSH","text":"<ol> <li>\u751f\u6210\u516c\u94a5\u79c1\u94a5\u5bf9</li> </ol> <p>\u200b   <code>ssh-kegen -t rsa</code></p> <p>\u200b   \u8fd9\u91cc\u8ddfgit\u524d\u671f\u6b65\u9aa4\u4e00\u6837\uff0c\u8be6\u60c5\u53ef\u4ee5\u89c1git\u7b14\u8bb0</p> <ol> <li>\u5c06\u4e3b\u673a\u4e0a\u7684\u516c\u94a5\u62f7\u8d1d\u5230\u53e6\u5916\u4e09\u53f0\u865a\u62df\u673a\u7684\u76ee\u5f55\u4e0b</li> </ol> <p></p> <ol> <li>\u8fdc\u7a0b\u514d\u5bc6\u8bbf\u95ee\u6d4b\u8bd5</li> </ol> <p><code>ssh username@192.168.***.***</code></p> <p>\u590d\u5236\u5b8c\u6210\u540e\uff0c\u6ce8\u610f\u68c0\u67e5 <code>authorized_keys</code> (600) \u548c <code>.ssh/</code> (700) \u76ee\u5f55\u7684\u6743\u9650\uff0c\u5426\u5219\u65e0\u6cd5\u987a\u5229 <code>ssh</code>\u3002</p> <p>ssh passphrase \u2014\u2014 \u5982\u679c\u81ea\u5df1\u7684\u5bc6\u94a5\u6709 passphrase\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528 <code>ssh-agent</code> \u786e\u4fdd\u80fd\u6682\u65f6\u4e0d\u7528\u8f93\u5165 passphrase\uff0c\u4ee5\u514d\u4e4b\u540e\u5f71\u54cd <code>mpirun</code> \u6b63\u786e\u8fd0\u884c\u3002</p> <p>\u6ce8\uff1a\u6211\u4eec\u8fd8\u662f\u7528<code>ifconfig</code>\u5224\u65ad\u81ea\u5df1\u5f53\u524d\u6240\u5728\u4f4d\u7f6e\uff1b\u7528<code>logout</code>\u9000\u51faSSH\u8bbf\u95ee</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#mpirun","title":"mpirun\u5c1d\u8bd5","text":"<ol> <li>\u521b\u5efa\u4e3b\u673a\u4e2d\u7684hostfile\u6587\u4ef6\uff08\u4e0d\u7528\u5728\u610f\u683c\u5f0f\uff09</li> </ol> <p><code>vim myhostfile</code></p> <p>\uff08slots\u662f\u6838\u5fc3\u6570\u7684\u610f\u601d\uff0c\u8fd9\u8ddf\u4f60\u5728\u521b\u5efa\u865a\u62df\u7684\u65f6\u5019\u8bbe\u5b9a\u6709\u5173\uff0c\u8bb0\u5f97\u4e00\u5b9a\u52a0s\uff09</p> <pre><code>192.168.253.129 slots=2\n192.168.253.130 slots=2\n192.168.253.131 slots=2\n192.168.253.132 slots=2\n</code></pre> <ol> <li>\u67e5\u770b\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ebf\u65f6\u95f4</li> </ol> <p><code>mpirun --hostfile myhostfile uptime</code></p> <p></p> <ol> <li>\u8fd0\u884cHPL</li> </ol> <p><code>mpirun --hostfile myhostfile ./xhpl</code></p> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#discussion","title":"Discussion","text":"<p>\u9996\u5148\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u6536\u83b7\u4e86\u5f88\u591a\uff0c\u4e00\u65b9\u9762\u4e86\u89e3\u4e86\u8d85\u7ea7\u8ba1\u7b97\u673a\u5728\u5e76\u884c\u8fd0\u7b97\u65b9\u9762\u7684\u4e00\u4e9b\u7b80\u5355\u539f\u7406\uff1b\u6b64\u5916\uff0c\u6211\u5b66\u4e60\u5230\u4e86\u8bb8\u591a\u7f51\u7edc\u4e0e\u901a\u4fe1\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u5e76\u4e14\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5728\u505alab\u7684\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u6211\u53d1\u73b0\u6211\u81ea\u5df1\u4e4b\u524d\u6240\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u90fd\u80fd\u6574\u5408\u8d77\u6765\u5e76\u8fd0\u7528\u3002</p> <p>\u6b64\u5916\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u5728OpenMPI\u5b89\u88c5\u5e76\u6d4b\u8bd5\u7a0b\u5e8f\uff08\u7531\u4e8e\u5ffd\u7565\u4e86<code>&amp;&amp;</code>\u8fde\u63a5\u547d\u4ee4\u7b26\uff0c\u5bfc\u81f4\u803d\u6401\u4e86\u5f88\u591a\u65f6\u95f4\uff09\u4ee5\u53ca\u5728HPL\u7684makefile\u7f16\u5199\u8fc7\u7a0b\uff08\u6700\u7ec8\u81ea\u5df1\u76f8\u5f53\u4e8e\u627e\u76ee\u5f55\u91cd\u65b0\u624b\u5199\u4e86\u4e00\u904dmakefile\uff09\uff0c\u7565\u6709\u78d5\u7eca\uff0c\u5176\u4ed6\u60c5\u51b5\u90fd\u7b97\u987a\u5229\u3002\u672c\u6b21\u5b9e\u9a8c\u8fd8\u6709\u4e00\u4e2a\u5fc3\u5f97\u4f53\u4f1a\u5c31\u662f\u6211\u4eec\u4e00\u5b9a\u8981\u5b66\u4f1a\u770b\u7ec8\u7aef\u53cd\u9988\u56de\u6765\u7684\u62a5\u9519\uff0c\u4e0d\u80fd\u76f2\u76ee\u5728\u7f51\u4e0a\u67e5\u627e\u6559\u7a0b\uff08\u56fd\u5185\u6559\u7a0b\u62c9\u7684\u4e00\u5339\uff09\uff0c\u8fd9\u6837\u80fd\u591f\u6709\u6548\u5e76\u4e14\u5feb\u901f\u7684\u5e2e\u52a9\u6211\u4eec\u627e\u51fa\u81ea\u5df1\u7684\u95ee\u9898\u6240\u5728\u3002</p> <p>\u6700\u540e\u6d4b\u8bd5\u7684\u5b9e\u9a8c\u7ed3\u679c\u5982\u4e0a\u56fe\uff0c\u867d\u7136\u7ed3\u679c\u6709\u53cd\u9988\uff0c\u4f46\u4ecd\u6709\u56f0\u60d1\u7684\u70b9\u5c31\u662f\u4e0d\u77e5\u9053\u5982\u4f55\u53bb\u5bf9\u6bd4\u4f53\u73b0\u5e76\u884c\u8ba1\u7b97\u7684\u4f18\u8d8a\u6027\u3002\u8fd9\u4e2alab\u7ed9\u6211\u7684\u4e94\u6708\u753b\u4e0a\u4e86\u4e00\u4e2a\u8fd8\u7b97\u5706\u6ee1\u7684\u53e5\u53f7\u3002\u5e0c\u671b\u80fd\u591f\u52a0\u5165<code>ZJUSCT</code>\uff0c\u5728\u6bb5\u5b66\u671f\u5185\u6536\u83b7.</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/","title":"Lab-2","text":"<ul> <li>Lab-2<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)<ul> <li>SIMD</li> <li>\u5411\u91cf\u5316\u6307\u4ee4</li> <li>\u6c47\u7f16\u8bed\u8a00</li> </ul> </li> <li>Lab Design &amp; Test Result<ul> <li>Code Design</li> <li>\u6c47\u7f16\u6bd4\u8f83<ul> <li>SIMD\u7684\u6c47\u7f16</li> <li>\u666e\u901a\u7684\u6c47\u7f16</li> <li>\u6e90\u4ee3\u7801\u4e2d\u666e\u901a\u8868\u8fbe\u5f0f\u7684\u6c47\u7f16</li> </ul> </li> <li>\u5b9e\u9a8c\u7ed3\u679c</li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#lab_description","title":"Lab Description","text":"<p>\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570 API \u9700\u8981 include \u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u4e0d\u540c SIMD \u6307\u4ee4\u96c6\u9700\u8981\u7684\u5934\u6587\u4ef6\u4e0d\u540c\uff0c\u5177\u4f53\u9700\u8981\u53c2\u8003 Intel \u76f8\u5173\u6587\u6863\u3002</p> <pre><code>#include &lt;smmintrin.h&gt;\n#include &lt;emmintrin.h&gt;\n#include &lt;immintrin.h&gt;\n</code></pre> <p>\u672c\u6b21\u5b9e\u9a8c\u7684\u5b9e\u9a8c\u76ee\u6807\uff1a\u901a\u8fc7\u4f7f\u7528\u624b\u5199 SIMD \u5411\u91cf\u5316\u7684\u65b9\u5f0f\u5bf9\u8fd9\u4e2a\u5faa\u73af\u8fdb\u884c\u4f18\u5316</p> <pre><code>/* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n// -----------------------------------\nfor (int i = 0; i &lt; MAXN; ++i)\n{\n    c[i] += a[i] * b[i];\n}\n// -----------------------------------\n</code></pre> <p>\u8be6\u60c5\u8bf7\u770b\u5b9e\u9a8c\u6307\u5bfc</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#introduction_knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#simd","title":"SIMD","text":"<p>\u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41\uff08\u82f1\u8bed\uff1aSingle Instruction Multiple Data\uff0c\u7f29\u5199\uff1aSIMD\uff09\u662f\u4e00\u79cd\u91c7\u7528\u4e00\u4e2a\u63a7\u5236\u5668\u6765\u63a7\u5236\u591a\u4e2a\u5904\u7406\u5668\uff0c\u540c\u65f6\u5bf9\u4e00\u7ec4\u6570\u636e\uff08\u53c8\u79f0\u201c\u6570\u636e\u5411\u91cf\u201d\uff09\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5206\u522b\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u4ece\u800c\u5b9e\u73b0\u7a7a\u95f4\u4e0a\u7684\u5e76\u884c\u6027\u7684\u6280\u672f\u3002</p> <p>\u5728\u5fae\u5904\u7406\u5668\u4e2d\uff0c\u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41\u6280\u672f\u5219\u662f\u4e00\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u591a\u4e2a\u5e73\u884c\u7684\u5904\u7406\u5fae\u5143\uff0c\u4f8b\u5982Intel\u7684MMX\u6216SSE\uff0c\u4ee5\u53caAMD\u76843D Now!\u6307\u4ee4\u96c6\u3002</p> <p>\u56fe\u5f62\u5904\u7406\u5668\uff08GPU\uff09\u62e5\u6709\u5f3a\u5927\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\u548c\u53ef\u7f16\u7a0b\u6d41\u6c34\u7ebf\uff0c\u9762\u5bf9\u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41\u65f6\uff0c\u8fd0\u7b97\u80fd\u529b\u8fdc\u8d85\u4f20\u7edfCPU\u3002OpenCL\u548cCUDA\u5206\u522b\u662f\u76ee\u524d\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5f00\u6e90\u548c\u4e13\u5229\u901a\u7528\u56fe\u5f62\u5904\u7406\u5668\uff08GPGPU\uff09\u8fd0\u7b97\u8bed\u8a00\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_1","title":"\u5411\u91cf\u5316\u6307\u4ee4","text":"<p>\u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u652f\u6301\u5411\u91cf\u5316\u6307\u4ee4\uff0cx86 \u67b6\u6784\u4e0b Intel \u548c AMD \u4e24\u5bb6\u7684\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u8bf8\u5982 SSE\uff0cAVX \u7b49 SIMD \u6307\u4ee4\u96c6\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6570\u636e\u541e\u5410\u91cf\u3002</p> <p>\u73b0\u4ee3\u7f16\u8bd1\u5668\u5728\u9ad8\u4f18\u5316\u7b49\u7ea7\u4e0b\uff0c\u5177\u6709\u81ea\u52a8\u5411\u91cf\u5316\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u7ed3\u6784\u6e05\u6670\uff0c\u5faa\u73af\u8fb9\u754c\u6e05\u6670\u7684\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u5f88\u4f18\u79c0\u7684\u7a0b\u5ea6\u4e86\u3002\u7136\u800c\uff0c\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u59cb\u7ec8\u662f\u4fdd\u5b88\u7684\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u65e0\u6cd5\u5b8c\u6210\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u5411\u91cf\u5316\u7684\u5de5\u4f5c\uff0c\u4e3a\u4e86\u8ffd\u6c42\u6027\u80fd\uff0c\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\u7ecf\u5e38\u9700\u8981\u624b\u5199 SIMD \u4ee3\u7801\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002</p> <p>\u663e\u7136\u76f4\u63a5\u624b\u5199\u6c47\u7f16\u6307\u4ee4\u8fc7\u4e8e\u56f0\u96be\uff0c\u5728 C \u8bed\u8a00\u73af\u5883\u4e0b\uff0cIntel \u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5173\u4e8e SIMD \u6307\u4ee4\u7684\u51fd\u6570\u5c01\u88c5\u63a5\u53e3\u548c\u6307\u4ee4\u76f8\u5173\u884c\u4e3a\u7684\u53c2\u7167\u624b\u518c\uff0c\u53ef\u4ee5\u5728\u53c2\u8003\u8d44\u6599\u4e2d\u627e\u5230\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_2","title":"\u6c47\u7f16\u8bed\u8a00","text":"<p>\u6c47\u7f16\u8bed\u8a00\uff08\u82f1\u8bed\uff1aassembly language\uff09[\u6ce8 1][1]\u662f\u4efb\u4f55\u4e00\u79cd\u7528\u4e8e\u7535\u5b50\u8ba1\u7b97\u673a\u3001\u5fae\u5904\u7406\u5668\u3001\u5fae\u63a7\u5236\u5668\uff0c\u6216\u5176\u4ed6\u53ef\u7f16\u7a0b\u5668\u4ef6\u7684\u4f4e\u7ea7\u8bed\u8a00\u3002\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e2d\uff0c\u6c47\u7f16\u8bed\u8a00\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u96c6\u3002\u4e00\u79cd\u6c47\u7f16\u8bed\u8a00\u4e13\u7528\u4e8e\u67d0\u79cd\u8ba1\u7b97\u673a\u7cfb\u7edf\u7ed3\u6784\uff0c\u800c\u4e0d\u50cf\u8bb8\u591a\u9ad8\u7ea7\u8bed\u8a00\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7cfb\u7edf\u5e73\u53f0\u4e4b\u95f4\u79fb\u690d\u3002</p> <p>\u4f7f\u7528\u6c47\u7f16\u8bed\u8a00\u7f16\u5199\u7684\u6e90\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7\u76f8\u5e94\u7684\u6c47\u7f16\u7a0b\u5e8f\u5c06\u5b83\u4eec\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7684\u673a\u5668\u4ee3\u7801\u3002\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u6c47\u7f16\u8fc7\u7a0b\u3002</p> <p>\u5173\u4e8e\u6c47\u7f16\uff1a</p> <ol> <li>\u5b66\u4e60\u5185\u5bb9\u5341\u5206\u63a8\u8350\u53bb\u770bCSAPP</li> <li>\u6709\u4e2a\u5728\u7ebf\u7684\u7f16\u8bd1\u5668\u80fd\u591f\u6709\u52a9\u4e8e\u4f60\u7406\u89e3!</li> <li>\u5f53\u7136\u6211\u4e5f\u5efa\u8bae\u5927\u5bb6\u53ef\u4ee5\u5728\u81ea\u5df1\u672c\u5730\u7684\u7535\u8111\u4e0a\u901a\u8fc7gcc\u7684\u4e00\u4e9b\u53c2\u6570\u9009\u9879\u81ea\u5df1\u6765\u4e86\u89e3\u6c47\u7f16\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#lab_design_test_result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#code_design","title":"Code Design","text":"<p>My Code:</p> <pre><code>for (int n = 0; n &lt; 20; ++n)\n{\n    /* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n    // -----------------------------------\n    __m256 vecA, vecB, vecC, vecAB;\n    for (int i = 0; i &lt; MAXN; i += 8) \n    {\n        vecA = _mm256_loadu_ps(a + i);\n        vecB = _mm256_loadu_ps(b + i);\n        vecC = _mm256_loadu_ps(c + i);\n\n        // vecAB = _mm256_mul_ps(vecA, vecB);\n        // vecC = _mm256_add_ps(vecAB, vecC);\n        vecC = _mm256_fmadd_ps(vecA, vecB, vecC);\n        _mm256_storeu_ps(c + i, vecC);\n    }\n}\n</code></pre> <p>ps: \u8fd9\u6bb5\u4ee3\u7801\u4e5f\u6ca1\u6709\u8003\u8651\u5185\u5b58\u5bf9\u9f50\u95ee\u9898\uff0c\u5982\u679c\u4f60\u7684\u6570\u636e\u662f\u5bf9\u9f50\u7684\uff0c\u4f60\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528<code>_mm256_load_ps</code>\u548c<code>_mm256_store_ps</code>\u6765\u63d0\u9ad8\u6027\u80fd\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_3","title":"\u6c47\u7f16\u6bd4\u8f83","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#simd_1","title":"SIMD\u7684\u6c47\u7f16","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#_4","title":"\u666e\u901a\u7684\u6c47\u7f16","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#_5","title":"\u6e90\u4ee3\u7801\u4e2d\u666e\u901a\u8868\u8fbe\u5f0f\u7684\u6c47\u7f16","text":"<p>\u6211\u4eec\u4e0d\u96be\u770b\u5230\u4ed6\u7684\u5904\u7406\u4e5f\u5df2\u7ecf\u6709SIMD\uff08\u5982\uff1a<code>vmovss</code>\u3001<code>vaddss</code>\uff09\u7b49\u7684\u4f18\u5316\u4e86</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_6","title":"\u5b9e\u9a8c\u7ed3\u679c","text":"<p>ps:\u8bb0\u5f97\u6dfb\u52a0<code>gcc</code>\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u5426\u5219\u53ef\u80fd\u4e0d\u901a\u8fc7!</p> <p></p> <p>\u7ed3\u8bba\uff1a\u6700\u540e\u7684\u52a0\u901f\u6bd4\u5c06\u8fd12.</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u624b\u5199SIMD\u7684\u5206\u88c5\u51fd\u6570\u5b9e\u73b0\u6c47\u7f16\u4e0a\u7684\u4f18\u5316\u3002\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u6211\u8fd8\u770b\u5230\uff0c\u73b0\u4ee3\u7f16\u8bd1\u5668\u90fd\u5341\u5206\u667a\u80fd\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u4f8b\u5982\u50cf\uff1a<code>GCC</code>\u7f16\u8bd1\u5668\uff1a\u4f7f\u7528<code>-O3</code>\u9009\u9879\u542f\u7528\u6240\u6709\u4f18\u5316\uff0c\u5e76\u4f7f\u7528<code>-ftree-vectorize</code>\u9009\u9879\u542f\u7528\u81ea\u52a8\u5411\u91cf\u5316\u3002\uff08\u5982\u4e0b\u56fe\uff09\u5f53\u7136\u6709\u7684\u65f6\u5019\u53ef\u80fd\u56e0\u4e3a\u5206\u652f\u590d\u6742\u7684\u539f\u56e0\u65e0\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u7f16\u8bd1\u6307\u5bfc\u8bed\u53e5\u4f8b\u5982\uff1a<code>\\#pragma omp parallel for reduction(+:sum) private(x)</code>\u6765\u63d0\u793a\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u4f18\u5316</p> <p></p> <p>\u5b9e\u9645\u81ea\u52a8\u4f18\u5316\u7684\u52a0\u901f\u6bd4\u5df2\u7ecf\u975e\u5e38\u63a5\u8fd1\u624b\u52a8\u4f18\u5316\u7684\u4e86\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u8fd9\u4e9b\u5c01\u88c5\u51fd\u6570\u7684\u5e95\u5c42\u5b9e\u73b0\u8fd8\u662f\u6539\u53d8\u6c47\u7f16\u8bed\u8a00\u3002\u8fd9\u5f53\u7136\u5f97\u76ca\u4e8e\u73b0\u4ee3\u8ba1\u7b97\u673a\u9ad8\u901f\u53d1\u5c55\u4f7f\u5f97cpu\u4e0a\u80fd\u5b9e\u73b0\u66f4\u591a\u7684\u6307\u4ee4\u52a0\u901f\u5de5\u4f5c\u3002\u5411\u91cf\u5316\u7684\u601d\u60f3\u4ee5\u53ca\u8fd9\u4e2a\u51fd\u6570\u7684\u6574\u4f53\u6784\u9020\uff0c\u5176\u5b9e\u8ddf\u6211\u4eec\u5728<code>CUDA</code>\u7f16\u7a0b\u8bfe\u4e0a\u5206\u914dthreads\u53bb\u5b8c\u6210\u52a0\u6cd5\u5de5\u4f5c\u4e00\u6837\u5341\u5206\u76f8\u4f3c\u3002\u5305\u62ec\u4e00\u4e9bMPI\u7684\u8bbe\u8ba1\u7ed3\u6784\u4e5f\u662f\u5982\u6b64\u3002\u901a\u8fc7\u5411\u91cf\u5316\uff08\u4ea6\u6216\u662f\u5c01\u88c5\u7edf\u4e00\u5904\u7406\u7684\u601d\u60f3\uff09\u6765\u5b9e\u73b0high performance\uff01</p> <p>\u6700\u540e\u7684\u6700\u540e\u6211\u60f3\u8bf4\u7684\u662f\uff1a\u6b63\u5982\u5b9e\u9a8c\u6307\u5bfc\u548c\u4e0a\u8bfe\u8bb2\u8fc7\u7684\u90a3\u6837\uff1a\u201c\u6df1\u5165\u5230\u8fd9\u4e2a\u7ea7\u522b\u7684\u4f18\u5316\u5df2\u7ecf\u5f00\u59cb\u9700\u8981\u8003\u8651\u5177\u4f53\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u7ec6\u8282\u4e86\uff0c\u5982\u67d0\u4e2a\u67b6\u6784\u4e0b\u67d0\u6761\u6307\u4ee4\u7684\u5b9e\u73b0\u5ef6\u65f6\u548c\u541e\u5410\u91cf\u662f\u591a\u5c11\uff0c\u5904\u7406\u5668\u63d0\u4f9b\u4e86\u591a\u5c11\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8bbf\u5b58\u7684\u5bf9\u9f50\u7b49\u7b49\u3002\u8fd9\u79cd\u65f6\u5019\u7f16\u8bd1\u5668\u5177\u4f53\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u80fd\u6bd4 C \u8bed\u8a00\u4ee3\u7801\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4f60\u80fd\u4e86\u89e3\u5230\u81ea\u5df1\u4f7f\u7528\u4e86\u591a\u5c11\u5bc4\u5b58\u5668\uff0c\u7f16\u8bd1\u5668\u662f\u5426\u751f\u6210\u4e86\u9884\u671f\u5916\u7684\u4ee3\u7801\u7b49\u7b49\u3002\u4f46\u8fd9\u4e00\u5b9a\u662f\u4f60\u6700\u540e\u518d\u53bb\u8003\u8651\u53bb\u901a\u8fc7SIMD\u4f18\u5316\u4ee3\u7801\u201d\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2/","title":"Lab2 \u5411\u91cf\u5316\u8ba1\u7b97","text":"<ul> <li>Lab2 \u5411\u91cf\u5316\u8ba1\u7b97<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>Code Design</li> <li>Test Result</li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab2/#lab_description","title":"Lab Description","text":"<p>\u672c\u5b9e\u9a8c\u7684\u76ee\u6807\u662f\u4f7f\u7528<code>numpy</code>\uff0c\u7528\u5411\u91cf\u5316\u7684\u8bed\u8a00\u6539\u5199\u53cc\u7ebf\u6027\u63d2\u503c\uff01\uff08\u4e0d\u8981\u51fa\u73b0for\uff09</p> <ol> <li>\u57fa\u51c6\u4ee3\u7801</li> </ol> <pre><code>def bilinear_interp_baseline(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the baseline implementation of bilinear interpolation without vectorization.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # Get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assert N == N1\n\n    # Do iteration\n    res = np.empty((N, H2, W2, C), dtype=int64)\n    for n in range(N):\n        for i in range(H2):\n            for j in range(W2):\n                x, y = b[n, i, j]\n                x_idx, y_idx = int(np.floor(x)), int(np.floor(y))\n                _x, _y = x - x_idx, y - y_idx\n                # For simplicity, we assume:\n                # - all x are in [0, H1 - 1)\n                # - all y are in [0, W1 - 1)\n                res[n, i, j] = a[n, x_idx, y_idx] * (1 - _x) * (1 - _y) + \\\n                               a[n, x_idx + 1, y_idx] * _x * (1 - _y) + \\\n                               a[n, x_idx, y_idx + 1] * (1 - _x) * _y + \\\n                               a[n, x_idx + 1, y_idx + 1] * _x * _y\n    return res\n</code></pre> <ol> <li>\u5b8c\u6210\u5411\u91cf\u5316\u5b9e\u73b0</li> </ol> <p>\u5728\u6e90\u4ee3\u7801\u4e2d\u7684 <code>bilinear_interp/vectorized.py</code> \u4e2d\uff0c\u4f7f\u7528numpy\u5b8c\u6210 <code>bilinear_interp_vectorized</code> \u51fd\u6570\u3002</p> <ol> <li>\u68c0\u67e5\u6b63\u786e\u6027\u4ee5\u53ca\u52a0\u901f\u6bd4</li> </ol> <p>\u8be6\u7ec6\u7684\u5b9e\u9a8c\u6307\u5bfc\u8bf7\u70b9\u51fb</p> <p>\u63d0\u793a\uff1a</p> <ol> <li>\u4e00\u5b9a\u4e00\u5b9a\u6ce8\u610f\u672c\u5b9e\u9a8c\u4e2d\u6240\u751f\u6210\u7684\\((N,H_2,W_2,2)\\)\u4e2d\u7684\u20182\u2019\u662f\u6307\u6bcf\u4e2a\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 a' \u56fe\u4e2d\u5bf9\u5e94\u70b9\u7684\u5750\u6807\uff0c\u5e76\u5c06\u91c7\u6837\u7ed3\u679c\u8fd4\u56de\u3002\u5e76\u4e14\u8fd9\u4e2a\u51fd\u6570\u4e0e\u56fe\u7247\u7684\u653e\u5927\u7f29\u5c0f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff01\uff01\uff01 (\u66f4\u5177\u4f53\u6765\u8bf4\u5e94\u8be5\u662f\u5c5e\u6027\u7a7a\u95f4\u548c\u6837\u672c\u7a7a\u95f4\u8fd9\u6837\u4e00\u4e2a\u6982\u5ff5)</li> <li>\u6b64\u5916\u5408\u7406\u5229\u7528<code>numpy</code>\u81ea\u8eab\u7684\u5e7f\u64ad\u6216\u8005\u63d2\u8f74\u7b49\u65b9\u6cd5\u6765\u8ba1\u7b97\uff08\u4e0d\u8981\u51fa\u73b0<code>for</code>)</li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab2/#introduction_knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<ol> <li>Numpy\uff1aNumPy\u662fPython\u8bed\u8a00\u7684\u4e00\u4e2a\u6269\u5c55\u7a0b\u5e8f\u5e93\u3002\u652f\u6301\u9ad8\u9636\u5927\u89c4\u6a21\u7684\u591a\u7ef4\u6570\u7ec4\u4e0e\u77e9\u9635\u8fd0\u7b97\uff0c\u6b64\u5916\u4e5f\u9488\u5bf9\u6570\u7ec4\u8fd0\u7b97\u63d0\u4f9b\u5927\u91cf\u7684\u6570\u5b66\u51fd\u6570\u5e93\u3002\u5176\u5e95\u5c42\u662fc\u8bed\u8a00\u6765\u5b9e\u73b0\u3002\u901a\u8fc7\u63a5\u53e3\u4ee5\u53ca\u5411\u91cf\u5316\u7684\u8868\u8ff0\u907f\u514d\u4e86python\u4e2d\u5faa\u73af\u8c03\u7528\u7684\u5f00\u9500\uff0c\u6781\u5927\u52a0\u5feb\u4e86\u901f\u5ea6\u3002</li> </ol> <p>\u6211\u8bb0\u5f55\u4e86\u4e00\u4e9bnumpy\u7684\u4f7f\u7528\u5728\u8bfe\u7a0b\u7b14\u8bb0\u4e2d\uff0c\u4ec5\u4f5c\u4e3a\u53c2\u8003</p> <ol> <li>\u53cc\u7ebf\u6027\u63d2\u503c\uff1a\u5982\u4e0b\u56fe\uff0c\u76f8\u4fe1\u80fd\u591f\u5f88\u5feb\u7684\u7406\u89e3\u5176\u4e2d\u7684\u610f\u601d</li> </ol> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab2/#lab_design_test_result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab2/#code_design","title":"Code Design","text":"<p>\u6211\u8ba4\u4e3a\u672c\u5b9e\u9a8c\u7684\u8bbe\u8ba1\u7684\u76ee\u6807\u5728\u4e8e\u80fd\u591f\u719f\u6089<code>numpy</code>\u4ee5\u53ca\u5176\u4e2d<code>\u5e7f\u64ad</code>\u7684\u4e00\u4e9b\u7279\u6027\uff0c\u4ee5\u53ca\u77e9\u9635/\u5411\u91cf\u7684\u8ba1\u7b97\u3002\u6211\u8bbe\u8ba1\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n\n    # TODO: Implement vectorized bilinear interpolation\n\n    # Get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assert N == N1\n\n    # Calculate floor indices\n    x_int = np.floor(b[:, :, :, 0]).astype(int)\n    y_int = np.floor(b[:, :, :, 1]).astype(int)\n\n    # Calculate fractional parts\n    x_frac = b[:, :, :, 0] - x_int\n    y_frac = b[:, :, :, 1] - y_int\n\n    # Calculate interpolation weights\n    w1 = (1 - x_frac) * (1 - y_frac)\n    w2 = x_frac * (1 - y_frac)\n    w3 = (1 - x_frac) * y_frac\n    w4 = x_frac * y_frac\n\n    # Perform vectorized bilinear interpolation using numpy.\n    res = a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int, y_int] * w1[:, :, :, np.newaxis] + \\\n          a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int + 1, y_int] * w2[:, :, :, np.newaxis] + \\\n          a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int, y_int + 1] * w3[:, :, :, np.newaxis] + \\\n          a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int + 1, y_int + 1] * w4[:, :, :, np.newaxis]\n\n    return res.astype(int)\n</code></pre> <p>\u5176\u4e2d\u503c\u5f97\u4e00\u63d0\u7684\u662f\u6700\u540e\u7684\u8ba1\u7b97\u65b9\u6cd5\uff08\u901a\u8fc7\u7f51\u7edc\u4e0a\u7684\u5b66\u4e60\uff09\uff1a</p> <p><code>a[np.arange(N)[:, np.newaxis, np.newaxis], x_idx, y_idx]</code>\u662f\u4e00\u79cd\u4f7f\u7528NumPy\u7684\u9ad8\u7ea7\u7d22\u5f15\u6280\u5de7\uff0c\u7528\u4e8e\u4ece\u6570\u7ec4<code>a</code>\u4e2d\u83b7\u53d6\u7279\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u3002</p> <p>\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a</p> <ol> <li><code>np.arange(N)</code>\u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5305\u542b\u4ece0\u5230N-1\u7684\u6574\u6570\u3002</li> <li><code>[:, np.newaxis, np.newaxis]</code>\u4f7f\u7528\u5207\u7247\u64cd\u4f5c\u548c<code>np.newaxis</code>\u5c06\u4e00\u7ef4\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e09\u7ef4\u6570\u7ec4\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4e0e<code>x_idx</code>\u548c<code>y_idx</code>\u7684\u7ef4\u5ea6\u5339\u914d\u3002</li> <li><code>x_idx</code>\u548c<code>y_idx</code>\u662f\u4e4b\u524d\u8ba1\u7b97\u5f97\u5230\u7684\u6574\u6570\u7d22\u5f15\u6570\u7ec4\uff0c\u5b83\u4eec\u7684\u5f62\u72b6\u4e3a[N, H2, W2]\u3002</li> <li><code>a[np.arange(N)[:, np.newaxis, np.newaxis], x_idx, y_idx]</code>\u4f7f\u7528\u8fd9\u4e9b\u7d22\u5f15\u6570\u7ec4\u6765\u83b7\u53d6<code>a</code>\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u8fd9\u91cc\u7684\u9ad8\u7ea7\u7d22\u5f15\u64cd\u4f5c\u4f1a\u540c\u65f6\u5728\u4e09\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u7d22\u5f15\uff0c\u8fd4\u56de\u4e00\u4e2a\u5f62\u72b6\u4e3a[N, H2, W2, C]\u7684\u6570\u7ec4\u3002</li> </ol> <p>\u603b\u7ed3\u8d77\u6765\uff0c<code>a[np.arange(N)[:, np.newaxis, np.newaxis], x_idx, y_idx]</code>\u7684\u4f7f\u7528\u9ad8\u7ea7\u7d22\u5f15\u64cd\u4f5c\u4ece\u6570\u7ec4<code>a</code>\u4e2d\u83b7\u53d6\u7279\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u901a\u8fc7\u5728\u4e09\u4e2a\u7ef4\u5ea6\u4e0a\u540c\u65f6\u8fdb\u884c\u7d22\u5f15\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5e94\u4f4d\u7f6e\u7684\u63d2\u503c\u8ba1\u7b97\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2/#test_result","title":"Test Result","text":"<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u52a0\u901f\u6bd4\uff1a\u8fd1\u4e4e34\u500d\uff0c\u53ef\u89c1\u5411\u91cf\u5316\u8ba1\u7b97\u7684\u597d\u5904\uff01</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab2/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u672c\u6b21\u5b9e\u9a8c\uff0c\u6211\u9996\u5148\u901a\u8fc7\u6559\u5b66\u4ee5\u53ca\u5b98\u65b9\u6587\u6863\u7684\u9605\u8bfb\u5b66\u4e60\u4e86<code>NumPy</code>\u7684\u57fa\u672c\u4f7f\u7528\u3002\u901a\u8fc7\u7f51\u7edc\u5de5\u5177\u7684\u5e2e\u52a9\u5b66\u4e60\u5230\u4e86\u4e00\u79cd\u9ad8\u9636\u7684\u7d22\u5f15\u6280\u5de7\u4ee5\u53ca\u6570\u636e\u8ba1\u7b97\u7684\u65b9\u6cd5\u3002</p> <p>\u672c\u6b21\u4e3b\u8981\u78d5\u7eca\u81ea\u5df1\u7684\u5b9e\u9a8c\u96be\u70b9\u662f\u6ca1\u6709\u81ea\u5df1\u8bfb\u9898\uff0c\u4e3b\u89c2\u4ee3\u5165\u4ee5\u4e3a\u662f\u8981\u901a\u8fc7\u63d2\u503c\u6765\u8fdb\u884c\u56fe\u7247\u7684\u653e\u7f29\u64cd\u4f5c\uff0c\u4f46\u5b9e\u9645\u5219\u4e0d\u662f\u8fd9\u6837\u3002\u540e\u6765\u81ea\u5df1\u9605\u8bfb\u4e86\u4ee3\u7801\uff0c\u641e\u6e05\u6bcf\u53e5\u8bed\u6cd5\u4ee5\u53ca\u610f\u4e49\u4e4b\u540e\u5f88\u5feb\u89e3\u51b3\u4e86\u8fd9\u4e2alab\uff01</p> <p>\u6700\u540e\u611f\u8c22\u8001\u5e08\u548c\u5b66\u957f\uff0c\u8ba9\u6211\u901a\u8fc7\u672c\u6b21lab\u7684\u7ec3\u4e60\u5bf9\u9ad8\u6027\u80fd\u8ba1\u7b97\u4ee5\u53ca\u4f18\u5316\u6709\u4e86\u4e00\u4e2a\u66f4\u6e05\u6670\u7684\u8ba4\u8bc6\uff01</p>"},{"location":"ZJU_CS/HPC/homework/lab3/","title":"Lab-3 \u57fa\u4e8eCUDA\u5bf9GEMM\u7684\u4f18\u5316","text":"<ul> <li>Lab-3 \u57fa\u4e8eCUDA\u5bf9GEMM\u7684\u4f18\u5316<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>AdderCudaKernel</li> <li>Shared Memory</li> <li>\u5faa\u73af\u5c55\u5f00</li> <li>\u6d4b\u8bd5\u7ed3\u679c</li> </ul> </li> <li>Discussion</li> <li>Bonus</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab3/#lab_description","title":"Lab Description","text":"<p>\u5177\u4f53\u63cf\u8ff0\u8bf7\u89c1{\u5b9e\u9a8c\u624b\u518c}(https://zjusct.pages.zjusct.io/summer-course-2023/HPC101-Labs-2023/Lab3-Cuda/)</p> <p>\u901a\u7528\u77e9\u9635\u4e58\u6cd5\uff08General matrix multiply, GEMM\uff09\u662f BLAS \u4e2d\u7ecf\u5178\u7684\u5b50\u7a0b\u5e8f\u4e4b\u4e00\u3002[2] \u4f5c\u4e3a\u5f53\u4eca\u79d1\u5b66\u8ba1\u7b97\u6700\u5e38\u89c1\u7684\u8ba1\u7b97\u4efb\u52a1\u4e4b\u4e00\uff0cGEMM \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u9ad8\u6548\u7684\u77e9\u9635\u4e58\u6cd5\u3002\u4f18\u5316 GEMM \u4e5f\u662f HPC \u754c\u975e\u5e38\u57fa\u7840\u7684\u4efb\u52a1\u3002</p> <p>\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4f60\u4f7f\u7528 CUDA \u5b8c\u6210\u4e00\u4e2a\u9ad8\u6027\u80fd GEMM \u5b9e\u73b0\u3002</p> <p>Bonus\uff1a\u53e6\u5916\u672c\u6b21\u5b9e\u9a8c\u63d0\u4f9b\u7684 GPU \u4e0a\uff0c\u5305\u542b\u4e0a\u8ff0\u63d0\u53ca\u7684 Tensor Core \u6a21\u5757\u3002\u5408\u7406\u7684\u4f7f\u7528\u5b83\u80fd\u591f\u8fdb\u4e00\u6b65\u52a0\u901f\u5377\u79ef\u7684\u8ba1\u7b97\u3002\u5728 Cuda 9.0 \u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u5d4c <code>PTX</code> \u6c47\u7f16\u6216\u8005 CUDA \u7684 C++ \u6269\u5c55 <code>nvcuda::wmma</code> \u7684\u65b9\u5f0f\u6765\u663e\u5f0f\u5730\u8c03\u7528 Tensor Core \u6765\u8fdb\u884c\u8ba1\u7b97\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#introduction_knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<ol> <li> <p>CUDA\u4f7f\u7528\uff1a\u5efa\u8bae\u4e0a\u5b98\u7f51\u3002\u81f3\u4e8elab\u4e2d\u63d0\u5230\u7684\u4e0d\u540cAPI\u7684\u533a\u522b\uff0c\u53ef\u89c1\u535a\u5ba2</p> </li> <li> <p>\u5173\u4e8e\u9ad8\u6027\u80fd\u8ba1\u7b97\u77e9\u9635\u4e58\u6cd5\uff08GEMM\uff09\u7684\u8bf4\u660e. CS217</p> </li> <li> <p>Introduction to shared memory.(link) </p> </li> <li> <p>\u4e00\u4e2aGithub\u4e0a\u4e0d\u540c\u4f18\u5316\u65b9\u6cd5\u7684\u5bf9\u6bd4</p> </li> <li> <p>CUDA\u81ea\u5df1\u5bf9shared memory \u7684\u4f7f\u7528\u7684\u793a\u4f8b3.2.4 GEMM</p> </li> <li> <p>\u6709\u4e9b\u77e5\u8bc6\u611f\u89c9\u95eegpt\u83b7\u53d6\u7684\u901f\u5ea6\u4f1a\u66f4\u5feb\uff0c\u4f46\u662f\u5177\u4f53\u7684\u7ec6\u8282\u8fd8\u662f\u5728\u5b98\u7f51\u4e0a\u67e5\u9605\u66f4\u597d\uff08\u5b98\u7f51\u7684\u77e5\u8bc6\u4ecb\u7ecd\u975e\u5e38\u5168\uff09\\</p> </li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab3/#lab_design_test_result","title":"Lab Design &amp; Test Result","text":"<pre><code>/// \\brief Let A to be A + B.\n__global__ void AdderCudaKernel(double *__restrict__ a,\n                                  const double *__restrict__ b)\n{\n    // const int i = blockIdx.x * block_size + threadIdx.x;\n    // const int j = blockIdx.y * block_size + threadIdx.y;\n    // if (i &lt; size &amp;&amp; j &lt; size)\n    // {\n    //   a(i, j) += b(i, j);\n    // }\n    __shared__ double shared_a[block_size][block_size];\n    __shared__ double shared_b[block_size][block_size];\n\n    int i = blockIdx.x * block_size + threadIdx.x;\n    int j = blockIdx.y * block_size + threadIdx.y;\n\n    if (i &lt; size &amp;&amp; j &lt; size) {\n        shared_a[threadIdx.x][threadIdx.y] = a[i * size + j];\n        shared_b[threadIdx.x][threadIdx.y] = b[i * size + j];\n        __syncthreads();\n\n        shared_a[threadIdx.x][threadIdx.y] += shared_b[threadIdx.x][threadIdx.y];\n        __syncthreads();\n\n        a(i,j) = shared_a[threadIdx.x][threadIdx.y];\n    }\n}\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ a, \n                                   const double *__restrict__ b, \n                                   double *__restrict__ result) \n{     \n    // Get the index of the current thread\n    const int row = blockIdx.y * blockDim.y + threadIdx.y;\n    const int col = blockIdx.x * blockDim.x + threadIdx.x;\n    const int block_num = (size + block_size - 1) / block_size;\n\n    // Define shared memory\n    alignas(32) __shared__ double shared_a[block_size][block_size];\n    alignas(32) __shared__ double shared_b[block_size][block_size];\n\n    // Perform matrix multiplication operation\n    double sum = 0.0f;\n    for (int i = 0; i &lt; block_num; i++) {\n        // Load data from A and B into shared memory\n        int idx_a = row * size + i * block_size + threadIdx.x;\n        int idx_b = (i * block_size + threadIdx.y) * size + col;\n        shared_a[threadIdx.y][threadIdx.x] = (row &lt; size &amp;&amp; (i * block_size + threadIdx.x) &lt; size) ? a[idx_a] : 0.0f;\n        shared_b[threadIdx.y][threadIdx.x] = ((i * block_size + threadIdx.y) &lt; size &amp;&amp; col &lt; size) ? b[idx_b] : 0.0f;\n         // Synchronize to make sure the matrices are loaded before starting the computation\n        __syncthreads();\n\n        #pragma unroll\n        for (int j = 0;  j &lt; block_size; j ++) {\n            // sum = fma(shared_a[threadIdx.y][j], shared_b[j][threadIdx.x], sum);\n            // sum = fma(shared_a[threadIdx.y][j + 1], shared_b[j + 1][threadIdx.x], sum);\n            // sum = fma(shared_a[threadIdx.y][j + 2], shared_b[j + 2][threadIdx.x], sum);\n            // sum = fma(shared_a[threadIdx.y][j + 3], shared_b[j + 3][threadIdx.x], sum);\n            sum += shared_a[threadIdx.y][j] * shared_b[j][threadIdx.x];\n        }\n        // Synchronize to make sure the computation is done before loading the next sub-matrix\n        __syncthreads();\n    }\n\n    if(row &lt; size &amp;&amp; col &lt; size) {\n        // Write the result back to result_kernel\n        result(row, col) = sum;\n    }\n}\n</code></pre> <p>Baseline\u5206\u6790\uff1a\u5bf9\u4e8ebaseline\u800c\u8a00\uff0c\u5176\u901f\u5ea6\u6162\u7684\u539f\u56e0\u4e00\u65b9\u9762\u662f\u53ea\u80fd\u4e32\u884c\u7ebf\u6027\u8fdb\u884c\u8ba1\u7b97\uff1b\u53e6\u4e00\u65b9\u9762\u5728\u4e8e\u6bcf\u6b21\u5faa\u73af\u90fd\u8981\u5bf9\u4e3b\u5b58\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u3002\u6545\u6211\u4eec\u8981\u9488\u5bf9\u4ee5\u4e0a\u7684\u5185\u5bb9\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u4f18\u5316\u7b56\u7565\uff1a\u5171\u4eab\u5185\u5b58\uff0c\u5185\u5b58\u5bf9\u9f50\uff0c\u5faa\u73af\u5c55\u5f00\uff08\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5b9e\u73b0\uff09\u3001fma\u7b49</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#addercudakernel","title":"AdderCudaKernel","text":"<p>\u7b2c\u4e00\u4e2a\u662f\u5e38\u89c4\u7684AdderCudaKernel\u7684\u6d4b\u8bd5\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u7684\u6d4b\u8bd5\u65f6\u95f4\uff0c\u7531\u4e8e\u6bcf\u6b21\u6d4b\u8bd5\u5177\u6709\u968f\u673a\u4ee5\u53ca\u4e0d\u7a33\u5b9a\u6027\uff0c\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\u6211\u5206\u6790\u53ef\u80fd\u662f<code>__syncthreads()\uff1b</code>\u5bfc\u81f4\u505c\u987f\u7684\u65f6\u95f4\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#shared_memory","title":"Shared Memory","text":"<p>\u5171\u4eab\u5185\u5b58\u662f\u6d4b\u8bd5\u4e2d\u52a0\u901f\u7684\u4e3b\u8981\u539f\u56e0\uff0c\u6211\u4eec\u5176\u4e2d\u4f7f\u7528\u5185\u5b58\u5bf9\u9f50\u7684\u65b9\u5f0f\u80fd\u591f\u6709\u4e9b\u8bb8\u52a0\u901f\u3002</p> <p>\u5728\u6d4b\u8bd5\u4e2d\u6211\u4eec\u53d1\u73b0\u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f\u662f<code>0xc000</code>,\u56e0\u6b64\u6211\u4eec\u5c06blocksize\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a16\u6bd4\u8f83\u5408\u9002\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#_1","title":"\u5faa\u73af\u5c55\u5f00","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u4f18\u5316\u624b\u6bb5\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662fO3\u4f18\u5316\uff0c\u4ee5\u53ca<code>#pragma unroll</code>,\u63d0\u793a\u7f16\u8bd1\u5668\uff0c\u6545\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\u53d1\u73b0\u4e0d\u7528\u81ea\u5df1\u624b\u5199\u5faa\u73af\u5c55\u5f00\u7684\u4f18\u5316\u3002</p> <p>\u5176\u4e2d<code>fma</code> \u503c\u5f97\u6211\u4eec\u5b66\u4e60\uff0c\u8fd9\u662fCUDA\u672c\u8eab\u81ea\u5e26\u7684\u4e00\u79cd\u52a0\u901f\u6307\u4ee4\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#_2","title":"\u6d4b\u8bd5\u7ed3\u679c","text":"<p>\u6545\u52a0\u901f\u6bd4\u4e3a0.94818</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#discussion","title":"Discussion","text":"<p>\u672c\u6b21lab\u6559\u4f1a\u4e86\u6211\u5982\u4f55\u4f7f\u7528CUDA\u8fdb\u884cGPU\u7f16\u7a0b\uff0c\u5728\u6574\u4e2a\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u57fa\u672c\u9605\u8bfb\u4e86\u5b98\u65b9\u6587\u6863\uff0c\u5e76\u4e14\u4e86\u89e3\u4e86thread\u548cwarp\u7f16\u7a0b\u601d\u60f3\uff0c\u4ee5\u53ca\u7ed3\u5408\u8bfe\u4e0a\u7684\u77e5\u8bc6\uff0c\u6df1\u5165\u7406\u89e3\u4e86\u5185\u5b58\u7684\u5185\u90e8\u6784\u9020\u4ee5\u53caNVIDA\u663e\u5361\u7684\u81ea\u8eab\u7ed3\u6784\u7279\u6027\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u4f18\u5316\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#bonus","title":"Bonus","text":"<p>\u5173\u4e8eBonus\uff0c\u867d\u7136\u81ea\u5df1\u6ca1\u6709\u5b8c\u6574\u505a\u51fa\u6765\u7528tensor core\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u4f46\u81ea\u5df1\u4e5f\u5728\u8fd9\u4e2a\u4e0a\u9762\u6295\u5165\u4e86\u6bd4\u8f83\u591a\u7684\u7cbe\u529b\uff0c\u6700\u540e\u6839\u636e\u6211\u7684\u6d4b\u8bd5\u5e94\u8be5\u95ee\u9898\u8fd8\u662f\u51fa\u73b0\u5728\u4e86block\u548cgrid\u7684\u6570\u76ee\u914d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u5bfc\u81f4\u8ba1\u7b97\u7ed3\u679c\u6709\u8bef\u3002\u6211\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>dim3 grid((size + block_size * WMMA_M - 1) / (block_size * WMMA_M),\n            (size + block_size * WMMA_N - 1) / (block_size * WMMA_N));\ndim3 block(block_size, block_size);\n\nconst int WMMA_M = 8;\nconst int WMMA_N = 8;\nconst int WMMA_K = 4;\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ a, \n                                   const double *__restrict__ b, \n                                   double *__restrict__ result) \n{\n    // Tile using a 2D grid\n    const int warpM = (blockIdx.x * blockDim.x + threadIdx.x) / warpSize;\n    const int warpN = (blockIdx.y * blockDim.y + threadIdx.y);\n\n    // Declare the fragments\n    using namespace nvcuda;\n    wmma::fragment&lt;wmma::matrix_a, WMMA_M, WMMA_N, WMMA_K, double, wmma::col_major&gt; a_frag;\n    wmma::fragment&lt;wmma::matrix_b, WMMA_M, WMMA_N, WMMA_K, double, wmma::col_major&gt; b_frag;\n    wmma::fragment&lt;wmma::accumulator, WMMA_M, WMMA_N, WMMA_K, double&gt; acc_frag;\n    //initialize\n    wmma::fill_fragment(acc_frag, 0.0);\n\n    // Loop over size\n    for (int i = 0; i &lt; size; i += WMMA_K) {\n        int aRow = warpM * WMMA_M;\n        int aCol = i;\n\n        int bRow = i;\n        int bCol = warpN * WMMA_N;\n\n        // Bounds checking\n        if (aRow &lt; size &amp;&amp; aCol &lt; size &amp;&amp; bRow &lt; size &amp;&amp; bCol &lt; size) {\n          // Load the inputs\n          wmma::load_matrix_sync(a_frag, a + aRow + aCol * size, size);\n          wmma::load_matrix_sync(b_frag, b + bRow + bCol * size, size);\n\n          // Perform the matrix multiplication\n          wmma::mma_sync(acc_frag, a_frag, b_frag, acc_frag);\n        }\n    }\n\n    int cRow = warpM * WMMA_M;\n    int cCol = warpN * WMMA_N;\n    // Store the output\n    if (cRow &lt; size &amp;&amp; cCol &lt; size) {\n    wmma::store_matrix_sync(result + cRow + cCol * size, acc_frag, size, wmma::mem_col_major);\n    }\n}\n</code></pre> <p></p> <p>\u7ed3\u8bba\uff1a\u901a\u8fc7tensor core\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u80fd\u5f88\u5927\u7a0b\u5ea6\u4e0a\u907f\u514d\u51b2\u7a81\u5e76\u4e14\u52a0\u901f\u8ba1\u7b97\u3002\u901a\u8fc7printf\u5927\u6cd5\u6211\u770b\u51fa\u6211\u7684\u8ba1\u7b97\u7ed3\u679c\u4e0e\u6b63\u786e\u7684\u8ba1\u7b97\u7ed3\u679c\u76f8\u5dee\u4e86\u5927\u7ea64\u500d\u5de6\u53f3\uff0c\u4f46\u4e0d\u592a\u7406\u89e3\u81ea\u5df1\u9519\u5728\u4e86\u54ea\u91cc\uff1f\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u5e0c\u671b\u8d85\u7b97\u961f\u7684\u5b66\u957f\u53ef\u4ee5\u5e2e\u5fd9\u6307\u51fa\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/","title":"Lab-4 PCG\u7b97\u6cd5\u5728OMP\u548cMPI\u4e0b\u7684\u4f18\u5316","text":"<ul> <li>Lab-4 PCG\u7b97\u6cd5\u5728OMP\u548cMPI\u4e0b\u7684\u4f18\u5316<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>OMP</li> <li>MPI</li> <li>SIMD\u548c\u5faa\u73af\u5c55\u5f00</li> </ul> </li> <li>Profile<ul> <li>Intel trace analyzer</li> <li>Vtune</li> </ul> </li> <li>Bonus</li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab4/#lab_description","title":"Lab Description","text":"<p>\u6211\u4eec\u63d0\u4f9b<code>PCG</code>\u4ee3\u7801\u7684\u4e32\u884c\u7248\u672c\u4f5c\u4e3a\u57fa\u51c6\u4ee3\u7801\u3002\u5728\u8fd9\u4e2a\u4ee3\u7801\u6846\u67b6\u4e2d\u6709\u4e00\u90e8\u5206\u4ee3\u7801\u4e0d\u5141\u8bb8\u4fee\u6539\uff0c\u89c1\u4ee3\u7801\u7684<code>README</code>\u6587\u4ef6\uff08\u5982\u679c\u4f60\u8ba4\u4e3a\u4ee3\u7801\u6846\u67b6\u6709\u4e0d\u8db3\u4e4b\u5904\uff0c\u6216\u662f\u6709\u5176\u4ed6\u503c\u5f97\u4fee\u6539\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u5411\u6211\u4eec\u63d0\u51fa\u610f\u89c1\uff09\u3002\u7531\u4e8e\u8fed\u4ee3\u7b97\u6cd5\u7684\u65f6\u95f4\u7a33\u5b9a\u6027\u8f83\u5dee\uff0c<code>main.c</code>\u5c06\u5728\u540c\u6837\u4e00\u7ec4\u8f93\u5165\u4e0a\u91cd\u590d\u8fd0\u884c<code>pcg</code>\u4ee3\u780110\u6b21\uff0c\u603b\u65f6\u95f4\u4f5c\u4e3a\u5728\u8be5\u7ec4\u8f93\u5165\u4e0a\u7684\u8bc4\u6d4b\u6807\u51c6\u3002</p> <p>\u4ee3\u7801\u5728\u6d4b\u8bd5\u65f6\u5c06\u6d4b\u8bd54\u7ec4\u56fa\u5b9a\u7684\u8f93\u5165\uff0c\u5176\u4e2d\u4e09\u7ec4\u516c\u5e03\u4e8e\u57fa\u51c6\u4ee3\u7801\u4e2d\uff0c\u76f8\u5bf9\u5e94\u7684\u77e9\u9635\ufffd\u89c4\u6a21\u5206\u522b\u4e3a2001x2001\u30014001x4001\u30016001x6001\uff0c\u6700\u540e\u4e00\u7ec4\u8f93\u5165\u4e0d\u516c\u5e03\u3002<code>PCG</code>\u7b97\u6cd5\u901a\u5e38\u7528\u4e8e\u6c42\u89e3\u5927\u89c4\u6a21\u7684\u7a00\u758f\u77e9\u9635\uff0c\u7a00\u758f\u77e9\u9635\u4e0a\u53ef\u4ee5\u91c7\u53d6\u7279\u6b8a\u7684\u5b58\u50a8\u65b9\u5f0f\u6765\u8282\u7701\u7a7a\u95f4\u548c\u52a0\u901f\u8ba1\u7b97\u3002\u4e3a\u4e86\u4ee3\u7801\u7b80\u5355\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u9488\u5bf9\u7a00\u758f\u77e9\u9635\u8fdb\u884c\u7684\u4f18\u5316\uff0c\u7ed9\u51fa\u7684\u8f93\u5165\u6570\u636e\u90fd\u662f\u7a20\u5bc6\u77e9\u9635\u3002</p> <p>\u6b64\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u5728\u4ee3\u7801\u4e0a\u8fdb\u884cProfile\u3002\u4f9d\u636eProfile\u7ed3\u679c\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u5f97\u5230</p> <ul> <li>\u8017\u65f6\u6700\u591a\u7684\u4e09\u4e2aMPI\u51fd\u6570\uff1b</li> <li>\u7a0b\u5e8f\u5728MPI\u4e0a\u6d88\u8017\u7684\u603b\u65f6\u95f4\u3002</li> </ul> <p>Profiler\u8fd8\u4f1a\u63d0\u4f9b\u66f4\u591a\u5176\u4ed6\u7684\u4fe1\u606f\u3002\u5982\u679c\u4f60\u80fd\u591f\u83b7\u5f97\u5e76\u89e3\u91ca\u5176\u4ed6Profile\u83b7\u5f97\u7684\u6570\u636e\u548c\u56fe\u8868\uff0c\u6216\u8005\u80fd\u591f\u6839\u636eProfile\u7684\u7ed3\u679c\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u6709\u6548\u7684\u4f18\u5316\uff0c\u5c06\u80fd\u591f\u5728Profile\u90e8\u5206\u83b7\u5f97\u66f4\u597d\u7684\u5206\u6570\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#introduction_knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<p>PCG\uff08\u82f1\u8bed\uff1apreconditioned conjugate gradient\uff0c\u9884\u5904\u7406\u5171\u8f6d\u68af\u5ea6\u7b97\u6cd5\uff09\u662f\u4e00\u79cd\u5229\u7528\u591a\u6b21\u8fed\u4ee3\u5bf9\u65b9\u7a0b\u7ec4\u8fdb\u884c\u6c42\u89e3\u7684\u65b9\u6cd5\u3002\u76f8\u6bd4\u4e8e\u4f7f\u7528\u76f4\u63a5\u6cd5\u6c42\u89e3\u65b9\u7a0b\u7ec4\uff0c\u5176\u5bf9\u4e8e\u5b58\u50a8\u7a7a\u95f4\u7684\u8981\u6c42\u4e0d\u9ad8\u4e14\u6269\u5c55\u6027\u826f\u597d\uff0c\u5728\u6d89\u53ca\u65b9\u7a0b\u7ec4\u6c42\u89e3\u7684\u79d1\u5b66\u8ba1\u7b97\u5e94\u7528\u4e2d\u5177\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\u3002\u5927\u89c4\u6a21\u65b9\u7a0b\u7ec4\u6c42\u89e3\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u4f7f\u7528\u76f4\u63a5\u6cd5\u5f80\u5f80\u4f1a\u56e0\u4e3a\u7a0b\u5e8f\u7684\u5d29\u6e83\u800c\u5bfc\u81f4\u4e4b\u524d\u7684\u8ba1\u7b97\u6210\u4e3a\u65e0\u6548\u8ba1\u7b97\u3002\u518d\u6b21\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u4e4b\u524d\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u90e8\u5206\u8981\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\uff0c\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u4e0e\u8ba1\u7b97\u8d44\u6e90\uff0c\u4f7f\u7528PCG\u7b97\u6cd5\u80fd\u591f\u6709\u6548\u5730\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>MPI\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u89c1\u6211\u7684AIPP\u7b14\u8bb0</p> <p>OpenMP \u7684\u4f7f\u7528\u76f8\u5bf9\u7b80\u5355\uff0c\u53ef\u4ee5\u53bb\u770bxg\u7684\u7b14\u8bb0</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#lab_design_test_result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab4/#omp","title":"OMP","text":"<p>\u7531\u4e8e\u6700\u521d\u5bf9mpi\u4f7f\u7528\u8fd8\u4e0d\u591f\u719f\u6089\uff0c\u6211\u5148\u8003\u8651\u4f7f\u7528OpenMP\u8fdb\u884c\u4f18\u5316\u3002\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5982\u679c\u5728<code>PCG()\u51fd\u6570</code>\u8fd0\u884c\u7684for\u5faa\u73af\u5916\u5957\u7528OpenMP\uff0c\u5219\u53ef\u4ee5\u5145\u5206\u5229\u7528\u4e86\u5355\u8282\u70b9\u591a\u6838\u5fc3\u7684\u4f18\u52bf\uff0c\u5c06\u65f6\u95f4\u76f4\u63a5\u7f29\u77ed10\u500d\u5de6\u53f3\u3002</p> <pre><code># pragma omp parallel for\nfor (int i = 0; i &lt; 10; ++i) {\n    PCG(size, A, b);\n}\n</code></pre> <p>\u4f7f\u7528<code>srun -N 4 -n 4 --cpu-bind=cores --cpus-per-task=24 ./pcg input_1.bin</code></p> <p>\u6b64\u5916\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u5bf9\u6709\u5faa\u73af\u7684\u90e8\u5206\u4f7f\u7528OpenMP\u90fd\u53ef\u4ee5\u52a0\u901f\uff0c\u8fd9\u91cc\u503c\u5f97\u601d\u8003\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab4/#mpi","title":"MPI","text":"<p>PCG \u7b97\u6cd5\u7684\u4e3b\u8981\u8fed\u4ee3\u8fc7\u7a0b\u4ec5\u6d89\u53ca\u77e9\u9635\u5411\u91cf\u4e58\u6cd5\u3001\u5411\u91cf\u5185\u79ef\u4ee5\u53ca\u5411\u91cf\u7684\u6570\u91cf\u79ef\uff0c\u5747\u4e3a\u5178\u578b\u7684 embarrassingly parallel \u60c5\u5f62\uff0c\u56e0\u6b64\u53ef\u8f7b\u677e\u5229\u7528 MPI \u4f18\u5316\u7a0b\u5e8f\u3002\uff08\u6b64\u5916\uff0cMPI\u7684\u4ee3\u7801\u65e0\u6cd5\u5957\u7528OMP\u4e2d\u5bf9PCG\u51fd\u6570\u7684\u5e76\u884c\uff01\uff09</p> <p>\u8d77\u5148\u7531\u4e8eOpenMP\u7684\u4f18\u5316\u601d\u8def\uff0c\u7531\u4e8e<code>void MatrixMulVec \uff08\uff09</code>\u8ba1\u7b97\u4e3a\\(O(n^2)\\)\u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u53ea\u60f3\u7528MPI\u5bf9\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4f18\u5316\uff0c\u53ef\u64cd\u4f5c\u540e\u53d1\u73b0\u8fd9\u6837\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u5177\u4f53\u7684\u539f\u56e0\u4ecd\u7136\u672a\u77e5(\u540e\u6765\u53d1\u73b0\u7531\u4e8e\u7ebf\u7a0b\u5757\u5927\u5c0f\u4e0d\u4e00\u5b9a\uff0c\u6545\u5e94\u5f53\u4f7f\u7528MPI_GatherV\u51fd\u6570\u800c\u4e0d\u662fMPI_ALLGather\u51fd\u6570\u3002</p> <p>\u56e0\u6b64\u6211\u5728ddl\u7684\u4e24\u5929\u524d\u5f00\u59cb\u91cd\u65b0\u66f4\u6362\u601d\u8def\uff0c\u76f4\u63a5\u5bf9\u6574\u4e2a<code>PCG</code>\u51fd\u6570\u8fdb\u884cMPI\u5e76\u884c\u64cd\u4f5c\u3002</p> <p></p> <p>\u518d\u901a\u8fc7<code>printf</code>\u77e5\u9053\u4e86\u4e2d\u95f4\u51fa\u73b0\u4e86NA\u7684\u60c5\u51b5\uff0c\u662f\u7531\u4e8e<code>MatrixMulVec</code>\u51fd\u6570\u7684\u5199\u6cd5\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4ecd\u7136\u5f52\u548e\u5230MPIGatherV\u4e0a\u9762\u3002\uff08\u4f46\u8fd9\u91cc\u4ecd\u6709\u8ff7\u60d1\u7684\u70b9\u662f\u5982\u679c\u6211\u73af\u5883\u4e09\u4e2a\u90fd\u52a0\u8f7d\u90a3\u4e48\u4e0d\u80fd\u8dd1\u901a\uff0c\u4f46\u5982\u679c\u6211\u53ea\u542f\u7528OpenMP\u5219\u90fd\u53ef\u4ee5\u8dd1\u901a\uff09</p> <p>\u601d\u8def\u65e2\u662f\u5bf9\u6240\u6709\u77e9\u9635\u8fdb\u884c\u62c6\u5206\uff0c\u5229\u7528\u901a\u4fe1\u7684\u4f18\u52bf\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u540e\u6765\u7ecf\u8fc7\u81ea\u5df1\u7684\u52aa\u529b\u5c1d\u8bd5\uff0c\u53d1\u73b0\u53ef\u4ee5\u6b63\u5e38\u8ba1\u7b97\u4f46\u7ed3\u679c\u6709\u8bef\uff0c\u539f\u56e0\u662f\uff1f\u4e00\u6a21\u4e00\u6837\u7684\u4ee3\u7801\u6628\u5929\u8dd1\u901a\u51e0\u5929\u8dd1\u4e0d\u901a\u771f\u7684\u5f88\u5947\u602a</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include \"judge.h\"\n\ndouble dot(double a[], double b[], int size) {\n    double dot_sum = 0;\n    double local_dot_sum = 0;\n    #pragma omp parallel for reduction(+:local_dot_sum)\n    for (int i = 0; i &lt; size; ++i) {\n        local_dot_sum += a[i] * b[i];\n    }\n    MPI_Allreduce(&amp;local_dot_sum, &amp;dot_sum, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);\n    return dot_sum;\n}\n\nvoid MatrixMulVec(int size, double A[][size], double x[], double b[], int start, int end) {    \n    #pragma omp parallel for\n    for (int i = start; i &lt; end; ++i) {\n        double temp = 0;\n        for (int j = 0; j &lt; size; ++j) {\n            temp += A[i][j] * x[j];\n        }\n        #pragma omp critical\n        {\n            b[i - start] = temp;\n        }\n    }\n}\n\nvoid PCG(int size, double A[][size], double b[]) {\n\n    int rank, num_procs;\n    MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);\n    MPI_Comm_size(MPI_COMM_WORLD, &amp;num_procs);\n    MPI_Bcast(A, size * size, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n    MPI_Bcast(b, size, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n    if (rank == 0) {\n        start_timer();\n    }\n\n    int chunk_size = size / num_procs;\n    int remainder = size % num_procs;\n\n    int start = rank * chunk_size;\n    int end = start + chunk_size;\n    if (rank == num_procs - 1) {\n        end += remainder;\n    }\n    int counts = end - start;\n\n    double r[counts], x[counts], z[counts], p[counts];\n    double alpha, beta, gamma, r_dot_z, A_dot_p[counts];\n\n    /* initialization */\n    // #pragma omp parallel for\n    for (int i = start; i &lt; end; ++i){\n        x[i - start] = 0;\n        r[i - start] = b[i];\n        z[i - start] = r[i - start] / A[i][i];\n        p[i - start] = z[i - start];\n    }\n\n    /* solve */\n    int iter = 0;\n    double loss = 0;\n    int quit = 1;\n    r_dot_z = dot(r, z, counts);\n\n    double* local_x = (double*)malloc(size * sizeof(double));\n    double* local_p = (double*)malloc(size * sizeof(double));\n    int* recvcounts = (int*)malloc(num_procs * sizeof(int));\n    int* displs = (int*)malloc(num_procs * sizeof(int));\n    if (local_x == NULL || local_p == NULL) {\n        fprintf(stderr, \"Failed to allocate memory for local memory\\n\");\n        exit(1);\n    }\n\n    MPI_Allgather(&amp;counts, 1, MPI_INT, recvcounts, 1, MPI_INT, MPI_COMM_WORLD);\n\n    displs[0] = 0;\n    for (int i = 1; i &lt; num_procs; i++) {\n        displs[i] = displs[i-1] + recvcounts[i-1];\n    }\n\n    do {            \n        /* A * p_k */\n        MPI_Allgatherv(p, counts, MPI_DOUBLE, local_p, recvcounts, displs, MPI_DOUBLE, MPI_COMM_WORLD);\n        MatrixMulVec(size, A, local_p, A_dot_p, start, end);\n\n        /* alpha */\n        alpha = r_dot_z / dot(p, A_dot_p, counts);\n\n        /* x */\n        #pragma omp parallel for\n        for (int i = 0; i &lt; counts; ++i) {\n            x[i] += alpha * p[i];\n        }\n\n        /* r &amp; loss */\n\n        double my_loss = 0.0;\n        // #pragma omp parallel for reduction(+:loss)\n        for (int i = 0; i &lt; counts; ++i) {\n            r[i] = r[i] - alpha * A_dot_p[i];\n            if (r[i]) quit = 0;\n            my_loss += fabs(r[i]);\n        }\n        if (quit) break;\n        MPI_Allreduce(&amp;my_loss, &amp;loss, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);\n\n        /* z */\n        // #pragma omp parallel for\n        for (int i = start; i &lt; end; ++i) {\n            z[i - start] = r[i - start] / A[i][i];\n        }\n\n        /* beta */\n        double temp = dot(z, r, counts);\n        beta = temp / r_dot_z;\n        r_dot_z = temp;\n\n        /* p */\n        // #pragma omp simd\n        for (int i = 0; i &lt; counts; ++i) {\n            p[i] = z[i] + beta * p[i];\n        }\n    }\n    while (++iter &lt; MAXITER &amp;&amp; loss &gt; EPI);\n\n\n    MPI_Gatherv(x, counts, MPI_DOUBLE, local_x, recvcounts, displs, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n\n    if (rank == 0) {\n        check(size, A, local_x, b, iter);\n    }\n    free(local_x);\n    free(local_p);\n    free(recvcounts);\n    free(displs);\n}\n</code></pre> <p>OpenMPI\u5b9e\u9a8c\u7ed3\u679c\uff1a</p> <p></p> <p>IntelMPI\u5b9e\u9a8c\u7ed3\u679c\uff1a</p> <p></p> <p>ps\uff1ainput_2\u5927\u6982\u662f30\u591as\uff0cinput_3\u662f180\u591as\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#simd","title":"SIMD\u548c\u5faa\u73af\u5c55\u5f00","text":"<p>\u901a\u8fc7\u7f51\u7ad9\u89c2\u5bdf\u6c47\u7f16\u540e\u6211\u4eec\u53d1\u73b0,\u5f53\u6211\u4eec\u542f\u7528<code>O3</code>\u7f16\u8bd1\u7f16\u8bd1\u5668\u4f1a\u5e2e\u6211\u4eec\u81ea\u52a8\u5411\u91cf\u5316\u548c\u5faa\u73af\u5c55\u5f00\u3002\u6545\u4e0d\u518d\u6b21\u4f18\u5316\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab4/#profile","title":"Profile","text":"<p>\u8fd9\u4e2a\u677f\u5757\u5efa\u8bae\u4e0b\u8f7d\u6210\u672c\u5730\u7684\u5206\u6790\u8f6f\u4ef6\uff0c\u975e\u5e38\u4fbf\u6377\u7684\u5c31\u80fd\u5b8c\u6210\u5206\u6790\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#intel_trace_analyzer","title":"Intel trace analyzer","text":"<p>\u7a0b\u5e8f\u5728MPI\u4e2d\u603b\u8017\u65f648.7s\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5728\u6211\u7684\u7a0b\u5e8f\u7248\u672c\u4e2d\uff0cMPI Calls\u7684\u65f6\u95f4\u8fd8\u662f\u8fc7\u957f\u4e86\uff0c\u5177\u4f53\u5206\u6790\u540e\u5f97\u5230\u5177\u4f53\u6570\u636e\uff1a</p> <p></p> <p>\u8017\u65f6\u6700\u957f\u7684\u4e09\u4e2a\u51fd\u6570\u662f\uff1a<code>MPI_Allreduce</code> <code>MPI_Allgatherv</code> <code>MPI_Bcast</code></p> <p>\u7531\u6b64\u6211\u4eec\u770b\u5230\uff0c\u5728\u6211\u7684\u4ee3\u7801\u4e2d\uff0cAllreduce\u6240\u5360\u7528\u7684\u65f6\u95f4\u592a\u591a\u3002\u5206\u6790\u6765\u770b\u4e3b\u8981\u662f\u5728\u505adot\u8fd0\u7b97\u65f6\u6211\u4f1a\u8ba9\u4e0d\u540c\u7684\u8282\u70b9\u53bb\u505a\u4e0d\u540c\u5411\u91cf\u7247\u6bb5\u7684\u8ba1\u7b97\u540ereduce\u3002\u7ecf\u8fc7\u4e4b\u540e\u7684\u8ba1\u7b97\u5206\u6790\uff0c\u5f88\u53ef\u80fd\u4f7f\u7528Allreduce\u7684\u4ee3\u4ef7\u4f1a\u5927\u4e8e\u5176\u5e26\u7ed9\u6211\u4eec\u7684\u597d\u5904\u3002</p> <p>\u6b64\u5916AllGatherv\u7684\u5f00\u9500\u662f\u4ee4\u6211\u6ca1\u6709\u60f3\u5230\u7684\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u7684\u4ee3\u4ef7\u5728\u4e8eA_dot_p\u6240\u4f7f\u7528\u7684\u5206\u5757\u8ba1\u7b97\u7684\u96c6\u5408\uff0c\u6211\u8ba4\u4e3a\u6b64\u5904\u7684\u65f6\u95f4\u635f\u5931\u5b8c\u5168\u53ef\u4ee5\u4ece\u4ee3\u7801\u8bbe\u8ba1\u4e0a\u6240\u907f\u514d\uff0c\u4f46\u7531\u4e8e\u5047\u671f\u5185\u5e76\u6ca1\u592a\u5408\u7406\u5b89\u6392\u81ea\u5df1\u7684\u65f6\u95f4\u5bfc\u81f4\u6240\u5269\u65f6\u95f4\u8f83\u5c11\uff0c\u65e0\u6cd5\u5728\u8fd9\u4e2a\u65b9\u9762\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u4e86\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#vtune","title":"Vtune","text":"<p>\u4f7f\u7528Vtune\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u7a0b\u5e8f\u4e2d\u7684\u4e00\u4e9b\u6c47\u7f16\u4ee3\u7801\u4ee5\u53ca\u51fd\u6570\u6267\u884c\u7684\u65f6\u673a\u3002\u6211\u4eec\u53d1\u73b0\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\u8bbe\u8ba1\u7684\u5e76\u884c\u6027\u8f83\u9ad8\uff0c\u4f46MPI\u51fd\u6570\u7684\u65f6\u95f4\u635f\u5931\u8fd8\u662f\u8fc7\u591a\u4e86\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#bonus","title":"Bonus","text":"<p>\u5173\u4e8ebonus\u7684Fortran\u90e8\u5206\uff0c\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\u52a0\u4e0a\u4e2a\u4eba\u5b89\u6392\u3002\u81ea\u5df1\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u5b8c\u6574\u5b66\u4e60Fortran\u8bed\u8a00\uff0c\u4e5f\u4e0d\u60f3chatgpt\u968f\u4fbf\u66f4\u6539\uff0c\u6545\u518d\u6ca1\u5b8c\u6210\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u672c\u6b21\u5b9e\u9a8c\uff0c\u81ea\u5df1\u5b8c\u6574\u7f16\u5199\u4e86MPI\u7684\u7a0b\u5e8f\uff0c\u719f\u6089\u4e86\u5206\u5e03\u5f0f\u7f16\u7a0b\u7684\u7279\u6027\u4ee5\u53cadebug\u7684\u65b9\u6cd5\uff0c\u4e86\u89e3\u4e86\u4e0d\u540cMPI\u7f16\u8bd1\u5668\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> <p>\u4e0e\u6b64\u540c\u65f6\uff0c\u81ea\u5df1\u5b66\u4e60\u4e86intelMPI profile\u4e2d\u6240\u4f7f\u7528\u5230\u7684\u4e00\u4e9b\u5de5\u5177\u4ee5\u53ca\u65b9\u6cd5\uff0c\u4ece\u800c\u66f4\u52a0\u719f\u7ec3\u7684\u7f16\u5199\u4e0e\u6539\u8fdb\u7a0b\u5e8f\u3002\u4e5f\u7ed9\u81ea\u5df1\u5bf9HPC\u6709\u4e86\u66f4\u6df1\u7684\u4e86\u89e3\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab5/","title":"Lab-5 AI\u76f8\u5173","text":"<ul> <li>Lab-5 AI\u76f8\u5173<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>LeNet<ul> <li>Environment</li> <li>Optimizer</li> <li>Learing Rate</li> <li>GPU Occupation</li> <li>Tensorboard</li> </ul> </li> <li>GELU<ul> <li>Python</li> </ul> </li> <li>C++</li> </ul> </li> <li>Bonus<ul> <li>\u591a\u5361\u8bad\u7ec3</li> <li>\u6df7\u5408\u7cbe\u5ea6</li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab5/#lab_description","title":"Lab Description","text":"<ol> <li>\u4f7f\u7528 <code>PyTorch</code> \u5b9e\u73b0\u6700\u57fa\u672c\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc LeNet-5\uff0c\u5e76\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u4f7f\u7528 GPU \u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002</li> <li>\u7f16\u5199 <code>GELU</code> \u7b97\u5b50\uff0c\u5e76\u5728 LeNet-5 \u4e2d\u4f7f\u7528\u8be5\u7b97\u5b50\uff0c\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\u3002</li> <li>\u4f60\u9700\u8981\u63d0\u4ea4\uff1a</li> <li>\u5168\u90e8\u4ee3\u7801</li> <li>\u5b9e\u9a8c\u62a5\u544a\uff0c\u5176\u4e2d\u9700\u8981\u5305\u542b\uff1a<ol> <li>\u7b80\u8981\u5b9e\u9a8c\u8fc7\u7a0b</li> <li>\u8d34\u4e0a\u8bad\u7ec3\u8fc7\u7a0b\u7684 GPU \u5360\u7528\u7387\u622a\u56fe\uff08\u4f7f\u7528 <code>nvidia-smi</code> \u67e5\u770b\uff09</li> <li>Tensorboard \u6a21\u578b\u7684\u635f\u5931\u66f2\u7ebf\u3001LeNet-5 \u7684\u51c6\u786e\u7387\u66f2\u7ebf\u7b49\u622a\u56fe</li> <li>\u5bf9\u4e8e LeNet-5\uff0c\u4f60\u9700\u8981\u5199\u660e\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8bc6\u522b\u6b63\u786e\u7387</li> <li>\u5bf9\u4e8e Bonus\uff0c\u4f60\u9700\u8981\u5199\u660e\u8bad\u7ec3\u65f6\u95f4\u3001\u52a0\u901f\u7b56\u7565\u3001\u52a0\u901f\u6548\u679c</li> </ol> </li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab5/#introduction_knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<ol> <li>GELU\u4ecb\u7ecd</li> <li>\u795e\u7ecf\u7f51\u7edc\u57fa\u7840</li> <li>3b1b\u7684\u89c6\u9891\u5f88\u6709\u542f\u53d1\u610f\u4e49\uff01</li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab5/#lab_design_test_result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab5/#lenet","title":"LeNet","text":""},{"location":"ZJU_CS/HPC/homework/lab5/#environment","title":"Environment","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u6211\u9009\u62e9\u4f7f\u7528conda\u81ea\u5df1\u7ba1\u7406\u73af\u5883\u3002\u4f7f\u7528salloc\u7684\u65b9\u6cd5\u57282080Ti\u4e0a\u5b8c\u6210\u5b9e\u9a8c\u3002</p> <pre><code>conda create -n mytorch python=3.10\nconda activate mytorch\nconda install pytorch torchvision tensorboard -c pytorch -c nvidia\n# conda deactivate\n</code></pre>"},{"location":"ZJU_CS/HPC/homework/lab5/#optimizer","title":"Optimizer","text":"<p>Adam \u4f18\u5316\u5668\u4f1a\u6bd4SGD\u6548\u7387\u9ad8\u5f88\u591a\uff0c\u51c6\u786e\u7387\u4e5f\u4f1a\u9ad8\u5f88\u591a</p>"},{"location":"ZJU_CS/HPC/homework/lab5/#learing_rate","title":"Learing Rate","text":"<p>\u901a\u8fc7\u5b9e\u9a8c\u8bb0\u5f55\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5982\u679c\u5b66\u4e60\u7387\u4e3a0.002\u65f6\u53cd\u800c\u6d4b\u8bd5\u7ed3\u679c\u4e0d\u7406\u60f3\u3002\u6700\u540e\u9009\u62e90.001</p>"},{"location":"ZJU_CS/HPC/homework/lab5/#gpu_occupation","title":"GPU Occupation","text":"<p>\u5927\u7ea6\u9700\u898130s\u5de6\u53f3GPU\u5360\u7528\u8fbe\u5230\u5cf0\u503c\uff0c\u5927\u7ea6\u7ef4\u6301\u57281098Mib\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#tensorboard","title":"Tensorboard","text":"<p>\u4f7f\u7528<code>ssh -L 16006:127.0.0.1:6006 dzz@clusters.zju.edu.cn -p 80</code>\uff0c\u4f46\u662f\u5728H248\u4e0a\u4f7f\u7528tensorboard\uff0c\u7136\u540e\u518d\u5728\u672c\u5730\u8bbf\u95ee http://127.0.0.1:16006/\uff0c\u65e2\u53ef\u4ee5\u770b\u5230\u9875\u9762\u3002</p> <p></p> <p></p> <pre><code>[Epoch 1, Batch 200] loss: 0.681\n[Epoch 1, Batch 400] loss: 0.171\n[Epoch 1, Batch 600] loss: 0.117\n[Epoch 1, Batch 800] loss: 0.092\n[Epoch 2, Batch 200] loss: 0.076\n[Epoch 2, Batch 400] loss: 0.063\n[Epoch 2, Batch 600] loss: 0.060\n[Epoch 2, Batch 800] loss: 0.058\n[Epoch 3, Batch 200] loss: 0.052\n[Epoch 3, Batch 400] loss: 0.050\n[Epoch 3, Batch 600] loss: 0.048\n[Epoch 3, Batch 800] loss: 0.045\n[Epoch 4, Batch 200] loss: 0.035\n[Epoch 4, Batch 400] loss: 0.039\n[Epoch 4, Batch 600] loss: 0.037\n[Epoch 4, Batch 800] loss: 0.037\n[Epoch 5, Batch 200] loss: 0.028\n[Epoch 5, Batch 400] loss: 0.032\n[Epoch 5, Batch 600] loss: 0.030\n[Epoch 5, Batch 800] loss: 0.029\n[Epoch 6, Batch 200] loss: 0.021\n[Epoch 6, Batch 400] loss: 0.026\n[Epoch 6, Batch 600] loss: 0.033\n[Epoch 6, Batch 800] loss: 0.029\n[Epoch 7, Batch 200] loss: 0.018\n[Epoch 7, Batch 400] loss: 0.020\n[Epoch 7, Batch 600] loss: 0.022\n[Epoch 7, Batch 800] loss: 0.022\n[Epoch 8, Batch 200] loss: 0.019\n[Epoch 8, Batch 400] loss: 0.018\n[Epoch 8, Batch 600] loss: 0.019\n[Epoch 8, Batch 800] loss: 0.018\n[Epoch 9, Batch 200] loss: 0.017\n[Epoch 9, Batch 400] loss: 0.014\n[Epoch 9, Batch 600] loss: 0.017\n[Epoch 9, Batch 800] loss: 0.015\n[Epoch 10, Batch 200] loss: 0.011\n[Epoch 10, Batch 400] loss: 0.016\n[Epoch 10, Batch 600] loss: 0.017\n[Epoch 10, Batch 800] loss: 0.019\nAccuracy on the test set: 99.02%\n</code></pre>"},{"location":"ZJU_CS/HPC/homework/lab5/#gelu","title":"GELU","text":""},{"location":"ZJU_CS/HPC/homework/lab5/#python","title":"Python","text":"<pre><code>import torch\nimport math\nimport torch.nn.functional as F\nfrom torch.autograd import Function\n\n\nclass MyGELUFunction(Function):\n    @staticmethod\n    def forward(ctx, input):\n        output = input * 0.5 * (1 + torch.erf(input / math.sqrt(2)))\n        ctx.save_for_backward(input,output)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        input, output = ctx.saved_tensors\n        grad_input = grad_output * (0.5 * (1 + torch.erf(input / math.sqrt(2))) + input * torch.exp(-(input)**2 / 2) / math.sqrt(2) / math.sqrt(math.pi))\n        return grad_input\n</code></pre> <p>\uff08\u63a8\u5bfc\u8fc7\u7a0b\u53ef\u4ee5\u89c1 Introduction Knowledge\uff09</p> <p>\u5b9e\u9a8c\u7ed3\u679c\uff1a</p> <p></p> <p>\u7531\u4e8e\u6d6e\u70b9\u7cbe\u5ea6\u7684\u95ee\u9898\uff0c\u8be5\u8bef\u5dee\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8bb0\u4e86\u3002\uff08\u5df2\u6253\u5370grad\u5f20\u91cf\u6bd4\u8f83\u8fc7\uff09</p>"},{"location":"ZJU_CS/HPC/homework/lab5/#c","title":"C++","text":"<p>\u540c\u6837\u7684\uff0c\u6211\u4eec\u9605\u8bfb\u5b98\u7f51\u8d44\u6599\uff0c\u901a\u8fc7\u6b63\u5e38\u7684\u6539\u5199c++\u4ee3\u7801\u5373\u53ef\u5b8c\u6210\u8be5\u6a21\u5757\u3002\u6ce8\uff1a\u6b64\u5904\u6211\u4f7f\u7528\u7684\u662fJIT\u52a8\u6001\u7f16\u8bd1\u3002</p> <p>\u5176\u4e2dgelu.cpp\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;torch/torch.h&gt;\ntorch::Tensor gelu_fwd(torch::Tensor input){\n    return input * torch::sigmoid(1.702*input);\n}\n\ntorch::Tensor gelu_bwd(torch::Tensor grad_out, torch::Tensor input){\n    auto tmp = torch::sigmoid(1.702*input);\n    return grad_out * (tmp+1.702*input*tmp*(1.0-tmp));\n}\n\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m){\n    m.def(\"forward\", &amp;gelu_fwd, \"GELU forward\"); \n    m.def(\"backward\", &amp;gelu_bwd, \"GELU backward\");\n}\n</code></pre> <p></p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#bonus","title":"Bonus","text":"<p>\u901a\u8fc7\u5728\u57fa\u51c6\u4ee3\u7801\u4e0a\u7f16\u5199\uff0c\u5b9e\u9a8c\u57fa\u672c\u7ed3\u679c\u5982\u4e0b\uff08loss\u9ad8\u7684\u5413\u4eba\uff09</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#_1","title":"\u591a\u5361\u8bad\u7ec3","text":"<p>\u5f53\u6211\u4f7f\u7528lightning\u91cd\u6784\u591a\u5361\u8bad\u7ec3\u6a21\u578b\u540e\uff0c\u7531\u4e8e\u672a\u77e5\u539f\u56e0\uff08\uff1f\u53ef\u80fd\u662f0\u663e\u5361\u672a\u542f\u7528)\u5bfc\u81f4\u8bad\u7ec3\u65f6\u95f4\u660e\u663e\u53d8\u6162\u4e86</p> <p></p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#_2","title":"\u6df7\u5408\u7cbe\u5ea6","text":"<p>\u6839\u636e\u7f16\u8bd1\u5668\u7684\u63d0\u793a\uff0c\u6211\u4eec\u66f4\u6539\u4ee3\u7801\uff1a</p> <pre><code>if __name__ == '__main__':\n    torch.set_float32_matmul_precision('medium')\n    main()\n</code></pre> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u672c\u6b21\u5b66\u4e60\uff0c\u81ea\u5df1\u4e3a\u4e86\u80fd\u6709\u66f4\u592f\u5b9e\u7684\u57fa\u7840\uff0c\u5b66\u4e60\u4e86\u7ecf\u5178\u7684CS50\u8bfe\u7a0b\uff0c\u4e24\u5c4a\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u672c\u6846\u67b6\u3002\u901a\u8fc7\u5bf9PyTorch\u5b98\u7f51\u8d44\u6599\u7684\u9605\u8bfb\uff0c\u4ee5\u53ca\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5bf9PyTorch-Lightning\u7684\u4f7f\u7528\uff0c\u80fd\u591f\u7f16\u5199\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u4e3a\u81ea\u5df1\u672a\u6765\u7684\u5b66\u4e60\u6709\u542f\u53d1\u6027\u610f\u4e49\u5e76\u6253\u4e0b\u826f\u597d\u57fa\u7840\u3002</p> <p>\u5176\u4e2d\u5bf9GELU\u7b97\u5b50\u7684\u7f16\u5199\uff0c\u4e5f\u4e3a\u6211\u6253\u5f00\u4e86MLSys\u7684\u5927\u95e8\uff0c\u4e86\u89e3\u4e86\u5982\u4f55\u5c06c\u52a0\u8f7d\u5982python\u4e2d\uff08\u4e3a\u4e86\u63d0\u5347\u6548\u7387\uff09\uff0c\u5e0c\u671b\u81ea\u5df1\u672a\u6765\u80fd\u5728\u8fd9\u4e2a\u611f\u5174\u8da3\u7684\u9886\u57df\u6709\u6240\u7814\u7a76\u3002</p> <p>ps\uff1abonus\u90e8\u5206\u7531\u4e8e\u4e2a\u4eba\u65f6\u95f4\u539f\u56e0\uff08\u6700\u8fd1\u8fd9\u6bb5\u65f6\u95f4\u5bb6\u4e2d\u6709\u4e9b\u4e8b\u60c5\uff09\uff0c\u6709\u90e8\u5206\u4f18\u5316\u65b9\u6cd5\u672a\u5b8c\u6574\u4f7f\u7528\uff0c\u8fd8\u8bf7\u52a9\u6559\u8c05\u89e3\u3002</p>"},{"location":"ZJU_CS/computer_organization/","title":"\u5199\u5728\u524d\u9762","text":"<p>\u672c\u6587\u662f\u56fe\u7075\u73ed\u59dc\u5973\u58eb\u7684\u8ba1\u7b97\u673a\u7ec4\u6210\uff0c\u5728\u54b8\u9c7c\u55a7\u7b14\u8bb0\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6574\u7406\u5b66\u4e60\u3002 \u8bfe\u7a0b\u6210\u7ee9\u5360\u6bd4\u4e3a\uff1aquiz+6homework 20%\uff0c\u671f\u4e2d10%\uff0c\u671f\u672b40%\uff0c\u5b9e\u9a8c30%\uff08bonus 5%\uff09\uff1b \u5176\u4e2d\u9a8c\u653660%\uff0c\u62a5\u544a40%\u3002</p> <p>\u8fd9\u662f\u8ba1\u7b97\u673a\u7ec4\u6210\u8bfe\u7a0b\u7684\u5b66\u4e60\u8bb0\u5f55\u3002</p> <p>\u4f7f\u7528\u7684\u8bfe\u672c\u662f Computer Organization and Design - The Hardware / Software Interface (RISC-V Edition)\uff1a</p> <p></p> <p>\u8bf4\u660e</p> <p>\u6211\u81ea\u8ba4\u4e3a\u5728 3 Arithmetic, 4 Processor, 5 Cache \u4e09\u7ae0\u4e2d\u7684\u6574\u7406\u548c\u8bb2\u89e3\u662f\u975e\u5e38\u8be6\u7ec6\u7684\uff0c\u5982\u679c\u8fd9\u4e9b\u90e8\u5206\u5b58\u5728\u770b\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u8bf7\u52a1\u5fc5\u8054\u7cfb\u6211\uff08xuan\u4f6c\uff09\u3002</p> <p>\u8bfe\u7a0b\u901f\u89c8</p> <ul> <li> Chapter1: Computer Abstraction and Technology</li> <li> Chapter 2: Instructions: Language of  the Computer</li> <li> Chapter 3: Arithmetic for Computers</li> <li> Chapter 4:The Processor\uff1aDatapath and Control</li> <li> Chapter 5:Large and Fast:  Exploiting Memory Hierarchy</li> <li> Chapter 6: Parallel processor from client to Cloud (\u9009\u8bb2\uff0c\u975e\u8003\u8bd5\u5185\u5bb9)</li> <li>[ ]Appendix: Storage, Networks, and Other Peripherals (Ch8 of Version 3,\u4e86\u89e3\u6982\u5ff5)</li> </ul>"},{"location":"ZJU_CS/computer_organization/1_prelude/","title":"1 Prelude","text":"<p>\u524d\u8a00</p> <p>\u672c\u7ae0\u5185\u5bb9\u6709\u4e0d\u5c11\u6982\u8ff0\u6027\u7684\u5185\u5bb9\uff0c\u5f88\u591a\u5185\u5bb9\u5f88\u6d45\u4e5f\u5f88\u6563\uff0c\u4e4b\u540e\u7ae0\u8282\u90fd\u4f1a\u8be6\u7ec6\u5c55\u5f00\uff0c\u6b64\u5904\u66f4\u591a\u7684\u662f\u4ecb\u7ecd\u3002\u5efa\u8bae\u91cd\u70b9\u5173\u6ce8\u4ee5\u4e0b\u90e8\u5206\uff1a</p> <ul> <li>1.1 Eight Great Ideas</li> <li>1.5 Performance</li> </ul> <ul> <li>\u51af\u00b7\u504c\u4f0a\u66fc\u67b6\u6784</li> <li>\u8ba1\u7b97\u4e0e\u5b58\u50a8\u5206\u79bb</li> <li>\u6570\u636e\u548c\u6307\u4ee4\u653e\u5728\u540c\u4e00\u4e2a\u5b58\u50a8\u5668</li> </ul> <p></p> graph LR; A[\"Computer\\nSystem\"] B[\"Software\"] C[\"Hardware\"] D[\"CPU\"] E[\"Memory\"] F[\"I/O\\ninterface\"] G[\"Control\\nunit\"] H[\"Datapath\"]  A---&gt;B A---&gt;C C---&gt;D C---&gt;E C---&gt;F D---&gt;G D---&gt;H"},{"location":"ZJU_CS/computer_organization/1_prelude/#11_eight_great_ideas","title":"1.1 Eight Great Ideas","text":"<p>\u90e8\u5206\u5728\u5b9e\u9645\u9898\u76ee\u4e2d\u8fd8\u633a\u96be\u533a\u5206\u7684\uff0c\u6ce8\u610f\u8bc6\u522b\u9898\u76ee\u4e2d\u7684\u5173\u952e\u6697\u793a\u3002\u6b64\u5916\uff0c\u5148\u5b66\u4e60\u4e86\u4e4b\u540e\u7684\u5185\u5bb9\u4f1a\u5bf9\u90e8\u5206\u601d\u60f3\u6709\u66f4\u6df1\u523b\u7684\u7406\u89e3\u3002</p> <ul> <li>Design for Moore\u2019s Law \uff08\u8bbe\u8ba1\u7d27\u8ddf\u6469\u5c14\u5b9a\u5f8b\uff09<ul> <li>Moore's Law: Integrated circuit resources double every 18-24 months.</li> <li>Design for where it will be when finishes rather than design for where it starts.</li> </ul> </li> <li>Use Abstraction to Simplify Design (\u91c7\u7528\u62bd\u8c61\u7b80\u5316\u8bbe\u8ba1)<ul> <li>\u5c42\u6b21\u5316\u3001\u6a21\u5757\u5316\u7684\u8bbe\u8ba1</li> </ul> </li> <li>Make the Common Case Fast (\u52a0\u901f\u5927\u6982\u7387\u4e8b\u4ef6)</li> <li>Performance via Parallelism (\u901a\u8fc7\u5e76\u884c\u63d0\u9ad8\u6027\u80fd)</li> <li>Performance via Pipelining (\u901a\u8fc7\u6d41\u6c34\u7ebf\u63d0\u9ad8\u6027\u80fd)<ul> <li>\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\uff0c\u6bcf\u4e2a\u6d41\u7a0b\u540c\u65f6\u8fdb\u884c\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u4e00\u4e2a\u6d41\u7a0b\u5de5\u4f5c\u7684\u5bf9\u8c61\u662f\u65f6\u95f4\u4e0a\u76f8\u90bb\u7684\u82e5\u5e72\u4ea7\u54c1\uff1b</li> <li>\u76f8\u6bd4\u4e8e\u7b49\u4e00\u4e2a\u4ea7\u54c1\u5b8c\u5168\u751f\u4ea7\u5b8c\u518d\u5f00\u59cb\u4e0b\u4e00\u4e2a\u4ea7\u54c1\u7684\u751f\u4ea7\uff0c\u4f1a\u5feb\u5f88\u591a\uff1b</li> <li>\u5e0c\u671b\u6bcf\u4e00\u4e2a\u6d41\u7a0b\u7684\u65f6\u95f4\u662f\u76f8\u5bf9\u5747\u5300\u7684\uff1b</li> </ul> </li> <li>Performance via Prediction (\u901a\u8fc7\u9884\u6d4b\u63d0\u9ad8\u6027\u80fd)<ul> <li>\u4f8b\u5982\u5148\u5f53\u4f5c <code>if()</code> \u6761\u4ef6\u6210\u7acb\uff0c\u6267\u884c\u5b8c\u5185\u90e8\u5185\u5bb9\uff0c\u5982\u679c\u540e\u6765\u53d1\u73b0\u786e\u5b9e\u6210\u7acb\uff0c\u90a3\u4e48\u76f4\u63a5 apply\uff0c\u5426\u5219\u5c31\u518d\u91cd\u65b0\u6b63\u5e38\u505a\uff1b</li> <li>\u8fd9\u4e48\u505a\u5c31\u597d\u5728\uff08\u53c8\u6216\u8005\u8bf4\u53ea\u6709\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u9884\u6d4b\uff09\uff0c\u9884\u6d4b\u6210\u529f\u4e86\u5c31\u52a0\u901f\u4e86\uff0c\u9884\u6d4b\u5931\u8d25\u4e86\u7ea0\u6b63\u7684\u6210\u672c\u4e5f\u4e0d\u9ad8\uff1b </li> </ul> </li> <li>Hierarchy of Memories (\u5b58\u50a8\u5668\u5c42\u6b21)<ul> <li>Disk / Tape -&gt; Main Memory(DRAM) -&gt; L2-Cache(SRAM) -&gt; L1-Cache(On-Chip) -&gt; Registers</li> </ul> </li> <li>Dependability via Redundancy (\u901a\u8fc7\u5197\u4f59\u63d0\u9ad8\u53ef\u9760\u6027)<ul> <li>\u7c7b\u4f3c\u4e8e\u5361\u8f66\u7684\u591a\u4e2a\u8f6e\u80ce\uff0c\u4e00\u4e2a\u6a21\u5757 down \u4e86\u4ee5\u540e\u4e0d\u4f1a\u5267\u70c8\u5f71\u54cd\u6574\u4e2a\u7cfb\u7edf\uff1b</li> </ul> </li> </ul>"},{"location":"ZJU_CS/computer_organization/1_prelude/#12_below_program","title":"1.2 Below Program","text":"graph TD; A[\"High-level language program\"] B[\"Assembly language program\"]   C[\"Binary machine language\"] A ---&gt;|\"Compiler\"| B ---&gt;|\"Assembler\"| C   <ul> <li>\u9ad8\u7ea7\u8bed\u8a00\u7684\u51fa\u73b0\u4f53\u73b0\u4e86\u201c\u62bd\u8c61\u201d\u7684\u601d\u60f3\uff1b</li> </ul>"},{"location":"ZJU_CS/computer_organization/1_prelude/#13_components_of_a_computer","title":"1.3 Components of a computer","text":"<p>The five classic components of a computer:</p> <ul> <li>input;</li> <li>output;</li> <li>memory (DRAM);<ul> <li>\u7a0b\u5e8f\u3001\u6570\u636e\u5b58\u50a8\u7684\u5730\u65b9\uff0c\u4e5f\u662f\u7a0b\u5e8f\u201c\u8fd0\u884c\u7684\u4f4d\u7f6e\u201d\uff1b</li> <li>cache memory (SRAM): buffer for the DRAM memory;</li> </ul> </li> <li>datapath;<ul> <li>\u8d1f\u8d23\u5b9e\u9645\u7684\u6570\u636e\u5904\u7406\uff1b</li> </ul> </li> <li>control;<ul> <li>\u8d1f\u8d23\u6307\u6325\u63a7\u5236\u5982\u4f55\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u7ed9\u51fa\u63a7\u5236\u4fe1\u53f7\uff1b</li> </ul> </li> </ul> <p>processor / (central processor unit)CPU = datapath + control</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u62bd\u8c61\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u5957\u786c\u4ef6\u548c\u6700\u4f4e\u62bd\u8c61\u7a0b\u5ea6\u7684\u8f6f\u4ef6\u4e4b\u95f4\u7684\u63a5\u53e3\u2014\u2014instruction set architecture (ISA)\uff0c\u672c\u8bfe\u7a0b\u5c06\u4f1a\u4ee5 RISC-V \u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\uff0c\u8be6\u7ec6\u5185\u5bb9\u5c06\u653e\u5728\u7b2c\u4e8c\u7ae0\u3002</p> <p>\u6b64\u5916\uff0c\u6839\u636e\u662f\u5426\u5177\u6709\u6613\u5931\u6027\uff0c\u5185\u5b58\u88ab\u5206\u4e3a\u4e24\u7c7b\uff1amain memory / prime memory (eg. DRAM) \u548c secondary memory (eg. magnetic disks, flash memory)\u3002</p>"},{"location":"ZJU_CS/computer_organization/1_prelude/#14_technologies_for_building_processors_and_memory","title":"1.4 Technologies for Building Processors and Memory","text":"<ul> <li>integrated circuit (IC): dozens to hundreds of transistors into a single chip;</li> <li>very large-scale integrated circuit (VLIC): billions of combinations of conductors, insulators, and switches manufactured in a single small package;</li> </ul> <p>\u96c6\u6210\u7535\u8def\u52a0\u5de5\u7ed5\u4e0d\u5f00\u7684\u4e00\u4e2a\u8bdd\u9898\u5c31\u662f\u7845\u6676\u52a0\u5de5\uff0c\u7845\u6676\u952d(silicon crystal ingot)\u4f1a\u88ab\u52a0\u5de5\u6210\u7845\u7247(silicon wafer)\uff0c\u7136\u540e\u518d\u8fdb\u884c\u52a0\u5de5\uff0c\u6700\u540e\u6210\u4e3a\u96c6\u6210\u7535\u8def\u3002\u4e00\u4e2a\u7845\u7247\u4f1a\u88ab\u5207\u6210\u5f88\u591a\u5c0f\u5757\uff0c\u5176\u4e2d\u96be\u514d\u6709\u4e00\u4e9b\u574f\u7684(defects)\uff0c\u800c\u90a3\u4e9b\u597d\u7684\u5c31\u88ab\u79f0\u4e3a dies\uff0c\u6216\u8005\u8bf4 chips\u3002\u800c\u8fd9\u4e2a\u5de5\u827a\u7684\u4ea7\u91cf\u5219\u7531\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u5b9a\u4e49\uff1a</p> \\[ \\begin{aligned} \\text{Cost per die} &amp;= \\frac{\\text{Cost per wafer}}{\\text{Dies per wafer} \\times \\text{yield}} \\\\ \\text{Dies per wafer} &amp;\\approx \\frac{\\text{Wafer area}}{\\text{Die area}} \\\\ \\text{Yield} &amp;= \\frac{1}{\\left(     1 + (\\text{Defects per area} \\times \\text{Die area} / 2) \\right) ^ 2} \\end{aligned} \\] <p>\u6700\u540e\u4e00\u4e2a\u5f0f\u5b50\u57fa\u4e8e\u7ecf\u9a8c\u89c2\u5bdf\u5f97\u5230\uff0c\u5176\u4e2d\u6307\u6570\u5b9e\u9645\u4e0a\u4e0e\u52a0\u5de5\u6b65\u9aa4\u6570\u91cf\u6709\u5173\u3002</p>"},{"location":"ZJU_CS/computer_organization/1_prelude/#15_performance","title":"1.5 Performance","text":"<p>\u8861\u91cf\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u548c\u8868\u73b0\uff0c\u65e0\u8bba\u5bf9\u4e8e\u5de5\u7a0b\u5e08\u8fd8\u662f\u6d88\u8d39\u8005\u90fd\u662f\u4e00\u4e2a\u975e\u5e38\u5fc5\u8981\u7684\u9700\u6c42\u3002\u5176\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u6807\u51c6\u5c31\u662f\u201c\u8fd0\u884c\u901f\u5ea6\u201d\uff0c\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>Response Time / Execution Time    \u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u65f6\u95f4</li> <li>Throughput / Bandwidth    \u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u7684\u4efb\u52a1\u6570\u91cf</li> </ul> <p>\u5e76\u4e14\u6211\u4eec\u8fd9\u6837\u8054\u7cfb performance \u548c execution time\uff1a</p> \\[ \\text{Performance}_X = \\frac{1}{\\text{Execution time}_X} \\] <p>\u800c\u76f8\u5bf9\u6027\u80fd(Relative Performance)\u5c31\u662f\u975e\u5e38 naive \u5730\u5bf9\u4e24\u4e2a\u6bd4\u8f83\u5bf9\u8c61\u6c42\u6bd4\u503c\uff0c\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u6bd4\u8f83\u4e24\u4e2a\u4e1c\u897f\u7684\u6027\u80fd\uff0c\u4e5f\u5c31\u662f\u6307\u8ba1\u7b97\u5b83\u4eec\u7684\u76f8\u5bf9\u6027\u80fd\u3002</p> <p>\u5f53\u6211\u4eec\u9700\u8981\u8861\u91cf\u4e00\u4e2a CPU \u7684\u6027\u80fd\uff0c\u6216\u8005\u5177\u4f53\u53bb\u5206\u6790\u4e00\u4e2a CPU \u7684\u6027\u80fd\u6784\u6210\u65f6\uff0c\u5c31\u9700\u8981\u66f4\u52a0\u5177\u4f53\u7684\u6307\u6807\uff1a</p> <ul> <li>CPU (execution) time\uff08CPU \u6267\u884c\u65f6\u95f4\uff09</li> <li>CPU clock cycle\uff08\u65f6\u949f\u5468\u671f\u6570\uff09</li> <li>clock rate\uff08\u65f6\u949f\u9891\u7387\uff09 / clock cycle time\uff08\u65f6\u949f\u5468\u671f\uff09</li> </ul> \\[ \\begin{aligned}     \\text{CPU execution time} &amp;= \\text{CPU clock cycles} \\times \\text{Clock cycle time} \\\\     &amp;= \\frac{\\text{CPU clock cycles}}{\\text{Clock rate}} \\end{aligned} \\] <p>\u540c\u65f6\uff0c\u8fd8\u6709\u4e00\u4e2a\u5bb9\u6613\u5f97\u5230\u7684\u5173\u7cfb\uff1a</p> \\[ \\begin{aligned}     \\text{CPU clock cycles} &amp;= \\text{Instructions count} \\times \\text{Average cycles per instruction} \\end{aligned} \\] <p>\u5176\u4e2d\uff0c\u6bcf\u6761\u6307\u4ee4\u7684\u5e73\u5747\u5468\u671f\u6570(Average cycles per instruction)\u53c8\u7f29\u5199\u4e3a CPI\u3002</p> <p>CPI(clock cycles per instruction), the average number of clock cycles each instruction takes to execute = \\(\\frac{\\text{CPU clock cycles}}{\\text{Instruction count}}\\);</p> <p>\u4e8e\u662f\uff0c\u5c06\u4e0a\u9762\u7684\u4e24\u5757\u5173\u7cfb\u6574\u5408\u8d77\u6765\u5c31\u5f97\u5230\uff1a</p> \\[ \\begin{aligned}     \\text{CPU time} &amp;= \\text{Instruction count} \\times \\text{CPI} \\times \\text{Clock cycle time} \\\\      &amp;= \\frac{\\text{Instruction count} \\times \\text{CPI}}{\\text{Clock rate}} \\end{aligned} \\] \u7ec3\u4e60 \u9898\u9762\u7b54\u6848 <p>\u7f16\u8bd1\u5668\u53ef\u80fd\u63d0\u4f9b\u4e24\u79cd\u4ee3\u7801\u5e8f\u5217\uff0c\u6bcf\u4e00\u4e2a\u5e8f\u5217\u90fd\u5305\u542b A\u3001B\u3001C \u4e09\u79cd\u7c7b\u578b\u7684\u6307\u4ee4\uff0c\u6bcf\u79cd\u6307\u4ee4\u7684 CPI \u5982\u4e0b\u8868\u6240\u793a\u3002</p> A B C CPI 1 2 3 Instruction count \\@ seq 1 2 1 2 Instruction count \\@ seq 2 4 1 1 <ol> <li>\u54ea\u4e00\u4e2a seq \u6267\u884c\u4e86\u6700\u591a\u7684\u6307\u4ee4\uff1f</li> <li>\u54ea\u4e00\u4e2a seq \u66f4\u5feb\uff1f</li> <li>\u6bcf\u4e00\u4e2a seq \u7684 CPI \u662f\u591a\u5c11\uff1f</li> </ol> <p>1.\u5f31\u667a\u9898\uff0c\u52a0\u8d77\u6765\u5c31\u884c\u3002</p> \\[ \\begin{aligned}     \\text{instruction count @ seq 1} = 2 + 1 + 2 = 5 \\\\     \\text{instruction count @ seq 2} = 4 + 1 + 1 = 6 \\end{aligned} \\] <p>\u6240\u4ee5 2 \u591a\u3002</p> <p>2.\u7531\u4e8e\u4ea7\u751f\u5dee\u5f02\u7684\u5730\u65b9\u662f\u7f16\u8bd1\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u9ed8\u8ba4\u65f6\u949f\u5468\u671f\u76f8\u540c\uff0c\u6240\u4ee5\u6bd4\u8f83 CPU time \u7b49\u6548\u4e8e\u6bd4\u8f83 clock cycles\u3002</p> \\[ \\begin{aligned}     \\text{clock cycles @ seq 1} = 2 \\times 1 + 1 \\times 2 + 2 \\times 3 = 10 \\\\     \\text{clock cycles @ seq 2} = 4 \\times 1 + 1 \\times 2 + 1 \\times 3 = 9 \\end{aligned} \\] <p>\u6240\u4ee5 2 \u5feb\u3002</p> <p>3.seq \u7684 CPI \u5c31\u662f seq \u7684 clock cycles \u9664\u4ee5 seq \u7684 instruction count\uff1a</p> \\[ \\begin{aligned}       \\text{CPI @ seq 1} = \\frac{10}{5} = 2 \\\\       \\text{CPI @ seq 2} = \\frac{9}{6} = 1.5 \\end{aligned} \\] \u7ec3\u4e60 \u9898\u9762\u7b54\u6848 <p>A given application written in Java runs 15 seconds on a desktop processor. A new  Java compiler is released that requires only 0.6 as many instructions as the old  compiler. Unfortunately, it increases the CPI by 1.1. How fast can we expect the application to run using this new compiler? Pick the right answer from the three  choices below:</p> <ol> <li>\\(\\frac{15\\times 0.6}{1.1} = 8.2 sec\\);</li> <li>\\(15\\times 0.6\\times 1.1 = 9.9 sec\\);</li> <li>\\(\\frac{15\\times 1.1}{0.6} = 27.5 sec\\);</li> </ol> <p>\u5df2\u77e5\u516c\u5f0f\uff1a</p> \\[ \\begin{aligned}     \\text{CPU time} &amp;= \\text{CPI} * \\text{instruction count} * \\text{clock cycle time} \\end{aligned} \\] <p>\u73b0\u5728 CPI \u53d8\u6210 1.1 \u500d\uff0cinstruction count \u53d8\u6210 0.6 \u500d\uff0c\u6240\u4ee5\u5e94\u8be5\u9009 2\u3002</p>"},{"location":"ZJU_CS/computer_organization/1_prelude/#others","title":"Others","text":"<ul> <li> <p>\u2026\u2026\u4e0d\u662f\u5f88\u60f3\u5b66\u4e86 \u518d\u8bf4\u5427</p> </li> <li> <p>\\(KB = 10^3 B, KiB = 2^{10} B\\)</p> </li> <li>K M G T P E Z Y</li> <li> <p>Amdahl Law \\(T_{\\text{improved}} = \\cfrac{T_{\\text{affected}}}{\\text{Improvement Factor}}+T_\\text{unaffected}\\) \ud83d\udd17 Wiki</p> </li> <li> <p>MIPS: Millions of Instructions Per Seconds</p> </li> </ul> <p>$$  </p> <p>\\begin{aligned} MIPS  &amp;= \\frac{\\text{#Instructions}}{\\text{Execution time} \\times 10^6} \\ &amp;= \\frac{\\text{#Instructions}}{     \\frac{         \\text{Instruction count} \\times \\text{CPI}     }{         \\text{Clock rate}     } \\times 10^6 } \\ &amp;= \\frac{\\text{Clock rate}}{\\text{CPI} \\times 10^6}</p> <p>\\end{aligned}</p> <p>$$</p>"},{"location":"ZJU_CS/computer_organization/1_prelude/#_1","title":"\u5185\u5b58","text":""},{"location":"ZJU_CS/computer_organization/2_instructions/","title":"2 Instructions","text":"<p>Warning</p> <p>\u672c\u7ae0\u90e8\u5206\u5185\u5bb9\u5efa\u7acb\u5728\u638c\u63e1\u81f3\u5c11\u4e00\u95e8\u6c47\u7f16\u8bed\u8a00\u7684\u57fa\u7840\u4e0a\uff0c\u4f8b\u5982\u4fee\u8bfb\u8fc7\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u6216\u6c47\u7f16\u8bed\u8a00\u7b49\u8bfe\u7a0b\u3002</p> <p>\u6211\u4eec\u8ba8\u8bba\u8fc7\uff0c\u8ba1\u7b97\u673a\u7684 performance \u53d7 #inst, clock cycle time \u548c clock cycles per inst (CPI) \u51b3\u5b9a\u3002\u7ed9\u5b9a\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u9700\u8981\u4f7f\u7528\u7684 #inst \u53d7\u7f16\u8bd1\u5668\u548c inst set architecture \u51b3\u5b9a\u3002</p> <p>\u672c\u7ae0\u4ecb\u7ecd RISC-V \u7684 ISA\u3002</p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#21","title":"2.1 \u5bc4\u5b58\u5668\uff0c\u5bfb\u5740\u65b9\u5f0f","text":""},{"location":"ZJU_CS/computer_organization/2_instructions/#_1","title":"\u5bc4\u5b58\u5668","text":"<p>RISC-V architecture \u63d0\u4f9b 32 \u4e2a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u547d\u540d\u4e3a <code>x0</code> ~ <code>x31</code> \uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u662f <code>64</code> \u4f4d\u3002\u5728 RISC-V architecture \u4e2d\uff0c\u4e00\u4e2a word \u4e3a 32 \u4f4d\uff0c\u4e00\u4e2a doubleword \u4e3a 64 \u4f4d\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\u7684\u4e00\u90e8\u5206\u6709\u4e13\u95e8\u7684\u7528\u9014\uff0c\u6211\u4eec\u7a0d\u540e\u5bf9\u5176\u8fdb\u884c\u8ba8\u8bba\u3002</p> <p>RISC-V architecture \u4e5f\u63d0\u4f9b\u4e00\u7cfb\u5217\u6d6e\u70b9\u6570\u5bc4\u5b58\u5668 <code>f0</code> ~ <code>f31</code> \uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002</p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#_2","title":"\u5bfb\u5740","text":"<p>RISC-V architecture \u7684\u5730\u5740\u662f 64 \u4f4d\u7684\uff0c\u5730\u5740\u4e3a\u5b57\u8282\u5730\u5740\uff0c\u56e0\u6b64\u603b\u5171\u53ef\u4ee5\u5bfb\u5740 \\(2^{64}\\) \u4e2a\u5b57\u8282\uff0c\u5373 \\(2^{61}\\) \u4e2a dword (doubleword, \u4e0b\u540c)\uff0c\u56e0\u4e3a\u4e00\u4e2a dword \u5360 \\(\\log_2{\\frac{64}{8}}=3\\) \u4f4d\u3002</p> <p>\u5728\u4e00\u4e9b architecture \u4e2d\uff0cword \u7684\u8d77\u59cb\u5730\u5740\u5fc5\u987b\u662f word \u5927\u5c0f\u7684\u6574\u500d\u6570\uff0cdword \u4e5f\u4e00\u6837\uff0c\u8fd9\u79cd\u8981\u6c42\u79f0\u4e3a alignment restriction\u3002RISC-V \u5141\u8bb8\u4e0d\u5bf9\u9f50\u7684\u5bfb\u5740\uff0c\u4f46\u662f\u6548\u7387\u4f1a\u4f4e\u3002</p> <p>RISC-V \u4f7f\u7528 little endian \u5c0f\u7aef\u7f16\u5740\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u4ece 0x1000 \u8fd9\u4e2a\u5730\u5740\u8bfb\u51fa\u4e00\u4e2a dword \u65f6\uff0c\u6211\u4eec\u8bfb\u5230\u7684\u5b9e\u9645\u4e0a\u662f 0x1000~0x1007 \u8fd9 8 \u4e2a\u5b57\u8282\uff0c\u5e76\u5c06 0x1000 \u5b58\u5165\u5bc4\u5b58\u5668\u4f4e\u4f4d\uff0c0x1007 \u5b58\u5165\u9ad8\u4f4d\u3002</p> <p> </p> <p>\u4e00\u4e2a\u8bb0\u5fc6\u65b9\u6cd5\u662f\uff0c\u5982\u679c\u4f60\u5c06\u5730\u5740\u6a2a\u7740\u5199\uff0c\u5373\u4ece\u5de6\u5230\u53f3\u9012\u589e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5927\u7aef\u6765\u8bf4\u662f\u6bd4\u8f83\u81ea\u7136\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5c0f\u7aef\u6765\u8bf4\u4f1a\u6bd4\u8f83\u4e0d\u81ea\u7136\u3002\u4ee5\u4e0a\u9762\u7684 <code>0A0B0C0D</code> \u4e3a\u4f8b\u5b50\uff0c\u5927\u7aef\u4e3a\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\u662f <code>0A</code> <code>0B</code> <code>0C</code> <code>0D</code>\uff0c\u800c\u5c0f\u7aef\u4ece\u4f4e\u5230\u9ad8\u5730\u5740\u5219\u662f <code>0D</code> <code>0C</code> <code>0B</code> <code>0A</code>\u3002</p> <p>RISC-V \u652f\u6301 PC relative \u5bfb\u5740\u3001\u7acb\u5373\u6570\u5bfb\u5740 ( <code>lui</code> )\u3001\u95f4\u63a5\u5bfb\u5740 ( <code>jalr</code> )\u3001\u57fa\u5740\u5bfb\u5740 ( <code>8(sp)</code> )\uff1a</p> <p></p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#2s_complement","title":"\u8865\u7801 2's complement","text":"<p>\\(x + \\bar x = 111\\dots111_2 = -1\\)\uff0c\u56e0\u6b64 \\(-x = \\bar x + 1\\)\u3002\u524d\u5bfc 0 \u8868\u793a\u6b63\u6570\uff0c\u524d\u5bfc 1 \u8868\u793a\u8d1f\u6570\u3002See also</p> <p>\u56e0\u6b64\u5728\u5c06\u4e0d\u8db3 64 \u4f4d\u7684\u6570\u636e\u8f7d\u5165\u5bc4\u5b58\u5668\u65f6\uff0c\u5982\u679c\u6570\u636e\u662f\u65e0\u7b26\u53f7\u6570\uff0c\u53ea\u9700\u8981\u4f7f\u7528 0 \u5c06\u5bc4\u5b58\u5668\u7684\u5176\u4ed6\u90e8\u5206\u586b\u5145 (zero extension)\uff1b\u800c\u5982\u679c\u662f\u7b26\u53f7\u6570\uff0c\u5219\u9700\u8981\u7528\u6700\u9ad8\u4f4d\u5373\u7b26\u53f7\u4f4d\u586b\u5145\u5269\u4f59\u90e8\u5206\uff0c\u79f0\u4e3a\u7b26\u53f7\u6269\u5c55 (sign extension)\u3002</p> <p>\u5373\uff0c\u5728\u6307\u4ee4\u4e2d\u7684 <code>lw</code> ,  <code>lh</code> ,  <code>lb</code> \u4f7f\u7528 sign extension\uff0c\u800c <code>lwu</code> ,  <code>lhu</code> ,  <code>lbu</code> \u4f7f\u7528 zero extension\u3002</p> <p>18~19 Final</p> <p></p> \u7b54\u6848 <p>-0x52F00000, -0x0FFFFCDF</p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#22","title":"2.2 \u6307\u4ee4\uff0c\u6307\u4ee4\u683c\u5f0f","text":"<p>\u8bfe\u672c\u4e0a\u4ecb\u7ecd\u7684 RISC-V \u6307\u4ee4\uff08 <code>lr.d</code> ,  <code>sc.d</code> \u88ab\u7701\u7565\u4e86\uff09\u5217\u8868\u5982\u4e0b\uff1a</p> <p></p> <p>\u5728 RISC \u6307\u4ee4\u96c6\u4e2d\uff0c\u53ea\u6709 load \u7cfb\u5217\u548c store \u7cfb\u5217\u6307\u4ee4\u80fd\u591f\u8bbf\u95ee\u5185\u5b58\u3002</p> <p>RISC-V \u7684\u8df3\u8f6c\u6307\u4ee4\u7684 offset \u662f\u57fa\u4e8e\u5f53\u524d\u6307\u4ee4\u7684\u5730\u5740\u7684\u504f\u79fb\uff1b\u8fd9\u4e0d\u540c\u4e8e\u5176\u4ed6\u4e00\u4e9b\u6c47\u7f16\u662f\u57fa\u4e8e\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u504f\u79fb\u7684\u3002\u5373\u5982\u679c\u662f\u8df3\u8f6c\u8bed\u53e5 <code>PC</code> \u5c31\u4e0d +4 \u4e86\uff0c\u800c\u662f\u76f4\u63a5 +offset\u3002</p> <p><code>lw</code> ,  <code>lwu</code> \u7b49\u64cd\u4f5c\u90fd\u4f1a\u6e05\u96f6\u9ad8\u4f4d\u3002</p> <p>RISC-V \u6307\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p> \u5176\u4e2d <code>I</code> \u578b\u6307\u4ee4\u6709\u4e24\u4e2a\u6761\u76ee\uff1b\u8fd9\u662f\u56e0\u4e3a\u7acb\u5373\u6570\u79fb\u4f4d\u64cd\u4f5c <code>slli</code> , <code>srli</code> , <code>srai</code> \u5e76\u4e0d\u53ef\u80fd\u5bf9\u4e00\u4e2a 64 \u4f4d\u5bc4\u5b58\u5668\u8fdb\u884c\u5927\u4e8e 63 \u4f4d\u7684\u79fb\u4f4d\u64cd\u4f5c\uff0c\u56e0\u6b64 12 \u4f4d imm \u4e2d\u53ea\u6709\u540e 6 \u4f4d\u80fd\u5b9e\u9645\u88ab\u7528\u5230\uff0c\u56e0\u6b64\u524d\u9762 6 \u4f4d\u88ab\u7528\u6765\u4f5c\u4e3a\u4e00\u4e2a\u989d\u5916\u7684\u64cd\u4f5c\u7801\u5b57\u6bb5\uff0c\u5982\u4e0a\u56fe\u4e2d\u7b2c\u4e8c\u4e2a <code>I</code> \u6761\u76ee\u90a3\u6837\u3002\u5176\u4ed6 <code>I</code> \u578b\u6307\u4ee4\u9002\u7528\u7b2c\u4e00\u4e2a <code>I</code> \u6761\u76ee\u3002</p> <p>\u53e6\u5916\uff0c\u4e3a\u4ec0\u4e48 <code>SB</code> \u548c <code>UJ</code> \u4e0d\u5b58\u7acb\u5373\u6570\uff08\u4e5f\u5c31\u662f\u504f\u79fb\uff09\u7684\u6700\u4f4e\u4f4d\u5462\uff1f\uff08\u5173\u6ce8\u8868\u683c\uff0c\u53ef\u4ee5\u53d1\u73b0\u53ea\u5305\u62ec <code>i[12:1]</code> \u6216\u8005 <code>i[20:1]</code>\uff0c\u7f3a\u5931 <code>i[0]</code>\uff09\u56e0\u4e3a\uff0c\u504f\u79fb\u7684\u6700\u540e\u4e00\u4f4d\u4e00\u5b9a\u662f 0\uff0c\u5373\u5730\u5740\u4e00\u5b9a\u662f 2 \u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u4fdd\u5b58\u3002</p> \u65e2\u7136\u6bcf\u4e2a\u6307\u4ee4\u90fd\u662f 4 \u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662f\u6700\u540e\u4e24\u4f4d\u90fd\u7701\u7565\uff0c\u800c\u662f\u53ea\u7701\u7565\u4e00\u4f4d\u5462\uff1f <p>\u5b9e\u9645\u4e0a\uff0c\u662f\u5b58\u5728\u6307\u4ee4\u957f\u4e3a 2 \u5b57\u8282\u7684 extension \u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u6ca1\u5b66\uff1a</p> <p></p> <p>\u8bfe\u672c P116</p> <p></p> <p>RISC-V Spec V20191213 P15</p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#23","title":"2.3 \u4f2a\u6307\u4ee4\u53ca\u5176\u5b9e\u73b0","text":"<p>\u6ce8\uff1a <code>j imm</code> \u4e5f\u53ef\u4ee5\u7528 <code>beq x0, x0, imm</code> \u5b9e\u73b0\uff0c\u4f46\u662f\u6b64\u6cd5\u7684 <code>imm</code> \u7684\u4f4d\u6570\u4f1a\u8f83\u77ed\uff0c\u6240\u4ee5\u4e0d\u91c7\u7528\u3002</p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#24","title":"2.4 \u5206\u652f\u548c\u5faa\u73af","text":"<p>\u7565</p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#25","title":"2.5 \u8fc7\u7a0b\u8c03\u7528\u548c\u6808","text":"<p>RISC-V \u7ea6\u5b9a\uff1a</p> <ul> <li><code>x5</code> - <code>x7</code> \u4ee5\u53ca <code>x28</code> - <code>x31</code> \u662f temp reg\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd caller \u4fdd\u5b58\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u4fdd\u8bc1\u5728\u7ecf\u8fc7\u8fc7\u7a0b\u8c03\u7528\u4e4b\u540e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u4e0d\u53d8\u3002</li> <li><code>x8</code> - <code>x9</code> \u548c <code>x18</code> - <code>x27</code> \u662f saved reg\uff0ccallee \u9700\u8981\u4fdd\u8bc1\u8c03\u7528\u524d\u540e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u4e0d\u53d8\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c callee \u8981\u7528\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u5fc5\u987b\u4fdd\u5b58\u4e00\u4efd\uff0c\u8fd4\u56de\u524d\u6062\u590d\u3002</li> <li><code>x10</code> - <code>x17</code> \u662f 8 \u4e2a\u53c2\u6570\u5bc4\u5b58\u5668\uff0c\u51fd\u6570\u8c03\u7528\u7684\u524d 8 \u4e2a\u53c2\u6570\u4f1a\u653e\u5728\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\uff1b\u5982\u679c\u53c2\u6570\u8d85\u8fc7 8 \u4e2a\u7684\u8bdd\u5c31\u9700\u8981\u653e\u5230\u6808\u4e0a\uff08\u653e\u5728 <code>fp</code> \u4e0a\u65b9\uff0c <code>fp + 8</code> \u662f\u7b2c 9 \u4e2a\u53c2\u6570\uff0c <code>fp + 16</code> \u7684\u7b2c 10 \u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\u540c\u65f6\uff0c\u8fc7\u7a0b\u7684\u7ed3\u679c\u4e5f\u4f1a\u653e\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\uff08\u5f53\u7136\uff0c\u5bf9\u4e8e C \u8bed\u8a00\u8fd9\u79cd\u53ea\u80fd\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u8bed\u8a00\uff0c\u53ef\u80fd\u53ea\u4f1a\u7528\u5230 <code>x10</code> \uff09\u3002</li> <li><code>x1</code> \u7528\u6765\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\uff0c\u6240\u4ee5\u4e5f\u53eb <code>ra</code> \u3002\u56e0\u6b64\uff0c\u4f2a\u6307\u4ee4 <code>ret</code> \u5176\u5b9e\u5c31\u662f <code>jalr x0, 0(x1)</code> \u3002</li> <li>\u6808\u6307\u9488\u662f <code>x2</code> \uff0c\u4e5f\u53eb <code>sp</code> \uff1b\u59cb\u7ec8\u6307\u5411 \u6808\u9876\u5143\u7d20\u3002\u6808\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u589e\u957f\u3002<ul> <li><code>addi sp, sp, -24</code> ,  <code>sd x5, 16(sp)</code> ,  <code>sd x6, 8(sp)</code> ,  <code>sd x20, 0(sp)</code> \u53ef\u4ee5\u5b9e\u73b0\u5c06 x5, x6, x20 \u538b\u6808\u3002</li> </ul> </li> <li>\u4e00\u4e9b RISC-V \u7f16\u8bd1\u5668\u4fdd\u7559\u5bc4\u5b58\u5668 <code>x3</code> \u7528\u6765\u6307\u5411\u9759\u6001\u53d8\u91cf\u533a\uff0c\u79f0\u4e3a global pointer  <code>gp</code> \u3002</li> <li>\u4e00\u4e9b RISC-V \u7f16\u8bd1\u5668\u4f7f\u7528 <code>x8</code> \u6307\u5411 activation record \u7684\u7b2c\u4e00\u4e2a dword\uff0c\u65b9\u4fbf\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\uff1b\u56e0\u6b64 <code>x8</code> \u4e5f\u79f0\u4e3a frame pointer  <code>fp</code> \u3002\u5728\u8fdb\u5165\u51fd\u6570\u65f6\uff0c\u7528 <code>sp</code> \u5c06 <code>fp</code> \u521d\u59cb\u5316\u3002<ul> <li><code>fp</code> \u7684\u65b9\u4fbf\u6027\u5728\u4e8e\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u5bf9\u5c40\u90e8\u53d8\u91cf\u7684\u6240\u6709\u5f15\u7528\u76f8\u5bf9\u4e8e <code>fp</code> \u7684\u504f\u79fb\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u4f46\u662f\u5bf9 <code>sp</code> \u4e0d\u4e00\u5b9a\u3002\u5f53\u7136\uff0c\u5982\u679c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u4ec0\u4e48\u6808\u7684\u53d8\u5316\u6216\u8005\u6839\u672c\u6ca1\u6709\u5c40\u90e8\u53d8\u91cf\uff0c\u90a3\u5c31\u6ca1\u6709\u5fc5\u8981\u7528 <code>fp</code> \u4e86\u3002</li> </ul> </li> </ul> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5bc4\u5b58\u5668\u53ca\u5176\u7528\u9014\u603b\u7ed3\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d \"preserved on call\" \u7684\u610f\u601d\u662f\uff0c\u662f\u5426\u4fdd\u8bc1\u8c03\u7528\u524d\u540e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u4e0d\u53d8\u3002</p> <p></p>"},{"location":"ZJU_CS/computer_organization/2_instructions/#26","title":"2.6 \u5176\u4ed6\u8bdd\u9898","text":"<ul> <li>\u68c0\u67e5 index out of bounds\uff1a\u5982\u679c <code>x20 = i, x11 = size</code> \uff0c\u90a3\u4e48 <code>bgeu x20, x11, IndexOutOfBounds</code> \uff0c\u5373  <code>x20 &gt;= x11 || x20 &lt; 0</code> </li> <li>\u5927\u7acb\u5373\u6570</li> <li><code>lui</code> \u5c06 20 \u4f4d\u5e38\u6570\u52a0\u8f7d\u5230\u76ee\u6807\u5bc4\u5b58\u5668\u7684 31 \u5230 12 \u4f4d\uff1b\u7136\u540e\u7528 <code>addi</code> \u586b\u5145\u540e\u9762 12 \u4f4d\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a0\u8f7d\u4e00\u4e2a\u5927\u7acb\u5373\u6570\u4e86\u3002</li> <li>\u4f46\u662f\uff0c\u5982\u679c\u540e 12 \u4f4d\u7684\u9996\u4f4d\u662f 1\uff0c\u5728 <code>addi</code> \u7684\u65f6\u5019\u5c31\u4f1a\u56e0\u4e3a <code>sign ext</code> \u989d\u5916\u52a0\u4e0a <code>0xFFFFF000</code> \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 <code>lui</code> \u7684 imm \u589e\u52a0 1\uff0c\u8fd9\u6837 <code>lui</code> \u52a0\u8f7d\u540e\u5b9e\u9645\u4e0a\u5c31\u662f\u589e\u52a0\u4e86 <code>0x00001000</code> \uff0c\u548c <code>0xFFFFF000</code> \u76f8\u52a0\u540e\u5c31\u53ef\u4ee5\u62b5\u6d88\u5f71\u54cd\u4e86\u3002</li> <li>ASCII\uff0c\u662f 8 \u4f4d\u7684\uff0c\u53ef\u4ee5\u7528 <code>lbu</code> </li> <li>Unicode\uff0c\u662f 16 \u4f4d\u7684\uff0c\u53ef\u4ee5\u7528 <code>lhu</code> </li> <li>\u5c3e\u9012\u5f52 tail call / tail recursion\uff0c\u53ef\u4ee5\u8f6c\u6210\u5faa\u73af\u3002</li> </ul>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/","title":"3 Arithmetic","text":"<p>\u63d0\u793a</p> <p>\u5728\u5f00\u59cb\u672c\u7ae0\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u81ea\u5df1\u4e86\u89e3\u5404\u79cd\u4e8c\u8fdb\u5236\u4e0b\u8868\u793a\u6570\u7684\u76f8\u5173\u65b9\u6cd5\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#31_alu","title":"3.1 \u4e00\u4e2a\u57fa\u672c\u7684 ALU","text":"<p>\u4e16\u754c\u4e0a\u4e0d\u5b58\u5728\u51cf\u6cd5\u3002\u4f17\u6240\u5468\u77e5\uff0c\u51cf\u6cd5\u5c31\u662f\u52a0\u4e0a\u76f8\u53cd\u6570\u3002\u6240\u4ee5\u8fd9\u4e2a\u4e16\u754c\u4e0a\u4e0d\u5b58\u5728\u51cf\u6cd5\u3002</p> <p>Overflow\u3002\u786c\u4ef6\u89c4\u6a21\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u8fd0\u7b97\u7ed3\u679c\u8d85\u8fc7\u8fd9\u4e2a\u9650\u5236\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002\u5bf9\u4e8e\u6709\u7b26\u53f7\u52a0\u6cd5\uff0c\u5f53\u6b63\u6570\u548c\u6b63\u6570\u76f8\u52a0\u5f97\u5230\u8d1f\u6570\uff0c\u6216\u8005\u8d1f\u6570\u548c\u8d1f\u6570\u76f8\u52a0\u5f97\u5230\u6b63\u6570\u65f6\uff0c\u5c31\u53ef\u4ee5\u5224\u5b9a\u6ea2\u51fa\u3002\u5bf9\u4e8e\u65e0\u7b26\u53f7\u52a0\u6cd5\uff0c\u5982\u679c\u7ed3\u679c\u5c0f\u4e8e\u4e8c\u8005\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u5224\u5b9a\u6ea2\u51fa\u3002</p> <ul> <li>\u5173\u4e8e Overflow\uff0c\u786c\u4ef6\u5c42\u9762\u9700\u8981\u80fd\u68c0\u6d4b\u6ea2\u51fa\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u6307\u4ee4\u7684\u5730\u5740\u5b58\u50a8\u5230\u4e00\u4e2a\u7279\u522b\u7684\u5bc4\u5b58\u5668 EPC \u91cc\uff0c\u7136\u540e\u8df3\u8f6c\u5230 OS \u4e2d\u4e13\u95e8\u7684\u7a0b\u5e8f\u4e2d\u6765\u5904\u7406\u8fd9\u4e2a\u6ea2\u51fa\uff08\u5f02\u5e38\u5904\u7406\uff09\uff1b</li> </ul> <p>ALU, Arithmetic Logic Unit\uff0c\u7b97\u672f\u903b\u8f91\u5355\u5143\uff0c\u6267\u884c\u4e00\u4e9b\u7b97\u672f\u8fd0\u7b97\u6216\u8005\u903b\u8f91\u8fd0\u7b97\u3002</p> <ul> <li>\u6570\u903b\u91cc\u7684 ALU</li> </ul>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#311_1-bit_alu","title":"3.1.1 1-bit ALU","text":"<p>\uff08\u4e0b\u9762\u8fd9\u90e8\u5206\u5185\u5bb9\u5728\u8bfe\u672c\u9644\u5f55 A.5 \u5f00\u59cb\u7684\u5730\u65b9\uff09</p> <p>\u5728\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u8fc7 AND, OR, XOR \u8fd9\u4e9b gates\uff0c\u4ee5\u53ca inverter \u548c mux \u8fd9\u4e9b\u4e1c\u897f\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528\u8fd9\u4e9b\u4e1c\u897f\u6512\u4e00\u4e2a ALU \u51fa\u6765\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b ALU \u5177\u6709\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e0e\u8fd0\u7b97\u3001\u6216\u8fd0\u7b97\u548c\u6bd4\u8f83\u7684\u80fd\u529b\u3002</p> <p>\u6211\u4eec\u5148\u8003\u8651 1 bit ALU \u7684\u6784\u9020\u3002\u6211\u4eec\u5b66\u4e60\u8fc7 1 bit Full Adder \u7684\u6784\u9020\uff1a  </p> <p>\u4e0a\u5de6\u56fe\u662f\u5168\u52a0\u5668\u7684\u5177\u4f53\u6784\u9020\uff0c\u53f3\u56fe\u662f\u6211\u4eec\u5c06\u5176\u8fdb\u884c\u5c01\u88c5\u540e\u7684\u8868\u793a\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u7ed3\u5408\u4e00\u4e2a mux\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u652f\u6301\u4e0e\u3001\u6216\u4ee5\u53ca\u52a0\u6cd5\u8fd0\u7b97\u7684 1 bit ALU\uff1a </p> <p>\u5176\u4e2d <code>Operation</code> \u662f\u7528\u6765\u6307\u660e mux \u91c7\u53d6\u54ea\u4e2a\u7ed3\u679c\u7684\u4fe1\u53f7\uff0c\u503c\u4e3a 00 01 10 \u5206\u522b\u5bf9\u5e94\u4e0e\u3001\u6216\u3001\u52a0\u6cd5\u8fd0\u7b97\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#312_nor","title":"3.1.2 \u52a0\u4e0a\u51cf\u6cd5\u548c NOR\uff01","text":"<p>\u51cf\u6cd5\u8fd0\u7b97\u600e\u4e48\u529e\u5462\uff1f\u4f17\u6240\u5468\u77e5\uff0c\u7531\u4e8e\u8865\u7801\u6709 \\(x + \\bar x = 111\\dots111_2 = -1\\)\uff0c\u56e0\u6b64 \\(-x = \\bar x + 1\\)\uff0c\u6240\u4ee5 \\(a - b = a + (-b) = a + \\bar b + 1\\)\u3002\u636e\u6b64\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u7684\u7ed3\u6784\uff1a</p> <p></p> <p>\u5176\u4e2d <code>Binvert</code> \u7528\u6765\u6307\u660e\u662f\u5426\u9700\u8981\u5c06\u7ed3\u679c\u53d6\u53cd\uff1b\u5728\u8ba1\u7b97\u51cf\u6cd5\u65f6\uff0c\u6211\u4eec\u5c06 <code>Binvert</code> \u8bbe\u4e3a <code>1</code> \uff0c\u7136\u540e\u5c06 <code>CarryIn</code> \u4e5f\u8bbe\u4e3a <code>1</code> \uff0c <code>Operation</code> \u8bbe\u4e3a <code>2</code> \uff0c\u8fd9\u6837\u6211\u4eec\u7684\u7ed3\u679c\u5c31\u662f \\(a + \\bar b + 1\\)\u3002</p> <p><code>NOR</code> \u8fd0\u7b97\uff1a <code>a NOR b = NOT(a OR b) = (NOT a) AND (NOT b)</code> \uff0c\u56e0\u6b64 <code>NOR</code> \u8fd0\u7b97\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a</p> <p> </p> <p>\u4e0a\u53f3\u56fe\u662f\u6211\u4eec\u76ee\u524d\u7684 1 bit ALU \u7684\u62bd\u8c61\u7ed3\u6784\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#313_64-bit_alu","title":"3.1.3 \u4e32\u8054\u5f97\u5230 64-bit ALU\uff01","text":"<p>\u6709\u4e86 1 bit \u7684 ALU\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020\u51fa RISC-V \u6240\u9700\u7684 64 bits \u7684 ALU \u4e86\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e 64 \u4f4d\u7684\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001AND, OR, NOR \u8fd0\u7b97\uff0c\u8fd9\u6837\u7684 64 \u4f4d ALU \u90fd\u53ef\u4ee5\u5b8c\u6210\u3002</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u9762\u9664\u4e86\u6211\u4eec\u719f\u6089\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u591a\u4e86 <code>Less</code> ,  <code>Set</code> \u548c <code>Overflow</code> \u8fd9\u4e9b\u4f4d\u3002\u5b83\u4eec\u662f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\u5462\uff1f</p> <p>\u9996\u5148 <code>Overflow</code> \u662f\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u5b83\u7528\u6765\u8868\u793a\u52a0\u6cd5\u6216\u51cf\u6cd5\u6709\u6ca1\u6709\u51fa\u73b0\u6ea2\u51fa\u7684\u73b0\u8c61\uff1b\u663e\u7136\u8fd9\u4e2a\u5224\u65ad\u53ea\u9700\u8981\u5728 ALU63\uff0c\u5373 Most Significant Bit \u624d\u9700\u8981\u8fdb\u884c\u3002\u5bb9\u6613\u8bc1\u660e\uff0c\u5982\u679c \\(C_{in} \\oplus C_{out} = 1\\)\uff0c\u90a3\u4e48\u5b58\u5728\u6ea2\u51fa\uff1b\u56e0\u6b64 ALU63 \u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684 XOR \u95e8\u5373\u53ef\u5b8c\u6210\u8fd9\u4e00\u5224\u65ad\u3002</p> <p>Tip: \u8fd9\u91cc\u63d0\u5230\u7684 \\(C_{in}\\) \u548c \\(C_{out}\\) \u6307\u7684\u90fd\u662f\u6700\u540e\u4e00\u4e2a ALU \u7684 carry in \u548c carry out\u3002</p> <p>\u7b80\u5355\u505a\u89e3\u91ca\uff0c\u9996\u5148\uff0c\u6700\u540e\u4e00\u4f4d\u662f\u7b26\u53f7\u4f4d\u3002\\(C_{in} \\oplus C_{out} = 1\\) \u610f\u5473\u7740\u5176\u4e2d\u4e00\u4e2a\u662f 1\uff0c\u53e6\u5916\u4e00\u4e2a\u662f 0\uff1b - \u5047\u8bbe \\(C_{in} = 1, \\, C_{out} = 0\\)\uff0c\u5219\u610f\u5473\u7740 \\(a_{63}\\) \u548c \\(b_{63}\\) \u90fd\u4e3a 0\uff0c\u5373\u4e24\u4e2a operand \u90fd\u662f\u6b63\u6570\uff0c\u6b64\u65f6\u7531\u4e8e \\(C_{in} = 1\\)\uff0c\u6240\u4ee5 \\(res_{63}=1\\) \u5373\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u4e24\u6b63\u6570\u76f8\u52a0\u5f97\u5230\u8d1f\u6570\uff0c\u53d1\u751f overflow\uff1b - \u5047\u8bbe \\(C_{in} = 0, \\, C_{out} = 1\\)\uff0c\u5219\u610f\u5473\u7740 \\(a_{63}\\) \u548c \\(b_{63}\\) \u90fd\u4e3a 1\uff0c\u5373\u4e24\u4e2a operand \u90fd\u662f\u8d1f\u6570\uff0c\u6b64\u65f6\u7531\u4e8e \\(C_{out} = 0\\)\uff0c\u6240\u4ee5 \\(res_{63}=0\\) \u5373\u7ed3\u679c\u662f\u6b63\u6570\uff0c\u4e24\u8d1f\u6570\u76f8\u52a0\u5f97\u5230\u6b63\u6570\uff0c\u53d1\u751f overflow\uff1b</p> <p><code>Less</code> \u548c <code>Set</code> \u5171\u540c\u4f7f\u7528\uff0c\u662f\u4e3a\u4e86\u5b9e\u73b0 <code>slt rd, rs1, rs2</code> \u8fd9\u4e2a\u64cd\u4f5c\uff08\u5373\u5b9e\u73b0\u6bd4\u8f83\u64cd\u4f5c\uff09\uff08SLT \u5373 Set Less Than\uff09\u7684\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7684\u542b\u4e49\u662f\uff0c\u5982\u679c <code>rs1 &lt; rs2</code> \uff0c\u90a3\u4e48\u5c06 <code>rd</code> \u7f6e\u4e3a <code>1</code> \uff0c\u5426\u5219\u7f6e\u4e3a <code>0</code> \u3002\u5982\u4f55\u8fdb\u884c\u8fd9\u4e00\u5224\u65ad\u5462\uff1f\u5f88\u7b80\u5355\uff0c<code>rs1 &lt; rs2</code> \u5373 <code>rs1 - rs2 &lt; 0</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c <code>rs1 - rs2</code> \u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u662f <code>1</code> \uff0c\u90a3\u4e48\u5c31\u8bf4\u660e <code>rs1 &lt; rs2</code> \u3002\u6240\u4ee5\u5bf9\u4e8e <code>slt</code> \u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97 <code>rs1 - rs2</code>\uff0c\u800c\u540e\u5c06 ALU63 \u4e2d\u52a0\u6cd5\u5668\u7684\u7ed3\u679c\uff08\u5373\u6700\u7ec8\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\uff09\u8d4b\u503c\u7ed9 <code>Result[0]</code> \uff0c\u5373\u8fd0\u7b97\u7ed3\u679c\u7684 Least Significant Bit\uff0c\u800c\u5c06\u5176\u4ed6\u4f4d\u7684\u7ed3\u679c <code>Result[1:63]</code> \u90fd\u8bbe\u6210 0\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210 <code>slt</code> \u64cd\u4f5c\u4e86\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u56fe\u4e2d\uff0c\u9664\u4e86 ALU0 \u7684 <code>Less</code> \u6765\u81ea ALU63 \u7684 <code>Set</code> \u5916\uff0c\u5176\u4ed6 ALU \u7684 <code>Less</code> \u90fd\u662f <code>0</code> \u3002</p> <p>\u7ed3\u5408\u4e0a\u8ff0\u8ba8\u8bba\uff0c\u4e0a\u56fe\u4e2d ALU0 ~ ALU62 \u7684\u7ed3\u6784\u5982\u4e0b\u7b2c\u4e00\u5f20\u56fe\u6240\u793a\uff0cALU63 \u7684\u7ed3\u6784\u5982\u4e0b\u7b2c\u4e8c\u5f20\u56fe\u6240\u793a\uff1a</p> <p></p> <p></p> <p>\uff08\u6ce8\uff1a\u7b2c\u4e8c\u5f20\u56fe\u4e2d\u7684 Overflow Detection \u88ab\u590d\u6742\u5316\u4e86\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u901a\u8fc7 <code>CarryIn</code> \u548c <code>CarryOut</code> \u7684\u5f02\u6216\u5b8c\u6210\u7684\u3002\uff09</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c <code>Operation</code> \u589e\u52a0\u4e86 <code>3</code> \u7684\u53d6\u503c\uff0c\u8fd9\u4e2a\u53d6\u503c\u8868\u793a\u8fdb\u884c <code>slt</code> \u64cd\u4f5c\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#314","title":"3.1.4 \u4e00\u70b9\u4f18\u5316\uff01","text":"<p>\u4e4b\u524d\u6211\u4eec\u4e5f\u8ba8\u8bba\u8fc7\uff0c\u5982\u679c\u505a\u51cf\u6cd5\u6216\u8005 <code>slt</code> \u7684\u8bdd\uff0c\u9700\u8981\u5c06 <code>Binvert</code> \u548c ALU0 \u7684 <code>CarryIn</code> \u8bbe\u6210 <code>1</code> \uff0c\u5982\u679c\u662f\u52a0\u6cd5\u7684\u8bdd\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u90fd\u662f <code>0</code> \uff1b\u5176\u4ed6\u8fd0\u7b97\u7528\u4e0d\u5230\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u3002\u56e0\u6b64\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u59cb\u7ec8\u53d6\u503c\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u79f0\u4e4b\u4e3a <code>Bnegate</code> \u3002</p> <p>\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u6709 <code>beq</code> \uff0c <code>bne</code> \u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u7ed3\u5408 Common case fast \u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u6211\u4eec\u5c06\u5224\u65ad\u7ed3\u679c\u662f\u5426\u4e3a 0 \u7684\u529f\u80fd\u4e5f\u76f4\u63a5\u52a0\u5230 ALU \u91cc\u3002</p> <p>\u7ed3\u5408\u4e0a\u8ff0\u4e24\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u5f62\u6210\u4e86\u6700\u7ec8\u7684 64-bit ALU\uff01</p> <p></p> <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a ALU\uff0c\u6211\u4eec\u9700\u8981 4 bits \u7684 control lines\uff0c\u5206\u522b\u662f <code>Ainvert</code> ,  <code>Bnegate</code> \u548c <code>Operation</code> (2 bits)\u3002ALU \u7684\u7b26\u53f7\u548c control lines \u7684\u542b\u4e49\u5982\u4e0b\uff1a</p> <p> </p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#315","title":"3.1.5 \u66f4\u5feb\u7684\u52a0\u6cd5","text":"<p>\u4e0a\u9762\u7684 64 \u4f4d\u52a0\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7 1 \u4f4d\u52a0\u6cd5\u5668\u4e32\u8054\u5b9e\u73b0\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u52bf\u5fc5\u9700\u8981\u7b49\u5f85\u524d\u4e00\u4e2a\u52a0\u6cd5\u5668\u7b97\u51fa\u7ed3\u679c\u540e\u624d\u80fd\u7b97\u540e\u4e00\u4e2a\u7684\u3002\u8fd9\u79cd\u591a\u4f4d\u52a0\u6cd5\u5668\u7684\u5b9e\u73b0\u79f0\u4e3a\u884c\u6ce2\u52a0\u6cd5\u5668 Ripple Carry Adder, RCA\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u6162\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u4f55\u52a0\u901f\u5462\uff1f</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#3151_carry_lookahead_adder_cla","title":"3.1.5.1 Carry Lookahead Adder, CLA","text":"<p>\u8bfe\u672c\u6307\u51fa\uff0cRCA \u7f13\u6162\u7684\u91cd\u8981\u539f\u56e0\u662f\u540e\u4e00\u4e2a adder \u9700\u8981\u7b49\u524d\u4e00\u4e2a adder \u7684 carry \u7ed3\u679c\uff1b\u4f46\u6211\u4eec\u4e0d\u59a8\u8ba8\u8bba\u51fa\u73b0 carry \u7684\u53ef\u80fd\u3002\u7b2c\u4e00\u79cd\u53ef\u80fd\u662f\uff0c\u5982\u679c \\(a\\) \u548c \\(b\\) \u90fd\u662f 1\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a \u751f\u6210 \u4e00\u4e2a carry\uff1b\u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff0c\u5982\u679c \\(a\\) \u548c \\(b\\) \u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u662f 1\uff0c\u90a3\u4e48\u5982\u679c\u4f20\u5165\u7684 carry \u662f 1\uff0c\u5219\u8fd9\u91cc\u4e5f\u4f1a carry\uff0c\u5373 carry \u88ab \u4f20\u64ad \u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\\(c_{out} = a \\cdot b + (a + b)\\cdot c_{in}\\)\u3002\u6211\u4eec\u8bb0 generate \\(g = a\\cdot b\\)\uff0cpropagate \\(p = a + b\\)\uff0c\u5219\u6709 \\(c_{out} = g + p \\cdot c_{in}\\)\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\u4e00\u4e2a\u5168\u52a0\u5668\uff1a</p> <p></p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u5982\u4e0b\u5173\u7cfb\uff08\u53ef\u4ee5\u5f62\u8c61\u7406\u89e3\u6bcf\u4e00\u4e2a\u7b49\u5f0f\u7684\u6bcf\u4e00\u4e2a term \u7684\u6765\u6e90\uff09\uff1a</p> <p></p> <p>\u5229\u7528\u8fd9\u4e2a\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u4e00\u4e2a\u56db\u4f4d\u52a0\u6cd5\u5668\uff1a</p> <p></p> <p>\u4e0a\u9762\u7684 PFA, Partial Fully Adder\uff0c\u5c31\u662f\u524d\u9762\u6211\u4eec\u6784\u9020\u7684\u65b0\u5168\u52a0\u5668\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u901f\u52a0\u6cd5\u7684\u8fd0\u7b97\uff1b\u4f46\u662f\u6ce8\u610f\u5230\u8d8a\u5230\u9ad8\u4f4d\uff0c\u95e8\u7684 fan-in \u5c31\u8d8a\u5927\uff0c\u56e0\u6b64\u4e0d\u80fd\u4e00\u76f4\u589e\u52a0\u7684\u3002\u6240\u4ee5\u5bf9\u4e8e\u66f4\u591a\u4f4d\u6570\u7684\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u8fd9\u6837\u6784\u6210\u7684 4-bit CLA \u518d\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4e32\u8d77\u6765\uff01</p> <p></p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#3152_carry_skip_adder","title":"3.1.5.2 Carry Skip Adder (\u9a6c\u5fb7\u5148\u751f\u6ca1\u8bb2)","text":""},{"location":"ZJU_CS/computer_organization/3_arithmetic/#3153_carry_select_adder_csa","title":"3.1.5.3 Carry Select Adder, CSA","text":"<p>\u4f53\u73b0\u4e86 \u9884\u6d4b / \u5197\u4f59 \u7684\u601d\u60f3\u3002</p> <p>\u8fd9\u4e2a\u601d\u8def\u5176\u5b9e\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u628a\u8f93\u5165 carry \u4e3a 0 \u6216\u8005 1 \u7684\u60c5\u51b5\u90fd\u7b97\u4e00\u904d\uff0c\u7136\u540e\u6839\u636e\u5b9e\u9645\u7684\u60c5\u51b5\u4ece\u4e2d\u9009\u51fa\u6b63\u786e\u7684\u90a3\u79cd\u5c31\u597d\u4e86\uff1a</p> <p></p> <p></p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#32","title":"3.2 \u4e58\u6cd5","text":"<p>\uff5e\uff5e\u6682\u65f6\u4e0d\u60f3\u5b66\u4e86\uff0c\u542c\u8bf4\u8003\u7684\u4e0d\u591a\uff5e\uff5e</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#v1","title":"V1","text":"<ul> <li>\u5927\u81f4\u539f\u7406</li> </ul> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u6240\u8c13\u7684\u4e58\u6cd5\u5b9e\u9645\u4e0a\u662f\u6839\u636e Multiplier \u7684 0/1 \u6765\u9009\u62e9\u662f\u5426\u8981\u5c06 Multiplicand \u7684\u5bf9\u5e94\u4f4d\u79fb\u7ed3\u679c\u52a0\u5230 Product \u4e0a\u3002</p> <p>64 bits \u4e58\u6cd5\u5668\u7684\u786c\u4ef6\u5b9e\u73b0\u5927\u81f4\u5982\u4e0b\uff1a</p> <p> </p> <p>\u7b80\u5355\u505a\u89e3\u91ca\uff0c\u4e00\u5171\u8fdb\u884c 64 \u6b21\uff1a</p> <ol> <li>\u5224\u65ad Multiplier \u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u662f 1\uff1a</li> <li>\u5982\u679c\u662f\uff0c\u5219\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u52a0\u5230 Product \u5bc4\u5b58\u5668\u91cc\uff1b</li> <li>\u5982\u679c\u5426\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b</li> <li>\u5c06 Multiplier \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff08\u8fd9\u662f\u4e3a\u4e86\u4e0d\u65ad\u62ff\u51fa\u6bcf\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5728\u679a\u4e3e Multiplier \u7684\u6bcf\u4e00\u4f4d\uff09\uff0c\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u5de6\u79fb\u4e00\u4f4d\uff08\u5bf9\u5e94\u4e8e\u548c Multiplier \u7684\u7b2c\u51e0\u4f4d\u4e58\u5f97\u5230\u7684\u4f4d\u79fb\uff0c\u5177\u4f53\u53c2\u8003\u4e0a\u9762\u7684\u94fe\u63a5\u5185\u5bb9\uff09\uff1b</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#v2","title":"V2","text":"<p>\u53ef\u4ee5\u53d1\u73b0\uff0cV1 \u4e2d\u505a\u4e86\u5927\u91cf\u7684 128 \u4f4d\u52a0\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u88ab\u52a0\u8fc7\u53bb\u7684 Multiplicand \u6709\u6548\u5185\u5bb9\u53ea\u6709 64 \u4f4d\u3002V2 \u6b63\u662f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p> </p> <p>\u5b83\u5c06 Multiplicand \u5bc4\u5b58\u5668\u6362\u4e3a\u4e86 64 \u4f4d\uff0c\u800c\u5c06\u4f4d\u79fb\u64cd\u4f5c\u8f6c\u79fb\u5230\u4e86 Product \u5bc4\u5b58\u5668\u4e2d\u8fdb\u884c\u3002\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\uff0c64 \u4f4d\u52a0\u6cd5\u53ea\u5f71\u54cd Product \u5bc4\u5b58\u5668\u5de6\u4fa7\u7684 64 \u4f4d\uff0c\u800c\u4e4b\u540e\u7684\u53f3\u79fb\u64cd\u4f5c\u5219\u662f 128 \u4f4d\u3002\u8fd9\u6837\uff0c\u867d\u7136\u6700\u4f4e\u4f4d\u7684\u7ed3\u679c\u4e00\u5f00\u59cb\u4f1a\u88ab\u653e\u5728 Product \u5bc4\u5b58\u5668\u7684\u7b2c 65 \u4f4d\u91cc\uff0c\u4f46\u662f\u5728\u7ecf\u8fc7 64 \u6b21\u53f3\u79fb\u4e4b\u540e\uff0c\u5b83\u5c31\u51fa\u73b0\u5728\u7b2c\u4e00\u4f4d\u4e86\u3002\u4e8e\u662f\uff0c\u6240\u6709\u7684 128 \u4f4d\u52a0\u6cd5\u90fd\u88ab 64 \u4f4d\u52a0\u6cd5\u66ff\u4ee3\uff0c\u5b9e\u73b0\u4e86\u52a0\u901f\u3002</p> <p>\u5176\u6d41\u7a0b\u5927\u6982\u662f\uff0c\u4e00\u5171\u8fdb\u884c 64 \u6b21\uff1a</p> <ol> <li>\u5224\u65ad Multiplier \u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u662f 1\uff1a</li> <li>\u5982\u679c\u662f\uff0c\u5219\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u52a0\u5230 Product \u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\u91cc\uff1b</li> <li>\u5982\u679c\u5426\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b</li> <li>\u5c06 Multiplier \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff0c\u5c06 Product \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff1b</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#v3","title":"V3","text":"<p>\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u6211\u4eec\u5bf9 Multiplier \u7684\u53f3\u79fb\u662f\u4e3a\u4e86\u679a\u4e3e\u6700\u4f4e\u4f4d\uff0c\u4f46\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u679a\u4e3e\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u8981\u505a 64 \u4f4d\u7684\u53f3\u79fb\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u4e00\u5f00\u59cb\u7684\u51e0\u6b21\u4e2d\uff0cProduct \u7684\u53f3\u534a\u90e8\u5206\u5927\u90e8\u5206\u6ca1\u6709\u610f\u4e49\uff0c\u4f46\u662f\u4ecd\u7136\u5728 128 \u4f4d\u7684\u53f3\u79fb\u4e2d\u5f71\u54cd\u6548\u7387\u3002\u4ed4\u7ec6\u4e00\u770b\uff0c\u6211\u4eec\u80fd\u53d1\u73b0\uff0c\u6211\u4eec\u6bcf\u53f3\u79fb\u4e00\u6b21 Multiplier \u5bc4\u5b58\u5668\uff0c\u5c31\u4f1a\u53f3\u79fb\u4e00\u6b21 Product \u5bc4\u5b58\u5668\uff0c\u800c\u524d\u8005\u5c06\u5bfc\u81f4 Multiplier \u5bc4\u5b58\u5668\u4e2d\u51fa\u73b0\u4e00\u4e2a\u6ca1\u610f\u4e49\u7684 bit\uff0c\u540e\u8005\u5c06\u5bfc\u81f4 Product \u5bc4\u5b58\u5668\u4e2d\u6d88\u5931\u4e00\u4e2a\u6ca1\u610f\u4e49\u7684\u522b\u7279\u3002</p> <p>V3 \u6b63\u662f\u6293\u4f4f\u4e86\u8fd9\u4e2a\u70b9\uff0c\u76f4\u63a5\u5c06 Multiplier \u5b58\u5728\u4e86 Product \u7684\u4f4e 64 \u4f4d\u4e2d\u3002\u5f53\u6211\u4eec\u4ece\u4e2d\u53d6\u51fa\u6700\u4f4e\u4f4d\u5e76\u7ecf\u8fc7\u4e00\u6b21\u5224\u65ad\u540e\uff0c\u8fd9\u4e00\u4f4d\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u800c\u6070\u597d Product \u9700\u8981\u53f3\u79fb\uff0c\u5c31\u5c06\u8fd9\u4e00\u4f4d\u6d88\u9664\uff0c\u65b9\u4fbf\u6211\u4eec\u4e0b\u4e00\u6b21\u4ece\u6700\u4f4e\u4f4d\u62ff\u51fa\u4e0b\u4e00\u4e2a\u6bd4\u7279\uff01</p> <p>\u90a3\u4e48\u8fd9\u4e48\u505a\u7684\u597d\u5904\u5728\u54ea\u91cc\u5462\uff1f\u9996\u5148\uff0c\u5c11\u4e86\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u8282\u7701\u4e86\u7a7a\u95f4\uff1b\u5176\u6b21\uff0c\u539f\u672c\u9700\u8981 Multiplier \u5bc4\u5b58\u5668\u548c Product \u5bc4\u5b58\u5668\u90fd\u505a\u53f3\u79fb\uff0c\u73b0\u5728\u53ea\u9700\u8981 Product \u5bc4\u5b58\u5668\u53f3\u79fb\u5373\u53ef\uff0c\u51cf\u5c11\u4e86\u4e00\u4e2a 64 \u4f4d\u53f3\u79fb\u64cd\u4f5c\u3002</p> <p> </p> <p>\u5176\u6d41\u7a0b\u5927\u6982\u662f\uff0c\u4e00\u5171\u8fdb\u884c 64 \u6b21\uff1a</p> <ol> <li>\u5224\u65ad Product \u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u662f 1\uff1a</li> <li>\u5982\u679c\u662f\uff0c\u5219\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u52a0\u5230 Product \u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\u91cc\uff1b</li> <li>\u5982\u679c\u5426\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b</li> <li>\u5c06 Product \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff1b</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol> <p>\u4e58\u6709\u7b26\u53f7\u6570\u4e3b\u8981\u662f\u8f6c\u5316\u4e3a\u4e58\u65e0\u7b26\u53f7\u6570\u6765\u505a\u3002\u9996\u5148\u5b58\u50a8\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u65e0\u7b26\u53f7\u6570\u3002\u63a5\u4e0b\u6765\u5bf9\u4e24\u4e2a\u65e0\u7b26\u53f7\u6570\u505a\u65e0\u7b26\u53f7\u4e58\u6cd5\uff0c\u6700\u540e\u6839\u636e\u4e4b\u524d\u5b58\u50a8\u7684\u7b26\u53f7\u51b3\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7\u5e76\u8f6c\u5316\u4e3a\u6709\u7b26\u53f7\u6570\u3002</p> <p>\u4e00\u79cd\u6539\u8fdb\u7684\u4e58\u6cd5\u65b9\u6cd5\u662f Booth's Algorithm\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#booths_algorithm","title":"Booth's Algorithm\u3002","text":"<ul> <li>Booth's Algorithm\uff08\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5dee\u5206\u7b97\u6cd5\uff09</li> </ul> <p>\u6211\u4e2a\u4eba\u89c9\u5f97 xyx \u653e\u7684\u8fd9\u5f20\u56fe\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u628a\u5b83\u6298\u53e0\u4e86\u3002</p> xyx's img <p> </p> <p>\u5728\u6211\u770b\u6765\uff0cBooth's Algorithm \u7684\u4e3b\u8981\u601d\u60f3\u5728\u4e8e\uff0c\u51cf\u5c11\u4e58\u6570\u4e2d\u201c<code>1</code>\u201d\u7684\u6570\u91cf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u6211\u4eec\u539f\u5148\u7684\u4e58\u6cd5\u7b56\u7565\u4e2d\uff0c\u6bcf\u5f53\u4e58\u6570\u4e2d\u6709\u4e00\u4f4d <code>1</code> \u65f6\uff0c\u90fd\u4f1a\u9700\u8981\u4e00\u4e2a\u52a0\u6cd5\uff08\u5c06\u4f4d\u79fb\u540e\u7684\u88ab\u4e58\u6570\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\uff09\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e58\u6570\u4e2d\u6709\u8f83\u957f\u7684\u4e00\u4e32 <code>1</code> \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u6570\u5b57\u51cf\u4e00\u4e2a\u5c0f\u6570\uff0c\u5982\uff1a<code>00111100 = 01000000 - 00000100</code>\uff0c\u6b64\u65f6 4 \u4e2a <code>1</code> \u53d8\u4e3a 2 \u4e2a <code>1</code>\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u505a\u52a0\u6cd5\u7684\u6b21\u6570\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 xyx \u8bf4\u6709\u70b9\u50cf\u5dee\u5206\u4e86\u3002</p> <p> </p> <p>\u90a3\u4e48\u5728\u5b9e\u9645\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cBooth's Algorithm \u4e3b\u8981\u9075\u5faa\u4e24\u4f4d\u6bd4\u7279\u7684\u6a21\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p> </p> <p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u5f20\u56fe\u7684\u7406\u89e3\uff0c\u7a0d\u5fae\u505a\u4e00\u4e9b\u89e3\u91ca\u3002\u5b83\u5b9e\u9645\u4e0a\u7684\u8868\u793a\u662f\u632a\u7528\u4e86 V3 \u7684\u4e58\u6cd5\u5668\u3002product \u4e00\u5217\u4ee3\u8868\u7684\u662f product \u5bc4\u5b58\u5668\uff0c\u5de6\u4e00\u534a\u4e00\u5f00\u59cb\u7f6e 0\uff0c\u53f3\u4e00\u534a\u4e00\u5f00\u59cb\u5b58\u653e\u7684\u662f\u4e58\u6570\uff0c\u800c\u4e0a\u9762\u63d0\u5230\u7684\u5c06\u88ab\u4e58\u6570\u52a0\u51cf\u7d2f\u8ba1\u5230\u7ed3\u679c\u4e2d\u7684\u64cd\u4f5c\uff0c\u4e5f\u662f\u5bf9\u4e8e\u5de6\u534a\u90e8\u5206\u6765\u8bf4\u7684\uff08\u6362\u53e5\u8bdd\u6765\u8bf4\u5c31\u662f\u7528 V3 \u505a Booth's\uff09\u3002\u9700\u8981\u63d0\u9192\u7684\u662f\uff0c\u5728 Booth's Algorithm \u4e2d\uff0c\u4e24\u4f4d\u8bc6\u522b\u662f\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u7684\uff0c\u6b64\u65f6\u7b2c\u4e00\u4f4d\u4f5c\u4e3a\u4e24\u4f4d\u4e2d\u7684\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u4e3a 0\uff0c\u800c\u540e\u5728\u4e0b\u4e00\u8f6e\u4e2d\u7b2c\u4e00\u4f4d\u4f5c\u4e3a\u4f4e\u4f4d\uff0c\u7b2c\u4e8c\u4f4d\u4f5c\u4e3a\u9ad8\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u6709\u610f\u601d\u7684\u4e8b\u51fa\u73b0\u4e86\uff0cBooth's Algorithm \u4e5f\u80fd\u5e94\u7528\u4e8e\u8d1f\u6570\u3002</p> <p>\u4ed4\u7ec6\u60f3\u60f3\u5c31\u4f1a\u53d1\u73b0\u5176\u5b9e\u5f88\u5408\u7406\uff0c\u5bf9\u4e8e\u6b63\u6570\uff0c\u5176\u6700\u9ad8\u4f4d\u4e00\u5b9a\u662f <code>0</code>\uff0c\u56e0\u6b64\u4e0d\u7ba1\u600e\u4e48\u6837\u5b83\u6700\u7ec8\u90fd\u4f1a\u5339\u914d\u5230\u4e00\u4e2a <code>01</code> \u7684\u6a21\u5f0f\uff0c\u6765\u7ed9\u4e00\u4e2a <code>1111..</code> \u6536\u5c3e\u3002\u4f46\u662f\u8d1f\u6570\u4e0d\u7136\uff0c\u8d1f\u6570\u7684\u6700\u9ad8\u4f4d\u662f <code>1</code>\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5b83\u6700\u7ec8\u4e0d\u4f1a\u6267\u884c\u6240\u8c13\u7684 <code>01</code> \u5bf9\u5e94\u7684\u52a0\u6cd5\u64cd\u4f5c\u6765\u7ed9 <code>111...</code> \u6536\u5c3e\u3002\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5b83\u597d\u50cf\u201c\u4e8f\u201d\u4e86\u4e00\u4e2a\u5728\u4e0b\u4e00\u4f4d\u7684\u52a0\u6cd5\u3002\uff08\u5177\u4f53\u7684\u4e3a\u4ec0\u4e48\u6211\u6765\u4e0d\u53ca\u7ec6\u60f3\u4e86\uff0c\u4f46\u662f\u53ea\u7ba1\u4e0a\u7406\u89e3\u8fd9\u4e2a\u201c\u4e8f\u201d\u5f88\u5408\u7406.\uff09</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#33","title":"3.3 \u9664\u6cd5 \u6682\u65f6\u4e0d\u60f3\u5b66\u4e86\uff0c\u542c\u8bf4\u8003\u7684\u4e0d\u591a","text":"<p>\u548c\u4e58\u6cd5\u5f88\u50cf\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#34","title":"3.4 \u6d6e\u70b9\u8fd0\u7b97","text":"<p>\u5927\u90e8\u5206\u5904\u7406\u5668\u53ef\u80fd\u672c\u8eab\u5e76\u4e0d\u652f\u6301\u6d6e\u70b9\u8fd0\u7b97\uff0c\u53ea\u4e0d\u8fc7\u5728\u8f6f\u4ef6\u5c42\u9762\u53ef\u4ee5\u5c06\u6d6e\u70b9\u8fd0\u7b97\u8f6c\u6362\u4e3a\u6574\u6570\u8fd0\u7b97\u3002</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#341_ieee_754","title":"3.4.1 IEEE 754 \u6d6e\u70b9\u8868\u793a","text":"<p>\u6211\u4eec\u5c06\u5c0f\u6570\u70b9\u5de6\u8fb9\u53ea\u6709 1 \u4f4d\u6570\u5b57\u7684\u8868\u793a\u6570\u7684\u65b9\u6cd5\u79f0\u4e3a \u79d1\u5b66\u8bb0\u6570\u6cd5, scientific notation\uff0c\u800c\u5982\u679c\u5c0f\u6570\u70b9\u5de6\u8fb9\u7684\u6570\u5b57\u4e0d\u662f 0\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6570\u7684\u8868\u793a\u662f\u4e00\u4e2a \u89c4\u683c\u5316\u6570, normalized number\u3002\u79d1\u5b66\u8bb0\u6570\u6cd5\u80fd\u7528\u6765\u8868\u793a\u5341\u8fdb\u5236\u6570\uff0c\u5f53\u7136\u4e5f\u80fd\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u3002</p> <p>IEEE 754 \u89c4\u5b9a\u4e86\u4e00\u79cd\u6d6e\u70b9\u6570\u6807\u51c6\uff1a\u6211\u4eec\u5c06\u6d6e\u70b9\u6570\u8868\u793a\u4e3a \\((-1)^S \\times F \\times 2^E\\) \u7684\u5f62\u5f0f\uff0c\u8fd9\u91cc\u7684 \\(F \\times 2^E\\) \u662f\u4e00\u4e2a\u89c4\u683c\u5316\u6570\uff0c\u800c \\((-1)^S\\) \u7528\u6765\u8868\u793a\u7b26\u53f7\u4f4d\uff1a\\(S\\) \u4e3a 0 \u8bf4\u660e\u8be5\u6d6e\u70b9\u6570\u4e3a\u6b63\u6570\uff0c\u4e3a 1 \u5219\u4e3a\u8d1f\u6570\uff1b\\(F\\) \u548c \\(E\\) \u4e5f\u7528\u82e5\u5e72 bits \u8868\u793a\uff0c\u5206\u522b\u8868\u793a\u5c3e\u6570\u548c\u6307\u6570\uff0c\u6211\u4eec\u7a0d\u540e\u8ba8\u8bba\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u5176\u8868\u793a\u4e3a \\(1.\\text{xxxxx}_2\\times 2^{\\text{yyyy}}\\) \u7684\u5f62\u5f0f\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u901a\u8fc7\u8fd9\u79cd\u8868\u8fbe\u5f62\u5f0f\u8868\u793a 0\uff08\u4e3a\u4ec0\u4e48\u5c0f\u6570\u70b9\u5de6\u8fb9\u662f 1 \u5462\uff1f\u56e0\u4e3a\u4e8c\u8fdb\u5236\u53ea\u6709 0 \u548c 1\uff0c\u800c\u89c4\u683c\u5316\u8981\u6c42\u5c0f\u6570\u70b9\u5de6\u8fb9\u4e0d\u80fd\u4e3a 0\uff09\u3002\u6211\u4eec\u901a\u8fc7\u79d1\u5b66\u8bb0\u6570\u6cd5\u8c03\u6574\u4e86\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u4f7f\u5176\u6ee1\u8db3\u89c4\u683c\u5316\u7684\u8981\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u79f0\u8fd9\u79cd\u6570\u7684\u8868\u793a\u65b9\u6cd5\u4e3a \u6d6e\u70b9, floating point\u3002</p> <p>\u5c0f\u6570\u70b9\u7684\u82f1\u6587\u662f decimal point\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u4e0d\u518d\u662f decimal \u7684\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8d77\u4e2a\u65b0\u540d\u5b57\uff1a\u4e8c\u8fdb\u5236\u5c0f\u6570\u70b9, binary point\u3002</p> <p>IEEE 754 \u89c4\u5b9a\u4e86\u4e24\u79cd\u7cbe\u5ea6\u7684\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u5206\u522b\u662f single precision \u548c double precision\uff08\u5206\u522b\u5bf9\u5e94 C \u8bed\u8a00\u4e2d\u7684 <code>float</code> \u548c <code>double</code> \uff09\uff0cRISC-V \u8fd9\u4e24\u79cd\u90fd\u652f\u6301\uff1a</p> <p></p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0cfraction \u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u5c31\u8d8a\u9ad8\uff1b\u800c exponent \u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6d6e\u70b9\u6570\u80fd\u4fdd\u5b58\u7684\u8303\u56f4\u5c31\u8d8a\u5927\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e \\((-1)^S \\times F \\times 2^E\\)\uff0c\\(S\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u65b9\u6cd5\u662f\u663e\u7136\u7684\uff0c\u4ec5\u9700\u8981\u4e00\u4e2a bit \u5c31\u597d\u4e86\u3002\u90a3\u4e48 \\(F\\) \u548c \\(E\\) \u600e\u4e48\u8868\u793a\u5462\uff1f\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\\(F\\) \u5c31\u662f \\(1.\\text{.xxxxx}_2\\) \u7684\u5f62\u5f0f\uff0c\u8fd9\u4e2a 1 \u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64 \\(F\\) \u53ea\u9700\u8981\u4fdd\u5b58 \\(\\text{.xxxxx}\\) \u7684\u90e8\u5206\u5c31\u53ef\u4ee5\u4e86\uff08\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u5b83\u7684\u6743\u91cd\u4ece\u5de6\u5230\u53f3\u5206\u522b\u662f \\(2^{-1}, 2^{-2}, ...\\)\uff09\uff01\u90a3\u4e48 \\(E\\) \u600e\u4e48\u529e\u5462\uff1f\u6ce8\u610f\u5230\u8fd9\u4e2a\u6307\u6570\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u80fd\u662f\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u6216 0\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u504f\u79fb\uff0c\u5bf9\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u504f\u79fb 127\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u504f\u79fb 1023\uff08\u521a\u597d\u662f\u8868\u793a\u8303\u56f4\u7684\u4e00\u534a\uff01\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4fdd\u5b58\u7684  <code>exponent</code>  \u5176\u5b9e\u662f \\(E + bias\\) \u7684\u4e8c\u8fdb\u5236\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a\u8868\u793a\uff0c\u5176\u503c\u662f\uff1a</p> \\[(-1)^S\\cdot (1 + \\text{fraction}) \\cdot 2 ^ {\\text{exponent} - \\text{bias}}\\] <p>\u8bfe\u672c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\uff0c0 \u5e94\u8be5\u600e\u4e48\u4fdd\u5b58\u5462\uff1f\u6bd5\u7adf 0 \u6ca1\u6709\u524d\u5bfc 1\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u7279\u6b8a\u60c5\u5f62\uff0cIEEE 754 \u6709\u7279\u522b\u89c4\u5b9a\uff0c\u7528\u7279\u6b8a\u7684\u503c\u4fdd\u5b58\u5b83\u4eec\uff1a</p> <p></p> <p>\u5728\u4e0a\u8868\u4e2d\uff1a</p> <ul> <li>\u7b2c 1 \u6761\u8868\u793a 0\uff1b</li> <li>\u7b2c 2 \u6761\u8868\u793a\u975e\u89c4\u683c\u5316\u6570\uff0c\u8fd9\u79cd\u6570\u4e3b\u8981\u662f\u4e3a\u4e86\u7528\u6765\u8868\u793a\u4e00\u4e9b\u5f88\u5c0f\u7684\u6570\uff0c\u5b83\u7684\u53d6\u503c\u4e3a \\((-1)^S\\cdot (\\mathbf{0} + \\text{fraction}) \\cdot 2 ^ {- \\text{bias}}\\)\uff1b\u4f46\u662f\u5e76\u975e\u6240\u6709\u673a\u5668\u90fd\u652f\u6301\u8fd9\u79cd\u8868\u793a\uff0c\u6709\u7684\u673a\u5668\u4f1a\u76f4\u63a5\u629b\u51fa\u4e00\u4e2a exception\u3002\u6211\u4eec\u4e0d\u8003\u8651\u975e\u89c4\u683c\u6570\u7684\u5b58\u5728\uff1b</li> <li>\u7b2c 3 \u6761\u8868\u793a\u6b63\u5e38\u7684\u6d6e\u70b9\u6570\uff1b</li> <li>\u7b2c 4 \u6761\u8868\u793a\u65e0\u7a77\u5927\u6216\u8005\u65e0\u7a77\u5c0f\uff0c\u51fa\u73b0\u5728 exponent overflow \u6216\u8005\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e2d\u975e 0 \u6570\u9664\u4ee5 0 \u7684\u60c5\u51b5\uff1b</li> <li>\u7b2c 5 \u6761\u8868\u793a\u975e\u6570\uff0c\u51fa\u73b0\u5728 0/0, inf / inf, inf - inf, inf * 0 \u7684\u60c5\u51b5</li> </ul> <p>\uff08\u5982\u679c\u6570\u5b57\u8fc7\u5927\u4e0d\u80fd\u8868\u793a\uff0c\u5373 overflow\uff0c\u5219\u7ed3\u679c\u7f6e\u4e3a inf\uff1b\u5982\u679c\u6570\u5b57\u8fc7\u5c0f\u4e0d\u80fd\u8868\u793a\uff0c\u5373 underflow\uff0c\u5219\u7ed3\u679c\u7f6e\u4e3a 0\u3002\uff09</p> <p>\u8fd9\u4e24\u79cd\u8868\u793a\u6cd5\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u5206\u522b\u662f\u591a\u5c11\u5462\uff1f</p> <ul> <li> <p>\u8303\u56f4</p> <ul> <li>\u80fd\u8868\u793a\u503c\u7684 \u7edd\u5bf9\u503c \u7684\u8303\u56f4\u662f \\(1.0_2 \\times 2^{1-\\text{bias}} \\sim 1.11\\dots 11_2 \\times 2^{11\\dots 11_2-1-\\text{bias}}\\)\uff0c\u5373 \\(1\\times 2^{1 - \\text{bias}}\\sim(2 - 2^\\text{-Fra#})\\times 2^{(2^\\text{Exp#} - 1) - 1 - \\text{bias}}\\)\uff0c\u5176\u4e2d <code>Fra#</code> \u548c <code>Exp#</code> \u5206\u522b\u8868\u793a fraction \u548c exponent \u7684\u4f4d\u6570\uff1b</li> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(\\pm 1\\times 2^{-126}\\sim \\pm(2 - 2^{-23}) \\times 2^{127}\\)</li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(\\pm 1\\times 2^{-1022}\\sim \\pm(2 - 2^{-52}) \\times 2^{1023}\\)</li> </ul> </li> <li> <p>\u7cbe\u5ea6</p> <ul> <li>\\(2^ \\text{-Fra#}\\)</li> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(2^{-23}\\)</li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(2^{-52}\\)</li> </ul> </li> </ul> <p>\u6709\u65f6\u5019\u9898\u76ee\u91cc\u4f1a\u51fa\u4e0d\u540c\u7684\u6d6e\u70b9\u6570\u8868\u793a\u6cd5\uff0c\u8ba9\u4f60\u6bd4\u8f83\u7cbe\u5ea6\uff0c\u6b64\u65f6\u4e00\u822c\u6307\u7684\u662f\uff0cfraction + exponent \u603b\u4f4d\u6570\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0cfraction \u66f4\u591a\u7684\u4e00\u822c\u66f4\u7cbe\u786e\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u7cbe\u5ea6\u66f4\u503e\u5411\u4e8e\u201c\u80fd\u8868\u793a\u66f4\u591a\u7684\u5c0f\u6570\u4f4d\u201d\u3002</p> <p>18~19 Final</p> <p></p> \u7b54\u6848 <p>+inf, 0xBF800000</p> <p>\u53ef\u4ee5\u8bd5\u4e00\u4e0b -32.6\uff0c\u7ed3\u679c\u53ef\u4ee5\u81ea\u5df1\u5728 IEEE-754 Floating Point Converter \u91cc\u9762\u627e~</p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#342","title":"3.4.2 \u6d6e\u70b9\u52a0\u6cd5","text":"<p>\u4ee5 \\(1.000_2\\times2^{-1}-1.110_2\\times2^{-2}\\) \u4e3a\u4f8b\uff0c \u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u6cd5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a</p> <ol> <li>Alignment: \u6307\u6570\u5bf9\u9f50\uff0c\u5c06\u5c0f\u6307\u6570\u5bf9\u9f50\u5230\u5927\u6307\u6570\uff1a\\(-1.110_2\\times2^{-2} = -0.111\\times2^{-1}\\)<ol> <li>\u4e3a\u4ec0\u4e48\u662f\u5c0f\u5bf9\u5927\uff1f\u9996\u5148\uff0c\u5c0f\u5bf9\u5927\u7684\u8fc7\u7a0b\u662f\u5728\u5c0f\u6307\u6570\u7684 fraction \u524d\u8865 <code>0</code>\uff0c\u53ef\u80fd\u5bfc\u81f4\u672b\u5c3e\u6570\u636e\u4e22\u5931\uff1b\u5927\u5bf9\u5c0f\u7684\u8fc7\u7a0b\u662f\u5728\u5927\u6307\u6570\u7684 fraction \u540e\u8865 <code>0</code>\uff0c\u53ef\u80fd\u5bfc\u81f4\u524d\u9762\u7684\u6570\u636e\u4e22\u5931\u3002\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4fdd\u6301\u7684\u7cbe\u786e\u4f4d\u6570\u662f\u6709\u9650\u7684\uff0c\u800c\u5728\u8feb\u4e0d\u5f97\u5df2\u4e22\u53bb\u7cbe\u5ea6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8ba9\u5c0f\u7684\u90a3\u4e2a\u6570\u7684\u672b\u51e0\u4f4d\u88ab\u4e22\u6389\u7684\u4ee3\u4ef7\u6bd4\u5927\u7684\u524d\u51e0\u4f4d\u4e22\u5931\u8981\u5c0f\u592a\u591a\u4e86\uff1b</li> </ol> </li> <li>Addiction Fraction \u90e8\u5206\u76f8\u52a0\u51cf\uff1a\\(1.000-0.111=0.001\\)</li> <li>Normalization: \u5c06\u7ed3\u679c\u89c4\u683c\u5316\uff1a\\(0.001\\times2^{-1}=1.000\\times2^{-4}\\)\uff1b\u540c\u65f6\u9700\u8981\u68c0\u67e5\u662f\u5426\u51fa\u73b0 overflow \u6216\u8005 underflow\uff0c\u5982\u679c\u51fa\u73b0\u5219\u89e6\u53d1 Exception</li> <li>Rounding: \u5c06 Fraction \u90e8\u5206\u820d\u5165\u5230\u6b63\u786e\u4f4d\u6570\uff1b\u820d\u5165\u7ed3\u679c\u53ef\u80fd\u8fd8\u9700\u8981\u89c4\u683c\u5316\uff0c\u6b64\u65f6\u56de\u5230\u6b65\u9aa4 3 \u7ee7\u7eed\u8fd0\u884c</li> </ol> <p></p> <p></p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#343","title":"3.4.3 \u6d6e\u70b9\u4e58\u6cd5","text":"<p>\u5206\u522b\u5904\u7406\u7b26\u53f7\u4f4d\u3001exponent \u548c fraction\uff1a</p> <ul> <li>\u5c06\u4e24\u4e2a Exponent \u76f8\u52a0\u5e76 \u51cf\u53bb\u4e00\u4e2a bias\uff0c\u56e0\u4e3a bias \u52a0\u4e86 2 \u6b21</li> <li>\u5c06\u4e24\u4e2a (1 + Fraction) \u76f8\u4e58\uff0c\u5e76\u5c06\u5176\u89c4\u683c\u5316\uff1b\u6b64\u65f6\u540c\u6837\u8981\u8003\u8651 overflow \u548c underflow\uff1b\u7136\u540e\u820d\u5165\uff0c\u5982\u679c\u8fd8\u9700\u8981\u89c4\u683c\u5316\u5219\u91cd\u590d\u6267\u884c</li> <li>\u6839\u636e\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u7b26\u53f7\u51b3\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7</li> </ul> <p></p>"},{"location":"ZJU_CS/computer_organization/3_arithmetic/#344","title":"3.4.4 \u7cbe\u786e\u7b97\u672f","text":"<p>IEEE 754 \u89c4\u5b9a\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u820d\u5165\u63a7\u5236\uff0c\u7528\u6765\u4fdd\u8bc1\u820d\u5165\u7684\u7cbe\u786e\u6027\u3002</p> <p>Round modes</p> <ul> <li><code>guard</code> / <code>round</code> / <code>sticky</code></li> </ul> <p></p> <p>Round to nearest even \u53ea\u5bf9 0.5 \u6709\u6548\uff0c\u522b\u7684\u90fd\u548c\u56db\u820d\u4e94\u5165\u4e00\u6837</p> <p>\u4e00\u822c\u7684\u6d6e\u70b9\u6570\u540e\u9762\u8fd8\u4f1a\u6709 2 bits\uff0c\u5206\u522b\u79f0\u4e3a guard \u548c round\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u8ba1\u7b97\u7ed3\u679c\u7684\u820d\u5165\u66f4\u52a0\u7684\u7cbe\u786e\uff1a </p> <p> </p> <p>\u4e8b\u5b9e\u4e0a\u52a0\u6cd5\u53ea\u9700\u8981\u7528\u5230 guard\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e58\u6cd5\uff0c\u5982\u679c\u5b58\u5728\u524d\u5bfc 0\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u5de6\u79fb\uff0c\u8fd9\u65f6\u5019 round bit \u5c31\u6210\u4e86\u6709\u6548\u4f4d\uff0c\u80fd\u907f\u514d\u7cbe\u5ea6\u7684\u635f\u5931\u3002</p> <p>\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u4f4d\u53eb sticky bit\uff0c\u5176\u5b9a\u4e49\u662f\uff1a\u53ea\u8981 round \u53f3\u8fb9\u51fa\u73b0\u8fc7\u975e\u96f6\u4f4d\uff0c\u5c31\u5c06 sticky \u7f6e 1\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528\u5728\u52a0\u6cd5\u7684\u53f3\u79fb\u4e2d\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u662f\u5426\u6709 1 \u88ab\u79fb\u51fa\uff0c\u4ece\u800c\u80fd\u591f\u5b9e\u73b0 \"round to nearest even\"\u3002</p> <p><code>units in the last place(ulp)</code>: The number of bits in error in the leas t significant bits of the significant between the actual number and the number that can be represented.</p>"},{"location":"ZJU_CS/computer_organization/4_processor/","title":"4 Processor","text":"<p>Warning</p> <p>\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\uff0c\u672c\u6587\u540e\u534a\u90e8\u5206\u6709\u4e00\u4e9b\u5730\u65b9\u4e0d\u5b8c\u6574\u3002</p> <p>\u6211\u4eec\u8ba8\u8bba\u8fc7\uff0c\u8ba1\u7b97\u673a\u7684 performance \u53d7 inst#, clock cycle time \u548c clock cycles per inst (CPI) \u51b3\u5b9a\u3002Clock cycle time \u548c CPI \u53d7 processor \u7684\u5b9e\u73b0\u65b9\u5f0f\u5f71\u54cd\u3002\u672c\u7ae0\u4ecb\u7ecd RISC-V \u7684 processor \u4e00\u79cd\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#41_datapath","title":"4.1 Datapath","text":""},{"location":"ZJU_CS/computer_organization/4_processor/#411_overview","title":"4.1.1 Overview","text":"<p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a RISC-V \u6838\u5fc3\u6307\u4ee4\u7684\u5b9e\u73b0\uff08\u5e76\u4e0d\u5b8c\u6574\uff09\uff0c\u5305\u62ec  <code>ld</code>  ,   <code>sd</code>  ,   <code>add</code>  ,   <code>sub</code>  ,   <code>and</code>  ,   <code>or</code>  ,   <code>beq</code>  \u3002\u6211\u4eec\u7b80\u5355\u8fdb\u884c\u5206\u6790\u3002</p> <ul> <li>PC \u5bc4\u5b58\u5668\u5b58\u50a8\u5f53\u524d\u8fd0\u884c\u5230\u7684\u6307\u4ee4\u7684\u5730\u5740\u3002PC \u5bc4\u5b58\u5668\u8fde\u5230 Instruction memory \u4e2d\uff0c\u8bfb\u51fa\u7684\u7ed3\u679c\u5c31\u662f\u5f53\u524d\u8981\u8fd0\u884c\u7684\u6307\u4ee4\u3002\u8fd9\u4e2a\u6307\u4ee4\u88ab Control \u89e3\u6790\u4ea7\u751f\u76f8\u5e94\u7684\u4fe1\u53f7\u3002\u6211\u4eec\u5728 4.1.6 \u5c0f\u8282\u4e2d\u5177\u4f53\u8bf4\u660e\u5b83\u7684\u5b9e\u73b0\u3002</li> </ul>"},{"location":"ZJU_CS/computer_organization/4_processor/#412_r","title":"4.1.2 R \u578b\u6307\u4ee4","text":"<ul> <li><code>add</code>  ,   <code>sub</code>  ,   <code>and</code>  ,   <code>or</code>  \u8fd9\u51e0\u4e2a R \u578b\u6307\u4ee4\u603b\u5171\u9700\u8981\u8bbf\u95ee 3 \u4e2a\u5bc4\u5b58\u5668\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</li> </ul> <ul> <li>(1) \u5904\u53d6\u51fa\u6307\u4ee4\uff0c  <code>[6:0]</code>  \u88ab\u9001\u5230 Control \u4ea7\u751f\u5bf9\u5e94\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6211\u4eec\u7a0d\u540e\u53ef\u4ee5\u770b\u5230\uff1b  <code>[19:15]</code>  ,   <code>[24:20]</code>  ,   <code>[11:7]</code>  \u5206\u522b\u5bf9\u5e94  <code>rs1</code>  ,  <code>rs2</code>  ,  <code>rd</code>  \uff0c\u88ab\u8fde\u5165 Registers \u8fd9\u4e2a\u7ed3\u6784\uff0c\u5bf9\u5e94\u5730  <code>Read data 1</code>  \u548c  <code>Read data 2</code>  \u4e24\u5904\u7684\u503c\u5373\u53d8\u4e3a  <code>rs1</code>  ,  <code>rs2</code>  \u7684\u503c\uff1b</li> <li>(2) \u5904 MUX \u5728  <code>ALUSrc = 0</code>  \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9  <code>Read data 2</code>  \u4f5c\u4e3a ALU \u7684\u8f93\u5165\u4e0e  <code>Read data 1</code>  \u8fdb\u884c\u8fd0\u7b97\uff0c\u5177\u4f53\u7684\u8fd0\u7b97\u7531  <code>ALU control</code>  \u63d0\u4f9b\u7684\u4fe1\u53f7\u6307\u660e\uff08\u6211\u4eec\u5728 4.1.3 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\uff09\u3002\u8fd0\u7b97\u7ed3\u679c\u5728  <code>ALU result</code>  \u4e2d\u3002</li> <li>(3) \u5904 MUX \u5728  <code>MemtoReg = 0</code>  \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9  <code>ALU result</code>  \u4f5c\u4e3a\u5199\u56de Register \u7684\u503c\uff0c\u8fde\u5230 (4) \u5904\uff1b\u5728 (5) \u5904  <code>RegWrite = 1</code>  \u4fe1\u53f7\u63a7\u5236\u4e0b\uff0c\u8be5\u503c\u5199\u5165\u5230  <code>rd</code>  \u5bc4\u5b58\u5668\u4e2d\u3002</li> </ul> <p>\u8fd9\u5c31\u662f R \u578b\u6307\u4ee4\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002\u6267\u884c\u5b8c\u6307\u4ee4\u540e PC \u4f1a +4\uff0c\u6211\u4eec\u5728 4.1.4 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e00\u64cd\u4f5c\u7684\u5b9e\u73b0\u3002</p> <p>Info</p> <p>\u6709\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981  <code>RegWrite</code>  \u8fd9\u4e2a\u63a7\u5236\u4fe1\u53f7\u5462\uff1f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a  <code>Write register</code>  \u548c  <code>Write data</code>  \u8fd9\u4e24\u6761\u7ebf\u59cb\u7ec8\u662f\u8fde\u7740\u7684\uff0cReg files \u9700\u8981\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u5199\u5165\u5bc4\u5b58\u5668\uff0c\u56e0\u6b64\u53ea\u6709\u5f53  <code>RegWrite = 1</code>  \u65f6\u624d\u4f1a\u88ab\u5bf9\u5e94\u5730\u5199\u5165\u3002</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u53c8\u4f1a\u95ee\u4e86\uff0c\u4e3a\u4ec0\u4e48  <code>PC</code>  \u5bc4\u5b58\u5668\u4e5f\u8981\u5199\u5165\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u63a7\u5236\u4fe1\u53f7\u5462\uff1f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a  <code>PC</code>  \u5728 \u6bcf\u4e2a \u65f6\u949f\u5468\u671f\u90fd\u4f1a\u88ab\u5199\u5165\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u65f6\u949f\u7684 \u6bcf\u4e2a \u4e0a\u5347\u6cbf\u6216\u8005\u4e0b\u964d\u6cbf\u89e6\u53d1\u5c31\u597d\u4e86\uff08\u6211\u4eec\u91c7\u53d6\u7684\u8bbe\u8ba1\u662f\u4e0b\u964d\u6cbf\u89e6\u53d1\uff0c\u6211\u4eec\u5728 4.2.3 \u5c0f\u8282 \u518d\u8ba8\u8bba\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u8ba1\uff09\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u4fe1\u53f7\u4e86\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#413_alu_control","title":"4.1.3 ALU Control","text":"<p>\u5728 3.1 \u8282\u4e2d\uff0c\u6211\u4eec\u8bbe\u8ba1\u7684 ALU \u9700\u8981\u8fd9\u6837\u7684\u63a7\u5236\u7ed3\u6784\uff1a</p> <p></p> <p>\u6211\u4eec\u5217\u4e00\u4e0b\u9700\u8981\u4f7f\u7528 ALU \u7684\u6307\u4ee4\u7684\u8868\u683c\uff08\u6211\u4eec\u5728\uff09\uff1a</p> <p></p> <p>\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u8868\u5217\u51fa\u771f\u503c\u8868\uff1a</p> <p></p> <p>\u5176\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u6807\u4e3a\u7eff\u8272\u7684\u5217\u7684\u53d6\u503c\u8981\u4e48\u662f 0 \u8981\u4e48\u662f\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u771f\u503c\u8868\u6784\u9020\u95e8\u7535\u8def\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa ALU control \u5355\u5143\u4e86\u3002\u5982\u56fe\u4e2d\u6240\u793a\uff0c\u8be5\u5355\u5143\u4f9d\u8d56 Control \u5355\u5143\u7ed9\u51fa\u7684  <code>ALUOp</code>  \u4fe1\u53f7\u4ee5\u53ca  <code>I[30, 14:2]</code>  \uff1a</p> <p></p> <p>Info</p> <p>ALU control \u6a21\u5757\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a</p> <p></p> <p>\u9700\u8981\u7406\u89e3\u7684\u662f\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u6839\u636e\u673a\u5668\u7801\u6765\u6784\u9020\u7535\u8def\u7684\uff0c\u800c\u662f\u76f8\u53cd\uff1a\u7535\u8def\u7684\u8bbe\u8ba1\u53c2\u8003\u4e86\u5f88\u591a\u65b9\u9762\u7684\u95ee\u9898\uff0c\u673a\u5668\u7801\u5e94\u5f53\u4e3b\u8981\u8fce\u5408\u7535\u8def\u4f7f\u5176\u8bbe\u8ba1\u66f4\u52a0\u65b9\u4fbf\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#414_imm_gen","title":"4.1.4 \u8df3\u8f6c\u6307\u4ee4\u4e0e Imm Gen \u6a21\u5757","text":"<ul> <li>\u5728\u4e00\u6761\u6307\u4ee4\u8fd0\u884c\u5b8c\u540e\uff0c\u5982\u679c\u4e0d\u53d1\u751f\u8df3\u8f6c\uff0cPC + 4\uff0c\u5426\u5219 PC \u8df3\u8f6c\u5230 PC + offset \u7684\u4f4d\u7f6e\u53bb\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5982\u4f55\u5b8c\u6210\u7684\u5462\uff1f\u770b\u4e0b\u56fe\uff1a</li> </ul> <ul> <li>(1) \u4e2d\u6709\u4e24\u4e2a\u52a0\u6cd5\u5668\uff0c\u4e00\u4e2a\u7684\u7ed3\u679c\u662f PC + 4\uff0c\u53e6\u4e00\u4e2a\u662f PC + offset\uff0c\u5176\u4e2d offset \u662f\u6765\u81ea\u5f53\u524d instruction \u7684\uff1b\u8fd9\u4e24\u4e2a\u52a0\u6cd5\u5668\u901a\u8fc7 MUX \u9001\u7ed9 PC</li> <li>MUX \u7684\u63a7\u5236\u4fe1\u53f7\u6765\u81ea  (2)\uff0c (2) \u662f\u4e00\u4e2a\u4e0e\u95e8\uff0c\u5373\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u8f93\u5165\u4fe1\u53f7\u90fd\u4e3a\u771f\u65f6\u624d\u4f1a\u8f93\u51fa 1\uff0c\u4ece\u800c\u5728\u4e0a\u8ff0 MUX \u4e2d\u9009\u62e9\u8df3\u8f6c\u3002 (2) \u7684\u4e24\u4e2a\u8f93\u5165\u5206\u522b\u6765\u81ea\uff1a<ul> <li>(5) \u8fd9\u4e2a ALU \u7684 Zero \u4fe1\u53f7\uff0c\u8fd9\u662f\u7b2c 3 \u7ae0\u4e2d\u6211\u4eec\u8bbe\u8ba1\u7684\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0  <code>beq</code>  \u7684\u7ed3\u6784\uff1b\u6211\u4eec\u8ba8\u8bba\u8fc7\u5b9e\u73b0  <code>beq</code>  \u5176\u5b9e\u5c31\u662f\u8ba1\u7b97  <code>rs1 - rs2</code>  \u5224\u65ad\u5176\u662f\u5426\u4e3a 0\uff0c\u6240\u4ee5\u8fd9\u91cc\u6839\u636e Zero \u662f\u5426\u4e3a 0 \u5c31\u80fd\u5224\u65ad\u4e24\u4e2a\u5bc4\u5b58\u5668\u662f\u5426\u76f8\u7b49</li> <li>(4) \u5904 Control \u7ed9\u51fa\u7684  <code>Branch</code>  \u4fe1\u53f7\uff0c\u5373\u5982\u679c\u8fd9\u4e2a\u8bed\u53e5\u662f\u8df3\u8f6c\u8bed\u53e5\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u4fe1\u53f7\u4f1a\u7f6e\u4e3a 1</li> </ul> </li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e14\u4ec5\u5f53\u8bed\u53e5\u786e\u5b9e\u662f  <code>beq</code>  \u800c\u4e14  <code>Zero</code>  \u4fe1\u53f7\u7684\u503c\u786e\u5b9e\u4e3a 1 \u65f6\u624d\u4f1a\u8fdb\u884c\u8df3\u8f6c\u3002</p> <ul> <li>\u518d\u6765\u770b\u770b\u5f53\u8fdb\u884c\u8df3\u8f6c\u7684\u65f6\u5019\uff0c (3) \u5904\u7684 offset \u6765\u81ea\u54ea\u91cc\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2a offset \u6765\u81ea\u4e8e  <code>I[31:0]</code>  \uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u6307\u4ee4\uff1b\u5b83\u88ab\u4f20\u7ed9 Imm Gen \u6a21\u5757\uff0c\u5c06\u6307\u4ee4\u4e2d\u7684\u7acb\u5373\u6570\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d\uff1b\u7136\u540e\u5728  (3) \u5904\u5de6\u79fb 1 \u4f4d\uff08\u8bf7\u56de\u987e\uff0c\u56e0\u4e3a RISC-V \u6307\u4ee4\u603b\u662f 2 \u5b57\u8282\u5bf9\u9f50 [\u6211\u4eec\u5b66\u7684\u90fd\u662f 4 \u5b57\u8282\u5bf9\u9f50]\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u4fdd\u5b58\u504f\u79fb\u7684\u6700\u4f4e\u4e00\u4f4d\uff09\u518d\u4e0e PC \u76f8\u52a0\u3002</li> </ul> <p>Imm Gen \u6a21\u5757</p> <p>\u8fd9\u4e2a\u6a21\u5757\u8bc6\u522b  <code>load</code>  \u7c7b\u6307\u4ee4\u3001  <code>store</code>  \u7c7b\u6307\u4ee4\u548c  <code>branch</code>  \u7c7b\u6307\u4ee4\u7684\u7acb\u5373\u6570\u6a21\u5f0f\u5e76\u5c06\u5176 \u7b26\u53f7\u6269\u5c55 \u5230 64 \u4f4d\uff0c\u6839\u636e  <code>I[5:6]</code>  \u7684\u4e0d\u540c\u53d6\u503c\u533a\u5206\u8fd9\u4e09\u79cd\u60c5\u51b5\uff0c\u6784\u9020\u4e00\u4e2a 3:1 MUX \u9009\u62e9\u5b9e\u9645\u7684\u7acb\u5373\u6570\uff0c\u5c06\u5176\u4f20\u7ed9\u540e\u9762\u7684\u4f7f\u7528\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#415_load_store","title":"4.1.5 Load \u6307\u4ee4\u548c Store \u6307\u4ee4","text":"<p>\u61d2\u5f97\u5199\u4e86\uff0c\u53ef\u4ee5\u81ea\u5df1\u7406\u89e3\u4e00\u4e0b\u3002</p> <p>\u7528\u6587\u5316\u4eba\u7684\u8bdd\u6765\u8bf4\uff0cLoad \u6307\u4ee4\u548c Store \u6307\u4ee4\u7684\u6570\u636e\u901a\u8def\u64cd\u4f5c\u7559\u4f5c\u4e60\u9898\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#416_control","title":"4.1.6 Control","text":"<p>\u770b\u5b8c\u4e0a\u8ff0\u82e5\u5e72\u5c0f\u8282\uff0ccontrol \u5355\u5143\u7684\u8bbe\u8ba1\u4e5f\u975e\u5e38\u663e\u7136\u4e86\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u7ed9\u51fa\u5982\u4e0b\u771f\u503c\u8868\uff1a</p> <p></p> <p>\u540e\u9762\u5c31\u662f\u8fde\u7535\u8def\u7684\u5de5\u4f5c\u4e86\u3002\u8fde\u51fa\u6765\u957f\u8fd9\u6837\uff1a</p> <p></p>"},{"location":"ZJU_CS/computer_organization/4_processor/#417_why_a_single-cycle_implementation_is_not_used_today","title":"4.1.7 Why a Single-Cycle Implementation is not Used Today","text":"<p>\u5355\u5468\u671f\u7684\u5b9e\u73b0\u662f\u6307\uff0c\u4e00\u4e2a\u6307\u4ee4\u7684\u6240\u6709\u5de5\u4f5c\u90fd\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\uff0c\u4e5f\u5c31\u662f CPI = 1\u3002\u90a3\u4e48\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u957f\u5ea6\u5c31\u8981\u8db3\u591f\u6700\u957f\u7684\u90a3\u4e2a\u6307\u4ee4\u5b8c\u6210\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4f8b\u5982  <code>load</code>  \u7c7b\u7684\u6307\u4ee4\u8981\u7ecf\u8fc7 inst mem, reg file, ALU, data mem, reg file \u8fd9\u4e48\u591a\u7684\u6b65\u9aa4\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u65f6\u949f\u5468\u671f\u53d8\u5f97\u5f88\u957f\uff0c\u5bfc\u81f4\u6574\u4f53\u6027\u80fd\u53d8\u5f97\u5f88\u5dee\u3002\u5355\u5468\u671f\u7684\u5b9e\u73b0\u8fdd\u53cd\u4e86 common case fast \u8fd9\u4e00\u8bbe\u8ba1\u539f\u5219\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u79cd\u65b0\u7684\u5b9e\u73b0\u6280\u672f\uff0c\u53eb \u6d41\u6c34\u7ebf (Pipeline)\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#42_pipeline","title":"4.2 Pipeline","text":""},{"location":"ZJU_CS/computer_organization/4_processor/#421_intro","title":"4.2.1 Intro","text":"<p>\u5728\u5c0f\u5b66\u5965\u6570\u4e2d\u6211\u4eec\u5c31\u5b66\u8fc7\uff0c\u5e76\u884c\u80fd\u591f\u63d0\u9ad8\u6574\u4f53\u7684\u6548\u7387\uff0c\u4f8b\u5982\u8fd9\u4e2a\u6d17\u8863\u670d\u7684\u4f8b\u5b50\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u5355\u4e2a\u5de5\u4f5c\uff0c\u6d41\u6c34\u7ebf\u6280\u672f\u5e76\u6ca1\u6709\u7f29\u77ed\u5176\u8fd0\u884c\u65f6\u95f4\uff1b\u4f46\u662f\u7531\u4e8e\u591a\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u5e76\u884c\u5730\u6267\u884c\uff0c\u6d41\u6c34\u7ebf\u6280\u672f\u53ef\u4ee5\u66f4\u597d\u5730\u538b\u69a8\u8d44\u6e90\uff0c\u4f7f\u5f97\u5b83\u4eec\u88ab\u540c\u65f6\u800c\u4e0d\u662f\u8f6e\u6d41\u4f7f\u7528\uff0c\u5728\u5de5\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\u53ef\u4ee5\u589e\u52a0\u6574\u4f53\u7684 \u541e\u5410\u7387 throughput\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5b8c\u6210\u6574\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u3002</p> <p>\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6d41\u6c34\u7ebf\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u5b8c\u5168\u5145\u6ee1\uff0c\u56e0\u6b64\u541e\u5410\u7387\u4e0d\u53ca\u539f\u6765\u7684 4 \u500d\uff084 \u6765\u81ea\u4e8e\u4f8b\u5b50\u4e2d\u6709 4 \u4e2a\u6b65\u9aa4\uff09\uff1b\u4f46\u662f\u5f53\u5de5\u4f5c\u6570\u8db3\u591f\u591a\u7684\u65f6\u5019\uff0c\u541e\u5410\u7387\u5c31\u51e0\u4e4e\u662f\u539f\u6765\u7684 4 \u500d\u4e86\u3002</p> <p>\u56de\u5230 RISC-V \u4e2d\u6765\uff0c\u4e00\u4e2a\u6307\u4ee4\u901a\u5e38\u88ab\u5212\u5206\u4e3a 5 \u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>IF, Inst Fetch\uff0c\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6307\u4ee4</li> <li>ID, Inst Decode\uff0c\u8bfb\u53d6\u5bc4\u5b58\u5668\u3001\u6307\u4ee4\u8bd1\u7801</li> <li>EX, Execute\uff0c\u8ba1\u7b97\u64cd\u4f5c\u7ed3\u679c\u548c/\u6216\u5730\u5740</li> <li>MEM, Memory\uff0c\u5185\u5b58\u5b58\u53d6\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09</li> <li>WB, Write Back\uff0c\u5c06\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09</li> </ol> <p>\u5404\u9636\u6bb5\u4f1a\u7528\u5230\u7684\u7ec4\u4ef6\u5982\u4e0b\u56fe\u6240\u793a\uff08\u8fd9\u4e2a\u56fe\u8fd8\u6709\u5f88\u591a\u95ee\u9898\uff0c\u6211\u4eec\u540e\u9762\u6162\u6162\u8ba8\u8bba~\uff09\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u90e8\u5206\u662f\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u7684\uff08\u6bd4\u5982 Reg File \u53ef\u4ee5\u4e00\u8fb9\u8bfb\u4e00\u8fb9\u5199\uff09\uff1a</p> <p></p> <p>\u5176\u52a0\u901f\u7684\u6838\u5fc3\u4e3b\u65e8\u662f\uff0c\u5b83\u4eec\u90fd\u5e0c\u671b\u4e00\u4e2a\u5468\u671f\u80fd\u5b8c\u6210\u4e00\u6761\u6307\u4ee4\uff0c\u4f46\u662f\u5355\u5468\u671f CPU \u7684\u4e00\u4e2a\u5468\u671f\u9700\u8981\u627f\u62c5\u4e00\u4e2a\u6307\u4ee4\u7684\u6240\u6709\u6b65\u9aa4\uff1b\u800c\u6d41\u6c34\u7ebf\u6280\u672f\u5f15\u5165\u540e\uff0c\u7531\u4e8e\u5b83\u53ef\u4ee5\u5e76\u884c\u5730\u540c\u65f6\u6267\u884c\u4e94\u4e2a\u9636\u6bb5\u7684\u6b65\u9aa4\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u5468\u671f\u53ea\u9700\u8981\u4e00\u4e2a\u9636\u6bb5\u7684\u957f\u5ea6\u3002\u603b\u7684\u6765\u8bf4\uff0c\u5355\u5468\u671f CPU \u7684\u65f6\u949f\u5468\u671f\u7531\u603b\u8017\u65f6\u6700\u957f\u7684\u6307\u4ee4\u51b3\u5b9a\uff0c\u6d41\u6c34\u7ebf CPU \u7684\u65f6\u949f\u5468\u671f\u7531\u8017\u65f6\u6700\u957f\u7684\u6307\u4ee4\u9636\u6bb5\uff08IF, ID \u7b49\uff09\u51b3\u5b9a\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u672c\u6765\u662f\u5728\u4e00\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u4e00\u4e2a\u6307\u4ee4\uff0c\u800c\u73b0\u5728\u662f\u5728\u4e00\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u4e94\u4e2a\u4e0d\u540c\u6307\u4ee4\u7684\u4e0d\u540c\u9636\u6bb5\u3002\u5f53\u7136\uff0c\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u7684\u957f\u5ea6\u4e5f\u9700\u8981\u8db3\u591f\u4efb\u4f55\u4e00\u4e2a\u9636\u6bb5\u5b8c\u6210\u6267\u884c\u3002</p> <p>RISC-V \u4e5f\u6709\u5f88\u591a\u6d41\u6c34\u7ebf\u53cb\u597d\u7684\u8bbe\u8ba1\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6240\u6709 RISC-V \u7684\u6307\u4ee4\u957f\u5ea6\u76f8\u540c\uff0c\u8fd9\u53ef\u4ee5\u65b9\u4fbf  <code>IF</code>  \u548c  <code>ID</code>  \u7684\u5de5\u4f5c</li> <li>RISC-V \u7684\u6307\u4ee4\u683c\u5f0f\u6bd4\u8f83\u5c11\uff0c\u800c\u4e14\u6e90\u5bc4\u5b58\u5668\u3001\u76ee\u6807\u5bc4\u5b58\u5668\u7684\u4f4d\u7f6e\u76f8\u540c</li> <li>\u53ea\u5728 load \u6216 store \u6307\u4ee4\u4e2d\u64cd\u4f5c data memory \u800c\u4e0d\u4f1a\u5c06\u5b58\u53d6\u7684\u7ed3\u679c\u505a\u8fdb\u4e00\u6b65\u8fd0\u7b97\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06  <code>MEM</code>  \u653e\u5728\u6bd4\u8f83\u540e\u9762\u7684\u4f4d\u7f6e\uff1b\u5982\u679c\u8fd8\u80fd\u5bf9\u7ed3\u679c\u505a\u8fd0\u7b97\u5219\u8fd8\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u9636\u6bb5\uff0c\u6b64\u65f6\u6d41\u6c34\u7ebf\u7684\u53d8\u957f\u5e76\u6ca1\u6709\u4ec0\u4e48\u6b63\u9762\u6548\u679c</li> </ul> <p>Hazards \u6307\u7684\u662f\u963b\u6b62\u4e0b\u4e00\u4e2a\u6307\u4ee4\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5b8c\u6210\u7684\u4e00\u4e9b\u60c5\u51b5\u3002\u4e3b\u8981\u5206\u4e3a\u4e09\u79cd\uff1a</p> <ul> <li>Structure hazards<ul> <li>\u4e00\u4e2a\u88ab\u8bf7\u6c42\u7684\u8d44\u6e90\u4ecd\u5904\u4e8e\u5fd9\u788c\u72b6\u6001</li> </ul> </li> <li>Data hazards<ul> <li>\u9700\u8981\u7b49\u5f85\u4e0a\u4e00\u4e2a\u6307\u4ee4\u5b8c\u6210\u6570\u636e\u8bfb\u5199</li> </ul> </li> <li>Control hazards<ul> <li>\u4e00\u4e9b\u63a7\u5236\u53d6\u51b3\u4e8e\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"ZJU_CS/computer_organization/4_processor/#422_structure_hazards","title":"4.2.2 Structure hazards","text":"<p>\u4f46\u662f\uff0c\u806a\u660e\u7684\u5c0f\u670b\u53cb\u4e5f\u53ef\u4ee5\u770b\u51fa\u4e00\u4e9b\u95ee\u9898\uff01\u6bd4\u5982\uff0c\u524d\u4e00\u4e2a\u6307\u4ee4\u5728  <code>ID</code>  \u9636\u6bb5\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u5230\u5176\u5728  <code>IF</code>  \u9636\u6bb5\u8bfb\u51fa\u7684\u6307\u4ee4\u7684\u5185\u5bb9\uff1b\u4f46\u4e0e\u6b64\u540c\u65f6\u540e\u4e00\u4e2a\u6307\u4ee4\u5df2\u7ecf\u8fd0\u884c\u5230  <code>IF</code>  \u9636\u6bb5\u5e76\u8bfb\u51fa\u4e86\u65b0\u7684\u6307\u4ee4\uff0c\u90a3\u4e48\u524d\u4e00\u4e2a\u6307\u4ee4\u5c31\u6ca1\u7684\u7528\u4e86\uff01\u8fd9\u4e2a\u73b0\u8c61\u5728\u5f88\u591a\u5730\u65b9\u666e\u904d\u5b58\u5728\uff0c\u5305\u62ec Control \u4fe1\u53f7\u7684\u4f20\u9012\uff0c\u56e0\u6b64\u6211\u4eec\u5b9e\u9645\u4e0a\u4f1a\u5728\u6bcf\u4e24\u4e2a stage \u4e4b\u95f4\u7528\u4e00\u4e9b\u5bc4\u5b58\u5668\u4fdd\u5b58\u8fd9\u4e9b\u5185\u5bb9\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u9762\u8fd9\u4e2a\u56fe\u9664\u4e86\u52a0\u4e86\u4e00\u4e9b\u7ad6\u6761\u6761\u4ee5\u5916\u548c\u4e4b\u524d\u6ca1\u6709\u6d41\u6c34\u7ebf\u7684\u65f6\u5019\u51e0\u4e4e\u6ca1\u4ec0\u4e48\u5dee\u522b\u3002\u8fd9\u4e9b\u7ad6\u6761\u6761\u5c31\u662f pipeline registers\uff0c\u4f8b\u5982  <code>IF/ID</code>  \u5c31\u662f  <code>IF</code>  \u548c  <code>ID</code>  \u9636\u6bb5\u4e4b\u95f4\u7684\u4e00\u4e9b\u5bc4\u5b58\u5668\u3002</p> <p>Tip</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u56de\u5fc6\u8d77\u6211\u4eec\u5728 4.1.2 \u5c0f\u8282 \u4e2d\u63d0\u5230\u7684\uff0c\u7531\u4e8e PC \u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u90fd\u4f1a\u88ab\u5199\u5165\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u50cf Reg files \u548c Data mem \u90a3\u6837\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u4fe1\u53f7  <code>RegWrite</code>  \u548c  <code>MemWrite</code>  \u6765\u63a7\u5236\u5199\u5165\uff0c\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u4e0b\u964d\u6cbf\u5199\u5165\u5c31\u597d\u3002Pipeline registers \u4e5f\u662f\u8fd9\u6837\uff0c\u5b83\u4eec\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u90fd\u4f1a\u88ab\u5199\u5165\u4e00\u6b21\uff0c\u6240\u4ee5\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4fe1\u53f7\uff0c\u4e5f\u662f\u5728\u6bcf\u4e2a\u4e0b\u964d\u6cbf\u5199\u5165\u5c31\u597d\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u5e76\u6ca1\u6709\u8ba8\u8bba\u4e3a\u4ec0\u4e48\u8981\u5728\u4e0b\u964d\u6cbf\u5199\u5165\uff0c\u672c\u8282\u4e0b\u4e00\u4e2a Info \u6846\u6846\u5c31\u4f1a\u8bf4\u660e\u5566\uff01</p> <p>\u6211\u4eec\u5173\u6ce8 datapath \u4e2d\u4e24\u4e2a\u4ece\u53f3\u5f80\u5de6\u4f20\u4e1c\u897f\u7684\u60c5\u51b5\uff01\u4e00\u4e2a\u662f  <code>WB</code>  \u9636\u6bb5\u5199\u56de\u6570\u636e\uff0c\u4e00\u4e2a\u662f  <code>MEM</code>  \u9636\u6bb5\u5224\u65ad\u662f\u5426\u53d1\u751f\u8df3\u8f6c\u3002\u5206\u522b\u5173\u6ce8\u5bf9\u5e94\u589e\u52a0\u7684 datapath\uff1a</p> <p></p> <p>\u5bf9\u4e8e  <code>WB</code>  \u6765\u8bf4\uff0c\u6211\u4eec\u5199\u56de\u65f6\u9700\u8981\u8bb0\u5f55\u5199\u5230\u54ea\u4e2a register \u4e2d\uff0c\u8fd9\u4e2a\u4fe1\u606f\u662f  <code>ID</code>  \u9636\u6bb5\u4ece Instruction \u4e2d  <code>[11:7]</code>  \u7684\u4f4d\u7f6e\u53d6\u51fa\u7684\uff0c\u4f46\u662f\u76f4\u5230  <code>WB</code>  \u9636\u6bb5\u624d\u88ab\u7528\u5230\uff0c\u56e0\u6b64\u8fd9\u4e2a\u4fe1\u606f\u88ab\u5b58\u5230\u4e86  <code>ID/EX</code>  \uff0c\u4e0b\u4e00\u4e2a\u5468\u671f\u5b58\u5230\u4e86  <code>EX/MEM</code>  \uff0c\u4e0b\u4e00\u4e2a\u5468\u671f\u5b58\u5230\u4e86  <code>MEM/WB</code>  \uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5468\u671f\u88ab\u4f7f\u7528\u3002</p> <p><code>MEM</code>  \u5224\u65ad\u662f\u5426\u53d1\u751f\u8df3\u8f6c\u7684\u903b\u8f91\u7c7b\u4f3c\uff0c\u7565\u3002</p> <p>\u53e6\u5916\uff0c\u7531\u4e8e\u5728\u6d41\u6c34\u7ebf\u4e2d IF \u548c MEM \u90fd\u6709\u53ef\u80fd\u7528\u5230\u5185\u5b58\uff0c\u4e3a\u4e86\u4e0d\u51fa\u73b0\u7ed3\u6784\u7ade\u4e89\uff0c\u6211\u4eec\u5c06\u6570\u636e\u548c\u6307\u4ee4\u653e\u5728\u4e0d\u540c\u7684\u5730\u65b9\uff0c\u4ee5\u907f\u514d\u540c\u65f6\u51fa\u73b0\u8981\u8bbf\u95ee\u5185\u5b58\u800c\u5bfc\u81f4\u7684\u7ed3\u6784\u7ade\u4e89\u3002</p>"},{"location":"ZJU_CS/computer_organization/4_processor/#423_data_hazards","title":"4.2.3 Data Hazards","text":"<p>\u4f46\u662f\uff0c\u806a\u660e\u7684\u5c0f\u670b\u53cb\u4ecd\u7136\u53ef\u4ee5\u770b\u51fa\u4e00\u4e9b\u95ee\u9898\uff01\u8003\u8651\u8fd9\u6837\u7684\u6307\u4ee4\u5e8f\u5217\uff1a</p> <p></p> <p>\u7528\u7b80\u5316\u7684\u6570\u636e\u901a\u8def\u67e5\u770b\u4e00\u4e0b\u5404\u6307\u4ee4\u5404 stage \u7684\u6267\u884c\u65f6\u95f4\uff1a</p> <p></p> <p>\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u5f20\u56fe\u3002\u6700\u4e0a\u9762\u662f\u6a2a\u8f74\uff0c\u4e5f\u5c31\u662f\u65f6\u95f4\u8f74\uff0cCC \u4ee3\u8868 Clock Cycle\uff1b\u4e0b\u9762\u7684 10, -20 \u8fd9\u79cd\u6570\u636e\u662f  <code>x2</code>  \u5bc4\u5b58\u5668\u7684\u503c\uff1b\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b\uff0c  <code>IM</code>  \u5c31\u662f inst mem\uff0c\u5bf9\u5e94  <code>IF</code>  stage\uff1b  <code>Reg</code>  \u5c31\u662f reg file\uff0c\u5bf9\u5e94  <code>ID</code>  stage\uff1b\u957f\u5f97\u50cf ALU \u7684\u5c31\u662f ALU\uff0c\u5bf9\u5e94  <code>EX</code>  stage\uff1b  <code>DM</code>  \u5c31\u662f data mem\uff0c\u5bf9\u5e94  <code>MEM</code>  stage\uff1b\u6700\u540e\u9762\u7684  <code>Reg</code>  \u4e5f\u662f reg file\uff0c\u5bf9\u5e94  <code>WB</code>  stage\u3002\u6bcf\u4e2a stage \u5360\u7528\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u3002</p> <p>\u56fe\u4e2d\u6df1\u8272\uff08\u7070\u8272\u3001\u84dd\u8272\uff09\u7684\u90e8\u5206\u5c31\u662f\u5bf9\u5e94\u6307\u4ee4\u4f1a\u4f7f\u7528\u5230\u7684\u7ec4\u4ef6\uff0c\u5176\u4e2d mem \u548c reg file \u7528\u5de6\u534a\u8fb9\u4e3a\u6df1\u8272\u65f6\u8868\u793a \u5199\u5165\uff0c\u53f3\u534a\u8fb9\u4e3a\u6df1\u8272\u65f6\u8868\u793a \u8bfb\u53d6\u3002\u6211\u4eec\u7a0d\u540e\u89e3\u91ca\u8fd9\u6837\u8868\u793a\u7684\u539f\u56e0\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u7b2c\u4e00\u6761\u8bed\u53e5  <code>sub x2, x1, x3</code>  \u8fd0\u884c\u5230\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u624d\u88ab\u5199\u56de  <code>x2</code>  \uff08\u5982\u7eff\u8272\u6846\u6846\u6240\u793a\uff09\uff0c\u4f46\u662f\u5728\u7b2c 3 \u4e2a\u5468\u671f\u65f6\u7b2c\u4e8c\u6761\u8bed\u53e5  <code>and x12, x2, x5</code>  \u5c31\u8fd0\u884c\u5230  <code>ID</code>  \u9636\u6bb5\uff0c\u9700\u8981\u7528\u5230  <code>x2</code>  \u7684\u503c\uff08\u5982\u6a59\u8272\u6846\u6846\u6240\u793a\uff09\u3002\u5982\u679c\u8fd9\u65f6\u5019\u4e0d\u52a0\u5904\u7406\uff0c\u7b2c\u4e8c\u6761\u8bed\u53e5\u8bfb\u5230\u7684\u503c\u5c31\u662f\u9519\u8bef\u7684\uff01\u8fd9\u4e00\u95ee\u9898\u540c\u65f6\u4f1a\u53d1\u751f\u5728\u7b2c 3 \u6761\u6307\u4ee4\u90a3\u91cc\uff0c\u5b83\u5728\u7b2c 4 \u4e2a\u65f6\u949f\u5468\u671f\u9700\u8981\u7528\u5230  <code>x2</code>  \u7684\u503c\uff0c\u4f46\u662f\u8fd9\u65f6\u5019  <code>x2</code>  \u7684\u503c\u4ecd\u672a\u88ab\u66f4\u65b0\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u7531\u4e8e\u6307\u4ee4\u6240\u9700\u7684\u6570\u636e\u4f9d\u8d56\u4e8e\u524d\u9762\u4e00\u6761\u5c1a\u672a\u5b8c\u6210\u7684\u6307\u4ee4\uff0c\u56e0\u6b64\u6307\u4ee4\u4e0d\u80fd\u5728\u9884\u671f\u7684\u65f6\u949f\u5468\u671f\u5185\u6267\u884c\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u79f0\u4e4b\u4e3a data hazard\u3002</p> Info <p>\u5728\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u5173\u4e8e Reg files \u6211\u4eec\u9700\u8981\u5b8c\u6210 2 \u4ef6\u4e8b\uff1a  <code>sub x2, x1, x3</code>  \u7684  <code>WB</code>  \u9636\u6bb5\u5c06  <code>x2</code>  \u7684\u65b0\u503c\u5199\u5165 Reg files\uff0c\u4ee5\u53ca  <code>add x14, x2, x2</code>  \u7684  <code>ID</code>  \u9636\u6bb5\u5c06  <code>x2</code>  \u7684\u503c\u8bfb\u51fa\u6765\u5e76\u4e14\u5b58\u5230  <code>ID/EX</code>  \u5bc4\u5b58\u5668\u4e2d\u3002\u8fd9\u4e24\u4e2a\u4e8b\u60c5\u6709\u6ca1\u6709\u53ef\u80fd\u6b63\u786e\u6267\u884c\u5462\uff1f\u7b54\u6848\u662f\u6709\u7684\uff01</p> <p>\u4f17\u6240\u5468\u77e5\uff0c\u65f6\u949f\u4fe1\u53f7\u6709\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u89c4\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7531\u4e00\u4e2a\u4e0a\u5347\u6cbf\u5f00\u59cb\u5230\u53e6\u4e00\u4e2a\u4e0a\u5347\u6cbf\u7ed3\u675f\uff0c\u4e5f\u53ef\u4ee5\u89c4\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u4ece\u4e00\u4e2a\u4e0b\u964d\u6cbf\u5f00\u59cb\u5230\u53e6\u4e00\u4e2a\u4e0b\u964d\u6cbf\u7ed3\u675f\uff1a</p> <p></p> <p>\u5728\u8bfe\u672c\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6\u524d\u8005\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5c31\u662f\u76f8\u90bb\u4e24\u6b21\u4e0a\u5347\u6cbf\u4e4b\u95f4\u7684\u65f6\u95f4\u6bb5\u3002</p> <p>\u800c\u5bc4\u5b58\u5668\u7684\u5199\u5165\u53ef\u4ee5\u7531\u4e0a\u5347\u6cbf\u89e6\u53d1\uff0c\u4e5f\u53ef\u4ee5\u7531\u4e0b\u964d\u6cbf\u89e6\u53d1\u3002\u5982\u679c\u6211\u4eec\u89c4\u5b9a Reg files \u4e2d\u7684\u5bc4\u5b58\u5668\u5728\u4e0a\u5347\u6cbf\u89e6\u53d1\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u524d\u534a\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u5199\u5165 Reg files \u5bc4\u5b58\u5668\u7684\u5de5\u4f5c\uff1b\u800c\u89c4\u5b9a Pipeline registers \u5728\u4e0b\u964d\u6cbf\u89e6\u53d1\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u540e\u534a\u4e2a\u5468\u671f\u5b8c\u6210\u5199\u5165\u5de5\u4f5c\uff0c\u90a3\u4e48\uff0c\u5728\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u7684\u4e0a\u534a\uff0c  <code>x2</code>  \u7684\u65b0\u503c\u88ab\u5199\u5165 Reg\uff1b\u4e0b\u534a\u5468\u671f\u4ece Reg \u8bfb\u51fa  <code>x2</code>  \u5e76\u5199\u5165  <code>ID/EX</code>  Reg \u7684\u503c\u5c31\u662f  <code>x2</code>  \u7684\u65b0\u503c\u4e86\u3002\u6240\u4ee5\u8bf4\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u4f7f\u5f97\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u51fa\u73b0 structure hazard\u3002</p> <p>\u8fd9\u4e5f\u5c31\u80fd\u89e3\u91ca\u4e3a\u4ec0\u4e48  <code>PC</code>  \u8981\u5728\u4e0b\u964d\u6cbf\u5199\u5165\u4e86\uff0c\u770b datapath \u7684\u8fd9\u4e00\u90e8\u5206\uff1a</p> <p></p> <p>\u5982\u679c  <code>PC</code>  \u5728\u4e0a\u5347\u6cbf\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u4e0a\u5347\u6cbf\u66f4\u65b0\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5728\u4e0b\u964d\u6cbf\u8981\u5c06\u5f53\u524d\u6307\u4ee4\u5199\u5165  <code>IF/ID</code>  \u7684\u65f6\u5019\uff0c\u4ece inst mem \u4e2d\u8bfb\u51fa\u7684\u6307\u4ee4\u5df2\u7ecf\u662f\u4e0b\u4e00\u6761\u800c\u4e0d\u662f\u5f53\u524d\u6307\u4ee4\u4e86\uff01\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8ba9  <code>PC</code>  \u5728\u4e0b\u964d\u6cbf\u5199\u5165\uff0c\u8fd9\u6837\u624d\u80fd\u8bfb\u53d6\u5230\u6b63\u786e\u7684\u6307\u4ee4\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0cReg files \u7684\u5199\u5165\u5747\u53d1\u751f\u5728\u4e0a\u534a\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e0a\u5347\u6cbf\uff1b\u800c Pipeline registers \u548c  <code>PC</code>  \u7684\u5199\u5165\u5747\u53d1\u751f\u5728\u4e0b\u534a\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e0b\u964d\u6cbf\u3002</p> <p>\u8fd9\u4e5f\u662f\u56fe\u4f8b\u4e2d reg file \u7528\u5de6\u534a\u8fb9\u4e3a\u6df1\u8272\u8868\u793a\u5199\u5165\uff0c\u53f3\u534a\u8fb9\u4e3a\u6df1\u8272\u8868\u793a\u8bfb\u53d6\u7684\u539f\u56e0\uff1a\u5199\u5165\u53d1\u751f\u5728\u4e0a\u534a\u4e2a\u5468\u671f\uff0c\u800c\u4f7f\u7528\u8bfb\u53d6\u7684\u7ed3\u679c\u53d1\u751f\u5728\u4e0b\u534a\u4e2a\u5468\u671f\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u4f55\u89e3\u51b3 data hazard \u5462\uff1f\u56de\u987e\u521a\u521a\u7684\u90a3\u5f20\u56fe\uff1a</p> <p></p> <p>\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u867d\u7136  <code>sub x2, x1, x3</code>  \u5728\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u7684  <code>WB</code>  \u9636\u6bb5\u624d\u5c06\u7ed3\u679c\u5199\u56de\uff0c\u4f46\u662f\u5728\u7b2c 3 \u4e2a\u65f6\u949f\u5468\u671f\u7684  <code>EX</code>  \u9636\u6bb5\u5176\u5b9e\u5c31\u7b97\u51fa\u6765\u4e86\uff01\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u989d\u5916\u7684\u786c\u4ef6\u7ed3\u6784\uff0c\u4f7f\u5f97 ALU \u7684\u8f93\u5165\u4e0d\u4ec5\u53ef\u4ee5\u6765\u6e90\u4e8e\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u6765\u7684\u3001\u653e\u5728  <code>ID/EX</code>  \u4e2d\u7684\u503c\uff0c\u8fd8\u53ef\u4ee5\u6765\u6e90\u4e8e  <code>EX/MEM</code>  \u4e2d\u6216\u8005  <code>MEM/WB</code>  \u4e2d\u7684\u503c\uff0c\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u524d\u4e00\u6761\u548c\u518d\u524d\u4e00\u6761\u6307\u4ee4\u7684 ALU \u7684\u8ba1\u7b97\u7ed3\u679c\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p> <p></p> <p>\u5728\u7b2c 3 \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\u88ab\u7b97\u51fa\u5e76\u4fdd\u5b58\u5728  <code>EX/MEM</code> </p> <p>\u5b66\u4e0d\u5b8c\u4e86\uff0c\u6682\u65f6\u4e0d\u8be6\u7ec6\u5199\u4e86\uff0c\u5927\u610f\u5c31\u662f   <code>X = 1, 2 = if (MEM.Rd != x0 &amp;&amp; EX.RsX == MEM.Rd) ForwardX = 10; else if (WB.Rd != x0 &amp;&amp; EX.RsX == WB.Rd) ForwardX = 01; else ForwardX = 00;</code>  \uff1a</p> <p></p> <p>\u4f46\u662f\u9047\u5230 load \u6307\u4ee4\u4e0d\u5f97\u4e0d stall\uff0c\u521a\u521a\u53ef\u4ee5\u662f\u56e0\u4e3a EX \u548c ID \u5c31\u5dee\u4e86\u4e00\u8f6e\uff0c\u4f46\u662f load \u7684\u6570\u636e\u8981\u5230 MEM \u624d\u6709\uff0c\u6240\u4ee5\u5982\u679c\u4e0b\u4e00\u6761\u6307\u4ee4\u8981\u7528\uff0c\u4e0a\u4e00\u6761\u4e5f\u62ff\u4e0d\u51fa\u6765\uff0c\u53ea\u80fd\u8981 stall \u7b49\u624d\u884c\uff1a</p> <p></p> <p></p> <p>\u5728 ID \u9636\u6bb5\u53ef\u4ee5\u5224\u5b9a hazard\uff1a  <code>if (EX.MemRead &amp;&amp; EX.Rd == ID.RsX) Hazard();</code> </p> <p>\u5982\u4f55 stall \u5462\uff1f\u4e24\u4e2a\u4efb\u52a1\uff1a\u8ba9\u5f53\u524d\u6307\u4ee4\u4e0d\u8981\u4ea7\u751f\u6548\u679c (\u6e05\u7a7a  <code>RegWrite</code>  \u548c  <code>MemWrite</code>  )\u3001\u8ba9\u540e\u9762\u7684\u8bed\u53e5\u4e0d\u8981\u53d7\u5230\u5f71\u54cd (\u4fdd\u7559  <code>PC</code>  \u548c  <code>IF/ID</code>  \u4e00\u5468\u671f\u4e0d\u6539)\uff1a</p> <p></p> <p>\u8fd8\u6709\u4e00\u79cd\u529e\u6cd5\u662f\u5bf9\u6307\u4ee4\u8fdb\u884c\u7b49\u4ef7\u6362\u5e8f\uff0c\u8ba9\u67d0\u4e9b\u6307\u4ee4\u5c3d\u91cf\u665a\u4e00\u70b9\u6267\u884c\uff0c\u4ee5\u907f\u514d\u6570\u636e\u7ade\u4e89\u3002\u8fd9\u79cd\u65b9\u6cd5\u53eb code scheduling\u3002</p> <p> </p>"},{"location":"ZJU_CS/computer_organization/4_processor/#424_control_hazards_branch_hazards","title":"4.2.4 Control Hazards / Branch Hazards","text":"<p>\u4f8b\u9898</p> <p>\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u5728\u4e0d\u8003\u8651\u89e3\u51b3 hazard \u7684\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5047\u8bbe\u6240\u6709\u5bc4\u5b58\u5668\u521d\u59cb\u503c\u4e3a 0\uff0cMem(1) = 0x99, Mem(8) = 0xaa, Mem(9) = 0xbb\u3002</p> <p></p> \u89e3\u7b54 <p>\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u6bcf\u6761\u6307\u4ee4\u5404\u9636\u6bb5\u7684\u6267\u884c\u60c5\u51b5\uff1a</p> <p></p> <p>\u4ece\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u603b\u7ed3\u51fa\u89c4\u5f8b\uff08\u8fd9\u548c\u6d41\u6c34\u7ebf\u7684\u5177\u4f53\u8bbe\u8ba1\u6709\u5173\uff01\uff09\uff0c\u5373\uff1a</p> <ul> <li>\u67d0\u6761\u6307\u4ee4 (\u4f8b\u5982  <code>#10</code> )  <code>WB</code>  \u9636\u6bb5\u505a\u7684\u5bc4\u5b58\u5668\u66f4\u6539\uff0c\u5176\u4e4b\u540e\u7b2c\u4e09\u6761\u6307\u4ee4 ( <code>#13</code> ) \u7684  <code>ID</code>  \u9636\u6bb5\u624d\u80fd\u8bfb\u51fa\u65b0\u7684\u503c\uff1b</li> <li>\u67d0\u6761\u6307\u4ee4 (\u4f8b\u5982  <code>#10</code> )  <code>MEM</code>  \u9636\u6bb5\u4ea7\u751f  <code>PCSrc = 1</code>  \u7684\u4fe1\u53f7\uff0c\u6b64\u65f6\u5176\u4e4b\u540e\u7b2c\u4e09\u6761\u6307\u4ee4 ( <code>#13</code> ) \u6b63\u5728\u8fd0\u884c  <code>IF</code>  \u9636\u6bb5\uff0c\u5b83\u8fd0\u884c\u7ed3\u675f\u540e\u624d\u4f1a\u5c06  <code>PC</code>  \u7f6e\u4e3a\u5b9e\u9645\u4e0a\u8981\u8df3\u8f6c\u7684\u6307\u4ee4\uff0c\u56e0\u6b64\u5982\u679c\u8981\u8df3\u8f6c\u7684\u8bdd\uff0c <code>#11</code> ,  <code>#12</code> ,  <code>#13</code>  \u8fd9\u4e09\u6761\u8bed\u53e5\u662f\u989d\u5916\u8fd0\u884c\u7684\uff1b\u5982\u679c\u4e0d\u7528\u8df3\u8f6c\u5c31\u4ec0\u4e48\u4e8b\u90fd\u6ca1\u6709\u4e86\uff1b</li> <li>\u4e0d\u5b58\u5728\u5176\u4ed6\u5f71\u54cd\u7ed3\u679c\u7684\u60c5\u51b5\u4e86\uff01</li> </ul> <p>\u5229\u7528\u8fd9\u4e9b\u89c4\u5f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u6211\u4eec\u7684\u89e3\u9898\u65b9\u5f0f\uff1a</p> <p>Reg: \u5230\u54ea\u4e00\u6b21\u6267\u884c\u7684 ID \u9636\u6bb5\u5f00\u59cb\uff0c\u8bfb\u51fa\u7684 Reg \u503c\u4f1a\u662f\u8be5\u503c PC: \u5230\u54ea\u4e00\u6b21\u6267\u884c \u4e4b\u540e\uff0cPC \u7684\u503c\u4f1a\u88ab\u6539\u4e3a\u8be5\u503c</p> <p></p>"},{"location":"ZJU_CS/computer_organization/4_processor/#43_exceptions","title":"4.3 Exceptions","text":"<p>Exception \u548c Interrupt \u5728\u5f88\u591a\u5730\u65b9\u662f\u4e0d\u4f5c\u533a\u5206\u7684\uff0c\u4f46\u662f\u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u533a\u5206\uff1a</p> <p></p> <p>\u5f53 exception \u53d1\u751f\u65f6\uff0c\u5728 Supervisor Exception Program Counter, SEPC \u8fd9\u4e2a\u5bc4\u5b58\u5668\u4e2d\u4fdd\u5b58\u53d1\u751f exception \u7684\u6307\u4ee4\u5730\u5740\uff0c\u7136\u540e\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u5fc5\u987b\u77e5\u9053\u53d1\u751f exception \u7684\u539f\u56e0\uff0cRISC-V \u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u5728 Supervisor Exception Cause Register, SCAUSE \u8fd9\u4e2a\u5bc4\u5b58\u5668\u4e2d\u8bb0\u5f55 exception \u7684\u539f\u56e0\u3002\u53ef\u4ee5\u9009\u62e9\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f vectored interrupt\uff0c</p>"},{"location":"ZJU_CS/computer_organization/5_cache/","title":"5 Cache","text":""},{"location":"ZJU_CS/computer_organization/5_cache/#51_memory_hierarchy_introduction","title":"5.1 Memory Hierarchy Introduction","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u6307\u4ee4\u548c\u6570\u636e\u90fd\u9700\u8981\u5728 memory \u91cc\u624d\u80fd\u8bbf\u95ee\u3002\u800c\u8bbf\u95ee memory \u6bd4\u8f83\u6162\u3002</p> <p>\u5173\u6ce8\u5230\u7a0b\u5e8f\u5bf9 memory \u7684\u8bbf\u95ee\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>Temporal locality, \u65f6\u95f4\u5c40\u90e8\u6027\uff0c\u5373\u8fd1\u671f\u8bbf\u95ee\u7684\u9879\u76ee\u5f88\u6709\u53ef\u80fd\u4f1a\u5728\u77ed\u65f6\u95f4\u5185\u518d\u6b21\u88ab\u8bbf\u95ee\u3002\u4f8b\u5982\u5faa\u73af\u4e2d\u7684\u6307\u4ee4\u3001induction variables (\u5faa\u73af\u4e2d\u7528\u6765\u8ba1\u6570\u7684\u53d8\u91cf) \u7b49</li> <li>Spatial locality, \u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u5373\u8fd1\u671f\u8bbf\u95ee\u9879\u76ee\u9644\u8fd1\u7684\u9879\u76ee\u4e5f\u6709\u53ef\u80fd\u4f1a\u5728\u77ed\u65f6\u95f4\u5185\u518d\u6b21\u88ab\u8bbf\u95ee\u3002\u4f8b\u5982\u8fde\u7eed\u7684\u6307\u4ee4\u6267\u884c\uff0c\u6216\u8005\u6570\u7ec4\u53d8\u91cf\u7b49</li> </ul> <p>\u56e0\u6b64\uff0c\u7ed3\u6784\u5316\u7684 memory \u88ab\u8bbe\u8ba1\u51fa\u6765\u3002\u8fd1\u671f\u8bbf\u95ee\u5230\u7684\u5185\u5b58\u5355\u5143\u548c\u5b83\u9644\u8fd1\u7684\u5185\u5bb9\u88ab\u590d\u5236\u4e00\u4efd\u653e\u5728\u79bb CPU \u66f4\u8fd1\u3001\u8bbf\u95ee\u66f4\u5feb\uff0c\u4f46\u4e5f\u66f4\u5c0f\u7684 cache \u4e2d\uff0c\u4ece\u800c\u5229\u7528\u4e0a\u8ff0\u5c40\u90e8\u6027\u52a0\u901f\u8bbf\u95ee\u3002</p> <p></p> <p>\u6211\u4eec\u79f0\u590d\u5236\u7684\u5355\u4f4d\u662f block \u6216\u8005 line\uff0c\u5b83\u901a\u5e38\u662f 2 \u7684\u82e5\u5e72\u6b21\u65b9\u4e2a word \u90a3\u4e48\u5927\uff08\u4e00\u4e2a word \u662f 4 Byte\uff09\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bbf\u95ee\u7684\u5185\u5b58\u5355\u5143 (\u5373\uff0c\u5b83\u6240\u5728\u7684 block) \u6070\u597d\u5728 cache \u4e2d\uff08\u4e4b\u524d\u67d0\u4e00\u6b21\u88ab\u642c\u4e0a\u6765\u4e86\uff09\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e00\u6b21 hit\uff0c\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u8981\u4ece\u4e2d\u8bfb\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u5224\u65ad\u662f\u5426 hit\uff0c\u4ee5\u53ca\u8bfb\u51fa\u6765\u7684\u65f6\u95f4\u79f0\u4e3a hit time\u3002</p> <p>\u5982\u679c\u5e76\u4e0d\u5b58\u5728\uff0c\u79f0\u4e3a\u4e00\u6b21 miss\u3002\u5f53 cache miss \u65f6\uff0c\u6211\u4eec\u9700\u8981\u5148\u5c06\u5185\u5bb9\u6240\u5728\u7684 block \u4ece memory \u62ff\u5230 cache\uff0c\u7136\u540e\u518d\u5c06\u5185\u5bb9\u8bfb\u5230\u5904\u7406\u5668\uff1b\u8fd9\u4e2a\u8fc7\u7a0b\u82b1\u7684\u65f6\u95f4\u6210\u4e3a miss penalty\u3002</p> <p>\u5bf9\u5e94\u7684\u6709 hit / miss rate (\u4e5f\u79f0 ratio) \u7684\u6982\u5ff5\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#52_the_basics_of_cache","title":"5.2 The basics of Cache","text":"<p>\u4e0b\u9762\u6211\u4eec\u6765\u5177\u4f53\u8003\u8651 cache \u600e\u4e48\u5b9e\u73b0\u3002\u4e3b\u8981\u9700\u8981\u8ba8\u8bba\u7684\u95ee\u9898\u662f\uff1a\u5982\u4f55\u77e5\u9053\u4e00\u4e2a block \u662f\u5426\u5728 cache \u91cc\uff1f\u4ee5\u53ca\u5982\u679c\u77e5\u9053\u5b83\u5728\u7684\u8bdd\uff0c\u5982\u4f55\u627e\u5230\u5b83\uff1f</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#531_direct_mapped_cache","title":"5.3.1 Direct Mapped Cache","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5185\u5b58\u6709 32 \u4e2a block\uff0c\u5176\u7f16\u53f7 (block address) \u5206\u522b\u4e3a 00000 \u5230 11111\uff1bcache \u6709 8 \u4e2a block\u3002Direct mapped cache \u8fd9\u79cd\u65b9\u5f0f\u76f4\u63a5\u6309 block address \u7684\u540e 3 \u4f4d\u786e\u5b9a\u5b83\u5e94\u8be5\u653e\u5728 cache \u7684\u54ea\u4e2a block \u91cc\u3002</p> <p>\u5373\uff0c\u56fe\u4e0a\u7070\u8272\u7684 block \u7684\u7f16\u53f7\u672b 3 \u4f4d\u90fd\u662f 001\uff0c\u6240\u4ee5\u5c31\u5e94\u8be5\u653e\u5728 cache \u4e2d\u7f16\u53f7\u4e3a 001 \u7684\u7070\u8272 block \u91cc\uff1b\u6a59\u8272\u540c\u7406\u3002</p> <p>\u4e3a\u4ec0\u4e48\u662f\u4e09\u4f4d\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a cache \u6709 8 \u4e2a block \u7684\u8bdd\uff0c\u5176\u5bf9\u5e94\u7684\u5c31\u662f 3 \u4f4d\u4e8c\u8fdb\u5236\u6570\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u51b3\u5b9a\u6620\u5c04\u5173\u7cfb\u7684\u672b\u51e0\u4f4d\u79f0\u4e3a index\u3002\u540c\u7406\uff0c\u5982\u679c cache \u6709 64 \u4e2a block \u7684\u8bdd\uff0cindex \u5c31\u662f 6 \u4f4d\u3002Cache \u7684 block \u6570\u59cb\u7ec8\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u786e\u5b9a\u653e\u5728 cache \u4e2d\u7f16\u53f7\u4e3a 001 \u7684\u4f4d\u7f6e\u7684 block \u7a76\u7adf\u662f 00001\uff0c\u8fd8\u662f 01001\uff0c\u8fd8\u662f\u5176\u4ed6\u7684\u54ea\u4e2a block \u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 cache \u4e2d\u989d\u5916\u5b58\u653e\u8fd9\u4e2a block \u7684 block address \u6765\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5f53\u7136\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u5b58\u653e\u8fd9\u4e2a block address \u7684\u524d\u82e5\u5e72\u4f4d\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u51e0\u4f4d\u5df2\u7ecf\u901a\u8fc7 index \u6765\u786e\u5b9a\u4e86\u3002\u4f8b\u5982\u56fe\u4e0a\u7684\u4f8b\u5b50\u4e2d\uff0c10001 \u5b58\u5728 index \u4e3a 001 \u7684 cache block \u4e2d\uff0c\u53ea\u9700\u8981\u989d\u5916\u5b58\u5f00\u5934\u7684 10 \u5373\u53ef\u3002\u6211\u4eec\u628a\u7528\u6765\u5224\u5b9a\u67d0\u4e2a cache block \u4e2d\u5230\u5e95\u5b58\u7684\u662f\u54ea\u4e2a memory block \u7684\u8fd9\u51e0\u4f4d\u79f0\u4e3a tag\u3002</p> <p>\u4e0b\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u4f55\u786e\u5b9a cache \u4e2d\u7684\u8fd9\u4e2a block \u662f\u5426\u6709\u6548\u5462\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u4f55\u65f6\u5019\u8fd9\u4e2a block \u4e2d\u603b\u6709\u4e00\u4e2a\u503c\uff0c\u4f46\u662f\u5047\u8bbe\u8fd9\u4e2a\u503c\u662f\u542f\u52a8\u7684\u65f6\u5019\u81ea\u5e26\u7684\uff0c\u90a3\u4e48\u8bbf\u95ee\u5b83\u5c31\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5bf9\u5e94\u7684 memory block \u7684\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a valid bit \u6765\u8868\u793a\u8fd9\u4e2a block \u662f\u5426\u6709\u6548\uff1b\u521d\u59cb\u503c\u4e3a 0 \u8868\u793a\u65e0\u6548\uff0c\u5f53\u6709\u4e00\u6b21\u5c06 memory \u7684\u4e00\u4e2a block \u62ff\u8fdb\u6765\u4e4b\u540e\u5c31\u5c06\u5176\u7f6e\u4e3a 1\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0ccache hit \u5f53\u4e14\u4ec5\u5f53 valid bit \u662f 1 \u800c\u4e14 tag \u662f\u4e00\u81f4\u7684\u3002</p> <p>\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u90fd\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\uff0c\u800c\u4e0a\u9762\u6211\u4eec\u8ba8\u8bba\u7684 block address \u90fd\u662f\u4ee5 block \u4e3a\u5355\u4f4d\u7684\uff0c\u8fd9\u4e24\u8005\u4e4b\u95f4\u6709\u4ec0\u4e48\u6837\u7684\u5173\u7cfb\u5462\uff1f\u975e\u5e38\u7b80\u5355\uff0c\u7531\u4e8e\u4e00\u4e2a block \u603b\u662f 2 \u7684\u82e5\u5e72\u6b21\u65b9\u4e2a word \u90a3\u4e48\u5927\uff0c \u800c\u6bcf\u4e2a word \u662f 4 Byte\uff0c\u56e0\u6b64\u6bcf\u4e2a block \u7684 byte \u6570\u4e5f\u662f 2 \u7684\u82e5\u5e72\u6b21\u65b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u6389 byte address \u7684\u540e\u51e0\u4f4d\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u5b83\u7684 block address \u4e86\u3002\u8fd9\u6837\u76f8\u90bb\u7684 2 \u7684\u82e5\u5e72\u6b21\u65b9\u4e2a byte \u5c31\u4f1a\u805a\u5408\u6210\u4e00\u4e2a block \u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684 byte address \u7684\u524d\u82e5\u5e72\u4f4d\uff0c\u5373 block address\uff0c\u662f\u76f8\u540c\u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06 byte address \u5206\u4e3a 2 \u4e2a\u90e8\u5206\uff1ablock address \u548c byte offset\uff0c\u5373\u6240\u5728 block \u7684\u7f16\u53f7\u4ee5\u53ca\u5728 block \u4e2d\u7684\u504f\u79fb\u91cf (in byte)\uff1b\u800c block address \u53c8\u5206\u4e3a\u4e86\u4e24\u4e2a\u90e8\u5206\uff0c\u5373 tag \u548c index\u3002\u5373\uff1a</p> <p></p> <p>\u800c\u5728 cache \u4e2d\uff0c\u6211\u4eec\u5b58\u50a8\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <p></p> <p>\u5373\uff0c\u6bcf\u4e2a cache block \u6709\u4e00\u4e2a index\uff0c\u5f53\u51fa\u73b0\u4e00\u6b21 miss \u540e\u4ece\u5185\u5b58\u4e2d\u62ff\u6240\u9700\u5185\u5b58\u8986\u76d6\u5230\u5bf9\u5e94\u7684 index \u6761\u76ee\u4e0a\u7684 data \u5b57\u6bb5\uff0c\u5c06 tag \u8bbe\u4e3a block address \u7684\u524d\u51e0\u4f4d\uff0c\u5c06 valid bit \u8bbe\u4e3a 1\u3002</p> \u4f8b 5.1 Direct Mapped Cache \u7684\u586b\u5145\u548c\u66ff\u6362 <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a</p> <p></p> \u4f8b 5.2 Direct Mapped Cache \u7684\u4f4d\u6570\u8ba1\u7b97\u548c\u8fde\u7ebf\u65b9\u5f0f <p>\u53c8\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a 64 \u4f4d\u5730\u5740\u7684\u673a\u5668\uff0ccache \u7684\u5927\u5c0f\u4e3a 1024 \u4e2a block\uff0c\u4e00\u4e2a block \u6709 1 \u4e2a word\uff0c\u5373 4 \u4e2a byte\uff0c\u90a3\u4e48 index \u7684\u4f4d\u6570\u5c31\u662f \\(\\log_2 1024 = 10\\)\uff0cbyte offset \u7684\u4f4d\u6570\u5c31\u662f \\(\\log_2 4 = 2\\)\uff0c\u56e0\u6b64 tag \u7684\u4f4d\u6570\u5c31\u662f \\(64 - 10 - 2 = 52\\)\uff1b\u53e6\u5916\u4e00\u4e2a block \u7684\u5927\u5c0f\u662f 4 \u4e2a byte\uff0c\u5373 32 \u4f4d\uff0c\u56e0\u6b64\u4e00\u4e2a cache \u7684\u6761\u76ee\u7684\u4f4d\u6570\u5c31\u662f valid bit 1 \u4f4d + tag 52 \u4f4d + word 32 \u4f4d = 85 \u4f4d\u3002</p> <p>\uff08index \u5e76\u4e0d\u9700\u8981\u5728\u8fd9\u91cc\u88ab\u8ba1\u7b97\uff0c\u56e0\u4e3a index \u4e4b\u4e8e cache \u5c31\u50cf address \u4e4b\u4e8e main memory \u4e00\u6837\uff0c\u662f\u76f4\u63a5\u7528\u6765\u8bbf\u95ee\u7684\uff09</p> <p>\u4ea6\u5373\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u4e00\u4e2a block \u6709\u53ef\u80fd\u5305\u542b\u591a\u4e2a word\uff0c\u800c\u6bcf\u6b21\u5b9e\u9645\u4e0a\u53ea\u4f1a\u8bbf\u95ee\u51fa\u4e00\u4e2a word\u3002\u56e0\u6b64\u8fd9\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5728 block \u4e2d\u9009\u62e9\u5bf9\u5e94\u7684 word\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 byte offset \u8fdb\u4e00\u6b65\u7ec6\u5206\u6210\u8868\u793a block \u4e2d\u67d0\u4e2a word \u7684 block offset\uff08\u4e3a\u4ec0\u4e48\u4e0d\u53eb word offset \u5462\uff1f\uff09\uff0c\u4ee5\u53ca\u8868\u793a word \u4e2d\u67d0\u4e2a byte \u7684 byte offset\uff1a</p> <p></p> <p>\u5373\uff0c\u5bf9\u8fd9\u4e2a\u56fe\u4e2d\u7684\u60c5\u5f62\uff0c\u5730\u5740\u662f 32 \u4f4d\u7684\uff0c\u4e00\u4e2a block \u6709 16 \u4e2a word\uff0c\u6709 256 \u4e2a cache entry\u3002\u56e0\u6b64 byte offset \u7684\u4f4d\u6570\u662f \\(\\log_2 4 = 2\\)\uff0cblock offset \u7684\u4f4d\u6570\u662f \\(\\log_2 16 = 4\\)\uff0cindex \u7684\u4f4d\u6570\u662f \\(\\log_2 256 = 8\\)\uff0ctag \u7684\u4f4d\u6570\u662f \\(32-8-4-2=18\\)\uff0c\u4e00\u4e2a cache entry \u7684\u957f\u5ea6\u662f valid bit 1 \u4f4d + tag 18 \u4f4d + data 16 word * 4 byte/word * 8 bit/byte = 531 \u4f4d\u3002</p> \u4f8b 5.3 Direct Mapped Cache \u7684\u4f4d\u6570\u8ba1\u7b97 <p>\u518d\u4f8b\u5982\uff1a</p> <p></p>"},{"location":"ZJU_CS/computer_organization/5_cache/#532_handling_cache_hits_misses","title":"5.3.2 Handling Cache Hits &amp; Misses","text":"<p>\u663e\u7136\uff0c\u8bfb\u548c\u5199\u7684\u65f6\u5019\u53d1\u751f cache miss \u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u4e00\u6837\u7684\uff1b\u53e6\u5916\u8bfb\u4e5f\u6709\u8bfb\u6570\u636e\u548c\u8bfb\u6307\u4ee4\u4e4b\u5206\uff08\u6307\u4ee4 cache \u548c\u6570\u636e cache \u901a\u5e38\u662f\u5206\u79bb\u7684\uff09\u3002\u6211\u4eec\u5206\u522b\u5bf9\u5176\u8fdb\u884c\u8ba8\u8bba\uff1a</p> <ul> <li>Read<ul> <li>Hit<ul> <li>\u76f4\u63a5\u4ece cache \u91cc\u8bfb\u5c31\u597d\u4e86</li> </ul> </li> <li>Miss<ul> <li>Data cache miss<ul> <li>\u4ece memory \u91cc\u628a\u5bf9\u5e94\u7684 block \u62ff\u5230 cache\uff0c\u7136\u540e\u8bfb\u53d6\u5bf9\u5e94\u7684\u5185\u5bb9\u3002</li> </ul> </li> <li>Instruction cache miss<ul> <li>\u6682\u505c CPU \u8fd0\u884c\uff0c\u4ece memory \u91cc\u628a\u5bf9\u5e94\u7684 block \u62ff\u5230 cache\uff0c\u4ece\u7b2c\u4e00\u4e2a step \u5f00\u59cb\u91cd\u65b0\u8fd0\u884c\u5f53\u524d\u8fd9\u6761\u6307\u4ee4\u3002</li> </ul> </li> </ul> </li> </ul> </li> <li>Write<ul> <li>Hit \u6709\u4e24\u79cd\u53ef\u4ee5\u9009\u7684\u65b9\u5f0f\uff1a<ul> <li>write-through\uff0c\u5373\u6bcf\u6b21\u5199\u6570\u636e\u65f6\uff0c\u65e2\u5199\u5728 cache\uff0c\u4e5f\u5199\u5728 main memory\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f cache \u548c main memory \u603b\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u5f88\u6162\u3002<ul> <li>\u4e00\u4e2a\u6539\u8fdb\u662f\u5f15\u5165\u4e00\u4e2a write buffer\uff0c\u5373\u5f53\u9700\u8981\u5199 main memory \u7684\u65f6\u5019\u4e0d\u662f\u7acb\u5373\u53bb\u5199\uff0c\u800c\u662f\u52a0\u5165\u5230\u8fd9\u4e2a\u961f\u5217\u4e2d\uff0c\u627e\u673a\u4f1a\u5199\u8fdb\u53bb\uff1b\u6b64\u65f6 CPU \u5c31\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u4e86\u3002\u5f53\u7136\uff0c\u5f53 write buffer \u6ee1\u4e86\u7684\u65f6\u5019\uff0c\u4e5f\u9700\u8981\u6682\u505c\u5904\u7406\u5668\u6765\u505a\u5199\u5165 main memory \u7684\u5de5\u4f5c\uff0c\u76f4\u5230 buffer \u4e2d\u6709\u7a7a\u95f2\u7684 entry\u3002\u56e0\u6b64\uff0c\u5982\u679c main memory \u7684\u5199\u5165\u901f\u7387\u4f4e\u4e8e CPU \u4ea7\u751f\u5199\u64cd\u4f5c\u7684\u901f\u7387\uff0c\u591a\u5927\u7684\u7f13\u51b2\u90fd\u65e0\u6d4e\u4e8e\u4e8b\u3002</li> </ul> </li> <li>write-back\uff0c\u53ea\u5c06\u4fee\u6539\u7684\u5185\u5bb9\u5199\u5728 cache \u91cc\uff0c\u7b49\u5230\u8fd9\u4e2a block \u8981\u88ab\u8986\u76d6\u6389\u7684\u65f6\u5019\u5c06\u5176\u5199\u56de\u5185\u5b58\u3002\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684 dirty bit \u6765\u8bb0\u5f55\u8fd9\u4e2a cache block \u662f\u5426\u88ab\u66f4\u6539\u8fc7\uff0c\u4ece\u800c\u76f4\u5230\u88ab\u8986\u76d6\u524d\u662f\u5426\u9700\u8981\u88ab\u5199\u56de\u5185\u5b58\u3002\u7531\u4e8e\u5bf9\u540c\u4e00\u4e2a block \u901a\u5e38\u4f1a\u6709\u591a\u6b21\u5199\u5165\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u5f0f\u6d88\u8017\u7684\u603b\u5e26\u5bbd\u662f\u66f4\u5c0f\u7684\u3002</li> </ul> </li> <li>Miss \u540c\u6837\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a<ul> <li>write allocate\uff0c\u5373\u50cf read miss \u4e00\u6837\u5148\u628a block \u62ff\u5230 cache \u91cc\u518d\u5199\u5165\u3002</li> <li>write around (or no write allocate)\uff0c\u8003\u8651\u5230\u65e2\u7136\u672c\u6765\u5c31\u8981\u53bb\u4e00\u6b21 main memory\uff0c\u4e0d\u5982\u76f4\u63a5\u5728\u91cc\u9762\u5199\u4e86\uff0c\u5c31\u4e0d\u518d\u62ff\u5230 cache \u91cc\u4e86\u3002</li> <li>write-back \u53ea\u80fd\u4f7f\u7528 write allocate\uff1b\u4e00\u822c\u6765\u8bf4\uff0cwrite-through \u4f7f\u7528 write around\uff0c\u5176\u539f\u56e0\u662f\u660e\u663e\u7684\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"ZJU_CS/computer_organization/5_cache/#533","title":"5.3.3 \u5176\u4ed6\u5b9a\u4f4d\u65b9\u5f0f","text":"<p>\u5728 5.3.1 \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6700\u7b80\u5355\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u5373\u76f4\u63a5\u6620\u5c04\uff1a\u5bf9\u4e8e\u4efb\u4e00\u7ed9\u5b9a\u7684 block address\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a cache block \u53ef\u4f9b\u5b83\u5b58\u653e\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u6620\u5c04\u65b9\u5f0f\u3002</p> <p>Fully associative\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f block can go anywhere in cache\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u662f\u53ef\u4ee5\u964d\u4f4e miss rate\uff0c\u574f\u5904\u662f\u6bcf\u6b21\u9700\u8981\u8ddf\u6240\u6709 block \u6bd4\u8f83\u662f\u5426 hit\uff1a</p> <p></p> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u8ba8\u8bba\u66ff\u6362\u65f6\u91c7\u7528\u4ec0\u4e48\u6837\u7684\u7b56\u7565\uff1b\u5373\uff1a\u66ff\u6362\u54ea\u4e00\u5757\u3002\u901a\u5e38\u6709\u4e09\u79cd\u7b56\u7565\uff1a</p> <ul> <li>Random replacement\uff0c\u968f\u673a\u6311\u9009\u4e00\u4e2a\u5e78\u8fd0 block \u8986\u76d6\u6389\uff08\u9700\u8981\u4e00\u4e2a\u968f\u673a\u6570\u751f\u6210\u5668\uff09</li> <li>LRU, Least Recently Used\uff0c\u9009\u62e9\u4e0a\u4e00\u6b21\u4f7f\u7528\u65f6\u95f4\u8ddd\u79bb\u73b0\u5728\u6700\u8fdc\u7684\u90a3\u4e2a block \u8986\u76d6\u6389\uff08\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u4f4d\u7528\u6765\u8bb0\u5f55\u4fe1\u606f\uff0c\u5177\u4f53\u5b9e\u73b0\u6ca1\u6709\u8bb2\uff09</li> <li>FIFO, First In First Out\uff0c\u9009\u62e9\u8fdb\u5165\u65f6\u95f4\u6700\u65e9\u7684 block \u8986\u76d6\u6389\uff08\u540c\u6837\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u4f4d\u8bb0\u5f55\u4fe1\u606f\uff0c\u540c\u6837\u6ca1\u8bb2\u5177\u4f53\u5b9e\u73b0\uff09</li> </ul> <p>\u4ecb\u4e8e direct mapping \u548c fully associative \u4e4b\u95f4\u7684\u662f set associative\uff0c\u5373\u6bcf\u4e2a block \u4ecd\u7136\u4f1a\u6839\u636e\u5176 address \u786e\u5b9a\u5176\u53ef\u4ee5\u5b58\u653e\u7684 cache block\uff0c\u4f46\u662f\u53ef\u4ee5\u653e\u7684\u5730\u65b9\u5e76\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u4e00\u7ec4\u3002\u5373\uff1a</p> <p></p> <p>\u6700\u53f3\u8fb9\u662f\u4e00\u4e2a 2-way set-associative \u7684\u4f8b\u5b50\uff0c\u6bcf\u4e2a\u5730\u5740\u5bf9\u5e94 cache \u4e2d\u7684\u4e00\u7ec4\uff0c\u5728\u8fd9\u91cc\u4e00\u7ec4\u6709\u4e24\u4e2a cache block\u3002\u56e0\u6b64\u5728\u8bbf\u95ee\u65f6\u4e5f\u9700\u8981\u5206\u522b\u6bd4\u8f83\u8fd9\u4e24\u4e2a block \u662f\u5426 hit\u3002\u5728\u66ff\u6362\u65f6\u4e5f\u9700\u8981\u51b3\u5b9a\u66ff\u6362\u54ea\u4e00\u5757\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u524d\u8ff0\u7684\u4e09\u4e2a\u7b56\u7565\u4e2d\u7684\u4e00\u4e2a\u5b9e\u73b0\u3002</p> <p>\u76f8\u4f3c\u5730\uff0c\u4e00\u4e2a 4-way set-associative \u7684\u8bbf\u95ee\u4e2d\u5224\u65ad hit \u548c\u83b7\u53d6 data \u7684\u8fde\u7ebf\u5982\u4e0b\uff1a</p> <p></p> <p>\u6240\u4ee5\uff0c\u4e8b\u5b9e\u4e0a\uff0cdirect mapping \u548c fully associative \u5176\u5b9e\u90fd\u662f set associative \u7684\u7279\u4f8b\uff1adirect mapping \u5176\u5b9e\u5c31\u662f 1-way set associative\uff0c\u800c fully associative \u5c31\u662f n-way set associative\uff0c\u5176\u4e2d n \u662f cache block \u7684\u4e2a\u6570\uff1b\u6211\u4eec\u79f0\u4e00\u7ec4\u7684\u5927\u5c0f\u4e3a associativity\uff0c\u90a3\u4e48\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684 associativity \u5c31\u5206\u522b\u662f 1 \u548c n\u3002</p> <p>\u663e\u7136\uff0c\u5728\u67e5\u770b\u6240\u9700 block \u662f\u5426\u5728 cache \u4e2d\u65f6\uff0c\u9700\u8981\u8bbf\u95ee\u7684 cache block \u4e2a\u6570\u5c31\u7b49\u4e8e associativity\uff0c\u5373\uff1a</p> <p></p> \u4f8b 5.4 Set associative \u7684\u4f4d\u6570\u8ba1\u7b97 <p>\u5df2\u77e5 Cache size is 4K Block, Block size is 4 words, Physical address is 32bits\uff0c\u6c42 direct-mapped, 2-way associative, 4-way associative, fully associative \u65f6 tag \u548c index \u7684\u4f4d\u6570\u3002</p> <p>\u5373\u6c42 associativity \u4e3a 1, 2, 4 \u548c 4096 \u65f6 tag \u548c index \u7684\u4f4d\u6570\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u5728 direct-mapped \u4e2d index \u662f\u7528\u6765\u786e\u5b9a memory block \u653e\u5728\u54ea\u4e2a cache block \u4e2d\u7684\uff0c\u90a3\u4e48\u5728 set-associative \u4e2d\uff0cindex \u5c31\u662f\u7528\u6765\u786e\u5b9a\u653e\u5728\u54ea\u4e2a set \u4e2d\u7684\u3002\u56e0\u6b64\uff0cindex \u7684\u4f4d\u6570\u5c31\u5bf9\u5e94\u7740 set \u7684\u4e2a\u6570\uff0c\u5373\uff1a</p> \\[\\text{index}_\\# = \\log_2(\\text{set}_\\#) = \\log_2\\frac{\\text{cache block}_\\#}{\\text{associativity}}\\] <p>\u56e0\u6b64 associativity \u4e3a 1, 2, 4, 4096 \u65f6\uff0cindex \u7684\u4f4d\u6570\u5206\u522b\u662f 12, 11, 10, 0\u3002</p> <p>\u7531\u4e8e block size \u4e3a 4 words\uff0c\u5373 16 Bytes\uff0c\u56e0\u6b64 byte offset \u9700\u8981 4 \u4f4d\uff08\u6216\u8005\uff0c\u5177\u4f53\u5730\u8bf4\uff0cblock offset 2 \u4f4d\uff0cbyte offset 2 \u4f4d\uff09\u3002\u6240\u4ee5\u5269\u4e0b\u7684\u90fd\u662f tag \u4e86\uff0c\u56e0\u6b64 tag \u7684\u4f4d\u6570\u5206\u522b\u662f 16, 17, 18, 28\u3002</p> 18 - 19 Final <p></p> <p></p> \u7b54\u6848 <p></p>"},{"location":"ZJU_CS/computer_organization/5_cache/#53_measuring_cache_performance","title":"5.3 Measuring Cache Performance","text":"<p>\u518d\u8bf4\u5427</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#54_virtual_machines","title":"5.4 Virtual Machines","text":"<p>\u5148\u4e0d\u5b66\u4e86</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#55_virtual_memory","title":"5.5 Virtual Memory","text":""},{"location":"ZJU_CS/computer_organization/5_cache/#551","title":"5.5.1 \u865a\u62df\u5185\u5b58\u6280\u672f","text":"<p>\u8ba1\u7ec4\u628a main memory \u63cf\u8ff0\u4e3a secondary storage (\u5373 disk) \u7684 \"cache\"\u3002\u6216\u8005\uff0c\u53cd\u8fc7\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u90a3\u4e9b\u5728 main memory \u91cc\u653e\u4e0d\u4e0b\u7684\u5185\u5bb9\u5b58\u5230 disk \u91cc\uff08\u8fd9\u6837\u66f4\u80fd\u7b26\u5408\u6211\u4eec\u719f\u6089\u7684\u201c\u53ef\u6267\u884c\u6587\u4ef6\u5fc5\u987b\u52a0\u8f7d\u5230\u5185\u5b58\u624d\u80fd\u8fd0\u884c\u201d\u7684\u4e00\u8d2f\u8ba4\u77e5\uff09\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a virtual memory\u3002</p> <p>\u865a\u62df\u5185\u5b58\u6280\u672f\u53ef\u4ee5\u8ba9\u591a\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u9ad8\u6548\u3001\u5b89\u5168\u5730\u5171\u4eab\u5185\u5b58\uff0c\u540c\u65f6\u5141\u8bb8\u5355\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u8d85\u8fc7\u5185\u5b58\u5bb9\u91cf\u7684\u5185\u5b58\uff08\u6b63\u5982\u867d\u7136 CPU \u53d6\u6570\u636e\u65f6\u662f\u4ece cache \u4e2d\u53d6\u7684\uff0c\u4f46\u662f\u5b83\u80fd\u8bbf\u95ee\u5230\u7684\u6570\u636e\u7684\u6570\u76ee\u6bd4 cache \u7684\u5bb9\u91cf\u8981\u5927\uff09\u3002\u5728\u8fdc\u53e4\u65f6\u671f\uff0c\u5f88\u591a\u7a0b\u5e8f\u56e0\u4e3a\u9700\u8981\u4f7f\u7528\u8fc7\u5927\u7684\u5185\u5b58\u800c\u65e0\u6cd5\u88ab\u8fd0\u884c\uff1b\u4f46\u73b0\u5728\u7531\u4e8e\u865a\u62df\u5185\u5b58\u6280\u672f\u7684\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u90fd\u4e0d\u6210\u95ee\u9898\u4e86\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5b9e\u9645\u4e0a\u7684 main memory\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a \u7269\u7406\u5185\u5b58, physical memory\uff09\u4e2d\u7684\u5730\u5740\u79f0\u4e3a \u7269\u7406\u5730\u5740, physical addresses\uff1b\u800c\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u7a0b\u5e8f\u5185\u90e8\u4f7f\u7528\u5230\u7684\u5185\u5b58\u53e6\u5916\u7f16\u4e00\u5957\u5730\u5740\uff0c\u79f0\u4e3a \u865a\u62df\u5730\u5740, virtual addresses\uff1b\u865a\u62df\u5185\u5b58\u6280\u672f\u8d1f\u8d23\u4e86\u8fd9\u4e24\u4e2a\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 (address translation\uff0c\u6211\u4eec\u7a0d\u540e\u518d\u8ba8\u8bba\u8f6c\u6362\u7684\u65b9\u5f0f)\uff1a</p> <p></p> <p>\u4ece\u8fd9\u5f20\u56fe\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u51fa\u201c\u865a\u62df\u5185\u5b58\u6280\u672f\u53ef\u4ee5\u5141\u8bb8\u5355\u4e2a\u7a0b\u5e8f\u8bbf\u95ee\u8d85\u8fc7\u7269\u7406\u5185\u5b58\u5927\u5c0f\u9650\u5236\u7684\u5185\u5b58\u201d\u7684\u539f\u56e0\uff0c\u5373\u6709\u4e00\u4e9b\u5185\u5b58\u53ef\u4ee5\u88ab\u4e34\u65f6\u5730\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\uff0c\u5230\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\u518d\u88ab\u653e\u5230 physical memory \u4e2d\uff0c\u5c31\u50cf cache \u505a\u7684\u90a3\u6837\u3002</p> <p>\u4ece\u8fd9\u5f20\u56fe\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6ce8\u610f\u5230 physical memory \u7684\u5b58\u653e\u5e76\u6ca1\u6709\u5206\u7ec4\u7684\u6982\u5ff5\uff0c\u5373\u7528 cache \u7684\u672f\u8bed\u6765\u8bf4\uff0cmain memory \u662f fully-associative \u7684\u3002</p> <p>\u865a\u62df\u5b58\u50a8\u7684\u6280\u672f\u548c cache \u7684\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4e00\u4e9b\u672f\u8bed\u7684\u540d\u5b57\u5e76\u4e0d\u76f8\u540c\u3002\u5bf9\u5e94\u4e8e cache \u4e2d\u7684 block / line\uff0c\u865a\u62df\u5b58\u50a8\u7684\u5185\u5b58\u5355\u5143\u79f0\u4e3a page\uff0c\u5f53\u6211\u4eec\u8981\u8bbf\u95ee\u7684 page \u4e0d\u5728\u4e3b\u5b58\u4e2d\u800c\u662f\u5728\u78c1\u76d8\u91cc\uff0c\u4e5f\u5c31\u662f miss\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e00\u6b21 page fault\u3002</p> Info <p>\u5728\u4e00\u4e9b\u5730\u65b9\uff0cvirtual page \u79f0\u4e3a page\uff0cphysical page \u79f0\u4e3a \u5e27, frame\uff1b\u6211\u4eec\u7684\u8bfe\u672c\u5e76\u672a\u91c7\u7528\u8fd9\u79cd\u79f0\u547c\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u5728\u770b\u5230\u5355\u72ec\u51fa\u73b0\u7684 page \u65f6\uff0c\u5e94\u5f53\u53c2\u8003\u4e0a\u4e0b\u6587\u5224\u65ad\u5b83\u662f virtual \u8fd8\u662f physical\u3002</p> <p>\u5728\u4e00\u4e9b\u5730\u65b9\uff0cvirtual address \u4e5f\u88ab\u79f0\u4e3a logical address\u3002</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#552","title":"5.5.2 \u5982\u4f55\u5b8c\u6210\u6620\u5c04\u5462","text":"<p>\u9996\u5148\u6211\u4eec\u8981\u8003\u8651\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u4e00\u4e2a page \u5e94\u8be5\u6709\u591a\u5927\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8bbf\u95ee\u78c1\u76d8\u76f8\u6bd4\u4e8e\u8bbf\u95ee\u5185\u5b58\u662f\u975e\u5e38\u6162\u7684\uff08\u76f8\u5dee\u5927\u7ea6\u5341\u4e07\u500d\uff09\uff0c\u8fd9\u4e2a\u4e3b\u8981\u65f6\u5ef6\u6765\u81ea\u4e8e\u78c1\u76d8\u8f6c\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u7684\u65f6\u95f4\u82b1\u8d39\uff1b\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u4e00\u6b21\u8bfb\u8fdb\u6765\u591a\u4e00\u70b9\u4ece\u800c\u6765\u5206\u644a\u8fd9\u4e2a\u8bbf\u95ee\u65f6\u95f4\u3002\u5178\u578b\u7684 page \u5927\u5c0f\u4ece 4KiB ~ 64KiB \u4e0d\u7b49\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u8003\u8651\u6620\u5c04\u5173\u7cfb\u3002\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u4e00\u4e2a page \u7684\u5927\u5c0f\u662f 4KiB\uff0c\u90a3\u4e48\u5176\u9875\u5185\u7684\u504f\u79fb page offset \u5c31\u9700\u8981 12 \u4f4d\u6765\u8868\u793a\uff1b\u90a3\u4e48\u7269\u7406\u5730\u5740\u4e2d\u9664\u53bb\u540e 12 \u4f4d\u4ee5\u5916\u524d\u9762\u7684\u90e8\u5206\u5c31\u8868\u5f81\u7740\u5b83\u662f\u5c5e\u4e8e\u54ea\u4e00\u9875\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a physical page number\u3002</p> Info <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0cmemory \u4f5c\u4e3a disk \u7684 \"cache\" \u662f fully-associative \u7684\uff0c\u56e0\u6b64 physical page number \u5176\u5b9e\u5c31\u662f cache \u4e2d\u7684 \"tag\"\uff0c\u800c page offset \u5c31\u662f cache \u4e2d\u7684 \"byte offset\"\uff0cfully-associative \u7684 cache \u5e76\u6ca1\u6709 index \u8fd9\u4e00\u5b57\u6bb5\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 fully-associative \u7684\u5b58\u50a8\u65b9\u5f0f\u5462\uff1f\u6211\u4eec\u5728 cache \u4e2d\u8ba8\u8bba\u8fc7\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u662f\u5931\u6548\u7387\u4f4e\uff0c\u574f\u5904\u662f\u67e5\u8be2\u96be\u5ea6\u5927\u3002\u4f46\u662f\u6211\u4eec\u4e5f\u8ba8\u8bba\u5230\u4e86\uff0cpage fault \u7684\u5f00\u9500\u662f\u975e\u5e38\u5927\u7684\uff0c\u56e0\u6b64\u6bd4\u8f83\u4f4e\u7684 page fault \u7684\u6982\u7387\u76f8\u5bf9\u4e8e\u989d\u5916\u7684\u67e5\u8be2\u6765\u8bf4\u662f\u975e\u5e38\u5212\u7b97\u7684\u3002</p> <p>\u540c\u6837\uff0c\u7531\u4e8e\u8bfb\u5199\u78c1\u76d8\u662f\u975e\u5e38\u6162\u7684\uff0cwrite through \u7684\u7b56\u7565\u5e76\u4e0d\u5408\u9002\uff0c\u56e0\u6b64\u5728 virtual memory \u7684\u6280\u672f\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6 write back \u7684\u65b9\u5f0f\u3002</p> <p>\u800c virtual address \u7684\u5f62\u5f0f\u4e0e\u4e4b\u7c7b\u4f3c\uff0c\u7531\u82e5\u5e72\u4f4d page number \u548c\u82e5\u5e72\u4f4d page offset \u7ec4\u6210\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u627e\u5230 virtual page \u5bf9\u5e94\u7684 physical page\uff0c\u56e0\u6b64\u5f53\u6211\u4eec\u8981\u8bbf\u95ee\u4e00\u4e2a\u865a\u62df\u5730\u5740\u65f6\uff0c\u5c06\u5176 virtual page number \u901a\u8fc7\u8fd9\u79cd translation \u8f6c\u6362\u4e3a physical page number\uff08\u8fd9\u79cd translation \u4e5f\u4f1a\u8d1f\u8d23 page fault \u7684\u5904\u7406\u5e76\u7ed9\u51fa\u6b63\u786e\u7684\u8f6c\u6362\uff09\uff0c\u800c page offset \u8868\u793a\u7684\u662f\u5728\u4e00\u9875\u5185\u7684\u504f\u79fb\uff0c\u4fdd\u6301\u4e0d\u53d8\u5373\u53ef\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u83b7\u5f97\u4e86\u8fd9\u4e2a virtual address \u5bf9\u5e94\u7684 physical address\uff0c\u4e5f\u5c31\u662f\u5b83\u5728\u5b9e\u9645\u7684 main memory \u4e2d\u5b58\u50a8\u7684\u4f4d\u7f6e\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cvirtual page number \u7684\u4f4d\u6570\u6bd4 physical \u7684\u591a\uff1b\u8fd9\u4e5f\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5f15\u5165\u865a\u62df\u5185\u5b58\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u5c31\u662f\u4e3a\u4e86\u4f7f\u7528\u6bd4 main memory \u66f4\u5927\u7684\u5185\u5b58\u3002</p> Info <p>\u5982\u679c\u6211\u4eec\u628a translation \u770b\u6210\u4e00\u4e2a\u51fd\u6570\uff08\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u79cd translation \u786e\u5b9e\u7b26\u5408\u51fd\u6570\u7684\u5b9a\u4e49\uff09\uff0c\u90a3\u4e48\u4e8b\u5b9e\u4e0a virtual page number \u5230 physical page number \u7684\u8f6c\u6362\u662f direct mapped \u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e00\u4e2a virtual page number \u53ef\u4ee5\u786e\u5207\u5730\u627e\u5230 \u4e00\u4e2a physical page number\uff0c\u800c\u4e0d\u662f\u5728\u4e00\u7ec4\u4e2d\u518d\u53bb\u5bfb\u627e\u3002\u56e0\u6b64\uff0cvirtual page number \u5b9e\u9645\u4e0a\u5bf9\u5e94\u4e86 cache \u4e2d\u7684 \"index\"\uff0ctag \u5e76\u4e0d\u9700\u8981\u3002</p> <p>\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u8ba4\u4e3a virtual address \u4e4b\u4e8e physical address \u662f direct mapped \u7684\uff0cvirtual page number \u5bf9\u5e94 cache \u4e2d\u7684 index\uff0cpage offset \u5bf9\u5e94 byte offset\uff1b\u800c physical address \u4e4b\u4e8e secondary storage \u662f fully associative \u7684\uff0cphysical page number \u5bf9\u5e94 cache \u4e2d\u7684 tag\uff0cpage offset \u5bf9\u5e94 byte offset\u3002</p> <p>\uff08\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u6211\u4e2a\u4eba\u5e76\u4e0d\u8ba4\u540c\u628a virtual memory \u548c cache \u7c7b\u6bd4\u8d77\u6765\u3002\uff09</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#553","title":"5.5.3 \u9875\u8868","text":"<p>\u6211\u4eec\u4e0b\u9762\u8ba8\u8bba\u8fd9\u79cd translation \u7684\u5177\u4f53\u65b9\u6848\u3002\u4e4b\u524d\u4e5f\u63d0\u5230\uff0cfully-associative \u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u5c31\u662f\u5982\u4f55\u53bb\u5b9a\u4f4d\u67d0\u4e00\u9879\uff1b\u8fd9\u91cc\u6211\u4eec\u5f15\u5165 page table \u8fd9\u79cd\u7ed3\u6784\uff0c\u5b83\u88ab\u5b58\u653e\u5728 main memory \u4e2d\uff0c\u6bcf\u4e2a\u7a0b\u5e8f\uff08\u5b9e\u9645\u4e0a\u662f\u8fdb\u7a0b\uff0c\u4f46\u662f\u5199\u8bfe\u672c\u7684\u4eba\u597d\u50cf\u73b0\u5728\u5e76\u4e0d\u60f3\u5f15\u5165\u8fd9\u4e2a\u6982\u5ff5\uff09\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684 page table\uff1b\u540c\u65f6\u786c\u4ef6\u4e0a\u6709\u4e00\u4e2a page table register \u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u8fd9\u4e2a\u9875\u8868\u7684\u5730\u5740\u3002</p> <p>\u4f7f\u7528\u9875\u8868\u65f6\uff0c\u6211\u4eec\u6839\u636e virtual page number \u627e\u5230\u5bf9\u5e94 page table entry, PTE \u5728 page table \u4e2d\u7684\u504f\u79fb\uff0c\u7136\u540e\u4e0e page table register \u76f8\u52a0\u5f97\u5230\u5bf9\u5e94 entry \u7684 physical address\uff0c\u4ece\u4e2d\u8bfb\u53d6\u5bf9\u5e94\u7684 entry\u3002\u5176\u5b9e\u5c31\u662f\u8bf4\uff0cpage table \u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c <code>page_table[i]</code> \u8868\u793a\u7b2c <code>i</code> \u4e2a virtual page \u5bf9\u5e94\u7684 physical page number\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a entry \u4e2d\u5305\u542b\u4e86\u4e00\u4e2a valid bit \u548c physical page number\u3002\u5982\u679c valid bit = 1\uff0c\u90a3\u4e48\u8f6c\u6362\u5b8c\u6210\uff1b\u5426\u5219\u89e6\u53d1\u4e86 page fault\uff0chandle \u4e4b\u540e\u518d\u8fdb\u884c\u8f6c\u6362\u3002</p> <p></p> <p>Page fault \u4f1a\u5f15\u53d1\u4e00\u4e2a exception\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a5\u7ba1\u63a7\u5236\uff0c\u5904\u7406\u5b8c\u4e4b\u540e\u518d\u5c06\u63a7\u5236\u4ea4\u8fd8\u7ed9\u8fdb\u7a0b\u3002\u64cd\u4f5c\u7cfb\u7edf\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5728 secondary storage \u4e2d\u627e\u5230\u8fd9\u4e00 page\uff0c\u5c06\u5176\u653e\u5230 main memory \u91cc\uff08\u53ef\u80fd\u9700\u8981\u4e0e\u5f53\u524d\u4e3b\u5b58\u4e2d\u7684\u67d0\u4e2a page \u4ea4\u6362\uff09\uff0c\u7136\u540e\u66f4\u65b0 page table\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5728\u521b\u5efa\u8fdb\u7a0b\u65f6\u5728 disk (\u6216\u8005 flash memory) \u4e0a\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90a3\u4e48\u5927\u7684\u7a7a\u95f4\uff0c\u4ee5\u4fbf\u4e0a\u8ff0\u7684\u4ea4\u6362\uff1b\u8fd9\u4e2a\u7a7a\u95f4\u79f0\u4e3a \u4ea4\u6362\u533a, swap space\u3002\u4e0b\u9762\u7684\u95ee\u9898\u662f\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u5728 swap space \u4e2d\u627e\u5230\u9700\u8981\u7684 page\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c page table entry \u7684 valid bit \u4e3a 0\uff0c\u90a3\u4e48\u540e\u9762\u7684 physical page number \u662f\u6ca1\u6709\u7528\u5230\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5b57\u6bb5\u5b58\u50a8\u5bf9\u5e94 page \u88ab\u4ea4\u6362\u5230\u4e86 disk \u7684\u54ea\u4e2a\u4f4d\u7f6e\uff1b\u6216\u8005\u53e6\u5916\u5f00\u8f9f\u4e00\u4e2a\u7d22\u5f15\u7ed3\u6784\uff0c\u5728\u5176\u4e2d\u8bb0\u5f55\u6bcf\u4e2a virtual page number \u5bf9\u5e94\u7684 disk \u4f4d\u7f6e\u3002\u4f5c\u4e3a\u524d\u8005\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a</p> <p></p> <p>\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u4f1a\u8ddf\u8e2a\u54ea\u4e9b\u8fdb\u7a0b\u548c\u865a\u62df\u5730\u5740\u6b63\u5728\u4f7f\u7528\u54ea\u4e2a\u7269\u7406\u9875\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u8ba9\u4ea4\u6362\u5f15\u53d1\u540e\u7eed page fault \u7684\u6b21\u6570\u5c3d\u53ef\u80fd\u5c11\u3002\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684 LRU, Least Recently Used \u7684\u7b56\u7565\u5904\u7406\u4ea4\u6362\u3002</p> <p>LRU \u7684\u4ee3\u4ef7\u6709\u70b9\u592a\u5927\u4e86\uff0c\u6bd5\u7adf\u5982\u679c\u4f7f\u7528 LRU \u7684\u8bdd\u9700\u8981\u904d\u5386\u6574\u4e2a main memory\u3002\u56e0\u6b64\uff0c\u5f88\u591a\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86 reference bit (\u6216\u8005\u79f0\u4e3a use bit) \u6765\u8fd1\u4f3c\u5730\u5b9e\u73b0 LRU\u3002\u5f53\u4e00\u4e2a page \u88ab\u8bbf\u95ee\u65f6\u8fd9\u4e2a bit \u88ab\u7f6e\u4e3a 1\uff1b\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u671f\u5c06 reference bit \u6e05\u96f6\u3002\u56e0\u6b64\uff0c\u5728\u9700\u8981\u4ea4\u6362\u65f6\uff0c\u53ea\u9700\u8981\u627e\u4e00\u4e2a reference bit \u4e3a 0 \u7684\u5c31\u53ef\u4ee5\u8bf4\u660e\u5b83\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3002</p> <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0cvirtual memory \u4f7f\u7528 write back \u7684\u7b56\u7565\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u4e00\u4e2a dirty bit\u3002</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#554","title":"5.5.4 \u7528\u591a\u7ea7\u9875\u8868\u89e3\u51b3\u9875\u8868\u8fc7\u5927\u7684\u95ee\u9898","text":"<p>\u6211\u4eec\u4e0d\u59a8\u5173\u6ce8\u4e00\u4e0b page table \u6709\u591a\u5927\u3002\u5728\u6211\u4eec\u4e4b\u524d\u7684\u4f8b\u5b50\u4e2d\uff0cvirtual address \u6709 48 bit\uff0c\u6bcf\u4e2a page \u7684\u5927\u5c0f\u4e3a 4KiB\uff0c\u6240\u4ee5 page table entry \u7684\u6570\u76ee\u662f  \\(\\cfrac{2^{48} \\text{ B}}{4\\text{ KiB}} = \\cfrac{2^{48}}{4\\times 2^{10}} = 2^{36}\\)\uff1b\u800c RISC-V \u6bcf\u4e2a\u8868\u9879\u6709 8 Byte\uff0c\u6240\u4ee5 page table \u7684\u603b\u5927\u5c0f\u6765\u5230\u4e86 \\(2^{39}\\text{ B} = 0.5 \\text{TiB}\\)\uff0c\u8fd9\u662f\u6781\u5176\u4e0d\u5408\u7406\u7684\uff1b\u5c24\u5176\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a page table \u7684\u524d\u63d0\u4e0b\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u591a\u7ea7\u9875\u8868\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8ff0\uff0c\u9875\u8868\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c  <code>page_table[i]</code>  \u4e2d\u5b58\u50a8\u7684\u662f page number \u4e3a i \u7684 page \u6240\u5bf9\u5e94\u7684 frame number\u3002\u8003\u8651\u6211\u4eec\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\uff1a</p> <p></p> <p>\u8fd9\u6837\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\u9700\u8981\u4e00\u4e2a\u5b58\u50a8 2p\u00a0\u4e2a\u5143\u7d20\u7684 page table\uff0c\u5373\u9700\u8981\u8fd9\u4e48\u5927\u7684\u8fde\u7eed\u5185\u5b58\uff0c\u8fd9\u662f\u975e\u5e38\u5927\u7684\u6d88\u8017\u3002\u6211\u4eec\u8003\u8651\u5c06 p \u518d\u5206\u4e3a p1\u00a0\u548c p2\u00a0\uff1a</p> <p></p> <p></p> <p>\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4e24\u7ea7\u9875\u8868\uff0c  <code>outer_page_table[i]</code> \u00a0\u4e2d\u5b58\u50a8\u7684\u662f p1\u00a0\u4e3a i \u7684 inner page table\uff0c\u5373 <code>inner_page_table[i][]</code>  \u7684\u57fa\u5730\u5740\uff1b\u800c  <code>inner_page_table[i][j]</code>  \u4e2d\u5b58\u50a8\u7684\u5c31\u662f p1\u00a0\u4e3a i\uff0cp2\u00a0\u4e3a j \u7684 page \u5bf9\u5e94\u7684 frame number\uff0c\u5373 page number \u4e3a p1p2\u00a0\uff08\u6ca1\u6709\u5206\u5272\u65f6\u7684 p\uff09\u5bf9\u5e94\u7684 frame number\u3002</p> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u79f0 p1\u00a0\u4e3a page directory number\u00a0\uff0cp2\u00a0\u4e3a page table number\uff0cd \u4e3a page offset\u3002</p> <p></p> <p>\u8003\u8651\u8fd9\u6837\u505a\u7684\u597d\u5904\uff1ahierarchical paging \u5176\u5b9e\u5c31\u662f\u5bf9\u9875\u8868\u7684\u5206\u9875\uff08page the page table\uff09\u3002\u56e0\u6b64\uff0c\u5b83\u907f\u514d\u4e86 page table \u5fc5\u987b\u5904\u5728\u8fde\u7eed\u5185\u5b58\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u95ee\u9898\u5728 p\u00a0\u6bd4\u8f83\u5927\u65f6\u5c24\u5176\u4e25\u91cd\u3002</p> <p>\u53e6\u5916\uff0c\u8fd9\u6837\u505a\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u3002\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u9875\u8868\u4e0d\u4e00\u5b9a\u4f1a\u5168\u90e8\u4f7f\u7528\uff1b\u5e76\u4e14\u7531\u4e8e\u903b\u8f91\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u7528\u5230\u7684\u9875\u8868\u9879\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u90fd\u6392\u5728\u9875\u8868\u7684\u5934\u90e8\u3002\u56e0\u6b64\u5982\u679c\u6211\u4eec\u91c7\u7528\u4e86\u4e8c\u7ea7\u9875\u8868\uff0c\u90a3\u4e48\u8bb8\u591a\u6392\u5728\u540e\u9762\u7684 inner page table \u5c06\u5b8c\u5168\u4e3a\u7a7a\uff1b\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0d\u7ed9\u8fd9\u4e9b inner page table \u5206\u914d\u7a7a\u95f4\uff0c\u5373\u6211\u4eec\u53ea\u5206\u914d\u6700\u5927\u7684 p1\u00a0\u90a3\u4e48\u591a\u4e2a inner page table\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7a7a\u95f4\u3002\u5373\u4f7f\u5728\u6700\u5dee\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u9875\u8868\u90fd\u88ab\u4f7f\u7528\u4e86\uff0c\u6211\u4eec\u7684\u9875\u8868\u6240\u7528\u7684\u603b\u6761\u76ee\u6570\u4e5f\u53ea\u6709 \\(2^{p_1}+2^{p_1}\\cdot 2^{p_2} = 2^{p_1} + 2^{p_1 + p_2}\\)\u00a0\u4e2a\uff0c\u53ea\u6bd4\u5355\u7ea7\u9875\u8868\u7ed3\u6784\u591a\u4e86 \\(2^{p_1}\\)\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u7684\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u66f4\u591a\u7ea7\u7684\u9875\u8868\u3002\u4f8b\u5982\uff0c64 \u4f4d\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\u5c31\u662f\u4e0d\u591f\u7684\uff0c\u5426\u5219\u5b83\u7684\u9875\u8868\u5c31\u4f1a\u957f\u6210\u8fd9\u6837\uff1a</p> <p></p> <p>\u8fd9\u6837 outer page \u5c31\u4f1a\u8d85\u7ea7\u5927\u3002\u6211\u4eec\u53ef\u4ee5 page the outer page\uff1a</p> <p></p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5efa\u7acb\u4e86\u4e00\u4e2a\u4e09\u7ea7\u9875\u8868\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4e0d\u5fc5\u4f7f\u7528\u5168\u90e8\u7684 64 \u4f4d\uff0c\u5373\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a 64 \u4f4d\u90a3\u4e48\u5de8\u5927\u7684 virtual address space\u3002AMD-64 \u652f\u6301 48-bit \u7684\u865a\u62df\u5730\u5740\uff0cARM64 \u652f\u6301 39-bit \u548c 48-bit \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1a</p> <p></p>"},{"location":"ZJU_CS/computer_organization/5_cache/#555_tlb","title":"5.5.5 \u4f7f\u7528 TLB \u52a0\u5feb\u5730\u5740\u8f6c\u6362","text":"<p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u4f7f\u7528\u9875\u8868\u65f6\uff0c\u6211\u4eec\u6839\u636e virtual page number \u627e\u5230\u5bf9\u5e94 page table entry \u5728 page table \u4e2d\u7684\u504f\u79fb\uff0c\u7136\u540e\u4e0e page table register \u76f8\u52a0\u5f97\u5230\u5bf9\u5e94 entry \u7684 physical address\uff0c\u4ece\u4e2d\u8bfb\u53d6\u5bf9\u5e94\u7684 entry\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u7684\u6548\u7387\u5b58\u5728\u95ee\u9898\u3002\u8981\u8bbf\u95ee virtual address \u5bf9\u5e94\u7684 physical address\uff0c\u6211\u4eec\u9996\u5148\u8981\u6839\u636e page table register \u548c page number \u6765\u627e\u5230\u9875\u8868\u5728\u5185\u5b58\u7684\u4f4d\u7f6e\uff0c\u5e76\u5728\u5176\u4e2d\u5f97\u5230 page \u5bf9\u5e94\u7684 frame number\uff0c\u8fd9\u9700\u8981\u4e00\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u7136\u540e\u6211\u4eec\u6839\u636e frame number \u548c page offset \u7b97\u51fa\u771f\u5b9e\u7684 physical address\uff0c\u5e76\u8bbf\u95ee\u5bf9\u5e94\u7684\u5b57\u8282\u5185\u5bb9\u3002\u5373\uff0c\u8bbf\u95ee\u4e00\u4e2a\u5b57\u8282\u9700\u8981\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff0c\u8fd9\u4f1a\u52a0\u500d\u539f\u672c\u7684\u5185\u5b58\u8bbf\u95ee\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u96be\u4ee5\u63a5\u53d7\u7684\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u7528\u5230\u4e00\u4e2a\u4e13\u7528\u7684\u9ad8\u901f\u67e5\u627e\u786c\u4ef6 cache\uff0c\u8fd9\u91cc\u79f0\u5b83\u4e3a translation look-aside buffer (TLB)\u3002\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f page table \u7684\u4e13\u7528 cache\uff08\u5b83\u771f\u7684\u662f cache\uff1bpage table \u5e76\u4e0d\u662f cache\uff0c\u53ea\u662f\u50cf cache\uff09\uff0c\u5176 associativity \u7684\u8bbe\u8ba1\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u51b3\u5b9a\u3002</p> <p>\u4e0b\u56fe\u662f\u4e00\u4e2a fully-associative \u7684 TLB \u7684\u4f8b\u5b50\uff1b\u7531\u4e8e\u662f fully-associative\uff0c\u5e76\u4e0d\u9700\u8981 index\uff1a</p> <p></p> <p>\u5f53 TLB miss \u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u53bb page table \u67e5\u627e\u5bf9\u5e94\u7684\u9879\uff1b\u5982\u679c\u53d1\u73b0\u5bf9\u5e94\u9879\u662f valid \u7684\uff0c\u90a3\u4e48\u5c31\u628a\u4ed6\u62ff\u5230 TLB \u91cc\uff08\u6b64\u65f6\u88ab\u66ff\u6362\u6389\u7684 TLB entry \u7684 dirty bit \u5982\u679c\u662f 1\uff0c\u4e5f\u8981\u5199\u4f1a page table\uff09\uff1b\u5426\u5219\u5c31\u4f1a\u89e6\u53d1\u4e00\u4e2a page fault\uff0c\u7136\u540e\u5728\u505a\u4e0a\u8ff0\u7684\u4e8b\u3002</p> <p></p>"},{"location":"ZJU_CS/computer_organization/5_cache/#556_memory_protection","title":"5.5.6 Memory Protection","text":"<p>\u6682\u65f6\u4e0d\u60f3\u5b66QWQ</p>"},{"location":"ZJU_CS/computer_organization/5_cache/#56_the_three_cs_cache_miss","title":"5.6 The Three Cs | \u5bf9 cache miss \u7684\u5f52\u7c7b","text":"<p>Danger</p> <p>\u6b64\u5904\u5185\u5bb9\u5b58\u7591</p> <ul> <li>Compulsory misses / Cold-start misses\uff1a\u5bf9\u4e00\u4e2a\u5757\u7b2c\u4e00\u6b21\u8bbf\u95ee\u65f6\u5f15\u53d1\u7684 miss</li> <li>Capacity misses\uff1a\u5728 fully-associative cache \u4e2d\uff0c\u67d0\u4e2a\u5757\u867d\u7136\u8bbf\u95ee\u8fc7\uff0c\u4f46\u662f\u7531\u4e8e\u5bb9\u91cf\u4e0d\u591f\u88ab\u6362\u51fa\u53bb\u4e86\uff0c\u518d\u8bbf\u95ee\u65f6\u5c31 miss \u4e86</li> <li>Conflict misses / Collision misses\uff1a\u5728 set-associative \u6216 direct-mapped cache \u4e2d\uff0c\u67d0\u4e2a\u5757\u867d\u7136\u8bbf\u95ee\u8fc7\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e2a\u7ec4\u91cc\u7684\u5bb9\u91cf\u4e0d\u591f\u88ab\u6362\u51fa\u53bb\u4e86\uff0c\u518d\u8bbf\u95ee\u65f6\u5c31 miss \u4e86</li> </ul>"},{"location":"ZJU_CS/computer_organization/5_cache/#57_using_fsm_to_control_a_simple_cache","title":"5.7 Using FSM to Control a Simple Cache","text":"<p>FSM\uff0cFinite State Machine\uff0c\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff1b\u5176\u5b9e\u5c31\u662f\u6839\u636e\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u8f6c\u6362\u72b6\u6001\u7684\u4e1c\u897f\u3002\u8fd9\u91cc\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\u4ee5\u53ca\u53d1\u751f\u7684\u4e8b\u4ef6\u8f6c\u6362\u72b6\u6001\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e9b\u63a7\u5236\u4fe1\u53f7\u7684\u8f93\u51fa\uff1a</p> <p></p> <p></p>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/","title":"\u5173\u4e8e\u8003\u8bd5","text":""},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#2022","title":"2022 \u671f\u672b\u56de\u5fc6\u5377","text":""},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#_2","title":"\u9009\u62e9\u9898","text":"<ul> <li>\u7ed9\u673a\u5668\u7801\u7ffb\u8bd1\u6210\u6307\u4ee4</li> <li>\u7ed932\u4f4d\u5927\u7acb\u5373\u6570\u5730\u5740\u53d6\u51fa\u5176\u4e2d\u5185\u5bb9\uff08lui+lw\uff09</li> <li>\u6d6e\u70b9\u6570\u52a0\u6cd5\u8fc7\u7a0b\uff1a0.1234510^2 \u548c 0.1234510^(-2) \u5bf9\u9f50\u540e 10 \u7684\u5e42\u6b21\u662f\u591a\u5c11</li> <li>\u56db\u4e2a\u9009\u9879\u9009\u5bf9\u7684\uff1a<ul> <li>PTE \u6570=\u7269\u7406\u9875\u6570</li> <li>\u589e\u52a0 associativity \u53ef\u4ee5\u51cf\u5c11 capa miss</li> <li>async bus \u7684\u6982\u5ff5</li> <li>\u5185\u5b58\u7ed3\u6784\u4e2d\u8017\u65f6\u6700\u591a\u7684\u662f\u6700\u4e0a\u5c42</li> </ul> </li> <li>IEEE 754\uff1a1.355-2.105 \u7528\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8868\u793a</li> <li>\u5355\u5468\u671f\u7684\u65f6\u5019\u65f6\u949f\u5468\u671f\u5b8c\u4e0d\u6210\u54ea\u4e2a\u5de5\u4f5c(\u8bfb\u5e76\u5199\u5185\u5b58)</li> <li>TLB \u6709 tlb \u7684\u65f6\u5019\u5148\u770b\u8c01\uff1atlb pgtbl cache phymem</li> <li>RAID \u662f\u5e72\u5565\u7684</li> <li>cache \u589e\u5927 block size \u53ef\u4ee5\u51cf\u5c11\u54ea\u79cd miss</li> <li>write through \u6307\u4ec0\u4e48</li> <li>6 \u4e2a block\uff0c\u6bcf\u4e2a block 4words\uff0c\u6c42 840 \u5bf9\u5e94\u7684 block \u53f7</li> </ul>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#_3","title":"\u5927\u9898","text":""},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#1","title":"1","text":"<p>(1) \u628a\u8fd96\u4e2a\u6570\u6392\u5e8f\uff1a\u5728\u539f\u7801\u3001\u8865\u7801\u3001\u7b26\u53f7\u8868\u793a\u3001IEEE754 \u4e0b\u7684 0xF0000000\uff0c\u5728\u539f\u7801\u3001\u8865\u7801\u4e0b\u7684 0xFFFFFFFF(2) \u4e0d\u7528\u522b\u7684\u5bc4\u5b58\u5668\uff0c\u4ea4\u6362 x10 \u548c x11(3) \u4e66\u4e0aIndexOutOfBound \u90a3\u4e2a\u4f8b\u5b50\uff0c\u5224\u65ad\u6570\u7ec4\u8d8a\u754c</p>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#2","title":"2 \u5199\u6c47\u7f16","text":"<pre><code>void main(char *s,int *n){\n     char c,ch;\n     c = '3';\n     ch = '5';\n     *n = replace(*s,c,ch);\n}\n\nint replace(char *u,char c,char ch){\n     int i = 0;\n     while(u[i]!=0){\n          if(u[i]==c){\n                u[i]=ch;\n                break;\n          }\n          i++;\n     }\n     return i;\n}\n</code></pre>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#3_cache","title":"3 cache(\u4e0d\u786e\u5b9a\u5b8c\u5168\u4e00\u81f4)","text":"<p>(1) 32B \u7684 cache\uff0c\u4e00\u4e2a entry 8B\uff0c\u76f4\u63a5\u6620\u5c04\uff0cwrite through+write around\uff0c\u7ed9\u51fa\u5982\u4e0b\u8bbf\u95ee\uff1a0 16 48 8 56 16 8 56 32 0 60\uff0c\u95ee\u6bcf\u4e00\u6b21\u7684index, tag, \u662f\u5426hit(\u6ce8\u610f write around) (2) 128B \u7684 cache\uff0c\u4e00\u4e2a entry 16B\uff0c2\u8def\u7ec4\u5173\u8054 LRU\uff0cwrite back\uff0c\u7ed9\u51fa\u8bbf\u95ee\uff1a64 32 64 0 112 64 128 48 240 0\uff0c\u95ee\u7684\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u5916\u52a0\u6700\u540e\u7684dirty block number</p>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#4","title":"4 \u865a\u62df\u5185\u5b58","text":"<p>\u9875\u8868\u5927\u5c0f\uff0c\u4ee5\u53ca\u7ed9\u5b9a\u60c5\u51b5\u95ee TLB \u80fd\u4e0d\u80fd\u5bb9\u7eb3 8MiB \u5185\u5b58</p>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#5","title":"5 \u6d41\u6c34\u7ebf","text":"<p>(1)\u5148\u95ee\u4e86 sub \u7684\u65f6\u5019\u9664\u4e86 ALUOp \u4ee5\u5916\u5404\u4e2a\u4fe1\u53f7\u7684\u503c\u7ed9\u4e86\u4e00\u6bb5\u4ee3\u7801\uff0c\u5e94\u8be5\u662f<code>sub x5,x7,x11  ld x13, 0(x5)  ld x7,0(x2)  add x13,x5,x13  sd x13, 0(x5)</code>\u95ee\uff1a(2) \u5982\u679c\u6ca1\u6709 forward \u548c hazard detection\uff0c\u5728\u4ee3\u7801\u63d2 nop \u4f7f\u5176\u80fd\u6b63\u786e(3) \u5982\u679c\u6709 forward \u6ca1\u6709 hazard detection\uff0c\u5e72(2)\u7684\u4e8b(4) \u5982\u679c\u6709 forward\uff0c\u5199\u524d7\u4e2a\u65f6\u949f\u5468\u671f ForwardA \u548c ForwardB \u7684\u4fe1\u53f7\u503c</p>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#_4","title":"\u5386\u5e74\u5377","text":"<p>https://www.cc98.org/topic/5114223</p> <p>https://www.cc98.org/topic/5118209</p>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#_5","title":"\u5c0f\u8003\u70b9","text":"<ul> <li>Intro &amp; Misc</li> <li>Instructions<ul> <li>machine code</li> <li>addressing method</li> <li>floating point inst</li> </ul> </li> <li>Arithmetic<ul> <li>1's complement, 2's complement</li> <li>sign extensions</li> <li>floating point calc steps</li> <li>what is underflow</li> <li>IEEE 754 </li> </ul> </li> <li>Processor</li> <li>Cache<ul> <li>write-through, etc.</li> </ul> </li> <li>Virtual Memory<ul> <li>TLB</li> <li>usage of dirty bit</li> </ul> </li> <li>I/O<ul> <li>SCSI Bus, etc.</li> <li>memory-mapped I/O system</li> </ul> </li> </ul>"},{"location":"ZJU_CS/computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#_6","title":"\u5927\u9898","text":"<ul> <li>\u7ed9 C \u5199\u6c47\u7f16 [19(14)]</li> <li>Cache \u7b97\u4f4d\u6570 [19(12)]</li> </ul> <p>  D</p>"},{"location":"ZJU_CS/oop/","title":"OOP-Review","text":""},{"location":"ZJU_CS/oop/#1_c","title":"1. C++\u7684\u65b0\u7279\u6027","text":""},{"location":"ZJU_CS/oop/#10","title":"1.0 \u8f93\u5165\u8f93\u51fa","text":"<ul> <li>C++\u53ef\u4ee5\u4f7f\u7528\u8f93\u5165\u8f93\u51fa\u6d41<code>(cin, cout)</code>\u8fdb\u884c\u8f93\u51fa\uff0c\u6bd4\u5982<code>cout&lt;&lt;\"Hello World\";</code> \u9700\u8981\u5305\u542b\u5934\u6587\u4ef6<code>#include&lt;iostream&gt;</code> </li> <li>\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa, \u4f7f\u7528ofstream\u548cifstream</li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;istream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nint main (void) {\n    string line = \"Hello World!\";\n    ofstream outFile(\"output.txt\");\n    outFile &lt;&lt; line &lt;&lt; endl;\n    outFile.close();\n    string inputData;\n    ifstream inFile(\"input.txt\");\n    inFile &gt;&gt; inputData;\n    cout &lt;&lt; inputData &lt;&lt; endl;\n    inFile.close();\n}\n</code></pre>"},{"location":"ZJU_CS/oop/#11","title":"1.1 \u53d8\u91cf\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d","text":"<ul> <li> <p>C++\u4e2d\u7684\u53d8\u91cf\u7c7b\u578b</p> </li> <li> <p>global variable \u5168\u5c40\u53d8\u91cf\uff0c\u5b58\u50a8\u5728\u5168\u5c40\u53d8\u91cf\u533a </p> <ul> <li>\u53ef\u4ee5\u5728\u4e0d\u540c\u7684cpp\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab\uff0c\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57<code>extern</code> \u6765\u4f7f\u7528\u522b\u7684cpp\u6587\u4ef6\u4e2d\u7684\u5168\u5c40\u53d8\u91cf</li> </ul> </li> <li>static global variable \u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u80fd\u5728cpp\u6587\u4ef6\u4e4b\u95f4\u5171\u4eab</li> <li>local variable \u5b58\u50a8\u5728\u6808\u533a\u4e0a</li> <li>static local variable \u9759\u6001\u5c40\u90e8\u53d8\u91cf<ul> <li>\u5b58\u50a8\u5728\u5168\u5c40\u53d8\u91cf\u533a</li> <li>\u5728\u521d\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0ckeeps its value between visit to the function</li> </ul> </li> <li>allocated variable \u52a8\u6001\u5206\u914d\u7684\u53d8\u91cf<ul> <li>\u5b58\u50a8\u5728\u5185\u5b58\u7684\u5806\u7ed3\u6784\u4e2d</li> </ul> </li> </ul> <pre><code>string s=\"hello\";\nstring *ps=&amp;s;\n(*ps).length();\nps-&gt;length();\n</code></pre> <ul> <li>C++\u52a8\u6001\u5185\u5b58\u5206\u914d</li> <li> <p>new\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\u7ed9\u53d8\u91cf\uff0c\u5982<code>new int</code>\uff0c<code>new double[1000]</code></p> <ul> <li> <p>\u4e0emalloc\u7684\u533a\u522b\uff1amalloc\u4e0d\u6267\u884c\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u800cnew\u51fa\u65b0\u7684\u5bf9\u8c61\u7684\u65f6\u5019\u4f1a\u6267\u884c\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570<code>new Class_Name[x]</code>\u4f1a\u6267\u884cx\u6b21Class_Name\u7684\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u5185\u5b58\u6cc4\u6f0f Memory Leak</p> </li> </ul> <pre><code>int *p = new int;\n*p = 123;\np = new int;\n</code></pre> <ul> <li>\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u4e00\u5f00\u59cb\u4e3a\u6307\u9488p\u5206\u914d\u4e86\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5e76\u8d4b\u503c\u4e86123\uff0c\u4f46\u662f\u7b2c\u4e09\u884c\u4ee3\u7801\u53c8\u4e3ap\u8d4b\u503c\u4e86\u4e00\u6bb5\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u539f\u6765\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u50a8\u4e86123\uff0c\u4f46\u662f\u8fd9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5df2\u7ecf\u6ca1\u6709\u6307\u9488\u6307\u5411\uff0c\u56e0\u6b64\u4e0d\u80fd\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u5220\u9664\uff0c\u9020\u6210\u4e86\u5185\u5b58\u6cc4\u6f0f</li> </ul> </li> <li> <p>delete\u7528\u4e8e\u5220\u9664\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58</p> <ul> <li> <p>\u7528\u6cd5 <code>delete p;</code> <code>delete[] p;</code> </p> </li> <li> <p>\u548cnew\u7c7b\u4f3c\uff0cdelete\u4f1a\u6267\u884c\u6240\u5220\u9664\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u80fddelete\u6ca1\u6709\u5b9a\u4e49\u8fc7\u7684\u53d8\u91cf\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u4e0d\u80fddelete\u4e24\u6b21</p> </li> <li> <p>\u4e24\u4e2a\u6307\u9488p1,p2\u6307\u5411\u540c\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679cp1\u88abdelete\u4e86\uff0cp2\u4e5f\u4e0d\u80fd\u8bbf\u95ee\u539f\u672cp1\u6307\u5411\u7684\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u4e3adelete\u5220\u9664\u7684\u662f\u5185\u5b58\u91cc\u7684\u6570\u636e</p> </li> </ul> <pre><code>int *p1 = new int;\nint *p2 = new p1;\n*p2 = 1;\ndelete p1;\ncout&lt;&lt;*p2&lt;&lt;endl; // error!!!\n</code></pre> <ul> <li>\u6307\u5411\u540c\u4e00\u4e2a\u6570\u636e\u7684\u4e24\u4e2a\u6307\u9488\u5b9e\u9645\u4e0a\u53ea\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u540d\u800c\u5df2\uff0cdelete\u5220\u9664\u7684\u4e0d\u662f\u53d8\u91cf\u540d\u800c\u662f\u6570\u636e</li> </ul> </li> </ul>"},{"location":"ZJU_CS/oop/#12_reference","title":"1.2 \u5f15\u7528 Reference","text":"<ul> <li>a new type in C++\uff0c \u76f8\u5f53\u4e8e\u7ed9\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u522b\u540d\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e3a<code>type &amp;refname = name;</code> \u5f15\u7528\u7684\u5bf9\u8c61\u4e0d\u80fd\u662f\u8868\u8fbe\u5f0f</li> <li>\u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b</li> <li>\u4e0d\u80fd\u5b9a\u4e49\u7a7a\u5f15\u7528\uff0c\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58</li> <li>\u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u5c31\u4e0d\u80fd\u66f4\u6539 </li> <li>\u5f15\u7528\u5728\u521b\u5efa\u7684\u65f6\u5019\u5fc5\u987b\u8981\u521d\u59cb\u5316 </li> </ul> <pre><code>int *f(int *x)\n{\n    (*x)++;\n    return x;\n}\n\nint &amp;g(int &amp;x)\n{\n    x++;\n    return x;\n}\n\nint x;\nint &amp;h()\n{\n    return x;\n}\n\nint main()\n{\n    int a=0;\n    f(&amp;a);\n    g(a);\n    h()=16; //\u8fd9\u91cc\u5168\u5c40\u53d8\u91cfx\u88ab\u8d4b\u503c\u4e3a16\n}\n</code></pre>"},{"location":"ZJU_CS/oop/#13_const","title":"1.3 const\u7c7b\u578b","text":"<ul> <li> <p>\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u7c7b\u578b\uff0c\u5982<code>const int x=12345;</code>, const\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u521d\u59cb\u5316\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff0cconst\u578b\u53d8\u91cf\u4e0d\u80fd\u5728\u8fde\u63a5\u5355\u5143\u5916\u4f7f\u7528</p> </li> <li> <p>Run-time constants \u8fd0\u884c\u65f6\u5e38\u91cf</p> </li> <li> <p>\u6570\u7ec4\u7684\u5b9a\u4e49\u65f6\u7684\u957f\u5ea6\u503c\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u5c31\u5df2\u77e5\uff0c\u6240\u4ee5\u5b8f\u5b9a\u4e49\u4e2d\u7684\u5e38\u6570\u53ef\u4ee5\u4f5c\u4e3a\u6570\u7ec4\u957f\u5ea6\uff0c\u800c<code>int n; int a[n]</code>\u8fd9\u6837\u7684\u8bed\u6cd5\u5c31\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u8fc7\u73b0\u5728\u4f3c\u4e4e\u6709\u4e86\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u5728Dev-cpp\u4e2d\u8fd9\u6837\u5199\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1</p> </li> </ul> <pre><code>const int size=100;\nint a[size];//OK\n\nint x;\ncin&gt;&gt;x;\nconst int size=x;\nint a[size];//Error!!!\n</code></pre> <ul> <li> <p>const\u548c\u6307\u9488pointer</p> </li> <li> <p>\u5e38\u91cf\u6307\u9488\uff1a<code>char * const p = \"abc\";</code> \u4e0d\u80fd\u8d4b\u4e88\u8fd9\u4e2a\u6307\u9488\u65b0\u7684\u5730\u5740\uff0c\u76f8\u5f53\u4e8e\u5730\u5740\u662fconst\u7c7b\u578b\uff0c\u4f46\u662fp\u6307\u5411\u7684\u503c\u53ef\u4ee5\u6539\u53d8</p> </li> <li><code>const char* p = \"abc\";</code> \u8fd9\u79cd\u60c5\u51b5\u4e0bp\u6307\u5411\u7684\u662f\u4e00\u4e2aconst char\u7c7b\u578b\u7684\u503c\uff0c\u56e0\u6b64\u6307\u5411\u7684\u503c\u4e0d\u80fd\u6539\u53d8\uff0c\u800c\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u53ef\u4ee5\u6539\u53d8</li> </ul> <pre><code>//\u7b2c\u4e00\u79cd\u60c5\u51b5\u662fq\u662f\u4e00\u4e2aconst\u6307\u9488\uff0c\u4f46\u662fq\u6307\u5411\u7684\u4e1c\u897f\u53ef\u4ee5\u53d8\nchar * const q =\"abc\";\n*q='c'; // OK\nq++; // Error!\n//\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c(*q)\u662f\u4e00\u4e2aconst\u7684\u503c\uff0c\u6b64\u65f6q\u6240\u6307\u5411\u7684\u503c\u4e0d\u80fd\u53d8\nconst char *p = \"abc\";\n*p='c';//error!\n//\u533a\u522b\u8fd9\u4e09\u79cd\u4e1c\u897f\nstring p1=\"zyc\";\nconst string *p=&amp;p1;\nstring const* p=&amp;p1;\nstring *const p=&amp;p1;\n</code></pre> <ul> <li>\u4e0d\u80fd\u5c06const\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u5bf9\u5e94\u7684\u6307\u9488\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u5e26\u6765const\u53d8\u91cf\u7684\u6539\u53d8\uff0c\u8fd9\u662fconst\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u5141\u8bb8\u7684</li> <li>\u53ef\u4ee5\u628a\u975econst\u7c7b\u578b\u7684\u503c\u8d4b\u7ed9\u5bf9\u5e94\u7684const\u578b\u53d8\u91cf\uff0c\u51fd\u6570\u4e2d\u53ef\u4ee5\u5c06\u53c2\u6570\u8bbe\u7f6e\u4e3aconst\u7c7b\u578b\u8868\u660e\u8fd9\u4e9b\u53c2\u6570\u5728\u51fd\u6570\u4e2d\u4e0d\u80fd\u88ab\u4fee\u6539\u539f\u672c\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u8fd4\u56de\u503c\u7c7b\u578b\u8bbe\u7f6e\u4e3aconst\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u4fee\u6539</li> </ul> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nstruct student{\n    int id;\n};\n\nvoid foo(const student *ps)\n{\n    //*ps could not be changed in the function\n    cout&lt;&lt;ps-&gt;id&lt;&lt;endl;\n    cout&lt;&lt;(*ps).id&lt;&lt;endl;\n}\n\nvoid bar(const student &amp;s)\n{\n    //s could not be changed in the function\n    cout&lt;&lt;s.id&lt;&lt;endl;\n}\n\nint main()\n{\n    student s;\n    s.id=2;\n    foo(&amp;s);\n    return 0;\n}\n</code></pre> <ul> <li><code>char * s=\"Hello World!\";</code>\u5b9e\u8d28\u4e0a\u662f<code>const char *</code>\u7c7b\u578b\uff0c\u4e0d\u8981\u53bb\u4fee\u6539s\u4e2d\u7684\u5185\u5bb9\uff0c\u8fd9\u662f\u4e00\u79cd\u672a\u5b9a\u4e49\u7684\u884c\u4e3a(undefined behavior)\uff0c\u5e94\u8be5\u5199\u6210 <code>char s[]=\"Hello World!\";</code> </li> </ul> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    const char *s1=\"Hello World\";\n    const char *s2=\"Hello World\";\n\n    cout&lt;&lt;(void*)s1&lt;&lt;endl;\n    cout&lt;&lt;(void*)s2&lt;&lt;endl;\n    return 0;\n    //\u8f93\u51fa\u7684\u7ed3\u679c\u662fs1\u548cs2\u7684\u5730\u5740\uff0c\u4ed6\u4eec\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\n}\n</code></pre>"},{"location":"ZJU_CS/oop/#2_class","title":"2. \u7c7b class","text":""},{"location":"ZJU_CS/oop/#20","title":"2.0 \u7c7b\u7684\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>C++\u4e2d\u7684\u5bf9\u8c61=\u5c5e\u6027+\u64cd\u4f5c objects=attributes+operations\uff0c\u5bf9\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u800c\u8a00\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4efb\u4f55\u5bf9\u8c61\u90fd\u6709\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u7a0b\u5e8f\u5c31\u662f\u4e00\u7cfb\u5217\u5bf9\u8c61\u4e92\u76f8\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\u6765\u5b8c\u6210\u529f\u80fd</li> <li>C++\u7684\u7c7b\u5305\u542b\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570</li> <li>C++\u4e2dclass\u7684\u5b9a\u4e49\uff0c\u5177\u4f53\u5b9e\u73b0\u548c\u8c03\u7528\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u6587\u4ef6<ul> <li>\u5934\u6587\u4ef6header\u662f\u5177\u4f53\u5b9e\u73b0\u548c\u8c03\u7528\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u7c7b\u7684\u5b9a\u4e49\u9700\u8981\u75281\u4e2a\u5934\u6587\u4ef6</li> </ul> </li> <li><code>::</code>\u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u7c7b\u4e2d\u7684\u5185\u5bb9</li> </ul>"},{"location":"ZJU_CS/oop/#21","title":"2.1 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570","text":"<ul> <li> <p>constructor \u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u540d\u548c\u7c7b\u7684\u540d\u5b57\u76f8\u540c\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e9b\u53c2\u6570\u7528\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5728\u7c7b\u7684\u5bf9\u8c61\u88ab\u5b9a\u4e49\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570</p> </li> <li>default constructor \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u53c2\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7684\u6784\u9020\u51fd\u6570</li> <li> <p>\u521d\u59cb\u5316\u5217\u8868\uff1a\u5728\u51fd\u6570\u7b7e\u540d\u540e\u9762\uff0c\u5927\u62ec\u53f7\u4e4b\u524d\u76f4\u63a5\u5bf9\u7c7b\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c</p> <ul> <li>const\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u53ea\u80fd\u7528\u521d\u59cb\u5316\u5217\u8868 </li> <li>\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u521d\u59cb\u5316\u9636\u6bb5\u548c\u51fd\u6570\u6267\u884c\u9636\u6bb5\uff0c\u4f1a\u5148\u6267\u884c\u521d\u59cb\u5316\u5217\u8868\u91cc\u7684\u8d4b\u503c\uff0c\u5728\u8fdb\u5165\u51fd\u6570\u4e3b\u4f53\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c</li> </ul> </li> <li> <p>Destructor \u6790\u6784\u51fd\u6570</p> </li> <li> <p>\u6790\u6784\u51fd\u6570\u7684\u51fd\u6570\u540d\u662f\u7c7b\u540d\u524d\u9762\u52a0\u4e00\u4e2a~\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u5728\u7c7b\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u7684\u65f6\u5019\u4f1a\u88ab\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528 </p> </li> <li> <p>function overloading \u51fd\u6570\u91cd\u8f7d\uff1a</p> </li> <li> <p>\u51fd\u6570\u540d\u76f8\u540c\u800c\u53c2\u6570\u7684\u4e2a\u6570\u548c\u7c7b\u578b\u4e0d\u540c\u7684\u51e0\u4e2a\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u4e0d\u540c\u7684\u6784\u9020\u51fd\u6570\u6765\u89e3\u51b3\u4e0d\u540c\u60c5\u51b5\u4e0b\u7684\u6784\u9020</p> </li> <li> <p>default value\uff1a\u7f3a\u7701\u503c\uff0c\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u8868\u4e2d\u76f4\u63a5\u58f0\u660e\u4e00\u4e9b\u53c2\u6570\u7684\u503c\uff0c\u4f46\u662f\u5fc5\u987b\u8981\u4ece\u53f3\u5f80\u5de6\uff0c\u5f53\u4f20\u5165\u7684\u53c2\u6570\u7f3a\u7701\u65f6\u51fd\u6570\u9ed8\u8ba4\u5c06\u5df2\u7ecf\u58f0\u660e\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u7684\u503c</p> </li> <li> <p>constant object\u5e38\u91cf\u5bf9\u8c61</p> </li> <li> <p>\u9700\u8981\u52a0const\u58f0\u660e\uff0c\u5728\u58f0\u660e\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u8fd9\u4e2a\u5bf9\u8c61\u5185\u90e8\u53d8\u91cf\u7684\u503c</p> </li> <li>\u4f1a\u6709\u4e00\u4e9b\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528</li> <li> <p>\u5728\u6210\u5458\u51fd\u6570\u53c2\u6570\u8868\u540e\u9762\u52a0const\u53ef\u4ee5\u6210\u4e3aconst\u578b\u6210\u5458\u51fd\u6570\uff0cconst\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u503c</p> <ul> <li> <p>const\u58f0\u660e\u5199\u5728\u51fd\u6570\u7684\u5f00\u5934\u8868\u793a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662fconst</p> </li> <li> <p>const\u58f0\u660e\u5199\u5728\u51fd\u6570\u7b7e\u540d\u7684\u672b\u5c3e\u8868\u793a\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u53d8\u91cf\uff0c\u88ab\u79f0\u4e3a\u5e38\u6210\u5458\u51fd\u6570 </p> </li> <li> <p>\u4f46\u662f\u5982\u679c\u662f\u6210\u5458\u53d8\u91cf\u4e2d\u6709\u6307\u9488\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u88ab\u4fee\u6539</p> </li> <li> <p>const\u7c7b\u578b\u7684\u51fd\u6570\u548c\u975econst\u7c7b\u578b\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a</p> <pre><code>class A {\npublic:\n    void foo() {\n        cout &lt;&lt; \"A::foo();\" &lt;&lt; endl;\n    }\n    void foo() const {\n        cout &lt;&lt; \"A::foo() const;\" &lt;&lt; endl;\n    }\n};\n\nint main()\n{\n    A a;\n    a.foo(); //\u8bbf\u95ee\u7684\u662f\u975econst\u7c7b\u578b\u7684foo\n    const A aa;\n    aa.foo(); //\u8bbf\u95ee\u7684\u662fconst\u7c7b\u578b\u7684foo\n    return 0;\n}\n</code></pre> </li> <li> <p>const\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\u7684\u4f7f\u7528\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>non-const\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8c03\u7528const\u7c7b\u578b\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff0c\u800cconst\u7c7b\u578b\u53ef\u4ee5\u8bbf\u95ee</li> <li>const\u7c7b\u578b\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u7684\u503c</li> <li>\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\u7684\u65f6\u5019\uff0cconst\u7c7b\u578b\u7684\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u8c03\u7528non-const\uff0c\u800c\u975econst\u7c7b\u578b\u7684\u5bf9\u8c61\u4f18\u5148\u8c03\u7528non-const\u7684\u6210\u5458\u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709non-const\u518d\u8c03\u7528const\u7c7b\u578b\u7684</li> </ul> </li> </ul> </li> <li> <p>copy constructor\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u628a\u4e00\u4e2a\u5bf9\u8c61\u76f4\u63a5\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e00\u822c\u7684\u5f62\u5f0f\u4e3a<code>class_name(const class_name &amp; copy_class_var</code>)`\uff0c\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e92\u76f8\u8d4b\u503c</p> </li> <li> <p>\u5982\u679c\u5b9a\u4e49\u53d8\u91cf\u65f6\u76f4\u63a5\u7ed9\u53d8\u91cf\u7528\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\uff0c\u8c03\u7528\u7684\u5c31\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u662f\u5b9a\u4e49\u4e4b\u540e\u518d\u8d4b\u503c\uff0c\u5c31\u662f\u8c03\u7528\u4e86\u91cd\u8f7d\u4e4b\u540e\u7684\u7b49\u53f7\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e00\u6bb5\u4ee3\u7801</p> <p><pre><code>class A {\n  A() {}  \n  A(const A&amp; a) {}\n  A&amp; operator=(const A&amp; a) {}\n};\n\nint main()\n{\n    A a; \n    A b = a; //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    A c;\n    c = a; //\u8c03\u7528\u91cd\u8f7d\u4e4b\u540e\u7684\u7b49\u53f7\n}\n</code></pre> - C++\u4e2d\u7684\u62f7\u8d1d\uff1a\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d  - \u6d45\u62f7\u8d1d\uff1a\u5728\u539f\u6765\u5df2\u6709\u7684\u5185\u5b58\u4e2d\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e00\u6bb5\u5185\u5b58 - \u6bd4\u5982<code>string s1=\"zyc\"; string s2(s1);</code>  \u5c31\u662f\u4e00\u79cd\u6d45\u62f7\u8d1d  - \u6df1\u62f7\u8d1d\uff1a\u5206\u914d\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u590d\u5236\u5bf9\u5e94\u7684\u503c\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e00\u5757\u5185\u5b58 - \u7f3a\u7701\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u8fdb\u884c\u7684\u90fd\u662f\u6d45\u62f7\u8d1d   - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u533a\u522b - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5728\u5bf9\u8c61\u88ab\u521b\u5efa\u7684\u65f6\u5019\u8c03\u7528\u7684\u3001 - \u8d4b\u503c\u8fd0\u7b97\u7b26\u53ea\u80fd\u4f7f\u7528\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u8d4b\u503c\u4e4b\u524d\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5df2\u7ecf\u88ab\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u6784\u9020\u51fa\u6765\u4e86   - \u4f8b\u5982</p> </li> </ul> <pre><code>#include&lt;cstring&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nstruct Person{\n    char *name;\n    Person(const char *s){\n        name=new char[strlen(s)+1];\n        strcpy(name,s);\n    }\n    ~Person(){\n        delete[] name;\n    }\n}\n\n//\u4e0d\u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4e00\u79cd\u65b9\u5f0f\nPerson bar(const char *s)\n{\n    cout&lt;&lt;\"in bar()\"&lt;&lt;endl;\n    return Person(s);\n}\n\nint main()\n{\n    Person p1(\"Trump\");\n    Person p2=p1;\n    cout&lt;&lt;(void *)p1.name&lt;&lt;endl;\n    cout&lt;&lt;(void *)p2.name&lt;&lt;endl; //\u4f1a\u53d1\u73b0\u8f93\u51fa\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u8bf4\u660e\u6307\u9488\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e5f\u8fdb\u884c\u4e86copy,\u82e5\u8981\u907f\u514d\u5219\u5e94\u8be5\u81ea\u5df1\u7f16\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n\n    return 0;\n}\n</code></pre>"},{"location":"ZJU_CS/oop/#22_static","title":"2.2 static\u7c7b\u578b","text":"<ul> <li>\u7c7b\u4e2d\u7684\u6210\u5458(\u53d8\u91cf\u548c\u51fd\u6570)\u5206\u4e3a\u4e24\u79cd</li> <li>\u9759\u6001\u6210\u5458\uff1a\u5728\u7c7b\u5185\u6240\u6709\u5bf9\u8c61\u4e4b\u95f4\u5171\u4eab</li> <li>\u5b9e\u4f8b\u6210\u5458\uff1a\u53ea\u80fd\u5728\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u4e2d\u8c03\u7528</li> <li> <p>\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u5b9e\u4f8b\u6210\u5458 </p> </li> <li> <p>\u4e4b\u524d\u5df2\u7ecf\u8bb2\u5230\u4e86static\u7c7b\u578b\u7684\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u6709\u6548\uff0c\u4e0d\u80fd\u901a\u8fc7extern\u8de8\u6587\u4ef6\u8c03\u7528\uff0c\u800c\u51fd\u6570\u4e2d\u7684static\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u4e4b\u540e\u518d\u8c03\u7528\u8be5\u51fd\u6570\u8fd9\u4e2astatic\u7c7b\u578b\u7684\u53d8\u91cf\u4fdd\u6301\u4e0a\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c </p> </li> </ul> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nclass A{\n    piblic:\n        A() {cout&lt;&lt;\"A::A()\"&lt;&lt;endl;}\n        ~A(){cout&lt;&lt;\"A::~A()\"&lt;&lt;endl;}\n}\n\nvoid f(int n)\n{\n    if(x&gt;10)\n        static A a;\n    cout&lt;&lt;\"f()\"&lt;&lt;endl;\n}\nint main()\n{\n    cout&lt;&lt;\"start\"&lt;&lt;endl;\n    f(1);\n    f(11);\n    return 0;\n}\n//\u6b64\u65f6\u53ea\u6709\u5728\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6a\u624d\u4f1a\u88ab\u6784\u9020\n//\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\uff0cA\u7684\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21\n</code></pre> <ul> <li>\u7c7b\u4e2d\u7684static</li> <li> <p>\u7c7b\u4e2d\u5b9a\u4e49\u7684static\u7c7b\u578b\u7684\u53d8\u91cf\u662f\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u5176\u503c\u4f1a\u5728\u8fd9\u4e2a\u7c7b\u7684\u6240\u6709\u6210\u5458\u4e4b\u95f4\u5171\u4eab </p> <ul> <li>non-const\u7c7b\u578b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u7684\u5916\u9762\u8fdb\u884c\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1a</li> </ul> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass A {\npublic:\n    static int count;\n    A() {\n        A::count++;\n    }\n};\n\nint A::count = 0; // \u5728\u7c7b\u7684\u5916\u90e8\u8d4b\u503c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u8bf4\u660estatic\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u660eA::\uff0c\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\n\nint main()\n{\n    A* array = new A[100];\n    cout&lt;&lt;A::count&lt;&lt;endl;\n}\n</code></pre> <ul> <li>const\u7c7b\u578b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u4f5c\u4e3a\u7c7b\u5185\u5171\u4eab\u7684\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e5f\u9700\u8981\u5728\u7c7b\u7684\u5916\u90e8\u8fdb\u884c\u5b9a\u4e49\uff0c\u6b64\u65f6\u8981\u5199\u51fa\u5173\u952e\u5b57const\uff0c\u5e76\u4e14\u8fd9\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u662f\u4e0d\u80fd\u88ab\u6539\u53d8\u7684</li> </ul> </li> <li> <p>\u9759\u6001\u6210\u5458\u51fd\u6570\uff1a</p> <ul> <li>\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u5b9a\u4e49\u4e2d\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u666e\u901a\u7684\u6210\u5458\u53d8\u91cf</li> <li>\u9700\u8981\u5728\u51fd\u6570\u5b9a\u4e49\u4e4b\u524d\u52a0static\u5173\u952e\u5b57</li> </ul> </li> </ul>"},{"location":"ZJU_CS/oop/#23_inline_function","title":"2.3 Inline Function\u5185\u8054\u51fd\u6570","text":"<ul> <li>\u9700\u8981\u5728\u51fd\u6570\u540d\u524d\u9762\u52a0\u5173\u952e\u5b57<code>inline</code> </li> <li>\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u671f\u4f1a\u88ab\u7f16\u8bd1\u5668\u5728\u8c03\u7528\u5904\u76f4\u63a5\u6269\u5c55\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u51cf\u5c11\u8fd0\u884c\u65f6\u8c03\u7528\u51fd\u6570\u7684cost</li> <li>\u5185\u8054\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u51fd\u6570\u4e3b\u4f53\u90e8\u5206\u90fd\u5e94\u8be5\u5199\u5728\u5934\u6587\u4ef6\u4e2d</li> <li>\u672c\u8d28\u662f\u7a7a\u95f4\u6362\u65f6\u95f4</li> <li>class\u4e2d\u7684\u51fd\u6570\u90fd\u662f\u9ed8\u8ba4inline\u7684</li> <li>an inline function is expanded in place, like a preprocessormacro, so the overhead of the function call is eliminated,\u4e0d\u9700\u8981\u51fd\u6570\u8c03\u7528\u4ea7\u751f\u7684\u5f00\u9500\uff0c\u7531\u7f16\u8bd1\u5668\u76f4\u63a5\u4f18\u5316\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u4f7f\u5f97\u9700\u8981\u7f16\u8bd1\u7684\u4ee3\u7801\u91cf\u589e\u5927(\u867d\u7136\u5199\u7684\u4eba\u662f\u770b\u4e0d\u51fa\u6765\u7684)\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u51cf\u5c0f\u51fd\u6570\u8c03\u7528\u65f6\u7684\u5f00\u9500\uff0c\u4e00\u822c\u5728\u51fd\u6570\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528</li> </ul>"},{"location":"ZJU_CS/oop/#24_inheritance","title":"2.4 \u7ee7\u627fInheritance","text":"<ul> <li> <p>composition \u7ec4\u5408\uff1a\u628a\u5176\u4ed6\u7684\u7c7b\u4f5c\u4e3a\u81ea\u5df1\u7684\u6210\u5458\u53d8\u91cf</p> </li> <li> <p>Inheritance\uff1a\u4ece\u57fa\u7c7b\u4e2d\u7ee7\u627f\u751f\u6210\u6d3e\u751f\u7c7b</p> </li> <li>\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570 </li> <li>\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u7684private\u7684\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u548c\u53d8\u91cf</li> <li> <p>\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570</p> <ul> <li> <p>\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u6d3e\u751f\u7c7b\u5728\u88ab\u6784\u9020\u7684\u65f6\u5019\u4f1a\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u7684\u65f6\u5019\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570</p> </li> <li>\u5982\u679c\u6d3e\u751f\u7c7b\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u5219\u76f4\u63a5\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570</li> <li>\u5982\u679c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u4e86\u6784\u9020\u51fd\u6570\uff0c\u5728\u6267\u884c\u4e4b\u524d\u4f1a\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u9009\u62e9\u8c03\u7528\u57fa\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570</li> </ul> <pre><code>class A {\npublic:\n    int i;\n    A(int ii = 0): i(ii) {\n        cout&lt;&lt;\"A(): \"&lt;&lt;i&lt;&lt;endl;\n    }\n};\n\nclass B: public A {\npublic:\n    int i;\n    A a;\n    B(int ii = 0): i(ii) {\n        cout&lt;&lt;\"B(): \"&lt;&lt;i&lt;&lt;endl;\n    }\n};\n\nint main()\n{\n    B b(100);\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u5f53\u7ee7\u627f\u548c\u7ec4\u5408\u4e24\u79cd\u60c5\u51b5\u540c\u65f6\u51fa\u73b0\u65f6\uff0c\u5148\u6784\u9020\u57fa\u7c7b\uff0c\u518d\u6784\u9020\u6d3e\u751f\u7c7b\u4e2d\u7ec4\u5408\u7684\u5176\u4ed6\u7c7b\uff0c\u518d\u6784\u9020\u6d3e\u751f\u7c7b\uff0c\u6790\u6784\u7684\u65f6\u5019\u7c7b\u4f3c </p> </li> <li> <p>Base class is always constructed first</p> </li> <li>\u5c31\u7b97\u7ec4\u5408\u7684\u7c7b\u5728\u521d\u59cb\u5316\u5217\u8868\u6216\u8005\u6784\u9020\u51fd\u6570\u4e2d\u6ca1\u6709\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0cC++\u7f16\u8bd1\u5668\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u8fd9\u4e2a\u7c7b\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570</li> <li> <p>\u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u5bf9\u57fa\u7c7b\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\uff0c\u6b64\u65f6\u5982\u679c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u6309\u7167\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u6267\u884c</p> </li> <li> <p>\u4ecd\u7136\u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5<code>object.Base::function()</code> </p> </li> <li>class\u548cstruct\u7684\u533a\u522b\uff1aclass\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570\u9ed8\u8ba4\u4e3aprivate\uff0cstruct\u4e2d\u7684\u51fd\u6570\u9ed8\u8ba4\u4e3apublic</li> <li>\u8bbf\u95ee\u63a7\u5236</li> <li>public\uff1a\u6240\u6709\u60c5\u51b5\u4e0b\u53ef\u89c1</li> <li>protected\uff1a\u53ef\u4ee5\u88ab\u81ea\u5df1/\u6d3e\u751f\u7c7b\u548c\u53cb\u5143\u51fd\u6570\u8bbf\u95ee</li> <li>private\uff1a\u5bf9\u4e8e\u81ea\u5df1\u548c\u53cb\u5143\u51fd\u6570\u53ef\u89c1</li> <li>\u7ee7\u627f\u7684\u79cd\u7c7b\uff1apublic\uff0cprivate\uff0cprotected\u7ee7\u627f\uff0c\u7ee7\u627f\u4e4b\u540e\u7684\u57fa\u7c7b\u53d8\u91cf\u7684\u8bbf\u95ee\u63a7\u5236\u53d6\u539f\u672c\u7c7b\u578b\u548c\u7ee7\u627f\u7c7b\u578b\u4e2d\u8f83\u4e25\u683c\u7684</li> <li>\u53ef\u4ee5\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u628a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8f6c\u5316\u4e3a\u57fa\u7c7b\u7684\u5bf9\u8c61</li> </ul> </li> </ul>"},{"location":"ZJU_CS/oop/#25_friend","title":"2.5 \u53cb\u5143 friend","text":"<ul> <li>\u53cb\u5143\u51fd\u6570</li> <li>\u5728\u7c7b\u4e2d\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u51fd\u6570\u6216\u8005\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a<code>friend</code></li> <li>\u53ef\u4ee5\u4f7f\u8fd9\u4e9b\u51fd\u6570\u62e5\u6709\u8bbf\u95ee\u7c7b\u5185private\u548cprotected\u7c7b\u578b\u7684\u53d8\u91cf\u548c\u51fd\u6570\u7684\u6743\u9650</li> <li>\u53cb\u5143\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u88ab\u79f0\u4e3a\u662f\u53cb\u5143\u7c7b\uff0c\u6574\u4e2a\u7c7b\u548c\u6240\u6709\u7684\u6210\u5458\u90fd\u662f\u53cb\u5143</li> <li>\u53cb\u5143\u51fd\u6570\u672c\u8eab\u4e0d\u662f\u90a3\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u51fd\u6570\u7b7e\u540d\u91cc\u4e0d\u9700\u8981<code>className::</code>\u6765\u8868\u793a\u662f\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u76f4\u63a5\u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u5373\u53ef</li> </ul> <pre><code>class A {\nprivate:\n    int val;\npublic:\n    A(int value): val(value) {\n        cout&lt;&lt;\"A()\"&lt;&lt;endl;\n    }\n    friend void showValue(A a);\n};\n\nvoid showValue(A a)\n{\n    cout&lt;&lt;a.val&lt;&lt;endl;\n}\n</code></pre>"},{"location":"ZJU_CS/oop/#26","title":"2.6 \u591a\u6001\u548c\u865a\u51fd\u6570","text":"<ul> <li> <p>\u591a\u6001 Polymorphism</p> </li> <li> <p>\u540c\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u4ea7\u751f\u4e0d\u540c\u6548\u679c</p> </li> <li> <p>\u5bf9\u4e8e\u7ee7\u627f\u4f53\u7cfb\u4e2d\u7684\u67d0\u4e00\u7cfb\u5217\u540c\u540d\u51fd\u6570\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u4f1a\u8c03\u7528\u4e0d\u7528\u7684\u51fd\u6570</p> </li> <li> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\u6709\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u5173\u7cfb\uff0c\u4f9d\u7136\u4f1a\u6839\u636e\u53d8\u91cf\u7c7b\u578b\u6765\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u6bd4\u5982\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass A{\npublic:\n    virtual void foo() {\n        cout&lt;&lt;1&lt;&lt;endl;\n    }\n};\n\nclass B: public A{\npublic:\n    virtual void foo() {\n        cout&lt;&lt;2&lt;&lt;endl;\n    }\n};\n\nint main()\n{\n    A a;\n    B b;\n    a.foo();\n    b.foo();\n    return 0;\n}\n</code></pre> <ul> <li>\u6b64\u65f6\u8fd0\u884c\u7684\u7ed3\u679c\u662f1\u548c2\uff0c\u5373A\u578b\u7684\u53d8\u91cf\u7684foo\u51fd\u6570\u662f\u57fa\u7c7b\u4e2d\u7684\uff0cB\u7c7b\u578b\u7684\u53d8\u91cf\u7684foo\u51fd\u6570\u662f\u6d3e\u751f\u7c7b\u4e2d\u7684</li> </ul> </li> <li> <p>\u9759\u6001\u94fe\u63a5</p> </li> <li> <p>\u51fd\u6570\u7684\u8c03\u7528\u5728\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u4e4b\u524d\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86</p> </li> <li> <p>\u5bf9\u4e8e\u50cf\u4e0b\u9762\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u57fa\u7c7b\u7684\u6307\u9488(\u5f15\u7528)\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86\u57fa\u7c7b\u4e2d\u4e5f\u5b58\u5728\u7684\u540c\u540d\u51fd\u6570\uff0c\u6700\u7ec8\u8c03\u7528\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u540c\u540d\u51fd\u6570</p> <pre><code>class Shape {\n   protected:\n      int width, height;\n   public:\n      Shape( int a=0, int b=0)\n      {\n         width = a;\n         height = b;\n      }\n      int area()\n      {\n         cout &lt;&lt; \"Parent class area :\" &lt;&lt;endl;\n         return 0;\n      }\n};\nclass Rectangle: public Shape{\n   public:\n      Rectangle( int a=0, int b=0):Shape(a, b) { }\n      int area ()\n      { \n         cout &lt;&lt; \"Rectangle class area :\" &lt;&lt;endl;\n         return (width * height); \n      }\n};\nclass Triangle: public Shape{\n   public:\n      Triangle( int a=0, int b=0):Shape(a, b) { }\n      int area ()\n      { \n         cout &lt;&lt; \"Triangle class area :\" &lt;&lt;endl;\n         return (width * height / 2); \n      }\n};\n\nint main( )\n{\n   Shape *shape;\n   Rectangle rec(10,7);\n   Triangle  tri(10,5);\n   shape = &amp;rec;\n   shape-&gt;area();\n   shape = &amp;tri;\n   shape-&gt;area();\n   return 0;\n}\n</code></pre> </li> <li> <p>\u865a\u51fd\u6570 Virtual Function</p> </li> <li> <p>\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u591a\u6001\u7684\u673a\u5236\uff0c\u6838\u5fc3\u7406\u5ff5\u662f\u901a\u8fc7\u57fa\u7c7b\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u51fd\u6570</p> <ul> <li>\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a\u52a8\u6001\u94fe\u63a5 </li> <li> <p>\u7528\u4e8e\u533a\u5206\u6d3e\u751f\u7c7b\u4e2d\u548c\u57fa\u7c7b\u540c\u540d\u7684\u65b9\u6cd5\u51fd\u6570\uff0c\u9700\u8981\u5c06\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7c7b\u578b\u58f0\u660e\u4e3avirtual</p> </li> <li> <p>\u57fa\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u4e3a\u865a\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5bf9\u8c61\u91ca\u653e\u9519\u8bef </p> </li> <li>\u7eaf\u865a\u51fd\u6570\uff1a<code>virtual int func() = 0;</code> \u8868\u660e\u8be5\u51fd\u6570\u6ca1\u6709\u4e3b\u4f53\uff0c\u57fa\u7c7b\u4e2d\u6ca1\u6709\u7ed9\u51fa\u6709\u610f\u4e49\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u9700\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u8fdb\u884c\u6269\u5c55</li> </ul> </li> <li> <p>override\u8bed\u6cd5\uff1a\u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u7528override\u5173\u952e\u5b57\u6765\u58f0\u660e\uff0c\u8868\u793a\u5bf9\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u91cd\u8f7d</p> </li> <li> <p>\u865a\u51fd\u6570\u9700\u8981\u501f\u52a9\u6307\u9488\u548c\u5f15\u7528\u8fbe\u5230\u591a\u6001\u7684\u6548\u679c</p> <ul> <li>\u5982\u679c\u57fa\u7c7b\u6307\u9488/\u5f15\u7528\u6307\u5411\u57fa\u7c7b\uff0c\u90a3\u5c31\u6b63\u5e38\u8c03\u7528\u57fa\u7c7b\u7684\u76f8\u5173\u6210\u5458\u51fd\u6570</li> <li>\u5982\u679c\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u5219\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570</li> <li>\u6d3e\u751f\u7c7b\u6307\u9488\u4e0d\u80fd\u6307\u5411\u57fa\u7c7b</li> </ul> <pre><code>class A{\npublic:\n    virtual void foo(){\n        cout&lt;&lt;\"A\"&lt;&lt;endl;\n    }\n};\n\nclass B{\npublic:\n    virtual void foo(){\n        cout&lt;&lt;\"B\"&lt;&lt;endl;\n    }\n}\n\nint main()\n{\n  A *a=new B();\n    a-&gt;foo(); //\u7ed3\u679c\u4e3aB\n  return 0;\n}\n</code></pre> </li> <li> <p>\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a\u865a\u51fd\u6570\u8868 virtual table </p> <ul> <li>\u6bcf\u4e00\u4e2a\u6709\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u4f1a\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8be5\u7c7b\u7684\u4efb\u4f55\u5bf9\u8c61\u4e2d\u90fd\u5b58\u653e\u7740\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff0c\u865a\u51fd\u6570\u8868\u4e2d\u5217\u51fa\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740 </li> <li>\u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u4e00\u7cfb\u5217\u865a\u51fd\u6570\u7684\u6307\u9488</li> <li>\u865a\u51fd\u6570\u7684\u8c03\u7528\u9700\u8981\u7ecf\u8fc7\u865a\u51fd\u6570\u8868\u7684\u67e5\u8be2\uff0c\u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u4e0d\u9700\u8981\u7ecf\u8fc7\u865a\u51fd\u6570\u8868</li> <li>\u865a\u51fd\u6570\u8868\u5728\u4ee3\u7801\u7684\u7f16\u8bd1\u9636\u6bb5\u5c31\u5b8c\u6210\u4e86\u6784\u9020</li> <li>\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u4e00\u4e2a\u6307\u9488<code>__vptr</code> </li> <li>\u591a\u6001\u7684\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u88ab\u7f16\u8bd1\u6210\u4e00\u7cfb\u5217\u6839\u636e\u57fa\u7c7b\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b58\u653e\u7684\u865a\u51fd\u6570\u8868\u7684\u5730\u5740\uff0c\u5728\u4ece\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u5730\u5740\u8c03\u7528\u5bf9\u5e94\u7684\u865a\u51fd\u6570</li> <li>\u4e8b\u5b9e\u4e0a\u865a\u51fd\u6570\u4f1a\u7ed9\u51fd\u6570\u52a0\u4e0a\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5360\u75284\u5b57\u8282</li> </ul> </li> <li> <p>\u63a5\u53e3(C++\u62bd\u8c61\u7c7b)</p> </li> <li> <p>\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7c7b\u5e94\u8be5\u6709\u7684\u529f\u80fd\u548c\u884c\u4e3a\uff0c\u4f46\u662f\u4e0d\u7528\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9e\u73b0</p> </li> <li>\u53ef\u4ee5\u4f7f\u7528\u7eaf\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\uff0c\u6bd4\u5982\uff1a</li> </ul> <pre><code>class Shape {\npublic:\n    virtual double getArea() = 0;\n    Shape(int a, int b): length(a), width(b) {}\nprotected:\n    int length;\n    int width;\n};\n\nclass Rectangle: public Shape {\npublic:\n    double getArea() {\n        return length * width;\n    }\n};\n\nclass Triangle: public Shape {\npublic:\n    double getArea() {\n        return length * width / 2;\n    }\n};\n</code></pre>"},{"location":"ZJU_CS/oop/#27","title":"2.7 \u865a\u51fd\u6570\u4f7f\u7528\u603b\u7ed3","text":"<ul> <li>\u60c5\u51b51\uff1a\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u90fd\u4e0d\u662fvirtual</li> <li>\u6b64\u65f6\u5bf9\u4e8e\u57fa\u7c7b\u7684\u5bf9\u8c61\u548c\u57fa\u7c7b\u7684\u6307\u9488\uff0c\u6267\u884c\u7684\u5c31\u662f\u57fa\u7c7b\u7684f\uff0c\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6267\u884c\u7684\u5c31\u662f\u6d3e\u751f\u7c7b\u7684f</li> </ul> <pre><code>class A {\npublic:\n    void f() {\n        cout &lt;&lt; \"af\" &lt;&lt; endl;\n    }\n};\n\nclass B: public A {\npublic:\n    void f() {\n        cout &lt;&lt; \"bf\" &lt;&lt;endl;\n    }\n};\n\nint main()\n{\n    A a;\n    B b;\n    a.f();\n    b.f();\n    A* pb = &amp;b;\n    pb-&gt;f();\n}\n</code></pre> <ul> <li> <p>\u60c5\u51b52\uff1a\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u662f\u865a\u51fd\u6570\uff1a\u65e0\u5f71\u54cd\uff0c\u548c1\u4e00\u6a21\u4e00\u6837</p> </li> <li> <p>\u60c5\u51b53\uff1a\u57fa\u7c7b\u4e2d\u7684\u662f\u865a\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u6ce8\u660e\u662f\u865a\u51fd\u6570\uff1a\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u548c\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6267\u884c\u7684\u90fd\u662f\u6d3e\u751f\u7c7b\u7684\u51fd\u6570f\uff0c\u57fa\u7c7b\u7684\u5bf9\u8c61\u548c\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6267\u884c\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u51fd\u6570f</p> </li> <li> <p>\u603b\u7ed3\uff1a</p> </li> <li> <p>virtual\u7684\u865a\u51fd\u6570\u5173\u952e\u5b57\u662f\u5411\u4e0b\u8d1f\u8d23\u7684\uff0c\u6d3e\u751f\u7c7b\u58f0\u660evirtual\u5bf9\u57fa\u7c7b\u65e0\u4efb\u4f55\u5f71\u54cd</p> </li> <li> <p>\u5bf9\u4e8e\u6307\u9488\u548c\u5f15\u7528\u800c\u8a00</p> <ul> <li>\u4e0d\u662f\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u51fd\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u548c\u5f15\u7528\u7684\u53d8\u91cf\u7c7b\u578b(\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u57fa\u7c7b\uff0c\u6d3e\u751f\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b)</li> <li>\u662f\u865a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u8c03\u7528\u51fd\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u548c\u5f15\u7528\u6307\u5411\u7684\u53d8\u91cf\u7c7b\u578b(\u6307\u5411\u57fa\u7c7b\u8c03\u7528\u57fa\u7c7b\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u8c03\u7528\u6d3e\u751f\u7c7b)</li> <li>\u5f53\u7136\u5982\u679c\u6d3e\u751f\u7c7b\u91cc\u6ca1\u6709\u65b0\u7684\u540c\u540d\u51fd\u6570\uff0c\u90a3\u4e48\u6267\u884c\u7684\u90fd\u662f\u57fa\u7c7b\u91cc\u7684</li> <li>\u8981\u6ce8\u610f\u6d3e\u751f\u7c7b\u6307\u9488\u4e0d\u80fd\u76f4\u63a5\u6307\u5411\u57fa\u7c7b\u7684\u5bf9\u8c61</li> <li>\u5982\u679c\u865a\u51fd\u6570\u91cc\u8fd8\u9700\u8981\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u8c03\u7528\u7684\u89c4\u5219\u4e5f\u548c\u4e0a\u9762\u7684\u4e00\u6837\uff0c\u6bd4\u5982\u4e0b\u9762\u6709\u4e2a\u5386\u5e74\u5377\u4e0a\u9762\u7684\u795e\u9898\uff1a</li> </ul> </li> <li> <p>\u5386\u5e74\u5377\u4e0a\u7684\u4e00\u4e2a\u9898\u76ee\uff1a\u5199\u51fa\u7a0b\u5e8f\u7684\u8f93\u51fa</p> <pre><code>class B {\npublic:\n    void f() {\n        cout &lt;&lt; \"bf\" &lt;&lt; endl;\n    }\n    virtual void vf() {\n        cout &lt;&lt; \"bvf\" &lt;&lt; endl;\n    }\n    void ff() {\n        vf();\n        f();\n    }\n    virtual void vff() {\n        vf();\n        f();\n    }\n};\n\nclass D: public B {\npublic:\n    void f() {\n        cout &lt;&lt; \"df\" &lt;&lt; endl;\n    }\n    void ff() {\n        f();\n        vf();\n    }\n    void vf() {\n        cout &lt;&lt; \"dvf\" &lt;&lt;endl;\n    }\n};\n\nint main()\n{\n    D d;\n    B* pb = &amp;d;\n    pb-&gt;f();\n    pb-&gt;ff();\n    pb-&gt;vf();\n    pb-&gt;vff();\n}\n</code></pre> <ul> <li> <p>\u8fd9\u9053\u9898\u7684\u5206\u6790\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> </li> <li> <p>\u9996\u5148\u8c03\u7528f\uff0c\u800cf\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u6839\u636e\u6307\u9488\u7c7b\u578b\u8c03\u7528\u4e86B\u4e2d\u7684f\uff0c\u8f93\u51fabf</p> </li> <li>\u518d\u8c03\u7528ff\uff0c\u56e0\u4e3aff\u4e5f\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u8c03\u7528B\u4e2d\u7684ff\uff0cB\u4e2d\u7684ff\u8c03\u7528\u4e86vf\u548cf\uff0c\u800cvf\u662f\u865a\u51fd\u6570\uff0cB\u7c7b\u578b\u6307\u9488\u6307\u5411\u7684\u662fD\uff0c\u6240\u4ee5\u8c03\u7528D\u4e2d\u7684vf\uff0c\u8f93\u51fadvf\uff0c\u8c03\u7528f\u5219\u548c\u4e0a\u9762\u4e00\u6837\u8f93\u51fabf</li> <li>\u518d\u8c03\u7528vf\uff0c\u7531\u4e8evf\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u8981\u8c03\u7528D\u4e2d\u7684vf\uff0c\u8f93\u51fadvf</li> <li>\u518d\u8c03\u7528vff\uff0c\u867d\u7136\u662f\u865a\u51fd\u6570\u4f46\u662fD\u4e2d\u6ca1\u6709\u5b9a\u4e49\u540c\u540d\u51fd\u6570\uff0c\u6240\u4ee5\u8c03\u7528B\u4e2d\u7684vff\uff0cvff\u4e2d\u8c03\u7528vf\u548cf\uff0c\u540c2\u4e00\u6837\u8f93\u51fa\u7684\u662fdvf\u548cbf</li> <li>\u6240\u4ee5\u6700\u7ec8\u7684\u8f93\u51fa\u662f</li> </ul> <pre><code>bf\ndvf\nbf\ndvf\ndvf\nbf\n</code></pre> <ul> <li>\u8fd9\u9053\u9898\u6db5\u76d6\u4e86\u5355\u7ee7\u627f\u865a\u51fd\u6570\u7684\u6240\u6709\u60c5\u51b5</li> </ul> </li> <li> <p>\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6d3e\u751f\u7c7b\u4e2d\u7684\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u540c\u540d\u51fd\u6570</p> </li> <li> <p>\u6bd4\u5982\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u4e2d</p> </li> </ul> <pre><code>class A {\npublic:\n    virtual void f(int i) {\n        cout &lt;&lt; 1 &lt;&lt;endl;\n    }\n};\n\nclass B: public A {\npublic:\n    virtual void f(double i) {\n        cout &lt;&lt; 2 &lt;&lt; endl;\n    }\n};\n\nint main()\n{\n    A* pa = new B;\n    pa-&gt;f(1);\n    return 0;\n}\n</code></pre> <ul> <li>\u8fd9\u91cc\u8f93\u51fa\u7684\u7ed3\u679c\u662f1\uff0c\u4e8b\u5b9e\u4e0a\u4e24\u4e2af\u5e76\u4e0d\u6784\u6210\u865a\u51fd\u6570\u7684\u5173\u7cfb\uff0c\u56e0\u4e3af(1)\u4e2d1\u662fint\u7c7b\u578b\uff0c\u6240\u4ee5\u4f18\u5148\u8c03\u7528\u4e86\u5bf9int\u5339\u914d\u5ea6\u9ad8\u7684</li> <li>\u4e8b\u5b9e\u4e0a\u5982\u679c\u662ff(1.1)\u8f93\u51fa\u7684\u7ed3\u679c\u4ecd\u7136\u662f1\uff0c\u5e76\u4e14CLion\u4f1a\u63d0\u793a\u53c2\u6570\u9700\u8981\u7c7b\u578b\u8f6c\u6362</li> <li>\u4e8b\u5b9e\u4e0a\u4e24\u4e2af\u4e0d\u6784\u6210\u865a\u51fd\u6570\u7684\u591a\u6001\u5173\u7cfb\uff0c\u6240\u4ee5\u8c03\u7528\u54ea\u4e2a\u5e76\u4e0d\u770b\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u662f\u770b\u6307\u9488\u672c\u8eab\u7684\u7c7b\u578b\uff01</li> </ul>"},{"location":"ZJU_CS/oop/#28","title":"2.8 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362","text":""},{"location":"ZJU_CS/oop/#281_static_cast","title":"2.8.1 static_cast","text":"<ul> <li><code>static_cast</code> \u7528\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\uff0c\u6709\u8fd9\u6837\u51e0\u79cd\u7528\u6cd5</li> <li>\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u6bd4\u5982char\u8f6c\u6362\u6210int</li> <li>\u5728\u7c7b\u7684\u4f53\u7cfb\u4e2d\u628a\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u8fdb\u884c\u8f6c\u6362<ul> <li>\u5411\u4e0a\u8f6c\u6362\u662f\u5b89\u5168\u7684</li> <li>\u5411\u4e0b\u8f6c\u6362\u662f\u4e0d\u5b89\u5168\u7684</li> <li>\u53ea\u80fd\u5728\u6709\u76f8\u4e92\u8054\u7cfb\u7684\u7c7b\u578b\u4e2d\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\uff0c\u4e0d\u4e00\u5b9a\u5305\u542b\u865a\u51fd\u6570</li> </ul> </li> <li>\u628a\u7a7a\u6307\u9488\u8f6c\u6362\u6210\u76ee\u6807\u7c7b\u578b\u7684\u7a7a\u6307\u9488</li> <li> <p>\u628a\u4efb\u4f55\u7c7b\u578b\u8f6c\u6362\u6210void\u7c7b\u578b</p> </li> <li> <p>static_cast\u4e0d\u80fd\u8f6c\u6362\u6389\u6709const\u7684\u53d8\u91cf</p> </li> </ul>"},{"location":"ZJU_CS/oop/#282_const_cast","title":"2.8.2 const_cast","text":"<ul> <li><code>const_cast</code> \u53ef\u4ee5\u5f3a\u5236\u53bb\u6389const\u7684\u5e38\u6570\u7279\u6027\uff0c\u53ea\u80fd\u7528\u5728\u6307\u9488\u548c\u5f15\u7528\u4e0a\u9762</li> <li>\u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61</li> <li>\u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u4e3a\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u4ecd\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61</li> <li>\u6765\u770b\u4e00\u6bb5\u4ee3\u7801</li> <li>\u6253\u5370\u51fa\u6765\u7684\u7ed3\u679c\u662fa=10\uff0c\u800cp\u548cq\u6240\u6307\u5411\u7684\u503c\u662f20\uff0ca\u7684\u5730\u5740\u548cpq\u6307\u5411\u7684\u5730\u5740\u662f\u4e00\u6837\u7684</li> <li>\u4e8b\u5b9e\u4e0a\u7b2c\u4e94\u884c\u7684\u8d4b\u503c\u662f\u4e00\u79cd\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u6700\u597d\u522b\u7528</li> </ul> <pre><code>const int a = 10;\nconst int *p = &amp;a;\nint *q;\nq = const_cast&lt;int *&gt;(p);\n*q = 20;\ncout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; *p &lt;&lt; \" \" &lt;&lt; *q &lt;&lt; endl;\ncout &lt;&lt; &amp;a &lt;&lt; \" \" &lt;&lt; p &lt;&lt; \" \" &lt;&lt; q &lt;&lt; endl;\n</code></pre>"},{"location":"ZJU_CS/oop/#283_reinterpret_cast","title":"2.8.3 reinterpret_cast","text":"<ul> <li><code>reinterpret_cast</code> \u4e3b\u8981\u6709\u4e09\u79cd\u7528\u9014</li> <li>\u6539\u53d8\u6307\u9488\u6216\u8005\u5f15\u7528\u7684\u7c7b\u578b</li> <li>\u5c06\u6307\u9488\u6216\u8005\u5f15\u7528\u8f6c\u6362\u6210\u4e3a\u8db3\u591f\u957f\u7684\u6574\u5f62</li> <li>\u5c06\u6574\u578b\u7f16\u7a0b\u6307\u9488\u6216\u8005\u5f15\u7528\u7c7b\u578b</li> </ul>"},{"location":"ZJU_CS/oop/#284_dynamic_cast","title":"2.8.4 dynamic_cast","text":"<ul> <li> <p>\u8ddf\u5176\u4ed6\u51e0\u4e2a\u4e0d\u540c\uff0c\u5176\u4ed6\u51e0\u4e2a\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\uff0c<code>dynamic_cast</code> \u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684</p> </li> <li> <p>\u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362</p> </li> <li> <p>\u5982\u679c\u6210\u529f\u7684\uff0c\u5c06\u8fd4\u56de\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u8f6c\u6362\u5931\u8d25\u7684\u8bdd\u4f1a\u8fd4\u56deNULL</p> </li> <li> <p>\u8f6c\u6362\u65f6\u57fa\u7c7b\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1</p> </li> <li> <p>\u539f\u56e0\u662f\u865a\u51fd\u6570\u8868\u540d\u8fd9\u4e2a\u7c7b\u5e0c\u671b\u53ef\u4ee5\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\uff0c\u8fd9\u6837\u8f6c\u6362\u624d\u6709\u610f\u4e49</p> </li> <li> <p>\u5728\u7c7b\u7684\u5411\u4e0a\u8f6c\u6362\u7684\u65f6\u5019\uff0c\u548c<code>static_cast</code> \u6548\u679c\u4e00\u6837\uff0c\u4f46\u662f\u5411\u4e0b\u8f6c\u6362\u7684\u65f6\u5019\u6bd4<code>static_cast</code> \u66f4\u5b89\u5168\uff0c\u56e0\u6b64\u8981\u6c42\u4e5f\u66f4\u9ad8</p> </li> <li> <p>\u6765\u770b\u4e00\u6bb5\u4ee3\u7801</p> </li> </ul> <pre><code>int main()\n{\n    A a;\n    B b;\n    A *ap = &amp;a;\n    if(dynamic_cast&lt;B*&gt;(ap)) {\n        cout &lt;&lt; \"OK1\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"Fail\" &lt;&lt; endl;\n    }\n    if(static_cast&lt;B*&gt;(ap)) {\n        cout &lt;&lt; \"OK2\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"Fail\" &lt;&lt; endl;\n    }\n    ap = &amp;b;\n    if(dynamic_cast&lt;B*&gt;(ap)) {\n        cout &lt;&lt; \"OK3\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"Fail\" &lt;&lt; endl;\n    }\n    if(static_cast&lt;B*&gt;(ap)) {\n        cout &lt;&lt; \"OK4\" &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"Fail\" &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u8fd0\u884c\u7684\u7ed3\u679c\u662f\u7b2c\u4e00\u4e2a\u5931\u8d25\uff0c\u5176\u4ed6\u7684\u90fd\u6210\u529f</li> <li>\u63a8\u6d4b\u5bfc\u81f4\u8fd9\u4e2a\u7ed3\u679c\u7684\u539f\u56e0\uff1a<ul> <li>\u5f53ap\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u53d8\u6210\u6d3e\u751f\u7c7b\u662f\u53ef\u4ee5\u6210\u529f\u7684</li> <li>\u5f53ap\u6307\u5411\u57fa\u7c7b\u7684\u65f6\u5019\uff0c<code>dynamic_cast</code> \u8f6c\u6362\u662f\u5426\u6210\u529f\u53d6\u51b3\u4e8e\u6307\u9488\u6307\u5411\u7684\u7c7b\u578b\u548c\u5373\u5c06\u8f6c\u6362\u7684\u7c7b\u578b\u662f\u4e0d\u662f\u4e00\u6837\uff0c\u4e0d\u4e00\u6837\u5c31\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de\u4e00\u4e2aNULL\uff0c\u800cstatic\u662f\u53ef\u4ee5\u6210\u529f\u7684</li> <li>\u5176\u5b9e\u662f\u66f4\u5b89\u5168\u7684\u673a\u5236\u5bfc\u81f4dynamic\u7684\u68c0\u67e5\u66f4\u591a\uff0c\u8981\u6c42\u66f4\u9ad8</li> </ul> </li> </ul>"},{"location":"ZJU_CS/oop/#3","title":"3. \u91cd\u8f7d","text":""},{"location":"ZJU_CS/oop/#30","title":"3.0 \u51fd\u6570\u7684\u91cd\u8f7d","text":"<ul> <li> <p>\u591a\u4e2a\u540c\u540d\u51fd\u6570\u7684\u53c2\u6570\u7684\u4e2a\u6570\u6216\u8005\u7c7b\u578b\u4e0d\u76f8\u540c\uff0c\u8fd9\u51e0\u4e2a\u51fd\u6570\u5c31\u6784\u6210\u91cd\u8f7d\u5173\u7cfb</p> </li> <li> <p>\u4e0d\u80fd\u4ec5\u901a\u8fc7\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u5f62\u6210\u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u4e8b\u5b9e\u4e0a\u51fd\u6570\u91cd\u8f7d\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u5173\u7cfb\u4e0d\u5927</p> </li> <li> <p>\u8c03\u7528\u7684\u65f6\u5019\u4f18\u5148\u8c03\u7528\u5339\u914d\u5ea6\u6700\u9ad8\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u91cd\u8f7d\u7684\u4f18\u5148\u7ea7\u662f\uff1a</p> <ul> <li>\u5148\u627e\u5b8c\u5168\u5339\u914d\u7684\u666e\u901a\u51fd\u6570</li> <li>\u518d\u627e\u6a21\u677f\u51fd\u6570</li> <li>\u518d\u627e\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u51fd\u6570</li> </ul> </li> <li> <p>\u5f53\u6ca1\u6709\u53c2\u6570\u7c7b\u578b\u6070\u597d\u5339\u914d\u7684\u91cd\u8f7d\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c06\u53c2\u6570\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362\u4e4b\u540e\u6765\u5bfb\u627e\u53ef\u4ee5\u8c03\u7528\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u6b64\u65f6\u5982\u679c\u91cd\u8f7d\u51fd\u6570\u6709\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\uff0c\u5c31\u4f1a\u4ea7\u751ferror</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nvoid foo(int a, int b)\n{\n    cout&lt;&lt;1&lt;&lt;endl;\n}\n\nvoid foo(double a, double b)\n{\n    cout&lt;&lt;2&lt;&lt;endl;\n}\n\nint main()\n{\n    foo(1, 2);\n    foo(1.0, 2.0);\n    foo(1, 2.0); // \u8fd9\u4e00\u884c\u662f\u6709\u8bed\u6cd5\u9519\u8bef\u7684\uff01\n}\n</code></pre> </li> </ul>"},{"location":"ZJU_CS/oop/#31","title":"3.1 \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d","text":"<ul> <li> <p>\u91cd\u8f7d\u7684\u4e00\u4e9b\u57fa\u672c\u6027\u8d28</p> </li> <li> <p>\u5927\u90e8\u5206\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d</p> </li> <li><code>.    ::   ?:</code>\u4e4b\u7c7b\u7684\u8fd0\u7b97\u7b26\u4e0d\u80fd\u91cd\u8f7d\uff0csizeof\uff0ctypeid\uff0cstatic\u4e4b\u7c7b\u7684\u5173\u952e\u5b57\u4e0d\u80fd\u91cd\u8f7d </li> <li>\u4e0d\u80fd\u91cd\u8f7d\u4e0d\u5b58\u5728\u7684\u8fd0\u7b97\u7b26</li> <li>\u5fc5\u987b\u5bf9\u4e8e\u6574\u4e2aclass\u6216\u8005enumeration type\u8fdb\u884c\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d</li> <li> <p>\u91cd\u8f7d\u4e4b\u540e\u7684\u8fd0\u7b97\u7b26\u4f9d\u7136\u4fdd\u6301\u539f\u6765\u4e00\u6837\u7684\u8fd0\u7b97\u4f18\u5148\u7ea7\u548c\u64cd\u4f5c\u6570\u7684\u4e2a\u6570 </p> </li> <li> <p>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u57fa\u672c\u8bed\u6cd5</p> </li> <li> <p>\u5728\u7c7b\u5b9a\u4e49\u4e2d\u5bf9member function\u8fdb\u884c\u91cd\u8f7d<code>return_type class_name::operator\u8fd0\u7b97\u7b26(parameters)</code> \u6b64\u65f6\u53c2\u6570\u4e3a\u5bf9\u5e94\u8fd0\u7b97\u7b26\u6240\u9700\u53c2\u6570-1</p> </li> <li>\u5bf9\u5916\u90e8\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d<code>\u8fd4\u56de\u503c\u7c7b\u578b operator\u8fd0\u7b97\u7b26(\u53c2\u6570\u8868)</code> \u6b64\u65f6\u53c2\u6570\u4e2a\u6570\u548c\u5bf9\u5e94\u7684\u8fd0\u7b97\u7b26\u7684\u6240\u9700\u4e2a\u6570\u76f8\u540c<ul> <li>\u5982\u679c\u8981\u8bbf\u95ee\u7c7b\u7684private\u5185\u5bb9\uff0c\u9700\u8981\u58f0\u660e\u8fd9\u4e2a\u91cd\u8f7d\u51fd\u6570\u4e3a\u53cb\u5143 </li> <li>\u5355\u76ee\u8fd0\u7b97\u7b26\u4e00\u822c\u58f0\u660e\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u53cc\u76ee\u8fd0\u7b97\u7b26\u4e00\u822c\u4f5c\u4e3a\u5916\u90e8\u7684\u51fd\u6570</li> <li>[ ] ( ) -&gt; \u7b49\u8fd0\u7b97\u7b26\u5fc5\u987b\u4f5c\u4e3a\u6210\u5458\u51fd\u6570</li> </ul> </li> <li>\u524d\u7f00\u7684++\u548c\u540e\u7f00\u7684++<ul> <li>\u533a\u522b\uff1a\u540e\u7f00\u7684++\u53c2\u6570\u8868\u662f\u6709\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u7684</li> </ul> </li> </ul> <pre><code>Integer&amp; operator++();  //prefix++\nInteger operator++(int x); //postfix++\n</code></pre> <ul> <li> <p>\u6bd4\u8f83\u5927\u5c0f\u5173\u7cfb\u7684\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u7684\u590d\u7528\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u91cf</p> </li> <li> <p>\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u8f6c\u6362 </p> </li> <li> <p>\u4f8b\u5982 <code>Rational::operator double() const {};</code></p> </li> <li>\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff1a<ul> <li>Single-argument constructors</li> <li>implicit type conversion operators</li> <li>\u907f\u514d\u9690\u5f0f\u8f6c\u6362\u7684\u65b9\u6cd5\uff1a\u628a\u590d\u5236\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3aexplicit\uff0c\u8868\u793a\u4e0d\u80fd\u8fdb\u884c\u9690\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362</li> </ul> </li> </ul>"},{"location":"ZJU_CS/oop/#32","title":"3.2 \u8f93\u5165\u8f93\u51fa\u6d41\u7684\u91cd\u8f7d","text":"<ul> <li>stream\u7684\u79cd\u7c7b</li> <li>Text stream \u7528ASCII\u7801\u6765\u89e3\u6790\uff0c\u5305\u62ecfiles\u548ccharacter buffers</li> <li>Binary stream \u4e8c\u8fdb\u5236\u6570\u636e\uff0cno translation</li> <li>stream\u7684\u7c7b\u578b\uff1a</li> <li>cin\u6807\u51c6\u8f93\u5165\uff0c\u4f7f\u7528\u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26&gt;&gt;\uff0c\u5728C++\u6807\u51c6\u5e93\u7684istream\u4e2d\u5b9a\u4e49</li> <li>cout\u6807\u51c6\u8f93\u51fa\uff0c\u4f7f\u7528\u6d41\u63d2\u5165\u8fd0\u7b97\u7b26&lt;&lt;\uff0c\u5728ostream\u4e2d\u5b9a\u4e49</li> <li>cerr\u6807\u51c6\u9519\u8bef\u63d0\u793a(unbuffered error)</li> <li> <p>clog\u6807\u51c6\u9519\u8bef\u63d0\u793a(buffered error)</p> </li> <li> <p>\u5bf9&gt;&gt;\u548c&lt;&lt;\u7684\u91cd\u8f7d</p> </li> <li>Has to be a 2-argument free function</li> </ul> <pre><code>istream&amp; operator&gt;&gt;(istream&amp; is, T&amp; obj){\n    //special way to read in obj\n    return is;\n    //Return an istream&amp; for chaining\n}\n//&lt;&lt;\u7684\u91cd\u8f7d\u65b9\u5f0f\u4e0e\u4e4b\u7c7b\u4f3c\nostream&amp; operator&lt;&lt;(ostream&amp; os, T&amp; obj){\n    return os;\n}\n</code></pre> <ul> <li>\u63a7\u5236\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u4f7f\u7528\u5934\u6587\u4ef6<code>#include&lt;iomanip&gt;</code></li> <li>\u5176\u4ed6\u7684\u8f93\u5165\u8f93\u51fa\u7684\u65b9\u5f0f\uff1a</li> <li><code>int get()</code> \u652f\u6301\u5355\u4e2a\u5b57\u7b26\u8bfb\u5165<ul> <li>Returns the next character in the stream</li> <li>Returns EOF if no characters left</li> </ul> </li> <li><code>get(char *buf, int limit, char delim='\\n')</code></li> <li><code>getline(char *buf, int limit, char delim='\\n')</code></li> </ul>"},{"location":"ZJU_CS/oop/#4","title":"4. \u6a21\u677f","text":""},{"location":"ZJU_CS/oop/#41_namespace","title":"4.1 namespace \u547d\u540d\u7a7a\u95f4","text":"<ul> <li> <p>\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u6765\u5212\u5206\u5168\u5c40\u7684\u5404\u7c7b\u7c7b\u540d\u53ef\u4ee5\u907f\u514d\u540d\u5b57\u7684\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u91cc\u5b9a\u4e49\u76f8\u540c\u7684\u53d8\u91cf\u540d</p> </li> <li> <p>\u5728\u5f15\u7528\u7684\u65f6\u5019\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\u7684\u9650\u5236\u7b26\u5c31\u53ef\u4ee5\u4e86</p> </li> <li>\u6216\u8005\u4e5f\u53ef\u4ee5\u7528<code>using namespace xxx</code> \u6765\u8bf4\u660e\u7a0b\u5e8f\u4e2d\u63a5\u4e0b\u6765\u7528\u54ea\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u4e1c\u897f</li> </ul> <pre><code>namespace space1{\n    string name = \"randomstar\";\n}\n\nnamespace space2{\n    string name = \"ToyamaKasumi\";\n}\n\nint main()\n{\n    cout&lt;&lt;space1::name&lt;&lt;endl;\n    using namespace space2;\n    cout&lt;&lt;name&lt;&lt;endl;\n}\n</code></pre>"},{"location":"ZJU_CS/oop/#42_template","title":"4.2 template\u7f16\u7a0b","text":"<ul> <li> <p>\u6a21\u677f\u7f16\u7a0b\u662f\u4e00\u79cd\u590d\u7528\u4ee3\u7801\u7684\u624b\u6bb5\uff0c\u662fgeneric programming(\u6cdb\u578b\u7f16\u7a0b)\uff0c\u628a\u53d8\u91cf\u7684\u7c7b\u578b\u5f53\u4f5c\u53c2\u6570\u6765\u58f0\u660e</p> </li> <li> <p>\u51fd\u6570\u6a21\u677f\uff1a\u4f7f\u7528\u5173\u952e\u5b57template \u540e\u9762\u52a0\u82e5\u5e72\u4e2a\u53d8\u91cf\u4f5c\u4e3a\u7c7b\u578b\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u7c7b\u578b\u53d8\u91cf\u53ef\u4ee5\u4ee3\u66ff\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53c2\u6570\u7c7b\u578b\u548c\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u7684\u7c7b\u578b</p> </li> <li> <p>\u51fd\u6570\u6a21\u677f\u9700\u8981\u5b9e\u4f8b\u5316(instantiation)\u4e4b\u540e\u518d\u4f7f\u7528\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u8c03\u7528\u5c31\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316</p> <ul> <li>\u5b9e\u4f8b\u5316\u662f\u8bb2\u6a21\u677f\u51fd\u6570\u4e2d\u7684\u6a21\u677f\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684\u51fd\u6570</li> <li>\u51fd\u6570\u6a21\u677f\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53d1\u751f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5fc5\u987b\u8981\u7c7b\u578b\u5b8c\u5168\u5339\u914d\u624d\u80fd\u4f7f\u7528</li> <li> </li> <li> <p>\u5148\u627e\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\u7684\u666e\u901a\u51fd\u6570</p> </li> <li>\u518d\u627e\u662f\u5426\u6709\u5b8c\u5168\u5339\u914d\u7684\u6a21\u677f\u51fd\u6570</li> <li>\u518d\u627e\u6709\u6ca1\u6709\u901a\u8fc7\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570</li> </ul> </li> <li> <p>\u7c7b\u6a21\u677f</p> </li> <li> <p>\u548c\u51fd\u6570\u6a21\u677f\u5dee\u4e0d\u591a\uff0ctemplate\u4e2d\u58f0\u660e\u7684\u65e2\u53ef\u4ee5\u662f\u7c7b\u5185\u5404\u79cd\u9700\u8981\u53d8\u91cf\u7c7b\u578b\u7684\u5730\u65b9</p> </li> <li>\u6a21\u677f\u7c7b\u4e5f\u53ef\u4ee5\u7ee7\u627f\u975e\u6a21\u677f\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627f\u6a21\u677f\u7c7b(\u9700\u8981\u5b9e\u4f8b\u5316)</li> <li> <p>\u975e\u6a21\u677f\u7c7b\u53ef\u4ee5\u7ee7\u627f\u81ea\u6a21\u677f\u7c7b(\u9700\u8981\u5b9e\u4f8b\u5316)</p> </li> <li> <p>Expression parameter</p> </li> <li> <p>\u6a21\u677f\u4e2d\u7684\u53ef\u4ee5\u58f0\u660e\u4e00\u4e9b\u5e38\u6570\uff0cclass\u548ctypename\u7684\u7c7b\u578b\u540d\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503cdefault value\uff0c\u6bd4\u5982<code>template&lt;typename T = int&gt;</code> </p> </li> </ul> <pre><code>template &lt;class T, int bounds = 100&gt;\nclass FixedVector{\npublic:\n  T&amp; operator[](int x);\n    T elements[bounds];\n};\n\ntemplate &lt;class T, int bounds&gt;\nT&amp; FixedVector&lt;T, bounds&gt;::operator[] (int i){\n  return elements[i]; //no error checking\n}\n\n//usage\nFixedVector&lt;int, 50&gt; v1;\nFixedVector&lt;int, 10*10&gt; v2;\nFixedVector&lt;int&gt; v3 //default value\n</code></pre> <ul> <li> <p>Specialization \u7279\u5316--\u7528\u4e8e\u8403\u53d6\u5668</p> </li> <li> <p>\u5168\u7279\u5316\uff1a\u5c06\u6a21\u677f\u7c7b\u4e2d\u6240\u6709\u7684\u7c7b\u578b\u53c2\u6570\u8d4b\u4e88\u660e\u786e\u7684\u7c7b\u578b\uff0c\u5e76\u5199\u4e86\u4e00\u4e2a\u7c7b\u540d\u548c\u4e3b\u6a21\u677f\u7c7b\u540d\u76f8\u540c\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u5168\u7279\u5316\u7c7b</p> <ul> <li>\u5168\u7279\u5316\u4e4b\u540e\uff0c\u5df2\u7ecf\u5931\u53bb\u4e86template\u7684\u7279\u6027</li> </ul> <pre><code>template&lt;class T&gt; bool compare(T x, T y)\n{\n    return x&gt;y;\n}\n\n// \u8fd9\u4e2a\u5c31\u662f\u5bf9\u4e0a\u9762\u5199\u7684\u6a21\u677f\u51fd\u6570\u7684\u5168\u7279\u5316\ntemplate&lt;&gt; bool compare(int x, int y)\n{\n    return x&gt;y;\n}\n</code></pre> </li> <li> <p>\u504f\u7279\u5316\uff1a\u53ea\u7ed9\u6a21\u677f\u7c7b\u8d4b\u4e00\u90e8\u5206\u7684\u7c7b\u578b\uff0c\u5f97\u5230\u7684\u504f\u7279\u5316\u7c7b/\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u6a21\u7248\u4f7f\u7528</p> <ul> <li>\u8fd8\u4fdd\u7559\u4e86\u4e00\u90e8\u5206template\u7684\u529f\u80fd</li> </ul> </li> <li> <p>\u6a21\u677f\u7c7b\u8c03\u7528\u7684\u4f18\u5148\u7ea7</p> <ul> <li>\u5168\u7279\u5316\u7c7b&gt;\u504f\u7279\u5316\u7c7b&gt;\u4e3b\u7248\u672c\u7684\u6a21\u677f\u7c7b\uff08\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u6a21\u677f\u7c7b\uff0c\u6700\u5e38\u89c1\u7684\u7528\u6cd5\uff09</li> <li>\u6709\u9690\u5f0f\u8f6c\u6362\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u4f4e\uff0c\u5148\u8003\u8651\u6240\u6709\u4e0d\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u6a21\u677f\uff0c\u518d\u8003\u8651\u9700\u8981\u9690\u5f0f\u8f6c\u6362\u7684\u6a21\u677f</li> </ul> </li> </ul>"},{"location":"ZJU_CS/oop/#_1","title":"\u51fd\u6570\u91cd\u8f7d\u65f6\u5019\u7684\u4f18\u5148\u7ea7","text":""},{"location":"ZJU_CS/oop/#43_stl","title":"4.3 STL\u548c\u8fed\u4ee3\u5668","text":"<ul> <li> <p>STL=Standard Template Library \u662f\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u4f7f\u7528C++STL\u53ef\u4ee5\u51cf\u5c11\u5f00\u53d1\u65f6\u95f4\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\u548c\u9c81\u68d2\u6027 \uff0cSTL\u5305\u542b\u4e86\uff1a</p> </li> <li> <p>\u5bb9\u5668</p> </li> <li>\u8fed\u4ee3\u5668</li> <li> <p>\u51fd\u6570</p> </li> <li> <p>STL\u5bb9\u5668\u7684\u4f7f\u7528\uff1a\u523b\u5728DNA\u91cc\uff0c\u4e0d\u9700\u8981\u6574\u7406</p> </li> <li> <p>\u5173\u4e8emap\uff1amap\u7684key\u5fc5\u987b\u662f\u53ef\u4ee5\u6ee1\u8db3\u53ef\u4ee5\u6392\u5e8f\u6027\u8d28\u7684\uff0c\u5982\u679c\u662f\u81ea\u5b9a\u4e49\u7684\u7c7b\u9700\u8981\u91cd\u8f7d&lt;\u51fd\u6570\uff0c\u5426\u5219\u8fd9\u4e2a\u7c7b\u4e0d\u80fd\u4f5c\u4e3akey\u503c</p> </li> <li> <p>\u8fed\u4ee3\u5668\uff1a<code>STL&lt;parameters&gt;::iterator  xxx</code></p> </li> <li> <p>\u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u987a\u5e8f\u8bbf\u95ee\u5bb9\u5668\u7684\u65b9\u5f0f\uff1aGeneralization of pointers</p> </li> <li> <p>\u4e24\u4e2a\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\uff1abegin( ) \u548c end( )\u5206\u522b\u8868\u793a\u5bb9\u5668\u7684\u5934\u548c\u5c3e </p> <ul> <li>\u5f88\u591a\u65f6\u5019end\u5e76\u4e0d\u80fd\u8fbe\u5230\uff0c\u56e0\u6b64\u5230\u7ed3\u675f\u7684\u5224\u65ad\u6761\u4ef6\u5f80\u5f80\u662f<code>!=stl.end()</code> </li> </ul> </li> <li> <p>\u8fed\u4ee3\u5668\u652f\u6301\u7684\u64cd\u4f5c</p> </li> <li> <p><code>iter++</code> <code>iter+=2</code>(\u4e0d\u662f\u4efb\u4f55\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u90fd\u53ef\u4ee5)</p> <ul> <li><code>*iter</code> </li> </ul> <pre><code>list&lt;int&gt; L;\nlist&lt;int&gt;::iterator li;\nli=L.begin();\nL.erase(li); // li=L.erase(li);\n++li;//error!!!\n</code></pre> </li> <li> <p>\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd\u6cdb\u5316\u7684\u6307\u9488 </p> </li> </ul>"},{"location":"ZJU_CS/oop/#5_exceptions","title":"5. Exceptions \u5f02\u5e38\u5904\u7406","text":"<ul> <li>\u7528\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u8bed\u6cd5</li> <li> <p><code>try{ } catch{ }</code> \uff1a\u6355\u83b7throw\u629b\u51fa\u7684\u5f02\u5e38</p> <ul> <li><code>catch (...)</code>\u8868\u793a\u6355\u6349\u6240\u6709\u53ef\u80fd\u7684\u5f02\u5e38 </li> <li>try\u62ec\u53f7\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801</li> </ul> </li> <li> <p>throw\u8bed\u53e5\uff1a\u629b\u51fa\u5f02\u5e38</p> <ul> <li><code>throw exp;</code> \u629b\u51fa\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1athrow\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u4e2d\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u629b\u51fa\u7684\u7ed3\u679c\u7684\u7c7b\u578b</li> <li><code>throw;</code> \u53ea\u6709\u5728catch\u5b50\u53e5\u4e2d\u6709\u6548\uff0c\u628a\u539f\u672c\u6355\u6349\u5230\u7684\u5f02\u5e38\u629b\u51fa</li> </ul> </li> <li>\u5f02\u5e38\u5904\u7406\u7684\u6267\u884c\u8fc7\u7a0b</li> <li>\u7a0b\u5e8f\u6309\u7167\u6b63\u5e38\u7684\u987a\u5e8f\u6267\u884c\uff0c\u5230\u8fbetry\u8bed\u53e5\uff0c\u5f00\u59cb\u6267\u884ctry\u5185\u7684\u4fdd\u62a4\u6bb5</li> <li>\u5982\u679c\u5728\u4fdd\u62a4\u6bb5\u6267\u884c\u671f\u95f4\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u90a3\u4e48\u8df3\u8fc7\u6240\u6709\u7684catch</li> <li>\u5982\u679c\u4fdd\u62a4\u6bb5\u7684\u6267\u884c\u671f\u95f4\u6709\u8c03\u7528\u7684\u4efb\u4f55\u51fd\u6570\u4e2d\u6709\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7throw\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa\uff0c\u7a0b\u5e8f\u8f6c\u5230\u5bf9\u5e94\u7684catch\u5904\u7406\u6bb5</li> <li>\u9996\u5148\u8981\u6309\u987a\u5e8f\u5bfb\u627e\u5339\u914d\u7684catch\u5904\u7406\u5668\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219<code>terminate( )</code> \u4f1a\u88ab\u81ea\u52a8\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u4f1a\u8c03\u7528abort\u7ec8\u6b62\u7a0b\u5e8f<ul> <li>\u5982\u679c\u5728\u51fd\u6570\u4e2d\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u5e76\u4e14\u89e6\u53d1\u4e86terminate\uff0c\u90a3\u4e48\u7ec8\u6b62\u7684\u662f\u5f53\u524d\u51fd\u6570</li> <li>\u5f02\u5e38\u7c7b\u578b\u9700\u8981\u4e25\u683c\u7684\u5339\u914d</li> </ul> </li> <li>\u5982\u679c\u627e\u5230\u4e86\u5339\u914d\u7684catch\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u4e14\u901a\u8fc7\u503c\u8fdb\u884c\u6355\u83b7\uff0c\u5219\u5176\u5f62\u53c2\u901a\u8fc7\u62f7\u8d1d\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728\u5f62\u53c2\u88ab\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u5c55\u5f00\u6808\u7684\u8fc7\u7a0b\u5f00\u59cb\uff0c\u5f00\u59cb\u5bf9\u5bf9\u5e94\u7684try\u5757\u4e2d\uff0c\u4ece\u5f00\u59cb\u5230\u5f02\u5e38\u4e22\u5f03\u5730\u70b9\u4e4b\u95f4\u521b\u5efa\u7684\u6240\u6709\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784</li> <li>C++\u4e2d\u81ea\u5e26\u7684\u5f02\u5e38\u7684\u7ee7\u627f\u4f53\u7cfb\uff0c\u5b9a\u4e49\u5728\u5934\u6587\u4ef6<code>&lt;exception&gt;</code> \u4e2d</li> <li>what\u65b9\u6cd5\u7ed9\u51fa\u4e86\u4ea7\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u662f\u5f02\u5e38\u7c7b\u4e4b\u95f4\u90fd\u6709\u7684\u516c\u5171\u65b9\u6cd5\uff0c\u5df2\u7ecf\u88ab\u6240\u6709\u7684\u5b50\u5f02\u5e38\u7c7b\u91cd\u8f7d</li> <li> <p>\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\uff1a\u9700\u8981\u7ee7\u627fexception\u7c7b</p> </li> <li> <p>\u51fd\u6570\u5b9a\u4e49\u7684\u5f02\u5e38\u58f0\u660e</p> </li> <li>\u53ef\u4ee5\u5728\u51fd\u6570\u540d\u540e\u9762\u52a0<code>noexcept</code>\u5173\u952e\u5b57\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\uff0c\u5982\u679c\u8fd8\u662f\u4ea7\u751f\u4e86\u5f02\u5e38\uff0c\u5c31\u4f1a\u8c03\u7528<code>std::terminate</code>\u7ec8\u6b62\u7a0b\u5e8f</li> <li>\u53ef\u4ee5\u5728\u51fd\u6570\u58f0\u660e\u4e2d\u5217\u51fa\u6240\u6709\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u6bd4\u5982<code>double f(int, int) throw(int);</code> \u5982\u679c\u662fthrow()\u8868\u793a\u4e0d\u629b\u51fa\u4e00\u573a\uff0c\u5c31\u7b97\u51fd\u6570\u91cc\u6709throw\u4e5f\u4e0d\u4f1a\u6267\u884c</li> <li>throw\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u51fd\u6570\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5\uff0c\u4f46\u662f\u5728\u51fd\u6570throw\u4e4b\u524d\u4f1a\u6267\u884c\u6240\u6709\u5c40\u90e8\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570</li> <li>\u6700\u597d\u4e0d\u8981\u5728\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u5f02\u5e38</li> </ul> <pre><code>class T\n{\n    T(){\n        cout&lt;&lt;\"T()\"&lt;&lt;endl;\n    }\n    ~T(){\n        cout&lt;&lt;\"~T()\"&lt;&lt;endl;\n    }\n}\n\nvoid foo()\n{\n    T t;\n    throw 1;\n}\n\nint main()\n{\n    try{\n        foo();\n    }\n    catch(...){\n        cout&lt;&lt;\"Catched!\"&lt;&lt;endl;\n    }\n    return 0;\n}\n\n//\u8fd0\u884c\u7684\u7ed3\u679c\u662f\nT()\n~T()\nCatched\n</code></pre>"},{"location":"ZJU_CS/oop/#6_smart_pointer","title":"6. Smart Pointer \u667a\u80fd\u6307\u9488","text":"<ul> <li>\u666e\u901a\u6307\u9488\u7ba1\u7406\u5185\u5b58\u5bb9\u6613\u9020\u6210\u5185\u5b58\u6cc4\u6f0f(\u6bd4\u5982\u7528\u5b8c\u5fd8\u8bb0\u91ca\u653e)\uff0cC++\u63d0\u4f9b\u4e86\u667a\u80fd\u6307\u9488\u7528\u4e8e\u5185\u5b58\u7684\u7ba1\u7406</li> <li>\u667a\u80fd\u6307\u9488\u4f7f\u7528\u4e86\u4e00\u79cdRAII(\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316)\u6280\u672f\u5bf9\u666e\u901a\u7684\u6307\u9488\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4f7f\u5f97\u667a\u80fd\u6307\u9488\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u884c\u4e3a\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u6307\u9488</li> <li> <p>\u667a\u80fd\u6307\u9488\u7684\u76f8\u5173\u5185\u5bb9\u5305\u542b\u5728\u5934\u6587\u4ef6</p> </li> <li> <p>\u6807\u51c6\u5e93\u4e2d\u652f\u6301\u7684\u667a\u80fd\u6307\u9488\u7c7b\u578b</p> </li> <li> <p><code>std::unique_ptr</code>\u53ea\u5141\u8bb8\u8fd9\u4e2a\u6307\u9488\u6765\u7ba1\u7406\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c\u4e0d\u5141\u8bb8\u6307\u9488\u4e4b\u95f4\u7684\u62f7\u8d1d\uff0c\u4f46\u662f</p> <ul> <li>\u4e0d\u5141\u8bb8\u8fdb\u884c\u6307\u9488\u7684\u8d4b\u503c\u548c\u62f7\u8d1d</li> <li>\u53ef\u4ee5\u7528<code>move</code>\u65b9\u6cd5\u6765\u79fb\u52a8\u6307\u9488\u7684\u6240\u6709\u6743\uff0c\u6bd4\u5982<code>unique_ptr&lt;int&gt; p2 = move(p1);</code> </li> <li>\u53ef\u4ee5\u7528<code>release</code>\u65b9\u6cd5\u6765\u91ca\u653e\u6307\u9488\u7684\u6240\u6709\u6743</li> </ul> </li> </ul> <pre><code>class A{\npublic:\n    A(){\n        cout&lt;&lt;\"A()\"&lt;&lt;endl;\n    }\n    ~A(){\n        cout&lt;&lt;\"~A()\"&lt;&lt;endl;\n    }\n    void foo(){\n        cout&lt;&lt;\"1\"&lt;&lt;endl;\n    }\n}\n\nint main()\n{\n    {\n        unique_ptr&lt;A&gt; pa(new (A));\n        pa-&gt;foo();\n  }\n}\n</code></pre> <ul> <li> <p><code>std::shared_ptr</code>\u975e\u72ec\u5360\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u591a\u4e2a\u6307\u9488\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61\u3002shared_ptr\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff0c\u6bcf\u4e00\u4e2ashared_ptr\u7684\u62f7\u8d1d\u90fd\u6307\u5411\u76f8\u540c\u7684\u5185\u5b58\u3002\u6bcf\u4f7f\u7528\u4ed6\u4e00\u6b21\uff0c\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u52a01\uff0c\u6bcf\u6790\u6784\u4e00\u6b21\uff0c\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\uff0c\u51cf\u4e3a0\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u6240\u6307\u5411\u7684\u5806\u5185\u5b58\u3002shared_ptr\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u662f\u5bf9\u8c61\u7684\u8bfb\u53d6\u9700\u8981\u52a0\u9501 </p> <ul> <li>\u53ef\u4ee5\u7528<code>use_count</code>\u51fd\u6570\u6765\u67e5\u770b\u67d0\u4e2a\u5bf9\u8c61\u62e5\u6709\u7684\u6307\u9488\u7684\u4e2a\u6570</li> <li>\u53ef\u4ee5\u7528<code>get</code>\u51fd\u6570\u6765\u83b7\u53d6\u539f\u59cb\u6307\u9488</li> <li>\u4e0d\u80fd\u7528\u4e00\u4e2a\u539f\u59cb\u6307\u9488\u521d\u59cb\u5316\u591a\u4e2a<code>shared_ptr</code> \u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u591a\u6b21\u91ca\u653e</li> </ul> <pre><code>#include&lt;iostream&gt;\n#include&lt;memory&gt;\nint main()\n{\n    int a = 10;\n    std::shared_ptr&lt;int&gt; ptra = make_shared&lt;int&gt;(a);\n    srd::shared_prt&lt;int&gt; ptrb(ptra);\n    cout&lt;&lt;ptra.use_count&lt;&lt;endl; //\u8f93\u51fa\u7684\u7ed3\u679c\u662f2\n}\n</code></pre> </li> <li> <p><code>std::weak_ptr</code>\u662f\u6ca1\u7528\u91cd\u8f7d*\u548c-&gt;\u64cd\u4f5c\u7b26\uff0c\u6ca1\u6709\u666e\u901a\u6307\u9488\u5177\u6709\u7684\u884c\u4e3a\uff0c\u6700\u5927\u7684\u4f5c\u7528\u5728\u4e8e\u534f\u52a9\u5176\u4ed6\u6307\u9488\u7684\u5de5\u4f5c\uff0c\u67e5\u770b\u5bf9\u8c61\u4e2d\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5</p> <ul> <li>weak_ptr\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2ashared_ptr\u6216\u8005weak_ptr\u6765\u8fdb\u884c\u6784\u9020\uff0c\u83b7\u53d6\u89c2\u6d4b\u6743\uff0c\u4f46\u662fweak_ptr\u4e0d\u4f1a\u9020\u6210\u6307\u9488\u5f15\u7528\u8ba1\u6570\u7684\u589e\u52a0 </li> </ul> </li> </ul>"},{"location":"spark%20in%20life/","title":"My Life","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e9b\u6211\u751f\u547d\u4e2d\u7684\u6240\u601d\u6240\u60f3</p>"},{"location":"spark%20in%20life/college%20life/competition/","title":"\u7ade\u8d5b","text":""},{"location":"spark%20in%20life/college%20life/competition/#timetable","title":"\u4e00\u4e9b\u4e9btimetable\u7f51\u7ad9","text":"<p>CS\uff1a\u4e2d\u56fd\u9ad8\u6821\u8ba1\u7b97\u673a\u5927\u8d5b (c4best.cn)</p> <p>ZJU:\u9ad8\u6821\u7ade\u8d5b\u7ba1\u7406\u7cfb\u7edf (zju.edu.cn)</p>"},{"location":"spark%20in%20life/college%20life/competition/#_2","title":"\u4e00\u6708","text":"<p>\u56e2\u4f53\u7a0b\u5e8f\u8bbe\u8ba1\u5929\u68af\u8d5b (patest.cn)</p>"},{"location":"spark%20in%20life/college%20life/competition/#_3","title":"\u4e8c\u6708","text":"<p>\u6d59\u6c5f\u5927\u5b66\u82f1\u8bed\u542c\u529b\u7ade\u8d5b</p> <p>\u5168\u56fd\u5927\u5b66\u751f\u82f1\u8bed\u7ade\u8d5b</p>"},{"location":"spark%20in%20life/college%20life/competition/#_4","title":"\u4e09\u6708","text":"<p>\u5468\u57f9\u6e90\u7269\u7406\u7ade\u8d5b</p> <p>\u6d59\u6c5f\u5927\u5b66\u5de5\u7a0b\u80fd\u529b\u521b\u65b0\u7ade\u8d5b</p> <p>\u4e2d\u56fd\u9ad8\u6821\u8ba1\u7b97\u673a\u5927\u8d5b-\u7f51\u7edc\u6280\u672f\u6311\u6218\u8d5b (c4best.cn)\uff08\u56db\u5230\u516b\u6708\uff09</p> <p>\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5e94\u7528\u5f00\u53d1\u8d5b (qq.com)\uff08\u56db\u6708\u5230\u516d\u6708\uff09</p> <p>\u79fb\u52a8\u5e94\u7528\u521b\u65b0\u8d5b (appcontest.net)\uff08\u4e09\u6708\u5230\u516d\u6708\uff09</p>"},{"location":"spark%20in%20life/college%20life/competition/#_5","title":"\u56db\u6708","text":"<p>\u5927\u6570\u636e\u7cfb\u7edf\u8f6f\u4ef6\u56fd\u5bb6\u5de5\u7a0b\u7814\u7a76\u4e2d\u5fc3 (tsinghua.edu.cn)\uff08\u56db\u6708\u5f00\u59cb\u5230\u516d\u6708\u4efd\uff09</p> <p>[\u6d59\u6c5f\u7701\u4ee5\u53ca\u6d59\u6c5f\u5927\u5b66\u6570\u5b66\u5efa\u6a21\u7ade\u8d5b]</p>"},{"location":"spark%20in%20life/college%20life/competition/#_6","title":"\u4e94\u6708","text":"<p>\u6d59\u6c5f\u7701\u5927\u5b66\u751f\u6570\u5b66\u7ade\u8d5b</p> <p>\u4e2d\u56fd\u9ad8\u6821\u8ba1\u7b97\u673a\u5927\u8d5b-\u667a\u80fd\u4ea4\u4e92\u521b\u65b0\u8d5b (oppo.com)\uff08\u4e94\u5230\u516b\u6708\uff09</p>"},{"location":"spark%20in%20life/college%20life/competition/#_7","title":"\u516b\u6708","text":"<p>\u6570\u5b66\u5efa\u6a21</p> <p>2023 \u9ad8\u6821\u4eba\u5de5\u667a\u80fd\u521b\u610f\u8d5b\uff08C4-AI\uff09 (baidu.com)\uff08\u516b\u6708\u5230\u5341\u4e00\u6708\uff09</p>"},{"location":"spark%20in%20life/college%20life/competition/#_8","title":"\u4e5d\u6708","text":"<p>\u6d59\u6c5f\u5927\u5b66\u82f1\u8bed\u9605\u8bfb\u548c\u5199\u4f5c\u7ade\u8d5b</p>"},{"location":"spark%20in%20life/college%20life/competition/#_9","title":"\u5341\u6708","text":"<p>\u5168\u56fd\u6570\u5b66\u7ade\u8d5b</p>"},{"location":"spark%20in%20life/college%20life/competition/#_10","title":"\u5341\u4e00\u6708","text":"<p>\u6570\u6a21\u7f8e\u8d5b\u62a5\u540d\uff08\u4e00\u822c\u4e8c\u6708\u4efd\u8003\uff09</p>"},{"location":"spark%20in%20life/college%20life/competition/#_11","title":"\u5341\u4e8c\u6708","text":"<p>\u6d59\u6c5f\u7701\u5927\u5b66\u751f \u7269\u7406\u5b66\u672f\u7ade\u8d5b</p>"},{"location":"spark%20in%20life/college%20life/competition/#_12","title":"\u4e00\u4e9b\u4e9b\u8bb0\u5f55","text":"<p>\u7b49\u6211\u53c2\u52a0\u4e86\u518d\u5199\uff08\u72d7\u5934</p>"},{"location":"spark%20in%20life/college%20life/freshman/","title":"\u6d45\u8bb0\u6211\u7684\u5927\u4e00\u751f\u6d3b","text":"<p>\u604d\u60da\u95f4\uff0c\u5927\u4e00\u7b2c\u4e00\u5e74\u5c31\u8fd9\u4e48\u8fc7\u53bb\u4e86\u3002\u6216\u8bb8\u662f\u53d7\u75ab\u60c5\u7684\u5f71\u54cd\uff0c\u4ea6\u6216\u662f\u4eab\u53d7\u4e86\u8db3\u591f\u5feb\u4e50\u7684\u65f6\u5149\uff0c\u611f\u89c9\u4e0a\u4e00\u79d2\u8fd8\u662f\u81ea\u5df1\u521a\u5165\u5b66\u7684\u90a3\u4e00\u5929\u3002\u89c9\u5f97zjg\u597d\u5927\u597d\u5927\uff0c\u751a\u81f3\u8bf4\u89c9\u5f97\u7389\u6e56\u90fd\u5f88\u5927\uff0c\u770b\u7740\u4e00\u5e45\u5e45\u719f\u6089\u53c8\u964c\u751f\u7684\u9762\u5b54\uff0c\u611f\u53d7\u5e76\u9010\u6e10\u878d\u5165\u5230\u5168\u65b0\u7684\u751f\u6d3b\u5f53\u4e2d\u2026\u2026</p> <p>\u6211\u65f6\u5e38\u89c9\u5f97\u81ea\u5df1\u662f\u4e00\u4e2a\u5f88\u65e0\u611f\u7684\u4eba\uff08\u662f\u6307\u611f\u60c5\u4e0a\u6ca1\u6709\u592a\u5927\u7684\u6ce2\u52a8\uff0c\u4e0d\u6613\u60b2\u4f24\u4e5f\u4e0d\u6613\u559c\u60a6\uff09\uff0c\u53ef\u5f88\u591a\u65f6\u5019\u81ea\u5df1\u603b\u4f1a\u6709\u4e00\u809a\u5b50\u7684\u8bdd\u60f3\u8bf4\u3002\u6211\u4e00\u76f4\u5c06\u81ea\u5df1\u7684\u4eba\u751f\u7684\u91cd\u70b9\u653e\u5728\u611f\u53d7\u5916\u754c\u7684\u8fc7\u7a0b\uff0c\u4e5f\u4e0d\u559c\u8bb0\u5f55\u4e9b\u4ec0\u4e48\u3002\u4f46\u5750\u5728\u56de\u5bb6\u52a8\u8f66\u4e0a\u7684\u6211\uff0c\u4f9d\u65e7\u60f3\u5bf9\u8fc7\u53bb\u4e00\u5e74\u6709\u4e2a\u5927\u4f53\u7684\u56de\u987e\uff0c\u5e0c\u671b\u81ea\u5df1\u8001\u4e86\u4e4b\u540e\u8fd8\u80fd\u770b\u7740\u8fd9\u4e9b\u6587\u5b57\u56de\u60f3\u8d77\u6765\u3002</p> <p>\u6211\u4e00\u76f4\u7ed9\u81ea\u5df1\u5927\u5b66\u751f\u6d3b\u7684\u76ee\u6807\u5c31\u662f\u2014\u2014\u4e60\u60ef\u72ec\u7acb\u7684\u751f\u6d3b\uff0c\u627e\u5230\u81ea\u5df1\u4e4b\u540e\u4eba\u751f\u7684\u65b9\u5411\uff0c\u6700\u597d\u80fd\u591f\u4e58\u7740\u8fd9\u4e2a\u201c\u5598\u606f\u4e4b\u9645\u201d\u80fd\u591f\u5feb\u4e50\u7684\u4eab\u53d7\u751f\u6d3b\u3002\u63a5\u4e0b\u6765\u6211\u4e5f\u4f1a\u5927\u81f4\u56f4\u7ed5\u8fd9\u51e0\u4e2a\u65b9\u5411\u8bb0\u5f55\u4e00\u4e0b\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_2","title":"\u5173\u4e8e\u5b66\u4e60","text":"<p>\u5b66\u4e60\u662f\u4e2a\u907f\u4e0d\u5f00\u7684\u8bdd\u9898\uff0c\u90a3\u5c31\u5148\u6765\u8bf4\u8bf4\u5b83\u5427\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_3","title":"\u8eab\u8fb9\u7684\u4eba","text":"<p>\u9996\u5148\uff0c\u6211\u8bda\u631a\u5730\u5728\u6b64\u611f\u8c22\u4e09\u4f4d\u5b66\u957f\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8bf4\u5bf9\u6211\u7684\u4eba\u751f\u8d77\u5230\u4e86\u65b9\u5411\u7684\u6307\u5f15\u3002zhongyinmin\uff08csdiy\u7684\u521b\u4f5c\u8005\uff09\uff0c\u4e00\u4e2a\u6211\u7d20\u672a\u8c0b\u9762\u4f46\u662f\u8ba9\u6211\u771f\u771f\u5207\u5207\u770b\u5230cs\u4e30\u5bcc\u7684\u4e16\u754c\uff0c\u5728\u5f53\u4e0bzju\u4e00\u8a00\u96be\u5c3d\u7684\u6559\u80b2\u4e2d\uff0c\u6211\u6bc5\u7136\u51b3\u7136\u7684\u8e0f\u4e0a\u4e86\u81ea\u5b66\u4e4b\u8def\uff1b\u738b\u5f00\u70ab\u5b66\u957f\uff0c\u5176\u5b9e\u6211\u548c\u4ed6\u7684\u4ea4\u9645\u7b97\u4e0d\u4e0a\u90a3\u4e48\u7684\u591a\uff0c\u4f46\u4ed6\u662f\u6211\u771f\u6b63\u6765\u5230\u6d59\u5927\u6df1\u53d7\u611f\u52a8\u7684\u4eba\u2014\u2014\u6df1\u8c19\u5728zju\u7684\u751f\u5b58\u4e4b\u9053\uff0c\u4ee5\u53ca\u65e0\u79c1\u7684\u201c\u5f00\u6e90\u201d\uff1f\u7cbe\u795e\uff0c\u4ed6\u81ea\u8eab\u975e\u5e38\u7684\u4f18\u79c0\uff0c\u65e0\u8bba\u5b66\u4e60\u8fd8\u662f\u8bfe\u4e1a\uff0c\u4f46\u4ed6\u603b\u80fd\u5728\u5fd9\u788c\u7684\u65f6\u5019\u4e3a\u6211\u4eec\u8010\u5fc3\u7684\u7b54\u7591\u89e3\u60d1\uff0c\u8ba9\u6211\u987a\u987a\u5229\u5229\uff08\u751a\u81f3\u8bf4\u6bd4\u8f83\u8f7b\u677e\uff09\u5ea6\u8fc7\u4e86\u81ea\u5df1\u7684\u5927\u4e00\u751f\u6d3b\uff0c\u53ef\u4ee5\u8bf4\u6ca1\u6709\u4ed6\u6211\u7684\u5927\u4e00\u6216\u8bb8\u8fc7\u7684\u4f1a\u66f4\u52a0\u5e73\u5eb8\u4e14\u8ff7\u832b\u5427\uff0c\u611f\u8c22\u8fd9\u4efd\u76f8\u9047\uff01\uff08\u5f53\u7136\u6211\u77e5\u9053\u8fd9\u4efd\u611f\u8c22\u662f\u7528\u8bed\u8a00\u65e0\u6cd5\u5b8c\u5168\u8868\u8fbe\u7684\uff0c\u6211\u4e5f\u5c3d\u529b\u5c06\u4ed6\u7684\u8fd9\u4efd\u77e5\u8bc6\u4e0e\u667a\u6167\u4f20\u627f\u4e0b\u53bb\uff09\uff1b\u6700\u540e\u4e00\u4f4d\u4fbf\u662f\u6211\u7684\u76f4\u7cfb\u5b66\u957f\u5434\u660a\u6cfd\u3002\u6211\u4eec\u5927\u4f53\u4e00\u5171\u5c31\u89c1\u8fc7\u4e09\u9762\u3002\u4ed6\u5f88\u4f18\u79c0\uff0c\u90a3\u79cd\u4f18\u79c0\u662f\u4e00\u79cd\u600e\u4e48\u8bf4\uff0c\u4eba\u751f\u89c4\u5212\u7684\u6e05\u6670\u4e0e\u6de1\u7136\u7684\u5fc3\u5883\u4e0e\u975e\u5e38\u9ad8\u7684\u773c\u754c\u3002\u6211\u548c\u4ed6\u7684\u6bcf\u6b21\u89c1\u9762\u90fd\u80fd\u6df1\u53d7\u542f\u53d1\uff0c\u8ba9\u6211\u6e05\u9664\u8fd9\u4e2a\u9636\u6bb5\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u6211\u5f88\u96be\u60f3\u8c61\u4e00\u4e2a\u5e73\u65f6\u4e0d\u6253\u793e\u4ea4\u7684\u4eba\u662f\u5982\u4f55\u505a\u5230\u5bf9\u81ea\u6211\u6709\u5982\u6b64\u6e05\u6670\u7684\u89c4\u5212\uff08\u53ef\u80fd\u6b63\u662f\u8fd9\u4e2a\u539f\u56e0\u5427\uff09</p> <p>\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u4f18\u79c0\u5b66\u957f\u5bf9\u6211\u7684\u5e2e\u52a9\u2014\u2014pchgg\uff0c\u74dc\u74dc\uff0cwyy\u2026\u2026\u53ef\u80fdzju\u7684\u6559\u80b2\u8d28\u91cf\u5e76\u6ca1\u6709\u5927\u5bb6\u521a\u6765\u7684\u65f6\u5019\u60f3\u7684\u90a3\u4e48\u9ad8\uff0c\u4f46\u5468\u56f4\u8fd9\u7fa4\u76f8\u5f53\u4f18\u79c0\u7684\u4eba\uff0c\u4ee5\u53ca\u4ed6\u4eec\u613f\u610f\u5206\u4eab\u4e00\u4e9b\u7ecf\u9a8c\u771f\u7684\u80fd\u8ba9\u4f60\u611f\u53d7\u5230\u8fd9\u4e2a\u5b66\u6821\u5e95\u8574\u4e0e\u5f3a\u5927\u3002</p> <p>\u6700\u540e\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u6839\u636e\u6211\u7684\u89c2\u5bdf\uff0c\u4f60\u4f1a\u611f\u53d7\u5230\u8eab\u8fb9\u5927\u4f6c\u4eec\u7684\u5f3a\uff0c\u751a\u81f3\u662f\u8ddf\u4f60\u540c\u4e00\u5c4a\u7684\u5927\u4f6c\u3002\u4f46\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u4e2a\u5f3a\u6709\u4e2a\u6e05\u6670\u7684\u8ba4\u8bc6\uff0c\u522b\u4eba\u5982\u679c\u6bd4\u4f60\u5728\u67d0\u65b9\u9762\u4f18\u79c0\uff0c\u4e00\u5b9a\u662f\u4ed6\u5728\u8fd9\u4e2a\u65b9\u9762\u7684\u79ef\u7d2f\u6210\u672c\u6bd4\u4f60\u66f4\u591a\uff08\u4e0d\u6307\u65f6\u95f4\uff09\uff1b\u6b64\u5916\uff0c\u4f60\u89c2\u5bdf\u540e\u4f1a\u770b\u5230\uff0c\u5176\u5b9e\u5927\u4f6c\u4eec\u662f\u5728\u67d0\u4e2a\u65b9\u9762\u4ea6\u6216\u8005\u8bf4\u662f\u5177\u6709\u67d0\u4e2a\u7279\u8d28\u7684\u4f18\u79c0\u3002\u6765\u5230\u5927\u5b66\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u4eba\u80fd\u6709\u5f88\u591a\u6761\u8def\u8d70\uff0c\u4f60\u4e0d\u9700\u8981\u8ddf\u4efb\u4f55\u4eba\u6bd4\uff08\u5c24\u6307\u7ee9\u70b9\uff0c\u5982\u679c\u4f60\u5728ckc\uff0c\u8fd9\u4e2a\u4e1c\u897f\u591f\u7528\u5c31\u884c\uff0c\u9664\u975e\u4f60\u9700\u8981\u51fa\u56fd\uff09\uff0c\u4f60\u66f4\u9700\u8981\u627e\u5230\u81ea\u5df1\u7684\u8def\uff0c\u5728\u8fd9\u4e2a\u65b9\u9762\u80fd\u591f\u6210\u4e3a\u201c\u5927\u4f6c\u201d\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e00\u79cd\u5e26\u52a8\u4f5c\u7528\u5728\u4f60\u7684\u5176\u4ed6\u65b9\u9762\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_4","title":"\u5173\u4e8e\u81ea\u5df1","text":"<p>\u6765\u5230\u6d59\u5927\u7684\u540c\u5b66\u5176\u5b9e\u2026\u2026\u5f88\u591a\u90fd\u662f\u201c\u8003\u8d25\u6765\u6d59\u201d\u7684\u5427\uff0c\u4f46\u6211\u786e\u786e\u5b9e\u5b9e\u60f3\u8bf4\u7684\u662f\uff0c\u4f60\u8d8a\u662f\u80fd\u5feb\u901f\u653e\u5e73\u81ea\u5df1\u7684\u5fc3\u6001\u4f60\u8d8a\u80fd\u66f4\u5feb\u7684\u53d8\u4f18\u79c0\u3002\u8eab\u8fb9\u4f1a\u6709\u5f88\u591a\u5f88\u5f3a\u7684\u4eba\u503c\u5f97\u4f60\u53bb\u5b66\u4e60\u3002</p> <p>\u6b64\u5916\uff0c\u5927\u5bb6\u4f1a\u770b\u5230\u8eab\u8fb9\u4f1a\u6709\u5f88\u591a\u6446\u70c2\u7684\u4eba\uff0c\u4e5f\u4f1a\u6709\u4eba\u8bf4\u201c\u5f88\u5377\u5f88\u5377\u2026\u2026\u201d\u4e4b\u7c7b\u7684\u8bdd\uff0c\u6211\u5bf9\u6b64\u8fd8\u662f\u6709\u4e9b\u60f3\u6cd5\u7684\u3002\u6446\u70c2\u6211\u89c9\u5f97\u65e0\u53ef\u539a\u975e\uff0c\u5c24\u4e3a\u662f\u5728\u5f53\u4e0b\u751f\u5b58\u6210\u672c\u9010\u6e10\u53d8\u9ad8\uff08\u5c24\u6307\u623f\u4ef7\uff09\uff0c\u4ea6\u5982\u4e4b\u524d\u6240\u8c13\u7684\u9760\u5b66\u4e60\u6765\u6539\u53d8\u9636\u7ea7\u5df2\u7136\u4e0d\u90a3\u4e48\u663e\u793a\uff0c\u6446\u5728\u5927\u5bb6\u773c\u524d\u7684\u4eff\u4f5b\u662f\u4e00\u6761\u201c\u6709\u65e0\u6b62\u5883\uff0c\u4e0d\u505c\u52aa\u529b\u201d\u7684\u4e00\u6761\u8def\uff0c\u5982\u679c\u4f60\u7d2f\u4e86\uff0c\u5e76\u4e14\u80fd\u591f\u5b89\u5fc3\u7684\u4f11\u606f\uff0c\u90a3\u6211\u66f4\u5e0c\u671b\u5927\u5bb6\u80fd\u505c\u4e0b\u811a\u6b65\u8c03\u6574\u4e0b\u81ea\u5df1\uff1b\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u201c\u6446\u53c8\u6446\u4e0d\u5e73\uff0c\u5377\u53c8\u5377\u4e0d\u8d62\u201d\u7684\u540c\u5b66\uff0c\u6211\u89c9\u5f97\u5bf9\u4e8e\u8fd9\u4e9b\u4eba\u66f4\u9700\u8981\u7684\u662f\u627e\u5230\u81ea\u5df1\u7684\u5b9a\u4f4d\u5427\uff08\u6211\u5c31\u662f\u8fd9\u7fa4\u4eba\u5f53\u4e2d\u7684\u4e00\u5458\uff09\uff1b\u4f46\u5bf9\u4e8e\u540e\u8005\uff0c\u8bf4\u201c\u5f88\u5377\u5f88\u5377\u2026\u2026\u201d\uff0c\u6211\u60f3\u8bb2\u4e2a\u6545\u4e8b\u3002\u5c31\u662f\u5728\u6211\u4eca\u5929\u56de\u5bb6\u7684\u51fa\u79df\u8f66\u4e0a\u53f8\u673a\u5e08\u5085\u5c31\u8bf4\u4ed6\u4eec\u597d\u5377\u597d\u5377\uff0c\u65e9\u4e0a\u8981\u4e94\u70b9\u949f\u8d77\u6765\u5237\u9884\u7ea6\u5355\u7684\u4e1a\u7ee9\uff0c\u53ef\u6211\u786e\u5b9e\u60f3\u8bf4\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u6b63\u786e\u770b\u5f85\u201c\u5377\u548c\u6446\u70c2\u201d\uff08\u8fd9\u4e2a\u8fd1\u4e9b\u5e74\u51fa\u73b0\u7684\u8bcd\uff09\uff0c\u6211\u627f\u8ba4\u67d0\u4e9b\u65f6\u5019\u786e\u5b9e\u5b58\u5728\u6076\u6027\u7ade\u4e89\u7684\u73b0\u8c61\uff0c\u4f46\u4e0d\u8981\u628a\u6709\u4e9b\u4f60\u9700\u8981\u63d0\u5347\u81ea\u5df1\u7684\u52aa\u529b\u5f52\u7eb3\u5230\u201c\u5377\u201d\u4e00\u7c7b\u5f53\u4e2d\u53bb\u3002</p> <p>\u6211\u8bf4\u7684\u6709\u70b9\u5f2f\u5f2f\u7ed5\u4e86\uff0c\u4f46\u603b\u5f97\u6765\u8bf4\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u6bcf\u4e2a\u4eba\u90fd\u80fd\u627e\u5230\u4e00\u4e2a\u5e73\u8861\u7684\u5fc3\u6001\uff0c\u8fd9\u6837\u4f60\u80fd\u8fc7\u7684\u771f\u7684\u8212\u5fc3\u4e0e\u5feb\u4e50\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_5","title":"\u5173\u4e8e\u6df7\u5408","text":"<p>\u6df7\u5408\u73ed\uff0c\u600e\u4e48\u8bf4\u5462\u2026\u2026\u786e\u5b9e\u5927\u591a\u6570\u4eba\u4f1a\u9009\u62e9cs\uff0c\u4e0d\u6e05\u695a23\u5c4a\u7684\u540c\u5b66\u4f1a\u600e\u4e48\u60c5\u51b5\uff08\u636e\u8bf4\u6709\u6539\u9769\uff09</p> <p>\u5176\u5b9e\u4ece\u7ee9\u70b9\u6765\u770b\u6211\u7684\u6210\u7ee9\u8bf4\u4e0d\u4e0a\u4f18\u79c0\uff0c\u53ea\u80fd\u7b97\u9a6c\u9a6c\u864e\u864e\u5427\u3002\u4f46\u786e\u5b9e\u6709\u4e9b\u5403\u4e8f\u7684\u7ecf\u9a8c\u60f3\u8981\u5728\u8fd9\u91cc\u8bf4\u8bf4\u3002</p> <p>\u5148\u8c08\u9009\u8bfe\uff01\u4eba\u4eec\u5e38\u8bf4\u201c\u9009\u62e9\u5927\u4e8e\u52aa\u529b\u201d\uff0c\u5927\u5bb6\u4f1a\u5728\u9009\u8bfe\u4e0a\u5c24\u4e3a\u6e05\u6670\u7684\u770b\u5230\u3002\u6211\u8eab\u8fb9\u6709\u4f4d\u540c\u5b66\uff0c\u771f\u7684\u76f8\u5f53\u4f1a\u9009\u8bfe\uff08\u6307\u9009\u8001\u5e08\uff09\uff0c\u5979\u80fd\u505a\u5230\u671f\u672b\u52aa\u529b\u51e0\u5929\u7ee9\u70b9\u80fd\u591f\u4e0a4\uff08\u6307\u6bcf\u4e00\u95e8\uff01\uff01\uff01\uff09\u8eab\u5728\u8003\u6838\u6559\u80b2\u7684\u73af\u5883\u4e0b\uff0c\u867d\u7136\u6211\u89c9\u5f97\u5b66\u4e60\u662f\u63d0\u5347\u81ea\u5df1\u7684\u8fc7\u7a0b\uff0c\u4f46\u771f\u7684\u6709\u4e9b\u65f6\u5019\u529f\u5229\u70b9\u80fd\u591f\u8ba9\u4f60\u51cf\u8f7b\u5f88\u591a\u52aa\u529b\u3002\u5f53\u7136\u5f88\u591a\u540c\u5b66\u53ef\u80fd\u5bb3\u6015\u9000\u4e86\u8bfe\u9009\u4e0d\u4e0a\u600e\u4e48\u529e\uff1f\u6211\u7684\u8bc4\u4ef7\u8fd8\u662f\u4e0d\u8981\u592a\u62c5\u5fc3\uff0c\u4f60\u80af\u5b9a\u4f1a\u6709\u8bfe\u4e0a\uff0c\u4f46\u4f60\u53ef\u4ee5\u91cd\u6392\u81ea\u5df1\u7684\u8bfe\u8868\uff0c\u9009\u62e9\u4e00\u4e2a\u76f8\u5bf9\u5bb9\u6613\u62ff\u9ad8\u5206\u7684\u8001\u5e08\uff0c\u4ed6\u771f\u7684\u4f1a\u8ba9\u4f60\u8f7b\u677e\u5f88\u591a\u3002\uff08\u6709\u4e9b\u95e8\u9053\u5c31\u4e0d\u5728\u8fd9\u91cc\u8bf4\u4e86\uff09</p> <p>\u6b64\u5916\u8c08\u6210\u7ee9\u7684\u8bdd\uff0c\u9996\u5148\u60f3\u8bf4\u7684\u662f\uff0c\u6210\u7ee9\u5176\u5b9e\u591f\u7528\u5c31\u884c\uff0c\u6ca1\u5fc5\u8981\u6709\u592a\u5927\u538b\u529b\uff08\u5f53\u7136\u80fd\u5c3d\u91cf\u9ad8\u5f53\u7136\u66f4\u597d\u554a\uff09\u6b64\u5916\u6309\u7167\u6211\u5bf9\u81ea\u5df1\u8eab\u8fb9\u4e00\u4e2a\u57fa\u672c\u95e8\u95e8\u4e3b\u4fee\u79d1\u76ee\u6ee1\u7ee9\u7684\u540c\u5b66\u89c2\u5bdf\uff0c\u5176\u5b9e\u73b0\u5728\u7afa\u9662\u7684\u8bfe\u7a0b\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u5982\u679c\u4f60\u7b97\u6bd4\u8f83\u7075\u5149\u7684\u540c\u5b66\uff0c\u4f60\u80fd\u591f\u505a\u5230\u4e0a\u8bfe\u6309\u65f6\u542c\u8bb2\uff08\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u81ea\u5b66\u4e5f\u53ef\u4ee5\uff0c\u4f46\u6ce8\u610f\u8981\u8ddf\u4e0a\u8fdb\u5ea6\uff09\uff0c\u8bfe\u540e\u5b8c\u6210\u4f5c\u4e1a\uff08\u771f\u7684\u76f8\u5f53\u91cd\u8981\uff01\uff01\uff01\uff09\uff0c\u8003\u524d\u5bf9\u77e5\u8bc6\u70b9\u8fdb\u884c\u4e00\u4e2a\u603b\u7ed3\u68b3\u7406\uff0c\u4f60\u5c31\u53ef\u4ee5\u62ff\u5230\u5f88\u597d\u7684\u6210\u7ee9\u4e86\u3002</p> <p>\u6b64\u5916\u5c31\u662f\uff0c\u5927\u4e00\u4e0a\u7684\u6210\u7ee9\u771f\u7684\u6709\u4e9b\u65f6\u5019\u4f5c\u7528\u5f88\u5927\u554a\u554a\u554a\u554a\u554a\u554a\u554a\u554a\uff01\u6dd1\u82ac\u8003\u8bd5\u771f\u7684\u5c31\u662f\u770b\u4f60\u671f\u672b\uff0c\u6240\u4ee5\u4e4b\u540e\u7684\u540c\u5b66\u4e00\u5b9a\u4e00\u5b9a\u8981\u597d\u597d\u8003\u3002\u5c31\u662f\u5927\u4e00\u4e0a\u5176\u5b9e\u60f3\u6709\u4e2a\u5f88\u9ad8\u7684\u7ee9\u70b9\u8fd8\u662f\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u677e\u7684\uff0c\u4f46\u5927\u4e00\u4e0b\u5c31\u4e0d\u90a3\u4e48\u5bb9\u6613\u4e86\u3002\u5230\u5927\u4e8c\u4e13\u4e1a\u8bfe\uff08\u6307cs\uff09\u65b9\u5dee\u53c8\u6ca1\u90a3\u4e48\u5927\u3002\u6240\u4ee5\u5927\u4e00\u7684\u65f6\u5019\u8fd8\u662f\u8981\u597d\u597d\u52aa\u529b\u7684\u3002</p> <p>\u907f\u96f7\u7684\u4e00\u70b9\u5c31\u662f\u7ebf\u6027\u4ee3\u6570\uff0c\u53d7\u8fc73b1b\u548c18.06\u7684\u6d17\u793c\uff0c\u6211\u89c9\u5f97\u81ea\u5df1\u5df2\u7ecf\u4e86\u7136\u638c\u63e1\u4e86\u201c\u7ebf\u6027\u4ee3\u6570\u7684\u672c\u8d28\u201d\uff08\u7b11\u6b7b\uff09\uff1b\u4f46\u4ece\u6210\u7ee9\u6765\u770b\uff08\u7a33\u5b9a\u768478\u5206\uff09\uff0c\u771f\u7684\u5bf9\u4e8e\u8fd9\u95e8\u79d1\u76ee\u7684\u5b66\u4e60\uff0c\u5927\u5bb6\u4e00\u5b9a\u4e00\u5b9a\u662f\u8981\u591a\u7ec3\u4e60\u9898\u76ee\u7684\u3002\u5b66\u4f1a\u7528\u8001\u5e08\u80fd\u770b\u61c2\u7684\u8bed\u8a00\u8868\u8fbe\u51fa\u6765\u662f\u5341\u5206\u91cd\u8981\u7684\u3002</p> <p>\u6211\u5f88\u611f\u8c22\u8fd9\u4e9b\u5927\u4e00\u6559\u6211\u8bfe\u7a0b\u7684\u8001\u5e08\uff0c\u793e\u4f1a\u5b66\u5165\u95e8\u7684lq\u8001\u5e08\uff08\u4e00\u4e2a\u6211\u5927\u5b66\u552f\u4e00\u975e\u5e38\u6709\u6536\u83b7\u7684\u8bfe\u7a0b\uff09\uff0c\u4ee5\u53ca\u7fc1\u607a\u8001\u5e08\u751f\u52a8\u7684\u8bfe\u5802\u2026\u2026\u2026\u2026\uff08\u4f46\u76f8\u5f53\u591a\u7684\u8bfe\u7a0b\u6211\u90fd\u6ca1\u600e\u4e48\u542c\u8fc7\u8bfe\uff0c\u6240\u4ee5\u6211\u4e5f\u5c31\u4e0d\u5efa\u8bae\u4ec0\u4e48\u4e86\uff09\u800c\u5173\u4e8e\u6df7\u5408\u73ed\u5f88\u591a\u8ba9\u4eba\u5410\u69fd\u7684\u8bfe\u7a0b\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u5b66\u8fc7\u5316\u5b66\u7684\u540c\u5b66\u6211\u89c9\u5f97\u786e\u5b9e\u662f\u8270\u96be\u7684\uff0c\u4f46\u5176\u4ed6\u8bfe\u7a0b\u5176\u5b9e\u633a\u4e00\u633a\u71ac\u4e00\u71ac\u5c31\u8fc7\u6765\u4e86\u3002\u6df7\u5408\u6709\u6df7\u5408\u7684\u597d\uff0c\u9662\u5916\u6709\u9662\u5916\u7684\u597d\uff0c\u8fd9\u4e2a\u5927\u5bb6\u81ea\u5df1\u8861\u91cf\u5229\u5f0a\uff0c\u5982\u679c\u51b3\u5b9a\u9000\u9662\u8fd8\u662f\u5c3d\u65e9\u9000\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_6","title":"\u5173\u4e8e\u751f\u6d3b","text":"<p>\u5bf9\u4e8e\u751f\u6d3b\u800c\u8a00\uff0c\u6211\u81ea\u5df1\u662f\u4e00\u4e2a\u5c24\u4e3a\u6ce8\u91cd\u751f\u6d3b\u54c1\u8d28\u7684\u4eba\uff0c\u89c9\u5f97\u5feb\u4e50\u662f\u73b0\u5728\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u8fd9\u6837\u4f7f\u6211\u5e73\u65f6\u751f\u6d3b\u5c24\u4e3a\u201c\u4e30\u5bcc\u201d\u5427\uff0c\u53f0\u7403\u3001\u5531\u6b4c\u3001\u5065\u8eab\u2026\u2026\u4f46\u6709\u65f6\u53c8\u4f1a\u89c9\u5f97\u5927\u5b66\u751f\u6d3b\u9664\u4e86\u8fd9\u4e9b\u597d\u50cf\u4e5f\u6ca1\u592a\u591a\u5feb\u4e50\u7684\u4e8b\u60c5\u53ef\u4ee5\u505a\uff08\u53ef\u4ee5\u7ed9\u6211\u5efa\u8bae\uff09\uff0c\u6240\u4ee5\u5bf9\u6e38\u620f\u4e5f\u662f\u70ed\u60c5\u4e00\u6bb5\u65f6\u95f4\u5c31\u53c8\u4e0d\u73a9\u4e86\u2026\u2026</p> <p>\u4eba\u9645\u4ea4\u5f80\u662f\u5927\u4e00\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u90e8\u5206\u5427\uff0c\u4f46\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u80fd\u6d3b\u51fa\u771f\u5b9e\u7684\u81ea\u5df1\uff0c\u7136\u540e\u4e0d\u4f46\u6539\u8fdb\u5e76\u5f52\u675f\u81ea\u5df1\u7684\u8a00\u884c\u3002\u80fd\u591f\u4eab\u53d7\u5feb\u4e50\u7684\u751f\u6d3b</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_7","title":"\u793e\u56e2","text":"<p>\u793e\u56e2\u662f\u5927\u5bb6\u5927\u4e00\u9762\u4e34\u7684\u7b2c\u4e00\u9879\u5bf9\u5916\u793e\u4ea4\u7684\u6d3b\u52a8\u5427\u2026\u2026\u5f53\u65f6\u5e74\u5c11\u7684\u6211\u9762\u4e86\u4e24\u4e2a\u90e8\u95e8\uff08\u5b66\u7814\u548c\u89c6\u89c9\uff09\uff0c\u7136\u800c\u4e24\u4e2a\u90e8\u95e8\u90fd\u63d0\u524d\u8981\u4e86\u6211\uff0c\u540e\u6765\u7ecf\u8fc7\u4e00\u756a\u601d\u60f3\u6597\u4e89\u540e\uff0c\u8fd8\u662f\u51b3\u5b9a\u4e24\u4e2a\u90fd\u7559\u4e0b\u6765\u3002\u6211\u627f\u8ba4\u4f1a\u8ba4\u8bc6\u975e\u5e38\u591a\u7684\u4eba\uff0c\u4f46\u5ba2\u89c2\u800c\u8a00\u4f60\u7684\u5b66\u751f\u5de5\u4f5c\u8fd8\u662f\u6709\u4e9b\u7e41\u91cd\u7684\u3002\u4f46\u6211\u8fd8\u662f\u4e0d\u5f97\u4e0d\u5b89\u5229\u8fd9\u4e24\u4e2a\u90e8\u95e8\uff0c\u771f\u7684\u5e26\u7ed9\u4e86\u6211\u5f88\u591a\u522b\u6837\u7684\u6536\u83b7\u4e0e\u56de\u5fc6\u2026\u2026</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_8","title":"\u5c0f\u56e2\u4f53","text":"<p>\u53d7\u5230\u75ab\u60c5\u539f\u56e0\u7684\u5f71\u54cd\uff0c\u8d77\u521d\u6211\u4eec\u516d\u4e2a\u4eba\u4ee5\u7ea6\u4e52\u4e53\u7403\u5efa\u8d77\u4e86\u8fd9\u4e2a\u7fa4\uff0c\u540e\u6765\u57fa\u672c\u4e0a\u6bcf\u5468\u90fd\u4f1a\u4e00\u8d77\u5403\u996d\u805a\u9910\uff0c\u75ab\u60c5\u7684\u65f6\u5019\u751a\u81f3\u7531\u4e8e\u7ebf\u4e0a\u4e0a\u8bfe\uff0c\u6211\u4eec\u51e0\u4e4e\u5929\u5929\u89c1\u9762\u3002\u6211\u5bf9\u6211\u4eec\u51e0\u4e2a\u4eba\u6709\u7740\u522b\u6837\u7684\u611f\u60c5\uff0c\u4e5f\u6709\u7740\u522b\u6837\u7684\u56de\u5fc6\uff0c\u4e5f\u6559\u4f1a\u4e86\u6211\u5f88\u591a\u4e1c\u897f\u3002\u6211\u4eec\u516d\u4e2a\u4eba\uff0c\u6211\u80fd\u6e05\u6670\u611f\u53d7\u5230\u6211\u4eec\u6bcf\u4e2a\u4eba\u7684\u601d\u60f3\u4e0e\u6027\u683c\u4ece\u6839\u672c\u4e0a\u800c\u8a00\u662f\u622a\u7136\u4e0d\u540c\u7684\u516d\u4e2a\u4eba\uff1b\u6b64\u5916\u4fbf\u662f\u6211\u4eec\u4e0d\u8981\u5bf9\u8fd9\u79cd\u5173\u7cfb\u5728\u601d\u60f3\u4e0a\u8fdb\u884c\u67d0\u79cd\u675f\u7f1a\uff08\u4e0d\u8981\u8ba4\u4e3a\u51e0\u4e2a\u4eba\u5728\u4e00\u8d77\u73a9\u4f60\u4eec\u7684\u5173\u7cfb\u5c31\u4e00\u5b9a\u5f88\u597d\uff09\u8fd9\u91cc\u4e0d\u662f\u8bf4\u6211\u4eec\u51e0\u4e2a\u4e0d\u597d\uff0c\u800c\u662f\u8bf4\u4e0d\u8981\u5728\u6700\u521d\u7684\u65f6\u5019\u8fdb\u884c\u8fd9\u79cd\u5b9a\u4e49\uff0c\u4ed6\u4f1a\u8ba9\u4f60\u89c9\u5f97\u4f60\u4eec\u5f88\u719f\uff0c\u771f\u6b63\u5173\u7cfb\u7684\u8f6c\u53d8\u8fd8\u662f\u9700\u8981\u5efa\u7acb\u5728\u67d0\u4e9b\u4e8b\u60c5\u7684\u53d1\u751f\u4e0e\u76f8\u4e92\u66f4\u6df1\u5165\u7684\u4e86\u89e3\u7684\u3002</p> <p>\u6211\u5f88\u6000\u5ff5\u6211\u4eec\u5728\u4e00\u8d77\u7684\u65f6\u5149\uff0c\u4e5f\u611f\u8c22\u6700\u521d\u7684\u9047\u89c1\u3002\u6bd5\u7adf\u4f60\u4eec\u4fbf\u51e0\u4e4e\u5145\u6ee1\u4e86\u6211\u7684\u5927\u4e00\u751f\u6d3b\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#cs","title":"\u5173\u4e8eCS","text":"<p>\u5927\u5bb6\u6765\u5230\u6d59\u5927\u4e86\u4e4b\u540e\u6211\u5e38\u5e38\u4f1a\u542c\u5230\u5bf9\u5927\u4e00\u6559\u592a\u5c11\u76f8\u5173\u4e13\u4e1a\u6027\u77e5\u8bc6\u3002\u6211\u627f\u8ba4C\u5c0f\u4e0eC\u5927\u6559\u7684\u4e1c\u897f\u662f\u6bd4\u8f83\u5c11\u7684\uff08\u867d\u7136\u4e0b\u5c4a\u5c31\u8bfe\u6539\u4e860\uff0c\u4f46\u5176\u5b9e\u6211\u4eec\u81ea\u5df1\u5728\u8bfe\u5916\u662f\u53ef\u4ee5\u6709\u5f88\u591a\u8d44\u6e90\u53bb\u5b66\u4e60\u7684\u3002\u6bd4\u5982csdiy.wiki\u3002\u6b64\u5916\u4fbf\u662f\u6211\u89c9\u5f97\u5927\u5bb6\u53ef\u4ee5\u9002\u5f53\u7684\u5728\u5927\u4e00\u79ef\u7d2f\u4e00\u4e9b\u5de5\u5177\u6027\u7684\u4e1c\u897f\uff0c\u6bd4\u5982missing semester\u3002\u4f46\u4e0d\u8981\u628a\u8fd9\u4e9b\u5de5\u5177\u770b\u7684\u592a\u91cd\uff0c\u5f88\u591a\u77e5\u8bc6\u9700\u8981\u4f60\u4f1a\u7684\u65f6\u5019\u4f60\u81ea\u7136\u5c31\u4f1a\u4e86\u3002</p> <p>\u9a6c\u4e0a\u5927\u4e8c\u4e86\uff0c\u6211\u4e5f\u6253\u7b97\u8d2d\u7f6e\u663e\u793a\u5668\u548c\u4e3b\u673a\uff0c\u5728\u5bbf\u820d\u6b63\u5f0f\u5f00\u59cb\u81ea\u5b66\u4e4b\u65c5\u4e86\uff08\u72d7\u5934\uff09\u3002\u6211\u4f1a\u5728\u6211\u7684\u7b14\u8bb0\u4e2d\u8bb0\u5f55\u81ea\u5b66\u8fc7\u7a0b\uff0c\u5f53\u7136\u4e5f\u66f4\u591a\u53bb\u63a2\u7d22\u5199\u56fd\u5916\u522b\u7684\u65b9\u5411\u7684\u8bfe\u7a0b\uff08\u5982 UCB CS294\u7b49\u7b49\uff09\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u7ed9\u6211\u4e9b\u76f8\u5173\u7684\u5efa\u8bae\u2026\u2026</p> <p>\uff08\u76ee\u524d\u51c6\u5907CSAPP\u3001CS106L\u3001 CS61B\u3001CS50-AI\uff09</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_9","title":"\u4e00\u70b9\u70b9\u79d1\u7814","text":"<p>\u5173\u4e8e\u8fd9\u4e2a\u65b9\u9762\u6211\u81ea\u5df1\u4e86\u89e3\u4e86\u5f88\u591a\u65b9\u5411\uff0c\u73b0\u5728\u603b\u5f97\u6765\u8bf4\u81ea\u5df1\u662f\u5bf9MLSys\u8fd9\u4e2a\u65b9\u5411\u5f88\u611f\u5174\u8da3\uff0c\u5df2\u77e5\u738b\u5219\u53ef\u8001\u5e08\u5728\u505a\u8fd9\u4e2a\u65b9\u5411\u3002\uff08\u4e0d\u77e5\u9053\u5927\u5bb6\u8fd8\u6709\u6ca1\u6709\u4ec0\u4e48\u5efa\u8bae\u7684\u8001\u5e08\uff09\uff1b\u6b64\u5916\u4fbf\u662f\u6768\u6613\u8001\u5e08\u5728\u505a\u7684\u591a\u6a21\u6001\u5b66\u4e60\uff1b\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u80fd\u591f\u52a0\u5165\u5230ZJUSCT\uff08\u8d85\u7b97\u961f\uff09\u4e2d\u53bb\u8fdb\u884c\u66f4\u8fdb\u4e00\u6b65\u7684\u5b66\u4e60\u3002</p>"},{"location":"spark%20in%20life/college%20life/freshman/#_10","title":"\u7ed3\u8bed","text":"<p>\u4e00\u8def\u4e0a\u5199\u5199\u505c\u505c\uff0c\u4e0d\u77e5\u4e0d\u89c9\u5c31\u5230\u7ad9\u4e86\u3002\u6211\u60f3\u8bf4\uff0c\u4eba\u751f\u5c31\u4eff\u4f5b\u8fd9\u8f86\u56de\u5bb6\u7684\u52a8\u8f66\u4e00\u6837\uff0c\u77e5\u9053\u8d77\u70b9\u4e0e\u7ec8\u70b9\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\u611f\u53d7\u6cbf\u9014\u7684\u7cbe\u5f69\uff1b\u4eba\u751f\u53c8\u597d\u50cf\u4e00\u573a\u6ca1\u6709\u5f69\u6392\u7684\u8868\u6f14\uff0c\u6bcf\u65f6\u6bcf\u523b\u90fd\u662f\u73b0\u573a\u76f4\u64ad\u3002\u6211\u7684\u5927\u4e00\u4e5f\u63a5\u8fd1\u5c3e\u58f0\u4e86\uff0c\u8fd9\u4e2a\u6691\u5047\u60f3\u591a\u56de\u53bb\u597d\u597d\u966a\u966a\u7236\u6bcd\u3002\u6211\u4e5f\u5bf9\u81ea\u5df1\u7684\u5927\u4e00\u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u603b\u7ed3\uff0c\u5e0c\u671b\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u80fd\u6d3b\u51fa\u81ea\u5df1\u7cbe\u5f69\u7684\u4eba\u751f\uff01</p>"},{"location":"spark%20in%20life/skills/cook/","title":"\u7f8e\u98df\u8bb0\u5f55","text":"<p>\u867d\u7136\u7a0b\u5e8f\u5458\u5728\u5929\u5929\u6572\u4ee3\u7801\uff0c\u4f46\u6211\u4eec\u4e5f\u4e0d\u80fd\u5fd8\u8bb0\u751f\u6d3b\u554a\uff01\u8fd9\u91cc\u5206\u4eab\u4e00\u4e2alink\uff0c\u91cc\u9762\u975e\u5e38\u5168\u7684\u6559\u7a0b\u3002\u5f53\u7136\u6211\u4e5f\u63a8\u8350\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u5c0f\u7ea2\u4e66\u6216\u8005\u6296\u97f3\u6765\u89c6\u9891\u5b66\u4e60\uff01</p>"},{"location":"spark%20in%20life/skills/driver%20license/","title":"\u9a7e\u7167","text":""},{"location":"spark%20in%20life/skills/driver%20license/#_2","title":"\u79d1\u4e00","text":"<p>\u8003\u8bd5\u6280\u5de7\uff1a\u5927\u5bb6\u53ef\u4ee5\u5148\u628a\u4e0d\u4f1a\u7684\u9898\u7a7a\u7740\uff0c\u4e0d\u8981\u56e0\u4e3a\u731c\u9519\u5f71\u54cd\u5fc3\u60c5\u3002\u7b49\u5168\u90e8\u7b54\u5b8c\u540e\u5982\u679c\u4e0d\u4f1a\u7684\u9898\u5c0f\u4e8e\u7b49\u4e8e10\u9053\u7684\u8bdd\u90a3\u4e48\u4f60\u53ef\u4ee5\u76f4\u63a5\u8499\u5566\uff01</p> <ol> <li> <p>\u670990\u900990\uff0c\u6ca190\u900930\uff1b\u5224\u65ad\u9898\u51fa\u73b030\u90fd\u662f\u6b63\u786e\u7684</p> </li> <li> <p>\u5468\u671f\u6216\u8005\u5b9e\u4e60\u671f\u5c31\u662f12\u4e2a\u6708</p> </li> <li> <p>\u6709\u6548\u671f3\u5e74\u2026\u2026</p> </li> <li> <p>\u201c\u6bcf\u4e24\u5e74\u201d\u90fd\u662f\u9519\u7684\uff0c\u662f\u201c\u6bcf\u5e74\u201d</p> </li> <li> <p>\u76f4\u63a5\u627e\u8fdd\u6cd5\u884c\u4e3a\uff5c\u8d23\u4efb\u627e\u5211\u4e8b\u6216\u8005\u5168\u90e8</p> </li> <li> <p>\u9057\u5931\u3001\u8865\u9886\u53bb\u2014\u2014\u6838\u53d1\u5730\uff1b\u671f\u6ee1\u6362\u8bc1\u53ef\u4ee5\u5c45\u4f4f\u5730\uff08\u8f66\u767b\u8bb0\u3001\u7167\u6838\u53d1\uff09</p> </li> <li> <p>\u88ab\u540a\u9500\u3001\u88ab\u6ce8\u9500\u90fd\u662f\u6b63\u786e\u7684\uff0c\u4e0d\u5408\u9002\u5c31\u4e0d\u80fd\u5f00\u8f66</p> </li> <li> <p>\u4e0d\u5f97\u7533\u8bf7\u9a7e\u9a76\u8bc1\u7684\u65f6\u95f4\u2014\u2014\u50471\u3001\u9a97\u626f\u6bd23\u3001\u91895\u3001\u9003\u7f6a\u7ec8\u751f\uff1b\u5047\u6750\u6599500\uff0c\u5047\u8003\u8bd52000.</p> </li> <li> <p>\u901f\u5ea6\uff1a\u7ea2\u9ad8\u84dd\u4f4e\u9ec4\u5efa\u8bae\u2014\u2014\u5730\u4e0a\u9ec4\u9ad8\u767d\u4f4e\uff1a\u5371\u9669\u9053\u8def\u901f\u5ea6\u226430km</p> </li> </ol> <p>2 6 1</p> <p>1 4 5</p> <p>5 2 \u79bb</p> <ol> <li> <p>\u9ad8\u901f\u516c\u8def 11-12 11-9 9-6\uff5c\uff5c10-12 6-10</p> <p>\u6709\u7ebf\u2014\u2014\u57ce5\u516c7</p> <p>\u65e0\u7ebf\u2014\u2014\u57ce3\u516c4</p> </li> <li> <p>\u7279\u6b8a\u5929\u6c14\u2014\u2014\u96e8\u5929\u627e\u6ed1\u3001\u51b0\u96ea\u627e\u5236\u52a8\u3001\u96ea\u5929\u627e\u8f66\u8f99\u3001\u6ce5\u6cde\u627e\u8f66\u8f6e\u3001\u96fe\u5929\u591c\u665a\u56de\u5e94\u5587\u53ed</p> </li> <li> <p>abs\u2014\u2014\u7d27\u6025\u5236\u52a8\uff1b\u5b89\u5168\u5e26\u2014\u2014\u51cf\u8f7b\u4f24\u5bb3\uff1b\u5b89\u5168\u5934\u2014\u2014\u6795\u4fdd\u62a4\u9888\u90e8\uff1b\u5b89\u5168\u6c14\u56ca\u2014\u2014\u8f85\u52a9\uff1b</p> </li> <li> <p>\u6709\u6ed1\u884c\u5c31\u662f\u9519</p> </li> <li> <p>\u6c7d\u6cb9\u4e0d\u8db3 \u2014\u2014&gt;\u71c3\u6cb9\u4e0d\u8db3</p> </li> <li> <p>\u4ea4\u8b66\u624b\u52bf\u2014\u2014\u6342\u4f4f\u80f8\u53e3\u662f\u53d8\u9053\uff0c\u6478\u5230\u4f1e\u6746\u662f\u4ee3\u8f6c\uff0c\u8f6c\u5f2f\u770b\u54ea\u4e2a\u624b\u4f4e\uff0c\u4e00\u53ea\u624b\u4e00\u9ad8\u4e00\u4f4e\u662f\u51cf\u901f</p> </li> <li> <p>\u4e09\u6846\u9ec4\u706f\u2014\u2014\u4fe1\u53f7\u89e3\u9664\uff1b\u4e00\u4e2a\u6846\u9ec4\u706f\u2014\u2014\u6ce8\u610f\u5b89\u5168</p> </li> <li> <p>\u7ea2\u6846\u4e09\u89d2\u2014\u2014\u54ea\u8fb9\u6709\u4e09\u89d2\u54ea\u8fb9\u901a\u884c</p> </li> <li> <p>\u8def\u8fb9\u9ec4\u8272\u865a\u7ebf\u6216\u8005\u4e00\u4e2a\u7ea2\u8272\u659c\u6760\u2014\u2014\u7981\u6b62\u957f\u65f6\u95f4\u505c\u8f66</p> <p>\u9ec4\u8272\u5b9e\u7ebf\u6216\u8005\u7ea2\u8272\u274c\u2014\u2014\u5b8c\u5168\u7981\u6b62\u505c\u8f66</p> </li> <li> <p>\u8def\u53e3\u2014\u2014\u6709\u9f7f\u53ef\u53d8\uff1b\u65e0\u9f7f\u5bfc\u5411</p> </li> <li> <p>\u51cf\u901f\u6807\u5fd7\u7ebf\u6709\u4e09\u79cd</p> </li> <li> <p>\u83f1\u5f62\u662f\u4eba\u884c\u6a2a\u9053\u7684\u9884\u544a\u3002</p> </li> <li> <p>\u8def\u4e0a\u9ec4\u8272\u865a\u7ebf\u662f\u6307\u793a\u6807\u7ebf\uff1b\u5982\u679c\u662f\u5b9e\u7ebf\u90a3\u4e48\u5b8c\u5168\u4e0d\u80fd\u538b\u3002</p> </li> <li> <p>\u4e00\u6025\u4e8c\u53cd\u4e09\u8fde\u7eed</p> </li> <li> <p>\u4e24\u8f66\u76f8\u649e\u627e\u4e8b\u6545\u6613\u53d1</p> </li> <li> <p>\u5e26\u201c\u9053\u201d\u5b57\u662f\u84dd\u8272\u6807\u5fd7</p> </li> <li> <p>\u4e0a\u4e0b\u662f\u53cc\u5411\uff0c\u5de6\u53f3\u662f\u5206\u79bb</p> </li> <li> <p>\u5c0f\u706b\u7bad\u662f\u5e72\u8def\u5148\u884c</p> </li> <li> <p>\u8def\u53e3\u524d\u7aef\u53cc\u767d\u5b9e\u7ebf\u662f\u505c\u8f66\u8ba9\u884c\u7684\u610f\u601d</p> </li> <li> <p>\u505c\u8f66\u8ddd\u79bb\uff1a\u53e35 \u7ad93</p> </li> <li> <p>\u78b0\u89c1\u5835\u8f66\u5c31\u4e0d\u8d70</p> </li> <li> <p>\u4e24\u6761\u8f66\u9053\u524d\u65b9\u505c\u8981\u7b49</p> </li> <li> <p>\u5e86\u5e78\u7275\u5f15\u6302\u8f66\u51c6\u9a7e\u8f66\u578b\uff08C6\uff09\u8981c1\uff0cc2\u4e00\u5e74\u4ee5\u4e0a\uff0c20\u5468\u5c81\u4ee5\u4e0a\u3002</p> </li> <li> <p>\u4e24\u8bc1\u4e24\u6807\uff08\u68c0\u9a8c\u6807\u548c\u4fdd\u9669\u6807\uff09\u4e00\u53f7\u724c</p> </li> <li> <p>\u5371\u9669\u9a7e\u9a76\u7f6a\uff1a\u7ade\u9a76\u6216\u9189\u9a7e\uff0c\u5904\u62d8\u5f79\u7f5a\u91d1\u3002</p> </li> <li> <p>\u6821\u8f66\u5ba2\u8fd0\u8f66\uff0c\u8d85\u8f7d20%\u626312\u5206\uff0c\u4ee5\u4e0b\u62636\u5206</p> </li> <li> <p>\u5ba2\u6302\u4e0d\u80fd\u521d\u7533\u9886\uff0c\u589e\u9a7e\u8981\u627e\u6838\u53d1\u5730\u3002</p> </li> </ol>"},{"location":"spark%20in%20life/skills/driver%20license/#_3","title":"\u6263\u5206\uff1a","text":"<p>\u9ad8\u901f\u516c\u8def\u9006\u884c12\u3001\u8fdd\u505c9\u3001\u5e94\u60256\u3001\u4f4e\u4fd73</p> <p>\u5047\u8bc1\u5047\u724c12\u5206\uff0c\u906e\u6321\u4e0d\u6302\u62639\u5206\uff0c\u8fdd\u89c4\u5b89\u88c53\u5206\u3002</p> <p>\u672a\u8fbe12\u6263\u5206\uff0c\u53ef\u4ee5\u5b66\u6cd5\u51cf\u5206\uff0c\u6700\u9ad8\u51cf6\u5206</p> <p>\u8fdd\u6807\u8fdd\u7ebf\uff0c\u8fdd\u89c4\u7528\u706f\uff0c\u672a\u6309\u65f6\u5e74\u68c0\uff0c\u90fd\u62631\u5206</p>"},{"location":"spark%20in%20life/skills/kickboxing/","title":"KickBoxing \u81ea\u7531\u640f\u51fb","text":"<p>\u56e0\u4e3a\u81ea\u5df1\u4e00\u76f4\u60f3\u5b66\u640f\u51fb\uff0c\u5948\u4f55\u4e00\u76f4\u6ca1\u6709\u627e\u5230\u6bd4\u8f83\u5408\u9002\u7684\u673a\u4f1a\uff0c\u6070\u9022\u5927\u4e00\u6691\u5047\u76f8\u5bf9\u8fd8\u7b97\u7a7a\u95f2\uff0c\u6545\u817e\u51fa\u4e00\u4e2a\u6708\u7684\u65f6\u95f4\u6bcf\u5929\u4e00\u4e2a\u591a\u5c0f\u65f6\u8fdb\u884c\u79c1\u6559\u7ec3\u4e60\uff0c\u6211\u4e5f\u4f1a\u8bb0\u5f55\u4e00\u4e9b\u5176\u4e2d\u7684\u5173\u952e\u70b9\u3002</p>"},{"location":"spark%20in%20life/skills/kickboxing/#_1","title":"\u521d\u4f53\u9a8c","text":"<ol> <li>\u70ed\u8eab\u4f1a\u6d3b\u52a8\u80a9\u3001\u8de8\u3001\u4ee5\u53ca\u817f\u811a\u7684\u7075\u6d3b\u6027\u3002</li> <li>\u7b80\u5355\u7684\u524d\u624b\u548c\u540e\u624b\u7684\u8bad\u7ec3\u3002\u524d\u624b\u770b\u4f3c\u7b80\u5355\u4f46\u5b9e\u5219\u5b9e\u7528\u6027\u8f83\u9ad8\uff0c\u5e76\u4e14\u5728\u62f3\u51fb\u8fc7\u7a0b\u4e2d\u8d77\u5230\u8bd5\u63a2\u548c\u628a\u63e1\u8ddd\u79bb\u7684\u4f5c\u7528\u3002\u540e\u624b\u8981\u6ce8\u610f\u8f6c\u80ef\u9001\u80a9\uff0c\u91cd\u5fc3\u653e\u7a33\uff0c\u811a\u5916\u65cb\uff0c\u6253\u5b8c\u5373\u6536\uff08\u7c7b\u4f3c\u4e8e\u97ad\u6253\u7684\u52b2\uff09\u3002</li> <li>\u6253\u62f3\u65f6\u8981\u8db3\u4ee5\u811a\u4e0b\u7684\u7075\u6d3b\u6027\u4ee5\u53ca\u52a8\u4f5c\uff0c\u505a\u5230\u8fdb\u9000\u81ea\u5982\u7075\u6d3b\u3002\u51fa\u62f3\u65f6\u8981\u6709\u8282\u594f\u7684\u5410\u6c14\u3002</li> <li>\u51c6\u5907\u5f0f\u8981\u6ce8\u610f\u62a4\u4e0b\u5df4\u4ee5\u53ca\u5939\u8098\uff0c\u7531\u4e8e\u81ea\u5df1\u4e2a\u5b50\u76f8\u5bf9\u8f83\u9ad8\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u538b\u91cd\u5fc3\uff0c\u53ea\u9700\u8981\u505a\u5230\u5c48\u819d\u6536\u7d27\u6838\u5fc3\uff08\u4e0d\u8981\u6485\u5c41\u80a1\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u88ab\u51fb\u6253\u7684\u9762\u79ef\u3002</li> </ol>"},{"location":"spark%20in%20life/skills/kickboxing/#_2","title":"\u4f53\u6001\uff08\u6708\u521d\uff09","text":"<p>\u4f53\u91cd72.9 \u5e73\u677f\u652f\u64911.22 \u4fef\u5367\u649130 \u6df1\u8e7260 \u5f15\u4f536</p>"},{"location":"spark%20in%20life/skills/kickboxing/#_3","title":"\u70ed\u8eab\uff08\u6ce1\u6cab\u8f74\uff09","text":"<p>\u4e3b\u8981\u7684\u653e\u677e\u90e8\u4f4d\uff1a\u5c0f\u817f\uff0c\u81c0\u90e8\uff0c\u5927\u817f\u524d\u4fa7\uff0c\u80cc\u90e8\uff0c\u8170\u690e\u7b49\u3002 \u53c2\u8003\u89c6\u9891\uff1a</p>"},{"location":"spark%20in%20life/skills/kickboxing/#_4","title":"\u6b65\u4f10\u7ed3\u5408\u624b\u90e8","text":"<ol> <li>\u524d\u8fdb\u540e\u9000\u662f\u5206\u522b\u540e\u811a\u548c\u524d\u811a\u53d1\u529b\uff0c\u4e0d\u8981\u62d6\u6c93\uff0c\u91cd\u5fc3\u653e\u7a33</li> <li>\u6b65\u4f10\u7684\u5173\u952e\u662f\u638c\u63e1\u81ea\u5df1\u548c\u5bf9\u624b\u4e4b\u95f4\u7684\u8ddd\u79bb\u611f\u3002</li> <li>\u53ef\u4ee5\u540e\u9000\u540e\u6293\u7a7a\u9699\u51fa\u540e\u624b\u3002</li> </ol>"},{"location":"spark%20in%20life/skills/virtual%20location/","title":"\u865a\u62df\u5b9a\u4f4d","text":""},{"location":"spark%20in%20life/skills/virtual%20location/#ios","title":"ios\u624b\u673a\u7528\u6237","text":"<p>\u4e0b\u8f7d\u7231\u601d\u52a9\u624b\uff0c\u5728\u7231\u601d\u52a9\u624b\u7684\u5de5\u5177\u7bb1\u4e2d\u70b9\u51fb\u201c\u865a\u62df\u5b9a\u4f4d\u201d\u529f\u80fd\uff0c\u53ef\u4ee5\u8fdb\u884c\u4fee\u6539\u624b\u673a\u7684\u5b9a\u4f4d\u3002</p> <p>\u4fee\u6539\u524d\u9700\u8981\u901a\u8fc7\u6570\u636e\u7ebf\u8fde\u63a5\u624b\u673a\u8bbe\u5907\u3002(\u4e00\u4e9b\u8f83\u65b0\u7684ios\u7248\u672c\u4e0d\u652f\u6301\u66f4\u6539)</p> <p>\u7231\u601d\u52a9\u624b \u76ee\u524d\u652f\u6301 windows\u548cmac</p> <p>\u7231\u601d\u52a9\u624b\u5b98\u7f51\u4e0b\u8f7d\uff1ahttps://www.i4.cn/pro_pc.html</p> <p></p> <p>\u4e00\u822c\u6765\u8bf4\u9700\u8981\u6253\u5f00\u624b\u673a\u7684\u5f00\u53d1\u8005\u529f\u80fd</p> <p>\u8fde\u63a5\u540e\uff0c\u901a\u8fc7\u641c\u7d22\u5c31\u53ef\u4ee5\u627e\u5230\u5730\u5740\uff0c\u5e76\u76f4\u63a5\u5b9a\u4f4d\uff0c\u70b9\u51fb\u201c\u4fee\u6539\u865a\u62df\u5b9a\u4f4d\u201d\u6309\u94ae\u5373\u53ef\u7acb\u5373\u5b9a\u4f4d\uff0c\u4f60\u53ef\u4ee5\u6253\u5f00iOS\u9ed8\u8ba4\u5730\u56fe\u67e5\u770b\u5b9a\u4f4d\u662f\u5426\u6210\u529f\u3002 </p> <p>\u6b64\u5916\uff0c\u5982\u679c\u641c\u7d22\u4e0d\u5230\u7684\u5730\u5740\uff0c\u6216\u8005\u56fd\u5916\u65e0\u6cd5\u641c\u7d22\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5728\u5176\u5b83\u5730\u56fe\u4e0a\u83b7\u53d6\u5b9a\u4f4d\uff0c\u7136\u540e\u624b\u52a8\u8f93\u5165\u5750\u6807\u5c31\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4f4d\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\u6301\u7eed\u65f6\u95f4\u5927\u7ea6\u4e3a3-6h\u5de6\u53f3</p> <p>\u5982\u679c\u4e0d\u60f3\u518d\u5b9a\u4f4d\uff0c\u60f3\u8981\u6062\u590d\u539f\u72b6\uff0c\u70b9\u51fb\u201c\u8fd8\u539f\u771f\u5b9e\u5750\u6807\u201d\u5373\u53ef\u3002</p> <p></p>"},{"location":"spark%20in%20life/skills/virtual%20location/#_2","title":"\u5b89\u5353\u7528\u6237","text":""},{"location":"spark%20in%20life/skills/virtual%20location/#_3","title":"\u6253\u5361","text":"<p>\u7531\u4e8e\u865a\u62df\u5b9a\u4f4d\u4ee5\u53ca\u8f68\u8ff9\u7b49\u529f\u80fd\uff0c\u662f\u53ef\u4ee5\u5b9e\u73b0\u201c\u6253\u5361\u201d\u7684\uff0c\u4f46\u5efa\u8bae\u8c28\u614e\u4f7f\u7528\uff0c\u540e\u679c\u81ea\u8d1f\u3002</p> <p>\uff08\u6211\u4f1a\u5728\u4e4b\u540e\u62bd\u7a7a\u5199\u4e2a\u811a\u672c\u3002</p>"},{"location":"spark%20in%20life/travel/GuiZhou/","title":"\u5927\u4e00\u6691\u5047\u8d35\u5dde\u65c5\u884c","text":""},{"location":"spark%20in%20life/travel/GuiZhou/#_2","title":"\u51fa\u884c\u5efa\u8bae","text":"<ol> <li>\u643a\u7a0b\u4e0a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u884c\u7a0b\uff0c\u4ed6\u4f1a\u7ed9\u4f60\u8ba2\u597d\u9152\u5e97\u548c\u5305\u8f66\u7684\u670d\u52a1\uff1a\u4f46\u5305\u8f66\u643a\u7a0b\u4f1a\u62bd\u76f8\u5f53\u591a\u7684\u4e2d\u4ecb\u8d39\u5176\u4e2d\uff0c\u6211\u4eec\u5305\u8f666000\u5143\uff0c\u643a\u7a0b\u4f1a\u5176\u4e2d\u62bd\u53d62000\uff0c\u4f18\u70b9\u662f\u56db\u4eba\u4ee5\u4e0b\u7684\u8bdd\u76f8\u5bf9\u4f1a\u66f4\u65b9\u4fbf\uff0c\u4f46\u7f3a\u70b9\u5c31\u662f\u8d39\u7528\u8f83\u9ad8\u5e76\u4e14\u5982\u679c\u4f60\u4e2d\u95f4\u884c\u7a0b\u6709\u53d8\u5316\u53f8\u673a\u53ef\u80fd\u4f1a\u8981\u6c42\u52a0\u94b1\u4e4b\u7c7b\u7684\uff09\u3002\u56e0\u6b64\u5982\u679c\u6761\u4ef6\u5141\u8bb8\u7684\u8bdd\u53ef\u4ee5\u9009\u62e9\u79df\u8f66\u81ea\u9a7e\u7684\u65b9\u5f0f\u3002</li> <li>\u5927\u5bb6\u6700\u597d\u5e26\u4e0a\u80c3\u836f\u4e4b\u7c7b\u7684\uff0c\u6211\u81ea\u8ba4\u4e3a\u81ea\u5df1\u8fd8\u7b97\u53ef\u4ee5\u5403\u8fa3\u4f46\u662f\u4f9d\u65e7\u6709\u88ab\u8fa3\u5230\u3002</li> <li>\u6574\u4f53\u5929\u6c14\u8fd8\u662f\u6bd4\u8f83\u51c9\u5feb\u7684\uff0c\u53ef\u4ee5\u8003\u8651\u5e26\u4e0a\u4e00\u5957\u79cb\u8863\u3002\u6700\u597d\u81ea\u5907\u4e0aEVA\u96e8\u8863\uff0c\u51c9\u978b\u548c\u901f\u5e72\u7684\u8863\u670d\uff0c\u4f1a\u65b9\u4fbf\u5f88\u591a</li> <li>\u5982\u679c\u662f\u5b66\u751f\u7684\u8bdd\u8bb0\u5f97\u5e26\u5b66\u751f\u8bc1\uff0c\u80fd\u7701\u5f88\u591a\u94b1\u54df\uff01</li> <li>\u7f8e\u98df\u65b9\u9762\u8d35\u5dde\u5403\u7684\u771f\u7684\u76f8\u5f53\u5b9e\u60e0\uff0c\u6b63\u9910\u6211\u4eec\u4eba\u5747\u90fd\u572840\u5de6\u53f3\u3002</li> <li>\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8d35\u5dde\u51b0\u7c89\u76f8\u5f53\u597d\u5403\uff0c\u7ed9\u6211\u7559\u4e0b\u4e86\u5f88\u6df1\u7684\u5370\u8c61\u3002</li> </ol>"},{"location":"spark%20in%20life/travel/GuiZhou/#726","title":"7\u670826\u65e5 \u9075\u4e49","text":"<p>\u6e38\u73a9\uff1a\u9075\u4e49\u600e\u4e48\u8bf4\u5462\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\u6e38\u73a9\u65f6\u95f4\u5b89\u6392\u7684\u539f\u56e0\uff0c\u6211\u5728\u8fd9\u91cc\u5403\u5230\u4e86\u76f8\u5f53\u591a\u7684\u8d35\u5dde\u5c0f\u5403\u3002\u6bd4\u8f83\u63a8\u8350\u5728\u9075\u4e49\u6c47\u5740\u9644\u8fd1\u6e38\u73a9\uff0c\u611f\u53d7\u7ea2\u8272\u3001\u5386\u53f2\u610f\u4e49\u7684\u540c\u65f6\u9644\u8fd1\u5546\u4e1a\u5316\u6bd4\u8f83\u91cd\uff0c\u6709\u5c0f\u5403\u8857\u76f8\u5f53\u597d\u5403\u3002</p> <p>\u4f4f\u5bbf\uff1a\u63a8\u8350\u4f4f\u5728\u82cf\u5dde\u8def\u9644\u8fd1\uff0c\u665a\u4e0a\u591c\u5bb5\u5c0f\u5403\u975e\u5e38\u65b9\u4fbf\uff0c\u6211\u4f4f\u7684\u9152\u5e97\u662f\u201c\u9075\u4e49\u5929\u5b89\u5927\u9152\u5e97\u201d\uff0c\u73af\u5883\u4e0e\u5b83\u7684\u4ef7\u4f4d\u662f\u6bd4\u8f83\u5339\u914d\u7684\uff0c\u9152\u5e97\u65e9\u9910\u4e5f\u4e0d\u9519\u3002</p> <p>\u51fa\u884c\uff1a\u6253\u8f66\u975e\u5e38\u65b9\u4fbf\uff0c\u5927\u6982\u90fd\u572820\u5143\u5de6\u53f3\u3002</p> <p>\u7f8e\u98df\uff1a\u6d2a\u6865\u70e4\u9e21\u3001\u51b0\u7c89\u3001\u725b\u8089\u7c89\u3001\u70e7\u70e4\u3001\u70b8\u7c7b\u5c0f\u5403\u7b49\u7b49</p> <p>\u9644\uff1a\u6b64\u5916\u5c31\u662f\u670b\u53cb\u6709\u63a8\u8350\u53bb\u9644\u8fd1\u7684\u4e4c\u6c5f\u5be8\uff0c\u4f46\u7531\u4e8e\u65f6\u95f4\u7684\u539f\u56e0\u6211\u4eec\u6ca1\u6709\u53bb\uff0c\u4f46\u770b\u7f51\u8bc4\u6765\u8bf4\u8fd8\u662f\u6bd4\u8f83\u4e0d\u9519\u7684\u3002</p>"},{"location":"spark%20in%20life/travel/GuiZhou/#727","title":"7\u670827\u65e5 \u9ec4\u679c\u6811","text":"<p>\u6e38\u73a9\uff1a\u9ec4\u679c\u6811\u91cc\u6709\u4e09\u4e2a\u666f\u533a\uff0c\u7531\u4e8e\u6211\u4eec\u4e0a\u5348\u4ece\u8d35\u9633\u51fa\u53d1\u4e2d\u5348\u624d\u5230\uff0c\u6240\u4ee5\u65f6\u95f4\u7565\u663e\u7d27\u5f20\uff0c\u53ea\u770b\u4e86\u5927\u7011\u5e03\u548c\u5929\u661f\u6865\u3002\u89c2\u5149\u8f66\u5efa\u8bae\u4e70\uff0c\u7535\u68af\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u4f53\u529b\uff08\u6ca1\u5fc5\u8981\u4e70\u4e0b\u53bb\u7684\u7535\u68af\uff0c\u4e0a\u53bb\u7684\u7535\u68af\u53ef\u4ee5\u8d70\u5230\u7535\u68af\u53e3\u4e86\u518d\u4e70\uff09\u3002\u5929\u661f\u6865\u524d\u534a\u6bb5\u7684\u666f\u8272\u4e5f\u662f\u975e\u5e38\u597d\u770b\u7684\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\u56e0\u4e3a\u6211\u4eec\u53bb\u7684\u65f6\u5019\u4e0b\u96e8\u6da8\u6c34\uff0c\u7011\u5e03\u7684\u6c34\u7279\u522b\u5927\uff0c\u56e0\u6b64\u4e0d\u5efa\u8bae\u53bb\u76f4\u5bf9\u6700\u9ad8\u7684\u90a3\u4e2a\u89c2\u666f\u53f0\uff08\u662f\u4f1e\u90fd\u6321\u4e0d\u4f4f\u7684\u96e8\uff09</p> <p>\u4f4f\u5bbf\uff1a\u56e0\u4e3a\u53f8\u673a\u662f\u5b89\u987a\u4eba\uff0c\u6211\u4eec\u4fbf\u76f4\u63a5\u4f4f\u5728\u4e86\u5b89\u987a\u3002</p> <p>\u7f8e\u98df\uff1a\u975e\u5e38\u63a8\u8350\u5b89\u987a\u7684\u8c46\u7c73\u706b\u9505\u6216\u8005\u725b\u8089\u8c46\u7c73\u706b\u9505</p>"},{"location":"spark%20in%20life/travel/GuiZhou/#728","title":"7\u670828\u65e5 \u9a6c\u5cad\u6cb3","text":"<p>\u6e38\u73a9\uff1a\u4ece\u5b89\u987a\u5230\u5174\u4e49\u8f66\u7a0b\u5927\u81f4\u6709\u4e09\u4e2a\u5c0f\u65f6\u5de6\u53f3\u3002\u6211\u4eec\u53bb\u8fd9\u91cc\u7684\u76ee\u7684\u5c31\u662f\u6f02\u6d41\uff0c\u5f53\u7136\u6f02\u6d41\u4e5f\u662f\u76f8\u5f53\u7684\u523a\u6fc0\uff08\u6307\u6da8\u6c34\u671f\uff09\uff0c\u975e\u5e38\u5efa\u8bae\u5750\u524d\u4e24\u6392\u5176\u4e2d\u503c\u5f97\u5fc5\u5751\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u4e0d\u7528\u4e70\u666f\u533a\u95e8\u7968\uff01\uff01\uff01\u6f02\u6d41\u7684\u51fa\u53e3\u5c31\u5728\u666f\u533a\u91cc\u9762\uff0c\u800c\u4e14\u6f02\u6d41\u8d70\u5230\u666f\u533a\u7684\u90a3\u6761\u8def\u4f60\u53ef\u4ee5\u5f88\u597d\u7684\u770b\u5230\u4e07\u9a6c\u5954\u817e\u7011\u5e03\u3002\u751a\u81f3\u53ef\u4ee5\u8bf4\u8fd9\u4e2a\u7011\u5e03\u662f\u8981\u6bd4\u9ec4\u679c\u6811\u597d\u770b\u5f88\u591a\u7684\u3002</p> <p>\u4f4f\u5bbf\uff1a\u6211\u4eec\u5f53\u665a\u76f4\u63a5\u4f4f\u5728\u4e86\u5174\u4e49\u5e02\uff0c\u975e\u5e38\u63a8\u8350\u5f53\u5730\u7684\u4e00\u4e2a\u8fde\u9501\u9152\u5e97\u53eb\u201c\u9e93\u67ab\u9152\u5e97\u201d</p> <p>\u7f8e\u98df\uff1a\u63a8\u8350\u5e72\u9505\u725b\u8089\uff0c\u771f\u7684\u597d\u5403\uff01\uff01\uff01\u5c24\u5176\u8981\u627e\u5730\u9053\u7684\u8001\u7ba1\u5b50\u3002</p>"},{"location":"spark%20in%20life/travel/GuiZhou/#729","title":"7\u670829\u65e5 \u4e07\u5cf0\u6797\u4e0e\u4e0b\u53f8\u53e4\u9547","text":"<p>\u6e38\u73a9\uff1a\u65e9\u6668\u53ef\u4ee5\u53bb\u4e07\u5cf0\u6797\u98ce\u666f\u533a\uff0c\u57fa\u672c\u6ca1\u4ec0\u4e48\u538b\u529b\uff0c\u62cd\u62cd\u7167\u5565\u7684\u522b\u6709\u7279\u8272\u3002\u4e2d\u5348\u5de6\u53f3\u6211\u4eec\u51fa\u53d1\u53bb\u4e0b\u53f8\u53e4\u9547\uff08\u9884\u8ba1\u8f66\u7a0b5h\u5de6\u53f3\uff0c\u65f6\u95f4\u5176\u5b9e\u6709\u70b9\u4e45\u7684\uff09\u665a\u4e0a\u5230\u8fbe\u540e\u53ef\u4ee5\u5728\u53e4\u9547\u73a9\u800d\u4f4f\u5bbf\u3002\u665a\u4e0a\u7684\u65f6\u5019\u53ef\u4ee5\u79df\u5f53\u5730\u6c11\u65cf\u670d\u88c5\uff0c\u7167\u7247\u975e\u5e38\u51fa\u7247\uff01\uff01\uff01</p> <p>\u4f4f\u5bbf\uff1a\u6211\u4eec\u5f53\u665a\u4f4f\u5728\u4e86\u4e0b\u53f8\u53e4\u9547\u5185\u7684\u6c11\u5bbf\uff0c\u611f\u89c9\u975e\u5e38\u597d\u3002</p> <p>\u7f8e\u98df\uff1a\u4e2d\u5348\u53ef\u4ee5\u76f4\u63a5\u5728\u4e07\u5cf0\u6797\u5403\u201c\u82d7\u738b\u9c7c\u201d\u975e\u5e38\u597d\u5403\uff01\uff01\uff01\u665a\u4e0a\u53e4\u9547\u5185\u6709\u5f88\u591a\u5c0f\u5403\u7684\uff08\u5f53\u5730\u975e\u5e38\u7231\u5403\u72d7\u8089\uff0c\u4e0d\u80fd\u63a5\u53d7\u7684\u4eba\u6ce8\u610f\u54df\uff09</p>"},{"location":"spark%20in%20life/travel/GuiZhou/#730","title":"7\u670830\u65e5 \u4e0b\u53f8\u53e4\u9547\u4e0e\u8d35\u9633","text":"<p>\u6e38\u73a9\uff1a\u6211\u4eec\u65e9\u4e0a\u4e5d\u70b9\u53bb\u5212\u4e86\u8239\uff1a\u975e\u5e38\u5efa\u8bae\uff0c\u662f\u7c7b\u4f3c\u4e8e\u5c0f\u6c5f\u7684\u90a3\u79cd\u3002\u8d85\u65f6\u57281h30min\u5de6\u53f3\uff0c\u4f60\u4e0d\u542d\u58f0\u57fa\u672c\u90fd\u662f\u53ef\u4ee5\u7684\u3002\u4e2d\u5348\u51fa\u53d1\u53bb\u8d35\u9633\u5927\u69822h\u5de6\u53f3\uff0c\u6211\u4eec\u6e38\u73a9\u4e86\u7532\u79c0\u697c\uff08\u6211\u5728\u91cc\u9762\u7ed9\u5bb6\u4eba\u5e26\u4e86\u9996\u9970\uff0c\u611f\u89c9\u633a\u6709\u8bbe\u8ba1\u611f\u4e5f\u4e0d\u662f\u5f88\u5751\uff0c\u53ef\u4ee5\u8bb2\u4ef7\uff09\uff1b\u6bd4\u8f83\u9057\u61be\u7684\u662f\u6ca1\u80fd\u53bb\u8d35\u9633\u535a\u7269\u9986\uff08\u56e0\u4e3a4\u70b9\u505c\u6b62\u5165\u9662\uff09\u3002\uff08\u9ed4\u7075\u5c71\u516c\u56ed\u4e5f\u662f\u975e\u5e38\u597d\u7684\u54df\uff0c\u9664\u4e86\u4eba\u591a\uff09\uff08\u5982\u679c\u60f3\u5403\u5c0f\u5403\u53ef\u4ee5\u53bb\u6b63\u65b0\u8857\uff0c\u6296\u97f3\u4e0a\u6709\u5f88\u591a\u63a8\u8350\uff09</p> <p>\u4f4f\u5bbf\uff1a\u6211\u4eec\u5f53\u665a\u4f4f\u5728\u8d35\u9633\u5317\u7ad9\u9644\u8fd1\u3002</p> <p>\u7f8e\u98df\uff1a\u65e9\u9910\u53ef\u4ee5\u5728\u53e4\u9547\u5403\u5f53\u5730\u7279\u8272\u62cc\u9762\uff08\u975e\u5e38\u6709\u7279\u8272\uff01\uff01\uff01\uff09\uff0c\u5e76\u4e14\u84dd\u8393\u5356\u7684\u975e\u5e38\u4fbf\u5b9c\uff08\u4e0d\u5efa\u8bae\u84dd\u8393\u6c41\uff09\uff0c\u975e\u5e38\u63a8\u8350\u84dd\u8393\u51b0\u7c89\u8d35\u9633\u8fa3\u5b50\u9e21\u53ef\u4ee5\u5c1d\u8bd5\uff0c\u591c\u5bb5\u975e\u5e38\u63a8\u8350\u4f53\u9a8c\u4e0b\u70d9\uff08luo\uff09\u9505</p>"},{"location":"spark%20in%20life/travel/GuiZhou/#_3","title":"\u5c0f\u7ed3","text":"<p>\u56e0\u4e3a\u7b97\u662f\u7b2c\u4e00\u6b21\u81ea\u5df1\u8bbe\u5b9a\u51fa\u884c\u8ba1\u5212\u51fa\u53bb\u73a9\u5427\uff0c\u867d\u7136\u5403\u4e86\u4e9b\u4e8f\uff0c\u4f46\u6574\u4f53\u8fd8\u662f\u76f8\u5f53\u987a\u5229\u7684\u3002</p> <p>\u6211\u975e\u5e38\u63a8\u8350\u5927\u5bb6\u53bb\u8d35\u5dde\u6e38\u73a9\uff0c\u7f8e\u98df\u975e\u5e38\u591a\uff0c\u4ef7\u683c\u5b9e\u60e0\u5e76\u4e14\u6c11\u98ce\u6df3\u6734\uff08\u751a\u81f3\u4f1a\u8ba9\u70df\uff09\u3002\u7ed9\u6211\u7559\u4e0b\u4e86\u76f8\u5f53\u597d\u7684\u5370\u8c61\u3002</p> <p>\u5f53\u7136\u901a\u8fc7\u6211\u4eec\u7684\u884c\u7a0b\u5b89\u6392\uff0c\u4f60\u80fd\u770b\u5230\u6211\u4eec\u53ef\u80fd\u6ca1\u53bb\u975e\u5e38\u706b\u7684\u5927\u5c0f\u4e03\u5b54\uff0c\u5343\u6237\u82d7\u5be8\uff0c\u68b5\u51c0\u5c71\u2026\u2026\u53ef\u80fd\u662f\u4e0d\u60f3\u4eba\u6324\u4eba\u7684\u7f18\u6545\uff0c\u4ea6\u6216\u662f\u60f3\u63a2\u7d22\u4e9b\u5c0f\u4f17\u666f\u70b9\u3002\u8d35\u5dde\u7684\u5c71\u6c34\u975e\u5e38\u79c0\u7f8e\uff0c\u5c31\u662f\u4f60\u6cbf\u9014\u62cd\u7167\u90fd\u80fd\u5f88\u51fa\u7247\u7684\u90a3\u79cd\u3002</p> <p>\u8d76\u5feb\u5e26\u4e0a\u76f8\u673a\u51fa\u53d1\u54df\uff0c\u6765\u8d35\u5dde\u907f\u6691\u5427~</p>"},{"location":"spark%20in%20life/travel/chongqing/","title":"\u91cd\u5e86","text":"<p>\u91cd\u5e86\u771f\u7684\u662f\u4e00\u4e2a\u7269\u4ef7\u5f88\u4f4e\uff0c\u6c11\u98ce\u975e\u5e38\u6df3\u6734\u7684\u57ce\u5e02\u3002</p>"}]}